#!/bin/bash

#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=1
#SBATCH --gres=gpu:1
#SBATCH --mem=64G
#SBATCH --time=6:00:00
#SBATCH --partition=t4v2
#SBATCH --qos=m

# Note:
#	  ntasks: Total number of processes to use across world
#	  ntasks-per-node: How many processes each node should create

# Set NCCL options
# export NCCL_DEBUG=INFO
# NCCL backend to communicate between GPU workers is not provided in vector's cluster.
# Disable this option in slurm.
export NCCL_IB_DISABLE=1

if [[ "${SLURM_JOB_PARTITION}" == "t4v2" ]] || \
    [[ "${SLURM_JOB_PARTITION}" == "rtx6000" ]]; then
    echo export NCCL_SOCKET_IFNAME=bond0 on "${SLURM_JOB_PARTITION}"
    export NCCL_SOCKET_IFNAME=bond0
fi

# Process inputs
SERVER_PORT=$1
CONFIG_PATH=$2
LOG_DIR=$3
# N_CLIENT=$4
# JOB_HASH=$5

# CONDA_ENV="fl4health_ddgm"
CONDA_BIN=$(which conda)
CONDA_BASE=$(dirname "$(dirname "${CONDA_BIN}")")
source "${CONDA_BASE}/etc/profile.d/conda.sh"
conda activate fl4health_ddgm
export PYTHONPATH=$(pwd):$PYTHONPATH


echo "Active Environment:"
echo "Current working directory: $(pwd)"
echo "Python executable: $(which python)"
echo "PYTHONPATH: $PYTHONPATH"

python --version


# Print the name of the node, this will be the network address
echo "Node Name: ${SLURMD_NODENAME}"
echo "Server Port number: ${SERVER_PORT}"
echo "Config Path: ${CONFIG_PATH}"
# echo "Number of clients: ${N_CLIENT}"
# echo "Job Hash: ${JOB_HASH}"

SERVER_ADDRESS="${SLURMD_NODENAME}:${SERVER_PORT}"

echo "Server Address: ${SERVER_ADDRESS}"

echo "Placing logs in: ${LOG_DIR}"
echo "World size: ${SLURM_NTASKS}"
echo "Number of nodes: ${SLURM_NNODES}"

if command -v nvidia-smi &> /dev/null; then
    NUM_GPUs=$(nvidia-smi --query-gpu=name --format=csv,noheader | wc -l)
    echo "GPUs per node: ${NUM_GPUs}"
else
    echo "Running on CPU node — no GPUs available"
fi


echo "→ Starting server…"
# setsid makes the Python process its own session leader (PGID = PID)
# nohup python -u -m examples.ddgm_examples.server --server_address ${SERVER_ADDRESS} \
  # > "$LOG_DIR/server.out" 2> "$LOG_DIR/server.err" &
nohup python -u -m examples.ddgm_examples.server --server_address ${SERVER_ADDRESS} \
  >"$LOG_DIR/server.out" 2>&1 &
sid=$!
pids+=( "$sid" )
echo "   server session id = $sid"

echo ${SERVER_ADDRESS}


wait