#!/bin/bash

#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --gres=gpu:1
#SBATCH --mem=128GB
#SBATCH --qos=m

# Note:
#	  ntasks: Total number of processes to use across world
#	  ntasks-per-node: How many processes each node should create

# Set NCCL options
# export NCCL_DEBUG=INFO
# NCCL backend to communicate between GPU workers is not provided in vector's cluster.
# Disable this option in slurm.

export NCCL_IB_DISABLE=1
export CUDA_LAUNCH_BLOCKING=1

if [[ "${SLURM_JOB_PARTITION}" == "t4v2" ]] || \
    [[ "${SLURM_JOB_PARTITION}" == "rtx6000" ]]
    [[ "${SLURM_JOB_PARTITION}" == "a40" ]]; then
    echo export NCCL_SOCKET_IFNAME=bond0 on "${SLURM_JOB_PARTITION}"
    export NCCL_SOCKET_IFNAME=bond0
fi

# Process inputs
SERVER_ADDRESS=$1
LOG_DIR=$2
VENV_PATH=$3
JOB_HASH=$4
DATA_PARTITION=$5

# Print relevant information for the client to connect to the server and run
echo "Server Address: ${SERVER_ADDRESS}"
echo "Python Venv Path: ${VENV_PATH}"
echo "Job Hash: ${JOB_HASH}"

LOG_PATH="${LOG_DIR}client_${JOB_HASH}.log"

echo "Placing logs in: ${LOG_DIR}"
echo "World size: ${SLURM_NTASKS}"
echo "Number of nodes: ${SLURM_NNODES}"
NUM_GPUs=$(nvidia-smi --query-gpu=name --format=csv,noheader | wc -l)
echo "GPUs per node: ${NUM_GPUs}"

# Source the environment
source ${VENV_PATH}bin/activate
echo "Active Environment:"
which python

echo "Server Address used by Client: ${SERVER_ADDRESS}"

python -m research.picai.fedavg.client --server_address ${SERVER_ADDRESS} --artifact_dir ${LOG_DIR} --data_partition ${DATA_PARTITION} > ${LOG_PATH} 2>&1
