Search.setIndex({"alltitles": {"A simple FL task": [[7, "a-simple-fl-task"]], "API Reference": [[0, null]], "Basic Example": [[2, null]], "Checkpointing": [[5, null]], "Code Coverage": [[1, "code-coverage"]], "Code Documentation": [[1, "code-documentation"]], "Coding Guidelines, Formatters, and Checks": [[1, "coding-guidelines-formatters-and-checks"]], "Community": [[4, "community"]], "Contributing": [[1, null]], "Development Practices": [[1, "development-practices"]], "Development Requirements": [[1, "development-requirements"]], "Examples": [[3, null]], "Installation": [[7, "installation"]], "Introduction": [[4, "introduction"]], "Module Guides": [[6, null]], "Privacy Capabilities": [[4, "privacy-capabilities"]], "Quickstart": [[7, null]], "Running the FL task": [[7, "running-the-fl-task"]], "Starting Clients": [[7, "starting-clients"]], "Starting Server": [[7, "starting-server"]], "Submodules": [[9, "submodules"], [15, "submodules"], [20, "submodules"], [26, "submodules"], [42, "submodules"], [54, "submodules"], [57, "submodules"], [60, "submodules"], [67, "submodules"], [75, "submodules"], [85, "submodules"], [88, "submodules"], [91, "submodules"], [99, "submodules"], [110, "submodules"], [120, "submodules"], [121, "submodules"], [126, "submodules"], [129, "submodules"], [134, "submodules"], [135, "submodules"], [149, "submodules"], [165, "submodules"]], "Subpackages": [[8, "subpackages"], [20, "subpackages"], [53, "subpackages"], [85, "subpackages"], [91, "subpackages"], [120, "subpackages"], [134, "subpackages"]], "Summary of Currently Implemented Approaches": [[4, "summary-of-currently-implemented-approaches"]], "Tests": [[1, "tests"]], "Welcome to FL4Health \u2728": [[4, null]], "What\u2019s Next?": [[4, "what-s-next"]], "client.py": [[7, "client-py"]], "fl4health package": [[8, null]], "fl4health.checkpointing package": [[9, null]], "fl4health.checkpointing.checkpointer module": [[10, null]], "fl4health.checkpointing.client_module module": [[11, null]], "fl4health.checkpointing.opacus_checkpointer module": [[12, null]], "fl4health.checkpointing.server_module module": [[13, null]], "fl4health.checkpointing.state_checkpointer module": [[14, null]], "fl4health.client_managers package": [[15, null]], "fl4health.client_managers.base_sampling_manager module": [[16, null]], "fl4health.client_managers.fixed_sampling_client_manager module": [[17, null]], "fl4health.client_managers.fixed_without_replacement_manager module": [[18, null]], "fl4health.client_managers.poisson_sampling_manager module": [[19, null]], "fl4health.clients package": [[20, null]], "fl4health.clients.adaptive_drift_constraint_client module": [[21, null]], "fl4health.clients.apfl_client module": [[22, null]], "fl4health.clients.basic_client module": [[23, null]], "fl4health.clients.clipping_client module": [[24, null]], "fl4health.clients.constrained_fenda_client module": [[25, null]], "fl4health.clients.deep_mmd_clients package": [[26, null]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module": [[27, null]], "fl4health.clients.ditto_client module": [[28, null]], "fl4health.clients.ensemble_client module": [[29, null]], "fl4health.clients.evaluate_client module": [[30, null]], "fl4health.clients.fed_pca_client module": [[31, null]], "fl4health.clients.fed_prox_client module": [[32, null]], "fl4health.clients.fedbn_client module": [[33, null]], "fl4health.clients.fedper_client module": [[34, null]], "fl4health.clients.fedpm_client module": [[35, null]], "fl4health.clients.fedrep_client module": [[36, null]], "fl4health.clients.fenda_client module": [[37, null]], "fl4health.clients.fenda_ditto_client module": [[38, null]], "fl4health.clients.flash_client module": [[39, null]], "fl4health.clients.flexible_client module": [[40, null]], "fl4health.clients.instance_level_dp_client module": [[41, null]], "fl4health.clients.mkmmd_clients package": [[42, null]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module": [[43, null]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module": [[44, null]], "fl4health.clients.model_merge_client module": [[45, null]], "fl4health.clients.moon_client module": [[46, null]], "fl4health.clients.mr_mtl_client module": [[47, null]], "fl4health.clients.nnunet_client module": [[48, null]], "fl4health.clients.partial_weight_exchange_client module": [[49, null]], "fl4health.clients.perfcl_client module": [[50, null]], "fl4health.clients.scaffold_client module": [[51, null]], "fl4health.clients.tabular_data_client module": [[52, null]], "fl4health.datasets package": [[53, null]], "fl4health.datasets.rxrx1 package": [[54, null]], "fl4health.datasets.rxrx1.load_data module": [[55, null]], "fl4health.datasets.rxrx1.preprocess module": [[56, null]], "fl4health.datasets.skin_cancer package": [[57, null]], "fl4health.datasets.skin_cancer.load_data module": [[58, null]], "fl4health.datasets.skin_cancer.preprocess_skin module": [[59, null]], "fl4health.feature_alignment package": [[60, null]], "fl4health.feature_alignment.constants module": [[61, null]], "fl4health.feature_alignment.string_columns_transformer module": [[62, null]], "fl4health.feature_alignment.tab_features_info_encoder module": [[63, null]], "fl4health.feature_alignment.tab_features_preprocessor module": [[64, null]], "fl4health.feature_alignment.tabular_feature module": [[65, null]], "fl4health.feature_alignment.tabular_type module": [[66, null]], "fl4health.losses package": [[67, null]], "fl4health.losses.contrastive_loss module": [[68, null]], "fl4health.losses.cosine_similarity_loss module": [[69, null]], "fl4health.losses.deep_mmd_loss module": [[70, null]], "fl4health.losses.fenda_loss_config module": [[71, null]], "fl4health.losses.mkmmd_loss module": [[72, null]], "fl4health.losses.perfcl_loss module": [[73, null]], "fl4health.losses.weight_drift_loss module": [[74, null]], "fl4health.metrics package": [[75, null]], "fl4health.metrics.base_metrics module": [[76, null]], "fl4health.metrics.compound_metrics module": [[77, null]], "fl4health.metrics.efficient_metrics module": [[78, null]], "fl4health.metrics.efficient_metrics_base module": [[79, null]], "fl4health.metrics.metric_aggregation module": [[80, null]], "fl4health.metrics.metric_managers module": [[81, null]], "fl4health.metrics.metrics module": [[82, null]], "fl4health.metrics.metrics_utils module": [[83, null]], "fl4health.metrics.utils module": [[84, null]], "fl4health.mixins package": [[85, null]], "fl4health.mixins.adaptive_drift_constrained module": [[86, null]], "fl4health.mixins.core_protocols module": [[87, null]], "fl4health.mixins.personalized package": [[88, null]], "fl4health.mixins.personalized.ditto module": [[89, null]], "fl4health.mixins.personalized.utils module": [[90, null]], "fl4health.model_bases package": [[91, null]], "fl4health.model_bases.apfl_base module": [[92, null]], "fl4health.model_bases.autoencoders_base module": [[93, null]], "fl4health.model_bases.ensemble_base module": [[94, null]], "fl4health.model_bases.feature_extractor_buffer module": [[95, null]], "fl4health.model_bases.fedrep_base module": [[96, null]], "fl4health.model_bases.fedsimclr_base module": [[97, null]], "fl4health.model_bases.fenda_base module": [[98, null]], "fl4health.model_bases.masked_layers package": [[99, null]], "fl4health.model_bases.masked_layers.masked_conv module": [[100, null]], "fl4health.model_bases.masked_layers.masked_layers_utils module": [[101, null]], "fl4health.model_bases.masked_layers.masked_linear module": [[102, null]], "fl4health.model_bases.masked_layers.masked_normalization_layers module": [[103, null]], "fl4health.model_bases.moon_base module": [[104, null]], "fl4health.model_bases.parallel_split_models module": [[105, null]], "fl4health.model_bases.partial_layer_exchange_model module": [[106, null]], "fl4health.model_bases.pca module": [[107, null]], "fl4health.model_bases.perfcl_base module": [[108, null]], "fl4health.model_bases.sequential_split_models module": [[109, null]], "fl4health.parameter_exchange package": [[110, null]], "fl4health.parameter_exchange.fedpm_exchanger module": [[111, null]], "fl4health.parameter_exchange.full_exchanger module": [[112, null]], "fl4health.parameter_exchange.layer_exchanger module": [[113, null]], "fl4health.parameter_exchange.packing_exchanger module": [[114, null]], "fl4health.parameter_exchange.parameter_exchanger_base module": [[115, null]], "fl4health.parameter_exchange.parameter_packer module": [[116, null]], "fl4health.parameter_exchange.parameter_selection_criteria module": [[117, null]], "fl4health.parameter_exchange.partial_parameter_exchanger module": [[118, null]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module": [[119, null]], "fl4health.preprocessing package": [[120, null]], "fl4health.preprocessing.autoencoders package": [[121, null]], "fl4health.preprocessing.autoencoders.dim_reduction module": [[122, null]], "fl4health.preprocessing.autoencoders.loss module": [[123, null]], "fl4health.preprocessing.pca_preprocessor module": [[124, null]], "fl4health.preprocessing.warmed_up_module module": [[125, null]], "fl4health.privacy package": [[126, null]], "fl4health.privacy.fl_accountants module": [[127, null]], "fl4health.privacy.moments_accountant module": [[128, null]], "fl4health.reporting package": [[129, null]], "fl4health.reporting.base_reporter module": [[130, null]], "fl4health.reporting.json_reporter module": [[131, null]], "fl4health.reporting.reports_manager module": [[132, null]], "fl4health.reporting.wandb_reporter module": [[133, null]], "fl4health.servers package": [[134, null]], "fl4health.servers.adaptive_constraint_servers package": [[135, null]], "fl4health.servers.adaptive_constraint_servers.ditto_server module": [[136, null]], "fl4health.servers.adaptive_constraint_servers.fedprox_server module": [[137, null]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server module": [[138, null]], "fl4health.servers.base_server module": [[139, null]], "fl4health.servers.client_level_dp_fed_avg_server module": [[140, null]], "fl4health.servers.evaluate_server module": [[141, null]], "fl4health.servers.fedpm_server module": [[142, null]], "fl4health.servers.instance_level_dp_server module": [[143, null]], "fl4health.servers.model_merge_server module": [[144, null]], "fl4health.servers.nnunet_server module": [[145, null]], "fl4health.servers.polling module": [[146, null]], "fl4health.servers.scaffold_server module": [[147, null]], "fl4health.servers.tabular_feature_alignment_server module": [[148, null]], "fl4health.strategies package": [[149, null]], "fl4health.strategies.aggregate_utils module": [[150, null]], "fl4health.strategies.basic_fedavg module": [[151, null]], "fl4health.strategies.client_dp_fedavgm module": [[152, null]], "fl4health.strategies.fedavg_dynamic_layer module": [[153, null]], "fl4health.strategies.fedavg_sparse_coo_tensor module": [[154, null]], "fl4health.strategies.fedavg_with_adaptive_constraint module": [[155, null]], "fl4health.strategies.feddg_ga module": [[156, null]], "fl4health.strategies.feddg_ga_with_adaptive_constraint module": [[157, null]], "fl4health.strategies.fedpca module": [[158, null]], "fl4health.strategies.fedpm module": [[159, null]], "fl4health.strategies.flash module": [[160, null]], "fl4health.strategies.model_merge_strategy module": [[161, null]], "fl4health.strategies.noisy_aggregate module": [[162, null]], "fl4health.strategies.scaffold module": [[163, null]], "fl4health.strategies.strategy_with_poll module": [[164, null]], "fl4health.utils package": [[165, null]], "fl4health.utils.client module": [[166, null]], "fl4health.utils.config module": [[167, null]], "fl4health.utils.data_generation module": [[168, null]], "fl4health.utils.dataset module": [[169, null]], "fl4health.utils.dataset_converter module": [[170, null]], "fl4health.utils.early_stopper module": [[171, null]], "fl4health.utils.functions module": [[172, null]], "fl4health.utils.load_data module": [[173, null]], "fl4health.utils.logging module": [[174, null]], "fl4health.utils.losses module": [[175, null]], "fl4health.utils.metric_aggregation module": [[176, null]], "fl4health.utils.metrics module": [[177, null]], "fl4health.utils.msd_dataset_sources module": [[178, null]], "fl4health.utils.nnunet_utils module": [[179, null]], "fl4health.utils.parameter_extraction module": [[180, null]], "fl4health.utils.partitioners module": [[181, null]], "fl4health.utils.peft_parameter_extraction module": [[182, null]], "fl4health.utils.privacy_utilities module": [[183, null]], "fl4health.utils.random module": [[184, null]], "fl4health.utils.sampler module": [[185, null]], "fl4health.utils.snapshotter module": [[186, null]], "fl4health.utils.typing module": [[187, null]], "server.py": [[7, "server-py"]]}, "docnames": ["api", "contributing", "examples/basic/index", "examples/index", "index", "module_guides/checkpointing/index", "module_guides/index", "quickstart", "reference/api/fl4health", "reference/api/fl4health.checkpointing", "reference/api/fl4health.checkpointing.checkpointer", "reference/api/fl4health.checkpointing.client_module", "reference/api/fl4health.checkpointing.opacus_checkpointer", "reference/api/fl4health.checkpointing.server_module", "reference/api/fl4health.checkpointing.state_checkpointer", "reference/api/fl4health.client_managers", "reference/api/fl4health.client_managers.base_sampling_manager", "reference/api/fl4health.client_managers.fixed_sampling_client_manager", "reference/api/fl4health.client_managers.fixed_without_replacement_manager", "reference/api/fl4health.client_managers.poisson_sampling_manager", "reference/api/fl4health.clients", "reference/api/fl4health.clients.adaptive_drift_constraint_client", "reference/api/fl4health.clients.apfl_client", "reference/api/fl4health.clients.basic_client", "reference/api/fl4health.clients.clipping_client", "reference/api/fl4health.clients.constrained_fenda_client", "reference/api/fl4health.clients.deep_mmd_clients", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", "reference/api/fl4health.clients.ditto_client", "reference/api/fl4health.clients.ensemble_client", "reference/api/fl4health.clients.evaluate_client", "reference/api/fl4health.clients.fed_pca_client", "reference/api/fl4health.clients.fed_prox_client", "reference/api/fl4health.clients.fedbn_client", "reference/api/fl4health.clients.fedper_client", "reference/api/fl4health.clients.fedpm_client", "reference/api/fl4health.clients.fedrep_client", "reference/api/fl4health.clients.fenda_client", "reference/api/fl4health.clients.fenda_ditto_client", "reference/api/fl4health.clients.flash_client", "reference/api/fl4health.clients.flexible_client", "reference/api/fl4health.clients.instance_level_dp_client", "reference/api/fl4health.clients.mkmmd_clients", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", "reference/api/fl4health.clients.model_merge_client", "reference/api/fl4health.clients.moon_client", "reference/api/fl4health.clients.mr_mtl_client", "reference/api/fl4health.clients.nnunet_client", "reference/api/fl4health.clients.partial_weight_exchange_client", "reference/api/fl4health.clients.perfcl_client", "reference/api/fl4health.clients.scaffold_client", "reference/api/fl4health.clients.tabular_data_client", "reference/api/fl4health.datasets", "reference/api/fl4health.datasets.rxrx1", "reference/api/fl4health.datasets.rxrx1.load_data", "reference/api/fl4health.datasets.rxrx1.preprocess", "reference/api/fl4health.datasets.skin_cancer", "reference/api/fl4health.datasets.skin_cancer.load_data", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin", "reference/api/fl4health.feature_alignment", "reference/api/fl4health.feature_alignment.constants", "reference/api/fl4health.feature_alignment.string_columns_transformer", "reference/api/fl4health.feature_alignment.tab_features_info_encoder", "reference/api/fl4health.feature_alignment.tab_features_preprocessor", "reference/api/fl4health.feature_alignment.tabular_feature", "reference/api/fl4health.feature_alignment.tabular_type", "reference/api/fl4health.losses", "reference/api/fl4health.losses.contrastive_loss", "reference/api/fl4health.losses.cosine_similarity_loss", "reference/api/fl4health.losses.deep_mmd_loss", "reference/api/fl4health.losses.fenda_loss_config", "reference/api/fl4health.losses.mkmmd_loss", "reference/api/fl4health.losses.perfcl_loss", "reference/api/fl4health.losses.weight_drift_loss", "reference/api/fl4health.metrics", "reference/api/fl4health.metrics.base_metrics", "reference/api/fl4health.metrics.compound_metrics", "reference/api/fl4health.metrics.efficient_metrics", "reference/api/fl4health.metrics.efficient_metrics_base", "reference/api/fl4health.metrics.metric_aggregation", "reference/api/fl4health.metrics.metric_managers", "reference/api/fl4health.metrics.metrics", "reference/api/fl4health.metrics.metrics_utils", "reference/api/fl4health.metrics.utils", "reference/api/fl4health.mixins", "reference/api/fl4health.mixins.adaptive_drift_constrained", "reference/api/fl4health.mixins.core_protocols", "reference/api/fl4health.mixins.personalized", "reference/api/fl4health.mixins.personalized.ditto", "reference/api/fl4health.mixins.personalized.utils", "reference/api/fl4health.model_bases", "reference/api/fl4health.model_bases.apfl_base", "reference/api/fl4health.model_bases.autoencoders_base", "reference/api/fl4health.model_bases.ensemble_base", "reference/api/fl4health.model_bases.feature_extractor_buffer", "reference/api/fl4health.model_bases.fedrep_base", "reference/api/fl4health.model_bases.fedsimclr_base", "reference/api/fl4health.model_bases.fenda_base", "reference/api/fl4health.model_bases.masked_layers", "reference/api/fl4health.model_bases.masked_layers.masked_conv", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils", "reference/api/fl4health.model_bases.masked_layers.masked_linear", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers", "reference/api/fl4health.model_bases.moon_base", "reference/api/fl4health.model_bases.parallel_split_models", "reference/api/fl4health.model_bases.partial_layer_exchange_model", "reference/api/fl4health.model_bases.pca", "reference/api/fl4health.model_bases.perfcl_base", "reference/api/fl4health.model_bases.sequential_split_models", "reference/api/fl4health.parameter_exchange", "reference/api/fl4health.parameter_exchange.fedpm_exchanger", "reference/api/fl4health.parameter_exchange.full_exchanger", "reference/api/fl4health.parameter_exchange.layer_exchanger", "reference/api/fl4health.parameter_exchange.packing_exchanger", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base", "reference/api/fl4health.parameter_exchange.parameter_packer", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger", "reference/api/fl4health.preprocessing", "reference/api/fl4health.preprocessing.autoencoders", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction", "reference/api/fl4health.preprocessing.autoencoders.loss", "reference/api/fl4health.preprocessing.pca_preprocessor", "reference/api/fl4health.preprocessing.warmed_up_module", "reference/api/fl4health.privacy", "reference/api/fl4health.privacy.fl_accountants", "reference/api/fl4health.privacy.moments_accountant", "reference/api/fl4health.reporting", "reference/api/fl4health.reporting.base_reporter", "reference/api/fl4health.reporting.json_reporter", "reference/api/fl4health.reporting.reports_manager", "reference/api/fl4health.reporting.wandb_reporter", "reference/api/fl4health.servers", "reference/api/fl4health.servers.adaptive_constraint_servers", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server", "reference/api/fl4health.servers.base_server", "reference/api/fl4health.servers.client_level_dp_fed_avg_server", "reference/api/fl4health.servers.evaluate_server", "reference/api/fl4health.servers.fedpm_server", "reference/api/fl4health.servers.instance_level_dp_server", "reference/api/fl4health.servers.model_merge_server", "reference/api/fl4health.servers.nnunet_server", "reference/api/fl4health.servers.polling", "reference/api/fl4health.servers.scaffold_server", "reference/api/fl4health.servers.tabular_feature_alignment_server", "reference/api/fl4health.strategies", "reference/api/fl4health.strategies.aggregate_utils", "reference/api/fl4health.strategies.basic_fedavg", "reference/api/fl4health.strategies.client_dp_fedavgm", "reference/api/fl4health.strategies.fedavg_dynamic_layer", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint", "reference/api/fl4health.strategies.feddg_ga", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint", "reference/api/fl4health.strategies.fedpca", "reference/api/fl4health.strategies.fedpm", "reference/api/fl4health.strategies.flash", "reference/api/fl4health.strategies.model_merge_strategy", "reference/api/fl4health.strategies.noisy_aggregate", "reference/api/fl4health.strategies.scaffold", "reference/api/fl4health.strategies.strategy_with_poll", "reference/api/fl4health.utils", "reference/api/fl4health.utils.client", "reference/api/fl4health.utils.config", "reference/api/fl4health.utils.data_generation", "reference/api/fl4health.utils.dataset", "reference/api/fl4health.utils.dataset_converter", "reference/api/fl4health.utils.early_stopper", "reference/api/fl4health.utils.functions", "reference/api/fl4health.utils.load_data", "reference/api/fl4health.utils.logging", "reference/api/fl4health.utils.losses", "reference/api/fl4health.utils.metric_aggregation", "reference/api/fl4health.utils.metrics", "reference/api/fl4health.utils.msd_dataset_sources", "reference/api/fl4health.utils.nnunet_utils", "reference/api/fl4health.utils.parameter_extraction", "reference/api/fl4health.utils.partitioners", "reference/api/fl4health.utils.peft_parameter_extraction", "reference/api/fl4health.utils.privacy_utilities", "reference/api/fl4health.utils.random", "reference/api/fl4health.utils.sampler", "reference/api/fl4health.utils.snapshotter", "reference/api/fl4health.utils.typing"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "contributing.md", "examples/basic/index.md", "examples/index.md", "index.md", "module_guides/checkpointing/index.md", "module_guides/index.md", "quickstart.md", "reference/api/fl4health.rst", "reference/api/fl4health.checkpointing.rst", "reference/api/fl4health.checkpointing.checkpointer.rst", "reference/api/fl4health.checkpointing.client_module.rst", "reference/api/fl4health.checkpointing.opacus_checkpointer.rst", "reference/api/fl4health.checkpointing.server_module.rst", "reference/api/fl4health.checkpointing.state_checkpointer.rst", "reference/api/fl4health.client_managers.rst", "reference/api/fl4health.client_managers.base_sampling_manager.rst", "reference/api/fl4health.client_managers.fixed_sampling_client_manager.rst", "reference/api/fl4health.client_managers.fixed_without_replacement_manager.rst", "reference/api/fl4health.client_managers.poisson_sampling_manager.rst", "reference/api/fl4health.clients.rst", "reference/api/fl4health.clients.adaptive_drift_constraint_client.rst", "reference/api/fl4health.clients.apfl_client.rst", "reference/api/fl4health.clients.basic_client.rst", "reference/api/fl4health.clients.clipping_client.rst", "reference/api/fl4health.clients.constrained_fenda_client.rst", "reference/api/fl4health.clients.deep_mmd_clients.rst", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.rst", "reference/api/fl4health.clients.ditto_client.rst", "reference/api/fl4health.clients.ensemble_client.rst", "reference/api/fl4health.clients.evaluate_client.rst", "reference/api/fl4health.clients.fed_pca_client.rst", "reference/api/fl4health.clients.fed_prox_client.rst", "reference/api/fl4health.clients.fedbn_client.rst", "reference/api/fl4health.clients.fedper_client.rst", "reference/api/fl4health.clients.fedpm_client.rst", "reference/api/fl4health.clients.fedrep_client.rst", "reference/api/fl4health.clients.fenda_client.rst", "reference/api/fl4health.clients.fenda_ditto_client.rst", "reference/api/fl4health.clients.flash_client.rst", "reference/api/fl4health.clients.flexible_client.rst", "reference/api/fl4health.clients.instance_level_dp_client.rst", "reference/api/fl4health.clients.mkmmd_clients.rst", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client.rst", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.rst", "reference/api/fl4health.clients.model_merge_client.rst", "reference/api/fl4health.clients.moon_client.rst", "reference/api/fl4health.clients.mr_mtl_client.rst", "reference/api/fl4health.clients.nnunet_client.rst", "reference/api/fl4health.clients.partial_weight_exchange_client.rst", "reference/api/fl4health.clients.perfcl_client.rst", "reference/api/fl4health.clients.scaffold_client.rst", "reference/api/fl4health.clients.tabular_data_client.rst", "reference/api/fl4health.datasets.rst", "reference/api/fl4health.datasets.rxrx1.rst", "reference/api/fl4health.datasets.rxrx1.load_data.rst", "reference/api/fl4health.datasets.rxrx1.preprocess.rst", "reference/api/fl4health.datasets.skin_cancer.rst", "reference/api/fl4health.datasets.skin_cancer.load_data.rst", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin.rst", "reference/api/fl4health.feature_alignment.rst", "reference/api/fl4health.feature_alignment.constants.rst", "reference/api/fl4health.feature_alignment.string_columns_transformer.rst", "reference/api/fl4health.feature_alignment.tab_features_info_encoder.rst", "reference/api/fl4health.feature_alignment.tab_features_preprocessor.rst", "reference/api/fl4health.feature_alignment.tabular_feature.rst", "reference/api/fl4health.feature_alignment.tabular_type.rst", "reference/api/fl4health.losses.rst", "reference/api/fl4health.losses.contrastive_loss.rst", "reference/api/fl4health.losses.cosine_similarity_loss.rst", "reference/api/fl4health.losses.deep_mmd_loss.rst", "reference/api/fl4health.losses.fenda_loss_config.rst", "reference/api/fl4health.losses.mkmmd_loss.rst", "reference/api/fl4health.losses.perfcl_loss.rst", "reference/api/fl4health.losses.weight_drift_loss.rst", "reference/api/fl4health.metrics.rst", "reference/api/fl4health.metrics.base_metrics.rst", "reference/api/fl4health.metrics.compound_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics_base.rst", "reference/api/fl4health.metrics.metric_aggregation.rst", "reference/api/fl4health.metrics.metric_managers.rst", "reference/api/fl4health.metrics.metrics.rst", "reference/api/fl4health.metrics.metrics_utils.rst", "reference/api/fl4health.metrics.utils.rst", "reference/api/fl4health.mixins.rst", "reference/api/fl4health.mixins.adaptive_drift_constrained.rst", "reference/api/fl4health.mixins.core_protocols.rst", "reference/api/fl4health.mixins.personalized.rst", "reference/api/fl4health.mixins.personalized.ditto.rst", "reference/api/fl4health.mixins.personalized.utils.rst", "reference/api/fl4health.model_bases.rst", "reference/api/fl4health.model_bases.apfl_base.rst", "reference/api/fl4health.model_bases.autoencoders_base.rst", "reference/api/fl4health.model_bases.ensemble_base.rst", "reference/api/fl4health.model_bases.feature_extractor_buffer.rst", "reference/api/fl4health.model_bases.fedrep_base.rst", "reference/api/fl4health.model_bases.fedsimclr_base.rst", "reference/api/fl4health.model_bases.fenda_base.rst", "reference/api/fl4health.model_bases.masked_layers.rst", "reference/api/fl4health.model_bases.masked_layers.masked_conv.rst", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils.rst", "reference/api/fl4health.model_bases.masked_layers.masked_linear.rst", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers.rst", "reference/api/fl4health.model_bases.moon_base.rst", "reference/api/fl4health.model_bases.parallel_split_models.rst", "reference/api/fl4health.model_bases.partial_layer_exchange_model.rst", "reference/api/fl4health.model_bases.pca.rst", "reference/api/fl4health.model_bases.perfcl_base.rst", "reference/api/fl4health.model_bases.sequential_split_models.rst", "reference/api/fl4health.parameter_exchange.rst", "reference/api/fl4health.parameter_exchange.fedpm_exchanger.rst", "reference/api/fl4health.parameter_exchange.full_exchanger.rst", "reference/api/fl4health.parameter_exchange.layer_exchanger.rst", "reference/api/fl4health.parameter_exchange.packing_exchanger.rst", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base.rst", "reference/api/fl4health.parameter_exchange.parameter_packer.rst", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria.rst", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger.rst", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger.rst", "reference/api/fl4health.preprocessing.rst", "reference/api/fl4health.preprocessing.autoencoders.rst", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction.rst", "reference/api/fl4health.preprocessing.autoencoders.loss.rst", "reference/api/fl4health.preprocessing.pca_preprocessor.rst", "reference/api/fl4health.preprocessing.warmed_up_module.rst", "reference/api/fl4health.privacy.rst", "reference/api/fl4health.privacy.fl_accountants.rst", "reference/api/fl4health.privacy.moments_accountant.rst", "reference/api/fl4health.reporting.rst", "reference/api/fl4health.reporting.base_reporter.rst", "reference/api/fl4health.reporting.json_reporter.rst", "reference/api/fl4health.reporting.reports_manager.rst", "reference/api/fl4health.reporting.wandb_reporter.rst", "reference/api/fl4health.servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server.rst", "reference/api/fl4health.servers.base_server.rst", "reference/api/fl4health.servers.client_level_dp_fed_avg_server.rst", "reference/api/fl4health.servers.evaluate_server.rst", "reference/api/fl4health.servers.fedpm_server.rst", "reference/api/fl4health.servers.instance_level_dp_server.rst", "reference/api/fl4health.servers.model_merge_server.rst", "reference/api/fl4health.servers.nnunet_server.rst", "reference/api/fl4health.servers.polling.rst", "reference/api/fl4health.servers.scaffold_server.rst", "reference/api/fl4health.servers.tabular_feature_alignment_server.rst", "reference/api/fl4health.strategies.rst", "reference/api/fl4health.strategies.aggregate_utils.rst", "reference/api/fl4health.strategies.basic_fedavg.rst", "reference/api/fl4health.strategies.client_dp_fedavgm.rst", "reference/api/fl4health.strategies.fedavg_dynamic_layer.rst", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor.rst", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.feddg_ga.rst", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.fedpca.rst", "reference/api/fl4health.strategies.fedpm.rst", "reference/api/fl4health.strategies.flash.rst", "reference/api/fl4health.strategies.model_merge_strategy.rst", "reference/api/fl4health.strategies.noisy_aggregate.rst", "reference/api/fl4health.strategies.scaffold.rst", "reference/api/fl4health.strategies.strategy_with_poll.rst", "reference/api/fl4health.utils.rst", "reference/api/fl4health.utils.client.rst", "reference/api/fl4health.utils.config.rst", "reference/api/fl4health.utils.data_generation.rst", "reference/api/fl4health.utils.dataset.rst", "reference/api/fl4health.utils.dataset_converter.rst", "reference/api/fl4health.utils.early_stopper.rst", "reference/api/fl4health.utils.functions.rst", "reference/api/fl4health.utils.load_data.rst", "reference/api/fl4health.utils.logging.rst", "reference/api/fl4health.utils.losses.rst", "reference/api/fl4health.utils.metric_aggregation.rst", "reference/api/fl4health.utils.metrics.rst", "reference/api/fl4health.utils.msd_dataset_sources.rst", "reference/api/fl4health.utils.nnunet_utils.rst", "reference/api/fl4health.utils.parameter_extraction.rst", "reference/api/fl4health.utils.partitioners.rst", "reference/api/fl4health.utils.peft_parameter_extraction.rst", "reference/api/fl4health.utils.privacy_utilities.rst", "reference/api/fl4health.utils.random.rst", "reference/api/fl4health.utils.sampler.rst", "reference/api/fl4health.utils.snapshotter.rst", "reference/api/fl4health.utils.typing.rst"], "indexentries": {"__init__() (abstractae method)": [[93, "fl4health.model_bases.autoencoders_base.AbstractAe.__init__", false]], "__init__() (accuracy method)": [[75, "fl4health.metrics.Accuracy.__init__", false], [82, "fl4health.metrics.metrics.Accuracy.__init__", false]], "__init__() (adaptiveconstraintservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule.__init__", false]], "__init__() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.__init__", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.__init__", false]], "__init__() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.__init__", false]], "__init__() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.__init__", false]], "__init__() (apflmodule method)": [[92, "fl4health.model_bases.apfl_base.ApflModule.__init__", false]], "__init__() (autoencoderdatasetconverter method)": [[170, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.__init__", false]], "__init__() (autoencoderprocessing method)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.__init__", false]], "__init__() (balancedaccuracy method)": [[75, "fl4health.metrics.BalancedAccuracy.__init__", false], [82, "fl4health.metrics.metrics.BalancedAccuracy.__init__", false]], "__init__() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.__init__", false]], "__init__() (basicae method)": [[93, "fl4health.model_bases.autoencoders_base.BasicAe.__init__", false]], "__init__() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.__init__", false]], "__init__() (basicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg.__init__", false]], "__init__() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.__init__", false]], "__init__() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.__init__", false]], "__init__() (bestmetrictorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer.__init__", false]], "__init__() (binaryclassificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.__init__", false]], "__init__() (binarydice method)": [[78, "fl4health.metrics.efficient_metrics.BinaryDice.__init__", false]], "__init__() (binarysoftdicecoefficient method)": [[75, "fl4health.metrics.BinarySoftDiceCoefficient.__init__", false], [82, "fl4health.metrics.metrics.BinarySoftDiceCoefficient.__init__", false]], "__init__() (classificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.__init__", false]], "__init__() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.__init__", false]], "__init__() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.__init__", false]], "__init__() (clientleveldpfedavgserver method)": [[140, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.__init__", false]], "__init__() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.__init__", false]], "__init__() (clippingbitservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule.__init__", false]], "__init__() (conditionalvae method)": [[93, "fl4health.model_bases.autoencoders_base.ConditionalVae.__init__", false]], "__init__() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.__init__", false]], "__init__() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.__init__", false]], "__init__() (cosinesimilarityloss method)": [[69, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.__init__", false]], "__init__() (cosinesimilaritylosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer.__init__", false]], "__init__() (cvaefixedconditionprocessor method)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor.__init__", false]], "__init__() (cvaevariableconditionprocessor method)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor.__init__", false]], "__init__() (datasetconverter method)": [[170, "fl4health.utils.dataset_converter.DatasetConverter.__init__", false]], "__init__() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.__init__", false]], "__init__() (dictionarydataset method)": [[169, "fl4health.utils.dataset.DictionaryDataset.__init__", false]], "__init__() (dirichletlabelbasedallocation method)": [[181, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.__init__", false]], "__init__() (dirichletlabelbasedsampler method)": [[185, "fl4health.utils.sampler.DirichletLabelBasedSampler.__init__", false]], "__init__() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.__init__", false]], "__init__() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.__init__", false]], "__init__() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.__init__", false]], "__init__() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.__init__", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.__init__", false]], "__init__() (dittoserver method)": [[136, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer.__init__", false]], "__init__() (dpscaffoldserver method)": [[147, "fl4health.servers.scaffold_server.DPScaffoldServer.__init__", false]], "__init__() (dpscaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (dynamiclayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.__init__", false]], "__init__() (earlystopper method)": [[171, "fl4health.utils.early_stopper.EarlyStopper.__init__", false]], "__init__() (emametric method)": [[77, "fl4health.metrics.compound_metrics.EmaMetric.__init__", false]], "__init__() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.__init__", false]], "__init__() (ensemblemodel method)": [[94, "fl4health.model_bases.ensemble_base.EnsembleModel.__init__", false]], "__init__() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.__init__", false]], "__init__() (evaluateserver method)": [[141, "fl4health.servers.evaluate_server.EvaluateServer.__init__", false]], "__init__() (evaluationlosses method)": [[175, "fl4health.utils.losses.EvaluationLosses.__init__", false]], "__init__() (f1 method)": [[75, "fl4health.metrics.F1.__init__", false], [82, "fl4health.metrics.metrics.F1.__init__", false]], "__init__() (fairnessmetric method)": [[156, "fl4health.strategies.feddg_ga.FairnessMetric.__init__", false]], "__init__() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.__init__", false]], "__init__() (fedavgdynamiclayer method)": [[153, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.__init__", false]], "__init__() (fedavgsparsecootensor method)": [[154, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.__init__", false]], "__init__() (fedavgwithadaptiveconstraint method)": [[155, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.__init__", false]], "__init__() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.__init__", false]], "__init__() (feddggaadaptiveconstraint method)": [[157, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.__init__", false]], "__init__() (fedpca method)": [[158, "fl4health.strategies.fedpca.FedPCA.__init__", false]], "__init__() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.__init__", false]], "__init__() (fedpm method)": [[159, "fl4health.strategies.fedpm.FedPm.__init__", false]], "__init__() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.__init__", false]], "__init__() (fedpmserver method)": [[142, "fl4health.servers.fedpm_server.FedPmServer.__init__", false]], "__init__() (fedproxserver method)": [[137, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer.__init__", false]], "__init__() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.__init__", false]], "__init__() (fedsimclrmodel method)": [[97, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.__init__", false]], "__init__() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.__init__", false]], "__init__() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.__init__", false]], "__init__() (fendamodel method)": [[98, "fl4health.model_bases.fenda_base.FendaModel.__init__", false]], "__init__() (fendamodelwithfeaturestate method)": [[98, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.__init__", false]], "__init__() (filereporter method)": [[131, "fl4health.reporting.json_reporter.FileReporter.__init__", false]], "__init__() (fixedlayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.__init__", false]], "__init__() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.__init__", false]], "__init__() (flash method)": [[160, "fl4health.strategies.flash.Flash.__init__", false]], "__init__() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.__init__", false]], "__init__() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.__init__", false]], "__init__() (flclientlevelaccountantpoissonsampling method)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.__init__", false]], "__init__() (flexibleclient method)": [[40, "fl4health.clients.flexible_client.FlexibleClient.__init__", false]], "__init__() (flinstancelevelaccountant method)": [[127, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.__init__", false]], "__init__() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.__init__", false]], "__init__() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.__init__", false]], "__init__() (instanceleveldpclient method)": [[41, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.__init__", false]], "__init__() (instanceleveldpserver method)": [[143, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.__init__", false]], "__init__() (labelbasedsampler method)": [[185, "fl4health.utils.sampler.LabelBasedSampler.__init__", false]], "__init__() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.__init__", false]], "__init__() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.__init__", false]], "__init__() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.__init__", false]], "__init__() (layernamesservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule.__init__", false]], "__init__() (layerselectionfunctionconstructor method)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.__init__", false]], "__init__() (losses method)": [[175, "fl4health.utils.losses.Losses.__init__", false]], "__init__() (lossmeter method)": [[175, "fl4health.utils.losses.LossMeter.__init__", false]], "__init__() (maskedconv1d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.__init__", false]], "__init__() (maskedconv2d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.__init__", false]], "__init__() (maskedconv3d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.__init__", false]], "__init__() (maskedconvtranspose1d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.__init__", false]], "__init__() (maskedconvtranspose2d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.__init__", false]], "__init__() (maskedconvtranspose3d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.__init__", false]], "__init__() (maskedlayernorm method)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.__init__", false]], "__init__() (maskedlinear method)": [[102, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.__init__", false]], "__init__() (metric method)": [[76, "fl4health.metrics.base_metrics.Metric.__init__", false]], "__init__() (metricmanager method)": [[81, "fl4health.metrics.metric_managers.MetricManager.__init__", false]], "__init__() (minoritylabelbasedsampler method)": [[185, "fl4health.utils.sampler.MinorityLabelBasedSampler.__init__", false]], "__init__() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.__init__", false]], "__init__() (modellatentf method)": [[70, "fl4health.losses.deep_mmd_loss.ModelLatentF.__init__", false]], "__init__() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.__init__", false]], "__init__() (modelmergeserver method)": [[144, "fl4health.servers.model_merge_server.ModelMergeServer.__init__", false]], "__init__() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.__init__", false]], "__init__() (momentsaccountant method)": [[128, "fl4health.privacy.moments_accountant.MomentsAccountant.__init__", false]], "__init__() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.__init__", false]], "__init__() (mooncontrastiveloss method)": [[68, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.__init__", false]], "__init__() (mooncontrastivelosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer.__init__", false]], "__init__() (moonmodel method)": [[104, "fl4health.model_bases.moon_base.MoonModel.__init__", false]], "__init__() (mrmtlclient method)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient.__init__", false]], "__init__() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.__init__", false]], "__init__() (mrmtlserver method)": [[138, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer.__init__", false]], "__init__() (multiclassdice method)": [[78, "fl4health.metrics.efficient_metrics.MultiClassDice.__init__", false]], "__init__() (multiclassificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.__init__", false]], "__init__() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.__init__", false]], "__init__() (nnunetdataloaderwrapper method)": [[179, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.__init__", false]], "__init__() (nnunetserver method)": [[145, "fl4health.servers.nnunet_server.NnunetServer.__init__", false]], "__init__() (nnunetservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule.__init__", false]], "__init__() (nnunetserverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer.__init__", false]], "__init__() (ntxentloss method)": [[68, "fl4health.losses.contrastive_loss.NtXentLoss.__init__", false]], "__init__() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.__init__", false]], "__init__() (opacusbasicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg.__init__", false]], "__init__() (opacusscaffold method)": [[163, "fl4health.strategies.scaffold.OpacusScaffold.__init__", false]], "__init__() (opacusservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule.__init__", false]], "__init__() (packingservercheckpointandandstatemodule method)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule.__init__", false]], "__init__() (parallelsplitheadmodule method)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.__init__", false]], "__init__() (parallelsplitmodel method)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.__init__", false]], "__init__() (parameterpackerwithcontrolvariates method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.__init__", false]], "__init__() (partialweightexchangeclient method)": [[49, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.__init__", false]], "__init__() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.__init__", false]], "__init__() (pcapreprocessor method)": [[124, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.__init__", false]], "__init__() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.__init__", false]], "__init__() (perfcllosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.PerFclLossContainer.__init__", false]], "__init__() (perfclmodel method)": [[108, "fl4health.model_bases.perfcl_base.PerFclModel.__init__", false]], "__init__() (polylrschedulerwrapper method)": [[179, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.__init__", false]], "__init__() (rocauc method)": [[75, "fl4health.metrics.RocAuc.__init__", false], [82, "fl4health.metrics.metrics.RocAuc.__init__", false]], "__init__() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.__init__", false]], "__init__() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.__init__", false]], "__init__() (scaffoldserver method)": [[147, "fl4health.servers.scaffold_server.ScaffoldServer.__init__", false]], "__init__() (scaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (sequentiallysplitmodel method)": [[109, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.__init__", false]], "__init__() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.__init__", false]], "__init__() (simplemetric method)": [[75, "fl4health.metrics.SimpleMetric.__init__", false], [82, "fl4health.metrics.metrics.SimpleMetric.__init__", false]], "__init__() (sparsecooparameterexchanger method)": [[119, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.__init__", false]], "__init__() (sparsecooservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule.__init__", false]], "__init__() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.__init__", false]], "__init__() (streamtologger method)": [[179, "fl4health.utils.nnunet_utils.StreamToLogger.__init__", false]], "__init__() (syntheticdataset method)": [[169, "fl4health.utils.dataset.SyntheticDataset.__init__", false]], "__init__() (syntheticfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset.__init__", false]], "__init__() (syntheticiidfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.__init__", false]], "__init__() (syntheticnoniidfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.__init__", false]], "__init__() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.__init__", false]], "__init__() (textcolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.__init__", false]], "__init__() (textmulticolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.__init__", false]], "__init__() (torchmetric method)": [[75, "fl4health.metrics.TorchMetric.__init__", false], [82, "fl4health.metrics.metrics.TorchMetric.__init__", false]], "__init__() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.__init__", false]], "__init__() (traininglosses method)": [[175, "fl4health.utils.losses.TrainingLosses.__init__", false]], "__init__() (transformsmetric method)": [[77, "fl4health.metrics.compound_metrics.TransformsMetric.__init__", false]], "__init__() (vaeloss method)": [[123, "fl4health.preprocessing.autoencoders.loss.VaeLoss.__init__", false]], "__init__() (vaeprocessor method)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor.__init__", false]], "__init__() (variationalae method)": [[93, "fl4health.model_bases.autoencoders_base.VariationalAe.__init__", false]], "__init__() (wandbreporter method)": [[129, "fl4health.reporting.WandBReporter.__init__", false], [133, "fl4health.reporting.wandb_reporter.WandBReporter.__init__", false]], "__init__() (warmedupmodule method)": [[125, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.__init__", false]], "__init__() (weightdriftloss method)": [[74, "fl4health.losses.weight_drift_loss.WeightDriftLoss.__init__", false]], "abstractae (class in fl4health.model_bases.autoencoders_base)": [[93, "fl4health.model_bases.autoencoders_base.AbstractAe", false]], "abstractsnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.AbstractSnapshotter", false]], "accumulation (lossmetertype attribute)": [[175, "fl4health.utils.losses.LossMeterType.ACCUMULATION", false]], "accuracy (class in fl4health.metrics)": [[75, "fl4health.metrics.Accuracy", false]], "accuracy (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.Accuracy", false]], "accuracy (fairnessmetrictype attribute)": [[156, "fl4health.strategies.feddg_ga.FairnessMetricType.ACCURACY", false]], "adaptiveconstraintservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins.adaptive_drift_constrained)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedprotocol (class in fl4health.mixins.adaptive_drift_constrained)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol", false]], "adaptivedriftconstraintclient (class in fl4health.clients.adaptive_drift_constraint_client)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient", false]], "add_items_to_config_fn() (in module fl4health.servers.nnunet_server)": [[145, "fl4health.servers.nnunet_server.add_items_to_config_fn", false]], "add_noise_to_array() (in module fl4health.strategies.noisy_aggregate)": [[162, "fl4health.strategies.noisy_aggregate.add_noise_to_array", false]], "add_noise_to_ndarrays() (in module fl4health.strategies.noisy_aggregate)": [[162, "fl4health.strategies.noisy_aggregate.add_noise_to_ndarrays", false]], "add_to_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.add_to_snapshot_attr", false]], "aeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.AeProcessor", false]], "aggregate() (evaluationlosses static method)": [[175, "fl4health.utils.losses.EvaluationLosses.aggregate", false]], "aggregate() (fedavgdynamiclayer method)": [[153, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate", false]], "aggregate() (fedavgsparsecootensor method)": [[154, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate", false]], "aggregate() (fedpm method)": [[159, "fl4health.strategies.fedpm.FedPm.aggregate", false]], "aggregate() (losses static method)": [[175, "fl4health.utils.losses.Losses.aggregate", false]], "aggregate() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.aggregate", false]], "aggregate() (traininglosses static method)": [[175, "fl4health.utils.losses.TrainingLosses.aggregate", false]], "aggregate_bayesian() (fedpm method)": [[159, "fl4health.strategies.fedpm.FedPm.aggregate_bayesian", false]], "aggregate_evaluate() (basicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_evaluate", false]], "aggregate_evaluate() (evaluateserver method)": [[141, "fl4health.servers.evaluate_server.EvaluateServer.aggregate_evaluate", false]], "aggregate_evaluate() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_evaluate", false]], "aggregate_evaluate() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_evaluate", false]], "aggregate_fit() (basicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_fit", false]], "aggregate_fit() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.aggregate_fit", false]], "aggregate_fit() (fedavgdynamiclayer method)": [[153, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate_fit", false]], "aggregate_fit() (fedavgsparsecootensor method)": [[154, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate_fit", false]], "aggregate_fit() (fedavgwithadaptiveconstraint method)": [[155, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_fit", false]], "aggregate_fit() (feddggaadaptiveconstraint method)": [[157, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (fedpca method)": [[158, "fl4health.strategies.fedpca.FedPCA.aggregate_fit", false]], "aggregate_fit() (flash method)": [[160, "fl4health.strategies.flash.Flash.aggregate_fit", false]], "aggregate_fit() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_fit", false]], "aggregate_fit() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.aggregate_fit", false]], "aggregate_losses() (in module fl4health.strategies.aggregate_utils)": [[150, "fl4health.strategies.aggregate_utils.aggregate_losses", false]], "aggregate_losses_dict() (lossmeter static method)": [[175, "fl4health.utils.losses.LossMeter.aggregate_losses_dict", false]], "aggregate_results() (in module fl4health.strategies.aggregate_utils)": [[150, "fl4health.strategies.aggregate_utils.aggregate_results", false]], "align_pred_and_target_shapes() (in module fl4health.metrics.utils)": [[84, "fl4health.metrics.utils.align_pred_and_target_shapes", false]], "apflclient (class in fl4health.clients.apfl_client)": [[22, "fl4health.clients.apfl_client.ApflClient", false]], "apflmodule (class in fl4health.model_bases.apfl_base)": [[92, "fl4health.model_bases.apfl_base.ApflModule", false]], "apply_adaptive_drift_to_client() (in module fl4health.mixins.adaptive_drift_constrained)": [[86, "fl4health.mixins.adaptive_drift_constrained.apply_adaptive_drift_to_client", false]], "apply_layer_filter() (fixedlayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.apply_layer_filter", false]], "apply_layer_filter() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.apply_layer_filter", false]], "as_dict() (evaluationlosses method)": [[175, "fl4health.utils.losses.EvaluationLosses.as_dict", false]], "as_dict() (losses method)": [[175, "fl4health.utils.losses.Losses.as_dict", false]], "as_dict() (traininglosses method)": [[175, "fl4health.utils.losses.TrainingLosses.as_dict", false]], "autoencoderdatasetconverter (class in fl4health.utils.dataset_converter)": [[170, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter", false]], "autoencoderprocessing (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing", false]], "average (ensembleaggregationmode attribute)": [[94, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.AVERAGE", false]], "average (lossmetertype attribute)": [[175, "fl4health.utils.losses.LossMeterType.AVERAGE", false]], "backward() (bernoullisample static method)": [[172, "fl4health.utils.functions.BernoulliSample.backward", false]], "balancedaccuracy (class in fl4health.metrics)": [[75, "fl4health.metrics.BalancedAccuracy", false]], "balancedaccuracy (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.BalancedAccuracy", false]], "basedataset (class in fl4health.utils.dataset)": [[169, "fl4health.utils.dataset.BaseDataset", false]], "basefractionsamplingmanager (class in fl4health.client_managers.base_sampling_manager)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager", false]], "basereporter (class in fl4health.reporting.base_reporter)": [[130, "fl4health.reporting.base_reporter.BaseReporter", false]], "baseservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule", false]], "basicae (class in fl4health.model_bases.autoencoders_base)": [[93, "fl4health.model_bases.autoencoders_base.BasicAe", false]], "basicclient (class in fl4health.clients.basic_client)": [[23, "fl4health.clients.basic_client.BasicClient", false]], "basicfedavg (class in fl4health.strategies.basic_fedavg)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg", false]], "bernoullisample (class in fl4health.utils.functions)": [[172, "fl4health.utils.functions.BernoulliSample", false]], "bestlossopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer", false]], "bestlosstorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer", false]], "bestmetrictorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer", false]], "beta_with_extreme_kernel_base_values() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.beta_with_extreme_kernel_base_values", false]], "binary (tabulartype attribute)": [[66, "fl4health.feature_alignment.tabular_type.TabularType.BINARY", false]], "binaryclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[79, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric", false]], "binarydice (class in fl4health.metrics.efficient_metrics)": [[78, "fl4health.metrics.efficient_metrics.BinaryDice", false]], "binarysoftdicecoefficient (class in fl4health.metrics)": [[75, "fl4health.metrics.BinarySoftDiceCoefficient", false]], "binarysoftdicecoefficient (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.BinarySoftDiceCoefficient", false]], "bytessnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.BytesSnapshotter", false]], "calculate_parameters_norm() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.calculate_parameters_norm", false]], "calculate_update_with_momentum() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.calculate_update_with_momentum", false]], "center_data() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.center_data", false]], "check_config() (in module fl4health.utils.config)": [[167, "fl4health.utils.config.check_config", false]], "check_if_batch_is_empty_and_verify_input() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.check_if_batch_is_empty_and_verify_input", false]], "check_shape_match() (in module fl4health.utils.parameter_extraction)": [[180, "fl4health.utils.parameter_extraction.check_shape_match", false]], "check_target_prediction_keys_equal() (metricmanager method)": [[81, "fl4health.metrics.metric_managers.MetricManager.check_target_prediction_keys_equal", false]], "checkpoint_exists() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.checkpoint_exists", false]], "checkpointmode (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.CheckpointMode", false]], "classificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric", false]], "clear() (classificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.clear", false]], "clear() (emametric method)": [[77, "fl4health.metrics.compound_metrics.EmaMetric.clear", false]], "clear() (lossmeter method)": [[175, "fl4health.utils.losses.LossMeter.clear", false]], "clear() (metric method)": [[76, "fl4health.metrics.base_metrics.Metric.clear", false]], "clear() (metricmanager method)": [[81, "fl4health.metrics.metric_managers.MetricManager.clear", false]], "clear() (simplemetric method)": [[75, "fl4health.metrics.SimpleMetric.clear", false], [82, "fl4health.metrics.metrics.SimpleMetric.clear", false]], "clear() (torchmetric method)": [[75, "fl4health.metrics.TorchMetric.clear", false], [82, "fl4health.metrics.metrics.TorchMetric.clear", false]], "clear() (transformsmetric method)": [[77, "fl4health.metrics.compound_metrics.TransformsMetric.clear", false]], "clear_buffers() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.clear_buffers", false]], "clientcheckpointandstatemodule (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule", false]], "clientlevelaccountant (class in fl4health.privacy.fl_accountants)": [[127, "fl4health.privacy.fl_accountants.ClientLevelAccountant", false]], "clientleveldpfedavgm (class in fl4health.strategies.client_dp_fedavgm)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM", false]], "clientleveldpfedavgserver (class in fl4health.servers.client_level_dp_fed_avg_server)": [[140, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer", false]], "clientstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer", false]], "clip_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.clip_parameters", false]], "clippingbitservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule", false]], "clone_and_freeze_model() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.clone_and_freeze_model", false]], "collapse_one_hot_tensor() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.collapse_one_hot_tensor", false]], "compute() (classificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute", false]], "compute() (emametric method)": [[77, "fl4health.metrics.compound_metrics.EmaMetric.compute", false]], "compute() (lossmeter method)": [[175, "fl4health.utils.losses.LossMeter.compute", false]], "compute() (metric method)": [[76, "fl4health.metrics.base_metrics.Metric.compute", false]], "compute() (metricmanager method)": [[81, "fl4health.metrics.metric_managers.MetricManager.compute", false]], "compute() (simplemetric method)": [[75, "fl4health.metrics.SimpleMetric.compute", false], [82, "fl4health.metrics.metrics.SimpleMetric.compute", false]], "compute() (torchmetric method)": [[75, "fl4health.metrics.TorchMetric.compute", false], [82, "fl4health.metrics.metrics.TorchMetric.compute", false]], "compute() (transformsmetric method)": [[77, "fl4health.metrics.compound_metrics.TransformsMetric.compute", false]], "compute_all_h_u_all_samples() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_all_samples", false]], "compute_all_h_u_from_inner_products() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products", false]], "compute_all_h_u_from_inner_products_linear() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products_linear", false]], "compute_all_h_u_linear() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_linear", false]], "compute_contrastive_loss() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_contrastive_loss", false]], "compute_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_cosine_similarity_loss", false]], "compute_cumulative_explained_variance() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.compute_cumulative_explained_variance", false]], "compute_dice_on_count_tensors() (in module fl4health.metrics.metrics_utils)": [[83, "fl4health.metrics.metrics_utils.compute_dice_on_count_tensors", false]], "compute_euclidean_inner_products() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products", false]], "compute_euclidean_inner_products_linear() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products_linear", false]], "compute_evaluation_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.compute_evaluation_loss", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.compute_evaluation_loss", false]], "compute_evaluation_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_evaluation_loss", false]], "compute_evaluation_loss() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.compute_evaluation_loss", false]], "compute_explained_variance_ratios() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.compute_explained_variance_ratios", false]], "compute_from_counts() (binaryclassificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.compute_from_counts", false]], "compute_from_counts() (binarydice method)": [[78, "fl4health.metrics.efficient_metrics.BinaryDice.compute_from_counts", false]], "compute_from_counts() (classificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute_from_counts", false]], "compute_from_counts() (multiclassdice method)": [[78, "fl4health.metrics.efficient_metrics.MultiClassDice.compute_from_counts", false]], "compute_from_counts() (multiclassificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.compute_from_counts", false]], "compute_h_u_from_inner_products() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products", false]], "compute_h_u_from_inner_products_linear() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products_linear", false]], "compute_hat_d_per_kernel() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_d_per_kernel", false]], "compute_hat_q_k() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k", false]], "compute_hat_q_k_linear() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k_linear", false]], "compute_kernel() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.compute_kernel", false]], "compute_loss_and_additional_losses() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (flexibleclientprotocolpresetup method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.compute_loss_and_additional_losses", false]], "compute_mkmmd() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_mkmmd", false]], "compute_negative_similarities() (mooncontrastiveloss method)": [[68, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.compute_negative_similarities", false]], "compute_parameter_delta() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.compute_parameter_delta", false]], "compute_parameters_delta() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.compute_parameters_delta", false]], "compute_penalty_loss() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstrainedprotocol method)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_penalty_loss", false]], "compute_perfcl_loss() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_perfcl_loss", false]], "compute_projection_variance() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.compute_projection_variance", false]], "compute_reconstruction_error() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.compute_reconstruction_error", false]], "compute_training_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_training_loss", false]], "compute_training_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_training_loss", false]], "compute_training_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_training_loss", false]], "compute_training_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_training_loss", false]], "compute_training_loss() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_training_loss", false]], "compute_training_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_training_loss", false]], "compute_training_loss() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.compute_training_loss", false]], "compute_training_loss() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_training_loss", false]], "compute_training_loss() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.compute_training_loss", false]], "compute_training_loss() (mrmtlclient method)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient.compute_training_loss", false]], "compute_training_loss() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_training_loss", false]], "compute_updated_control_variates() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.compute_updated_control_variates", false]], "compute_updated_control_variates() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.compute_updated_control_variates", false]], "compute_updated_parameters() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.compute_updated_parameters", false]], "compute_updated_weights() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.compute_updated_weights", false]], "compute_vertices() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_vertices", false]], "compute_weight_update_and_clip() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.compute_weight_update_and_clip", false]], "concatenate (parallelfeaturejoinmode attribute)": [[105, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.CONCATENATE", false]], "conditionalvae (class in fl4health.model_bases.autoencoders_base)": [[93, "fl4health.model_bases.autoencoders_base.ConditionalVae", false]], "configure_evaluate() (basicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_evaluate", false]], "configure_evaluate() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_evaluate", false]], "configure_evaluate() (evaluateserver method)": [[141, "fl4health.servers.evaluate_server.EvaluateServer.configure_evaluate", false]], "configure_evaluate() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.configure_evaluate", false]], "configure_evaluate() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_evaluate", false]], "configure_fit() (basicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_fit", false]], "configure_fit() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_fit", false]], "configure_fit() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.configure_fit", false]], "configure_fit() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_fit", false]], "configure_fit_all() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.configure_fit_all", false]], "configure_poll() (basicfedavg method)": [[151, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_poll", false]], "configure_poll() (strategywithpolling method)": [[164, "fl4health.strategies.strategy_with_poll.StrategyWithPolling.configure_poll", false]], "constrainedfendaclient (class in fl4health.clients.constrained_fenda_client)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient", false]], "constrainedfendalosscontainer (class in fl4health.losses.fenda_loss_config)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer", false]], "construct_covariance_matrix() (syntheticfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset.construct_covariance_matrix", false]], "construct_quadruples() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.construct_quadruples", false]], "construct_rxrx1_tensor_dataset() (in module fl4health.datasets.rxrx1.load_data)": [[55, "fl4health.datasets.rxrx1.load_data.construct_rxrx1_tensor_dataset", false]], "construct_skin_cancer_tensor_dataset() (in module fl4health.datasets.skin_cancer.load_data)": [[58, "fl4health.datasets.skin_cancer.load_data.construct_skin_cancer_tensor_dataset", false]], "convert_dataset() (autoencoderdatasetconverter method)": [[170, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.convert_dataset", false]], "convert_dataset() (datasetconverter method)": [[170, "fl4health.utils.dataset_converter.DatasetConverter.convert_dataset", false]], "convert_deep_supervision_dict_to_list() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.convert_deep_supervision_dict_to_list", false]], "convert_deep_supervision_list_to_dict() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.convert_deep_supervision_list_to_dict", false]], "convert_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[183, "fl4health.utils.privacy_utilities.convert_model_to_opacus_model", false]], "convert_to_masked_model() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[101, "fl4health.model_bases.masked_layers.masked_layers_utils.convert_to_masked_model", false]], "cosinesimilarityloss (class in fl4health.losses.cosine_similarity_loss)": [[69, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss", false]], "cosinesimilaritylosscontainer (class in fl4health.losses.fenda_loss_config)": [[71, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer", false]], "count_tp_fp_tn_fn() (binaryclassificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.count_tp_fp_tn_fn", false]], "count_tp_fp_tn_fn() (classificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.count_tp_fp_tn_fn", false]], "count_tp_fp_tn_fn() (multiclassificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.count_tp_fp_tn_fn", false]], "create_plans() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.create_plans", false]], "create_splits() (in module fl4health.datasets.rxrx1.load_data)": [[55, "fl4health.datasets.rxrx1.load_data.create_splits", false]], "criterion (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.criterion", false]], "criterion (flexibleclientprotocol attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.criterion", false]], "critical (loglevel attribute)": [[187, "fl4health.utils.typing.LogLevel.CRITICAL", false]], "custom (fairnessmetrictype attribute)": [[156, "fl4health.strategies.feddg_ga.FairnessMetricType.CUSTOM", false]], "cvaefixedconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor", false]], "cvaevariableconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor", false]], "datasetconverter (class in fl4health.utils.dataset_converter)": [[170, "fl4health.utils.dataset_converter.DatasetConverter", false]], "debug (loglevel attribute)": [[187, "fl4health.utils.typing.LogLevel.DEBUG", false]], "decode() (basicae method)": [[93, "fl4health.model_bases.autoencoders_base.BasicAe.decode", false]], "decode() (conditionalvae method)": [[93, "fl4health.model_bases.autoencoders_base.ConditionalVae.decode", false]], "decode() (variationalae method)": [[93, "fl4health.model_bases.autoencoders_base.VariationalAe.decode", false]], "decode_and_pseudo_sort_results() (in module fl4health.utils.functions)": [[172, "fl4health.utils.functions.decode_and_pseudo_sort_results", false]], "deepmmdloss (class in fl4health.losses.deep_mmd_loss)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss", false]], "define_metrics() (wandbreporter method)": [[129, "fl4health.reporting.WandBReporter.define_metrics", false], [133, "fl4health.reporting.wandb_reporter.WandBReporter.define_metrics", false]], "delete_from_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.delete_from_snapshot_attr", false]], "derm7pt_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_image_path_func", false]], "derm7pt_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_label_map_func", false]], "device (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.device", false]], "device (flexibleclientprotocolpresetup attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.device", false]], "dictionarydataset (class in fl4health.utils.dataset)": [[169, "fl4health.utils.dataset.DictionaryDataset", false]], "dirichletlabelbasedallocation (class in fl4health.utils.partitioners)": [[181, "fl4health.utils.partitioners.DirichletLabelBasedAllocation", false]], "dirichletlabelbasedsampler (class in fl4health.utils.sampler)": [[185, "fl4health.utils.sampler.DirichletLabelBasedSampler", false]], "disable_accumulating_features() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.disable_accumulating_features", false]], "ditto (personalizedmode attribute)": [[88, "fl4health.mixins.personalized.PersonalizedMode.DITTO", false]], "dittoclient (class in fl4health.clients.ditto_client)": [[28, "fl4health.clients.ditto_client.DittoClient", false]], "dittodeepmmdclient (class in fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient", false]], "dittomkmmdclient (class in fl4health.clients.mkmmd_clients.ditto_mkmmd_client)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized.ditto)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized)": [[88, "fl4health.mixins.personalized.DittoPersonalizedProtocol", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized.ditto)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol", false]], "dittoserver (class in fl4health.servers.adaptive_constraint_servers.ditto_server)": [[136, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer", false]], "dpscaffoldclient (class in fl4health.clients.scaffold_client)": [[51, "fl4health.clients.scaffold_client.DPScaffoldClient", false]], "dpscaffoldserver (class in fl4health.servers.scaffold_server)": [[147, "fl4health.servers.scaffold_server.DPScaffoldServer", false]], "dpscaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule", false]], "drift_penalty_tensors (adaptivedriftconstrainedprotocol attribute)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_tensors", false]], "drift_penalty_tensors (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_tensors", false]], "drift_penalty_weight (adaptivedriftconstrainedprotocol attribute)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_weight", false]], "drift_penalty_weight (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_weight", false]], "dump() (filereporter method)": [[131, "fl4health.reporting.json_reporter.FileReporter.dump", false]], "dump() (jsonreporter method)": [[129, "fl4health.reporting.JsonReporter.dump", false], [131, "fl4health.reporting.json_reporter.JsonReporter.dump", false]], "dynamiclayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[113, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger", false]], "early_stop_validation (loggingmode attribute)": [[174, "fl4health.utils.logging.LoggingMode.EARLY_STOP_VALIDATION", false]], "earlystopper (class in fl4health.utils.early_stopper)": [[171, "fl4health.utils.early_stopper.EarlyStopper", false]], "emametric (class in fl4health.metrics.compound_metrics)": [[77, "fl4health.metrics.compound_metrics.EmaMetric", false]], "empty_cache() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.empty_cache", false]], "enable_accumulating_features() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.enable_accumulating_features", false]], "encode() (basicae method)": [[93, "fl4health.model_bases.autoencoders_base.BasicAe.encode", false]], "encode() (conditionalvae method)": [[93, "fl4health.model_bases.autoencoders_base.ConditionalVae.encode", false]], "encode() (variationalae method)": [[93, "fl4health.model_bases.autoencoders_base.VariationalAe.encode", false]], "ensemble_average() (ensemblemodel method)": [[94, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_average", false]], "ensemble_vote() (ensemblemodel method)": [[94, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_vote", false]], "ensembleaggregationmode (class in fl4health.model_bases.ensemble_base)": [[94, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode", false]], "ensembleclient (class in fl4health.clients.ensemble_client)": [[29, "fl4health.clients.ensemble_client.EnsembleClient", false]], "ensemblemodel (class in fl4health.model_bases.ensemble_base)": [[94, "fl4health.model_bases.ensemble_base.EnsembleModel", false]], "ensure_protocol_compliance() (in module fl4health.mixins.personalized.utils)": [[90, "fl4health.mixins.personalized.utils.ensure_protocol_compliance", false]], "enumsnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.EnumSnapshotter", false]], "epoch (wandbsteptype attribute)": [[129, "fl4health.reporting.WandBStepType.EPOCH", false], [133, "fl4health.reporting.wandb_reporter.WandBStepType.EPOCH", false]], "error (loglevel attribute)": [[187, "fl4health.utils.typing.LogLevel.ERROR", false]], "evaluate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.evaluate", false]], "evaluate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.evaluate", false]], "evaluate() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.evaluate", false]], "evaluate() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.evaluate", false]], "evaluate() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.evaluate", false]], "evaluate() (numpyclientminimalprotocol method)": [[87, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.evaluate", false]], "evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.evaluate_metrics_aggregation_fn", false]], "evaluate_round() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.evaluate_round", false]], "evaluateclient (class in fl4health.clients.evaluate_client)": [[30, "fl4health.clients.evaluate_client.EvaluateClient", false]], "evaluateserver (class in fl4health.servers.evaluate_server)": [[141, "fl4health.servers.evaluate_server.EvaluateServer", false]], "evaluationlosses (class in fl4health.utils.losses)": [[175, "fl4health.utils.losses.EvaluationLosses", false]], "extract_coo_info_from_dense() (sparsecooparameterpacker static method)": [[116, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.extract_coo_info_from_dense", false]], "f1 (class in fl4health.metrics)": [[75, "fl4health.metrics.F1", false]], "f1 (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.F1", false]], "fairnessmetric (class in fl4health.strategies.feddg_ga)": [[156, "fl4health.strategies.feddg_ga.FairnessMetric", false]], "fairnessmetrictype (class in fl4health.strategies.feddg_ga)": [[156, "fl4health.strategies.feddg_ga.FairnessMetricType", false]], "false_negative (metricoutcome attribute)": [[79, "fl4health.metrics.efficient_metrics_base.MetricOutcome.FALSE_NEGATIVE", false]], "false_positive (metricoutcome attribute)": [[79, "fl4health.metrics.efficient_metrics_base.MetricOutcome.FALSE_POSITIVE", false]], "featureextractorbuffer (class in fl4health.model_bases.feature_extractor_buffer)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer", false]], "fedavgdynamiclayer (class in fl4health.strategies.fedavg_dynamic_layer)": [[153, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer", false]], "fedavgsparsecootensor (class in fl4health.strategies.fedavg_sparse_coo_tensor)": [[154, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor", false]], "fedavgwithadaptiveconstraint (class in fl4health.strategies.fedavg_with_adaptive_constraint)": [[155, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint", false]], "fedbnclient (class in fl4health.clients.fedbn_client)": [[33, "fl4health.clients.fedbn_client.FedBnClient", false]], "feddgga (class in fl4health.strategies.feddg_ga)": [[156, "fl4health.strategies.feddg_ga.FedDgGa", false]], "feddggaadaptiveconstraint (class in fl4health.strategies.feddg_ga_with_adaptive_constraint)": [[157, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint", false]], "federated_evaluate() (evaluateserver method)": [[141, "fl4health.servers.evaluate_server.EvaluateServer.federated_evaluate", false]], "fedpca (class in fl4health.strategies.fedpca)": [[158, "fl4health.strategies.fedpca.FedPCA", false]], "fedpcaclient (class in fl4health.clients.fed_pca_client)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient", false]], "fedperclient (class in fl4health.clients.fedper_client)": [[34, "fl4health.clients.fedper_client.FedPerClient", false]], "fedpm (class in fl4health.strategies.fedpm)": [[159, "fl4health.strategies.fedpm.FedPm", false]], "fedpmclient (class in fl4health.clients.fedpm_client)": [[35, "fl4health.clients.fedpm_client.FedPmClient", false]], "fedpmexchanger (class in fl4health.parameter_exchange.fedpm_exchanger)": [[111, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger", false]], "fedpmserver (class in fl4health.servers.fedpm_server)": [[142, "fl4health.servers.fedpm_server.FedPmServer", false]], "fedproxclient (class in fl4health.clients.fed_prox_client)": [[32, "fl4health.clients.fed_prox_client.FedProxClient", false]], "fedproxserver (class in fl4health.servers.adaptive_constraint_servers.fedprox_server)": [[137, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer", false]], "fedrepclient (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepClient", false]], "fedrepmodel (class in fl4health.model_bases.fedrep_base)": [[96, "fl4health.model_bases.fedrep_base.FedRepModel", false]], "fedreptrainmode (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode", false]], "fedsimclrmodel (class in fl4health.model_bases.fedsimclr_base)": [[97, "fl4health.model_bases.fedsimclr_base.FedSimClrModel", false]], "fendaclient (class in fl4health.clients.fenda_client)": [[37, "fl4health.clients.fenda_client.FendaClient", false]], "fendadittoclient (class in fl4health.clients.fenda_ditto_client)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient", false]], "fendamodel (class in fl4health.model_bases.fenda_base)": [[98, "fl4health.model_bases.fenda_base.FendaModel", false]], "fendamodelwithfeaturestate (class in fl4health.model_bases.fenda_base)": [[98, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState", false]], "filereporter (class in fl4health.reporting.json_reporter)": [[131, "fl4health.reporting.json_reporter.FileReporter", false]], "filter_and_save_data() (in module fl4health.datasets.rxrx1.preprocess)": [[56, "fl4health.datasets.rxrx1.preprocess.filter_and_save_data", false]], "find_last_common_prefix() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.find_last_common_prefix", false]], "fit() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.fit", false]], "fit() (clientleveldpfedavgserver method)": [[140, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.fit", false]], "fit() (dpscaffoldserver method)": [[147, "fl4health.servers.scaffold_server.DPScaffoldServer.fit", false]], "fit() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.fit", false]], "fit() (evaluateserver method)": [[141, "fl4health.servers.evaluate_server.EvaluateServer.fit", false]], "fit() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.fit", false]], "fit() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.fit", false]], "fit() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.fit", false]], "fit() (instanceleveldpserver method)": [[143, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.fit", false]], "fit() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.fit", false]], "fit() (modelmergeserver method)": [[144, "fl4health.servers.model_merge_server.ModelMergeServer.fit", false]], "fit() (numpyclientminimalprotocol method)": [[87, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.fit", false]], "fit() (scaffoldserver method)": [[147, "fl4health.servers.scaffold_server.ScaffoldServer.fit", false]], "fit() (textcolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.fit", false]], "fit() (textmulticolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.fit", false]], "fit_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.fit_metrics_aggregation_fn", false]], "fit_round() (fedpmserver method)": [[142, "fl4health.servers.fedpm_server.FedPmServer.fit_round", false]], "fit_round() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.fit_round", false]], "fit_with_per_round_checkpointing() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.fit_with_per_round_checkpointing", false]], "fixedlayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[113, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger", false]], "fixedsamplingbyfractionclientmanager (class in fl4health.client_managers.fixed_without_replacement_manager)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager", false]], "fixedsamplingclientmanager (class in fl4health.client_managers.fixed_sampling_client_manager)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager", false]], "fixedsamplingwithoutreplacement (class in fl4health.privacy.moments_accountant)": [[128, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement", false]], "fl4health": [[8, "module-fl4health", false]], "fl4health.checkpointing": [[9, "module-fl4health.checkpointing", false]], "fl4health.checkpointing.checkpointer": [[10, "module-fl4health.checkpointing.checkpointer", false]], "fl4health.checkpointing.client_module": [[11, "module-fl4health.checkpointing.client_module", false]], "fl4health.checkpointing.opacus_checkpointer": [[12, "module-fl4health.checkpointing.opacus_checkpointer", false]], "fl4health.checkpointing.server_module": [[13, "module-fl4health.checkpointing.server_module", false]], "fl4health.checkpointing.state_checkpointer": [[14, "module-fl4health.checkpointing.state_checkpointer", false]], "fl4health.client_managers": [[15, "module-fl4health.client_managers", false]], "fl4health.client_managers.base_sampling_manager": [[16, "module-fl4health.client_managers.base_sampling_manager", false]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, "module-fl4health.client_managers.fixed_sampling_client_manager", false]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, "module-fl4health.client_managers.fixed_without_replacement_manager", false]], "fl4health.client_managers.poisson_sampling_manager": [[19, "module-fl4health.client_managers.poisson_sampling_manager", false]], "fl4health.clients": [[20, "module-fl4health.clients", false]], "fl4health.clients.adaptive_drift_constraint_client": [[21, "module-fl4health.clients.adaptive_drift_constraint_client", false]], "fl4health.clients.apfl_client": [[22, "module-fl4health.clients.apfl_client", false]], "fl4health.clients.basic_client": [[23, "module-fl4health.clients.basic_client", false]], "fl4health.clients.clipping_client": [[24, "module-fl4health.clients.clipping_client", false]], "fl4health.clients.constrained_fenda_client": [[25, "module-fl4health.clients.constrained_fenda_client", false]], "fl4health.clients.deep_mmd_clients": [[26, "module-fl4health.clients.deep_mmd_clients", false]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false]], "fl4health.clients.ditto_client": [[28, "module-fl4health.clients.ditto_client", false]], "fl4health.clients.ensemble_client": [[29, "module-fl4health.clients.ensemble_client", false]], "fl4health.clients.evaluate_client": [[30, "module-fl4health.clients.evaluate_client", false]], "fl4health.clients.fed_pca_client": [[31, "module-fl4health.clients.fed_pca_client", false]], "fl4health.clients.fed_prox_client": [[32, "module-fl4health.clients.fed_prox_client", false]], "fl4health.clients.fedbn_client": [[33, "module-fl4health.clients.fedbn_client", false]], "fl4health.clients.fedper_client": [[34, "module-fl4health.clients.fedper_client", false]], "fl4health.clients.fedpm_client": [[35, "module-fl4health.clients.fedpm_client", false]], "fl4health.clients.fedrep_client": [[36, "module-fl4health.clients.fedrep_client", false]], "fl4health.clients.fenda_client": [[37, "module-fl4health.clients.fenda_client", false]], "fl4health.clients.fenda_ditto_client": [[38, "module-fl4health.clients.fenda_ditto_client", false]], "fl4health.clients.flash_client": [[39, "module-fl4health.clients.flash_client", false]], "fl4health.clients.flexible_client": [[40, "module-fl4health.clients.flexible_client", false]], "fl4health.clients.instance_level_dp_client": [[41, "module-fl4health.clients.instance_level_dp_client", false]], "fl4health.clients.mkmmd_clients": [[42, "module-fl4health.clients.mkmmd_clients", false]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[43, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[44, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false]], "fl4health.clients.model_merge_client": [[45, "module-fl4health.clients.model_merge_client", false]], "fl4health.clients.moon_client": [[46, "module-fl4health.clients.moon_client", false]], "fl4health.clients.mr_mtl_client": [[47, "module-fl4health.clients.mr_mtl_client", false]], "fl4health.clients.nnunet_client": [[48, "module-fl4health.clients.nnunet_client", false]], "fl4health.clients.partial_weight_exchange_client": [[49, "module-fl4health.clients.partial_weight_exchange_client", false]], "fl4health.clients.perfcl_client": [[50, "module-fl4health.clients.perfcl_client", false]], "fl4health.clients.scaffold_client": [[51, "module-fl4health.clients.scaffold_client", false]], "fl4health.datasets": [[53, "module-fl4health.datasets", false]], "fl4health.datasets.rxrx1": [[54, "module-fl4health.datasets.rxrx1", false]], "fl4health.datasets.rxrx1.load_data": [[55, "module-fl4health.datasets.rxrx1.load_data", false]], "fl4health.datasets.rxrx1.preprocess": [[56, "module-fl4health.datasets.rxrx1.preprocess", false]], "fl4health.datasets.skin_cancer": [[57, "module-fl4health.datasets.skin_cancer", false]], "fl4health.datasets.skin_cancer.load_data": [[58, "module-fl4health.datasets.skin_cancer.load_data", false]], "fl4health.datasets.skin_cancer.preprocess_skin": [[59, "module-fl4health.datasets.skin_cancer.preprocess_skin", false]], "fl4health.feature_alignment": [[60, "module-fl4health.feature_alignment", false]], "fl4health.feature_alignment.constants": [[61, "module-fl4health.feature_alignment.constants", false]], "fl4health.feature_alignment.string_columns_transformer": [[62, "module-fl4health.feature_alignment.string_columns_transformer", false]], "fl4health.feature_alignment.tabular_feature": [[65, "module-fl4health.feature_alignment.tabular_feature", false]], "fl4health.feature_alignment.tabular_type": [[66, "module-fl4health.feature_alignment.tabular_type", false]], "fl4health.losses": [[67, "module-fl4health.losses", false]], "fl4health.losses.contrastive_loss": [[68, "module-fl4health.losses.contrastive_loss", false]], "fl4health.losses.cosine_similarity_loss": [[69, "module-fl4health.losses.cosine_similarity_loss", false]], "fl4health.losses.deep_mmd_loss": [[70, "module-fl4health.losses.deep_mmd_loss", false]], "fl4health.losses.fenda_loss_config": [[71, "module-fl4health.losses.fenda_loss_config", false]], "fl4health.losses.mkmmd_loss": [[72, "module-fl4health.losses.mkmmd_loss", false]], "fl4health.losses.perfcl_loss": [[73, "module-fl4health.losses.perfcl_loss", false]], "fl4health.losses.weight_drift_loss": [[74, "module-fl4health.losses.weight_drift_loss", false]], "fl4health.metrics": [[75, "module-fl4health.metrics", false]], "fl4health.metrics.base_metrics": [[76, "module-fl4health.metrics.base_metrics", false]], "fl4health.metrics.compound_metrics": [[77, "module-fl4health.metrics.compound_metrics", false]], "fl4health.metrics.efficient_metrics": [[78, "module-fl4health.metrics.efficient_metrics", false]], "fl4health.metrics.efficient_metrics_base": [[79, "module-fl4health.metrics.efficient_metrics_base", false]], "fl4health.metrics.metric_aggregation": [[80, "module-fl4health.metrics.metric_aggregation", false]], "fl4health.metrics.metric_managers": [[81, "module-fl4health.metrics.metric_managers", false]], "fl4health.metrics.metrics": [[82, "module-fl4health.metrics.metrics", false]], "fl4health.metrics.metrics_utils": [[83, "module-fl4health.metrics.metrics_utils", false]], "fl4health.metrics.utils": [[84, "module-fl4health.metrics.utils", false]], "fl4health.mixins": [[85, "module-fl4health.mixins", false]], "fl4health.mixins.adaptive_drift_constrained": [[86, "module-fl4health.mixins.adaptive_drift_constrained", false]], "fl4health.mixins.core_protocols": [[87, "module-fl4health.mixins.core_protocols", false]], "fl4health.mixins.personalized": [[88, "module-fl4health.mixins.personalized", false]], "fl4health.mixins.personalized.ditto": [[89, "module-fl4health.mixins.personalized.ditto", false]], "fl4health.mixins.personalized.utils": [[90, "module-fl4health.mixins.personalized.utils", false]], "fl4health.model_bases": [[91, "module-fl4health.model_bases", false]], "fl4health.model_bases.apfl_base": [[92, "module-fl4health.model_bases.apfl_base", false]], "fl4health.model_bases.autoencoders_base": [[93, "module-fl4health.model_bases.autoencoders_base", false]], "fl4health.model_bases.ensemble_base": [[94, "module-fl4health.model_bases.ensemble_base", false]], "fl4health.model_bases.feature_extractor_buffer": [[95, "module-fl4health.model_bases.feature_extractor_buffer", false]], "fl4health.model_bases.fedrep_base": [[96, "module-fl4health.model_bases.fedrep_base", false]], "fl4health.model_bases.fedsimclr_base": [[97, "module-fl4health.model_bases.fedsimclr_base", false]], "fl4health.model_bases.fenda_base": [[98, "module-fl4health.model_bases.fenda_base", false]], "fl4health.model_bases.masked_layers": [[99, "module-fl4health.model_bases.masked_layers", false]], "fl4health.model_bases.masked_layers.masked_conv": [[100, "module-fl4health.model_bases.masked_layers.masked_conv", false]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[101, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false]], "fl4health.model_bases.masked_layers.masked_linear": [[102, "module-fl4health.model_bases.masked_layers.masked_linear", false]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[103, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false]], "fl4health.model_bases.moon_base": [[104, "module-fl4health.model_bases.moon_base", false]], "fl4health.model_bases.parallel_split_models": [[105, "module-fl4health.model_bases.parallel_split_models", false]], "fl4health.model_bases.partial_layer_exchange_model": [[106, "module-fl4health.model_bases.partial_layer_exchange_model", false]], "fl4health.model_bases.pca": [[107, "module-fl4health.model_bases.pca", false]], "fl4health.model_bases.perfcl_base": [[108, "module-fl4health.model_bases.perfcl_base", false]], "fl4health.model_bases.sequential_split_models": [[109, "module-fl4health.model_bases.sequential_split_models", false]], "fl4health.parameter_exchange": [[110, "module-fl4health.parameter_exchange", false]], "fl4health.parameter_exchange.fedpm_exchanger": [[111, "module-fl4health.parameter_exchange.fedpm_exchanger", false]], "fl4health.parameter_exchange.full_exchanger": [[112, "module-fl4health.parameter_exchange.full_exchanger", false]], "fl4health.parameter_exchange.layer_exchanger": [[113, "module-fl4health.parameter_exchange.layer_exchanger", false]], "fl4health.parameter_exchange.packing_exchanger": [[114, "module-fl4health.parameter_exchange.packing_exchanger", false]], "fl4health.parameter_exchange.parameter_exchanger_base": [[115, "module-fl4health.parameter_exchange.parameter_exchanger_base", false]], "fl4health.parameter_exchange.parameter_packer": [[116, "module-fl4health.parameter_exchange.parameter_packer", false]], "fl4health.parameter_exchange.parameter_selection_criteria": [[117, "module-fl4health.parameter_exchange.parameter_selection_criteria", false]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[118, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[119, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false]], "fl4health.preprocessing": [[120, "module-fl4health.preprocessing", false]], "fl4health.preprocessing.autoencoders": [[121, "module-fl4health.preprocessing.autoencoders", false]], "fl4health.preprocessing.autoencoders.dim_reduction": [[122, "module-fl4health.preprocessing.autoencoders.dim_reduction", false]], "fl4health.preprocessing.autoencoders.loss": [[123, "module-fl4health.preprocessing.autoencoders.loss", false]], "fl4health.preprocessing.pca_preprocessor": [[124, "module-fl4health.preprocessing.pca_preprocessor", false]], "fl4health.preprocessing.warmed_up_module": [[125, "module-fl4health.preprocessing.warmed_up_module", false]], "fl4health.privacy": [[126, "module-fl4health.privacy", false]], "fl4health.privacy.fl_accountants": [[127, "module-fl4health.privacy.fl_accountants", false]], "fl4health.privacy.moments_accountant": [[128, "module-fl4health.privacy.moments_accountant", false]], "fl4health.reporting": [[129, "module-fl4health.reporting", false]], "fl4health.reporting.base_reporter": [[130, "module-fl4health.reporting.base_reporter", false]], "fl4health.reporting.json_reporter": [[131, "module-fl4health.reporting.json_reporter", false]], "fl4health.reporting.reports_manager": [[132, "module-fl4health.reporting.reports_manager", false]], "fl4health.reporting.wandb_reporter": [[133, "module-fl4health.reporting.wandb_reporter", false]], "fl4health.servers": [[134, "module-fl4health.servers", false]], "fl4health.servers.adaptive_constraint_servers": [[135, "module-fl4health.servers.adaptive_constraint_servers", false]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[136, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[137, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[138, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false]], "fl4health.servers.base_server": [[139, "module-fl4health.servers.base_server", false]], "fl4health.servers.client_level_dp_fed_avg_server": [[140, "module-fl4health.servers.client_level_dp_fed_avg_server", false]], "fl4health.servers.evaluate_server": [[141, "module-fl4health.servers.evaluate_server", false]], "fl4health.servers.fedpm_server": [[142, "module-fl4health.servers.fedpm_server", false]], "fl4health.servers.instance_level_dp_server": [[143, "module-fl4health.servers.instance_level_dp_server", false]], "fl4health.servers.model_merge_server": [[144, "module-fl4health.servers.model_merge_server", false]], "fl4health.servers.nnunet_server": [[145, "module-fl4health.servers.nnunet_server", false]], "fl4health.servers.polling": [[146, "module-fl4health.servers.polling", false]], "fl4health.servers.scaffold_server": [[147, "module-fl4health.servers.scaffold_server", false]], "fl4health.strategies": [[149, "module-fl4health.strategies", false]], "fl4health.strategies.aggregate_utils": [[150, "module-fl4health.strategies.aggregate_utils", false]], "fl4health.strategies.basic_fedavg": [[151, "module-fl4health.strategies.basic_fedavg", false]], "fl4health.strategies.client_dp_fedavgm": [[152, "module-fl4health.strategies.client_dp_fedavgm", false]], "fl4health.strategies.fedavg_dynamic_layer": [[153, "module-fl4health.strategies.fedavg_dynamic_layer", false]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[154, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[155, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false]], "fl4health.strategies.feddg_ga": [[156, "module-fl4health.strategies.feddg_ga", false]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[157, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false]], "fl4health.strategies.fedpca": [[158, "module-fl4health.strategies.fedpca", false]], "fl4health.strategies.fedpm": [[159, "module-fl4health.strategies.fedpm", false]], "fl4health.strategies.flash": [[160, "module-fl4health.strategies.flash", false]], "fl4health.strategies.model_merge_strategy": [[161, "module-fl4health.strategies.model_merge_strategy", false]], "fl4health.strategies.noisy_aggregate": [[162, "module-fl4health.strategies.noisy_aggregate", false]], "fl4health.strategies.scaffold": [[163, "module-fl4health.strategies.scaffold", false]], "fl4health.strategies.strategy_with_poll": [[164, "module-fl4health.strategies.strategy_with_poll", false]], "fl4health.utils": [[165, "module-fl4health.utils", false]], "fl4health.utils.client": [[166, "module-fl4health.utils.client", false]], "fl4health.utils.config": [[167, "module-fl4health.utils.config", false]], "fl4health.utils.data_generation": [[168, "module-fl4health.utils.data_generation", false]], "fl4health.utils.dataset": [[169, "module-fl4health.utils.dataset", false]], "fl4health.utils.dataset_converter": [[170, "module-fl4health.utils.dataset_converter", false]], "fl4health.utils.early_stopper": [[171, "module-fl4health.utils.early_stopper", false]], "fl4health.utils.functions": [[172, "module-fl4health.utils.functions", false]], "fl4health.utils.load_data": [[173, "module-fl4health.utils.load_data", false]], "fl4health.utils.logging": [[174, "module-fl4health.utils.logging", false]], "fl4health.utils.losses": [[175, "module-fl4health.utils.losses", false]], "fl4health.utils.metrics": [[177, "module-fl4health.utils.metrics", false]], "fl4health.utils.msd_dataset_sources": [[178, "module-fl4health.utils.msd_dataset_sources", false]], "fl4health.utils.nnunet_utils": [[179, "module-fl4health.utils.nnunet_utils", false]], "fl4health.utils.parameter_extraction": [[180, "module-fl4health.utils.parameter_extraction", false]], "fl4health.utils.partitioners": [[181, "module-fl4health.utils.partitioners", false]], "fl4health.utils.peft_parameter_extraction": [[182, "module-fl4health.utils.peft_parameter_extraction", false]], "fl4health.utils.privacy_utilities": [[183, "module-fl4health.utils.privacy_utilities", false]], "fl4health.utils.random": [[184, "module-fl4health.utils.random", false]], "fl4health.utils.sampler": [[185, "module-fl4health.utils.sampler", false]], "fl4health.utils.snapshotter": [[186, "module-fl4health.utils.snapshotter", false]], "fl4health.utils.typing": [[187, "module-fl4health.utils.typing", false]], "flash (class in fl4health.strategies.flash)": [[160, "fl4health.strategies.flash.Flash", false]], "flashclient (class in fl4health.clients.flash_client)": [[39, "fl4health.clients.flash_client.FlashClient", false]], "flatten() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten", false]], "flclientlevelaccountantfixedsamplingnoreplacement (class in fl4health.privacy.fl_accountants)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement", false]], "flclientlevelaccountantpoissonsampling (class in fl4health.privacy.fl_accountants)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling", false]], "flexibleclient (class in fl4health.clients.flexible_client)": [[40, "fl4health.clients.flexible_client.FlexibleClient", false]], "flexibleclientprotocol (class in fl4health.mixins.core_protocols)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol", false]], "flexibleclientprotocolpresetup (class in fl4health.mixins.core_protocols)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup", false]], "flinstancelevelaccountant (class in fl4health.privacy.fl_accountants)": [[127, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant", false]], "flserver (class in fl4health.servers.base_server)": [[139, "fl4health.servers.base_server.FlServer", false]], "flush() (streamtologger method)": [[179, "fl4health.utils.nnunet_utils.StreamToLogger.flush", false]], "fold_loss_dict_into_metrics() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.fold_loss_dict_into_metrics", false]], "form_and_solve_qp() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_and_solve_qp", false]], "form_h_u_delta_w_i() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_h_u_delta_w_i", false]], "form_kernel_samples_minus_expectation() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_kernel_samples_minus_expectation", false]], "forward() (abstractae method)": [[93, "fl4health.model_bases.autoencoders_base.AbstractAe.forward", false]], "forward() (apflmodule method)": [[92, "fl4health.model_bases.apfl_base.ApflModule.forward", false]], "forward() (basicae method)": [[93, "fl4health.model_bases.autoencoders_base.BasicAe.forward", false]], "forward() (bernoullisample static method)": [[172, "fl4health.utils.functions.BernoulliSample.forward", false]], "forward() (conditionalvae method)": [[93, "fl4health.model_bases.autoencoders_base.ConditionalVae.forward", false]], "forward() (cosinesimilarityloss method)": [[69, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.forward", false]], "forward() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.forward", false]], "forward() (ensemblemodel method)": [[94, "fl4health.model_bases.ensemble_base.EnsembleModel.forward", false]], "forward() (fedsimclrmodel method)": [[97, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.forward", false]], "forward() (fendamodelwithfeaturestate method)": [[98, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.forward", false]], "forward() (maskedconv1d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.forward", false]], "forward() (maskedconv2d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.forward", false]], "forward() (maskedconv3d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.forward", false]], "forward() (maskedconvtranspose1d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.forward", false]], "forward() (maskedconvtranspose2d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.forward", false]], "forward() (maskedconvtranspose3d method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.forward", false]], "forward() (maskedlayernorm method)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.forward", false]], "forward() (maskedlinear method)": [[102, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.forward", false]], "forward() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.forward", false]], "forward() (modellatentf method)": [[70, "fl4health.losses.deep_mmd_loss.ModelLatentF.forward", false]], "forward() (module2losswrapper method)": [[179, "fl4health.utils.nnunet_utils.Module2LossWrapper.forward", false]], "forward() (mooncontrastiveloss method)": [[68, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.forward", false]], "forward() (ntxentloss method)": [[68, "fl4health.losses.contrastive_loss.NtXentLoss.forward", false]], "forward() (parallelsplitheadmodule method)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.forward", false]], "forward() (parallelsplitmodel method)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.forward", false]], "forward() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.forward", false]], "forward() (perfclloss method)": [[73, "fl4health.losses.perfcl_loss.PerFclLoss.forward", false]], "forward() (perfclmodel method)": [[108, "fl4health.model_bases.perfcl_base.PerFclModel.forward", false]], "forward() (sequentiallysplitmodel method)": [[109, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.forward", false]], "forward() (vaeloss method)": [[123, "fl4health.preprocessing.autoencoders.loss.VaeLoss.forward", false]], "forward() (variationalae method)": [[93, "fl4health.model_bases.autoencoders_base.VariationalAe.forward", false]], "forward() (weightdriftloss method)": [[74, "fl4health.losses.weight_drift_loss.WeightDriftLoss.forward", false]], "forward_hook() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.forward_hook", false]], "freeze_base_module() (fedrepmodel method)": [[96, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_base_module", false]], "freeze_head_module() (fedrepmodel method)": [[96, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_head_module", false]], "from_json() (tabularfeature static method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.from_json", false]], "from_pretrained() (maskedconv1d class method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.from_pretrained", false]], "from_pretrained() (maskedconv2d class method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.from_pretrained", false]], "from_pretrained() (maskedconv3d class method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose1d class method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose2d class method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose3d class method)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.from_pretrained", false]], "from_pretrained() (maskedlayernorm class method)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.from_pretrained", false]], "from_pretrained() (maskedlinear class method)": [[102, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.from_pretrained", false]], "fullparameterexchanger (class in fl4health.parameter_exchange.full_exchanger)": [[112, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger", false]], "fullparameterexchangerwithpacking (class in fl4health.parameter_exchange.packing_exchanger)": [[114, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking", false]], "functiontorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer", false]], "gaussian_noisy_aggregate_clipping_bits() (in module fl4health.strategies.noisy_aggregate)": [[162, "fl4health.strategies.noisy_aggregate.gaussian_noisy_aggregate_clipping_bits", false]], "gaussian_noisy_unweighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[162, "fl4health.strategies.noisy_aggregate.gaussian_noisy_unweighted_aggregate", false]], "gaussian_noisy_weighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[162, "fl4health.strategies.noisy_aggregate.gaussian_noisy_weighted_aggregate", false]], "generate() (syntheticfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate", false]], "generate_client_tensors() (syntheticfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticiidfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticnoniidfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.generate_client_tensors", false]], "generate_hash() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.generate_hash", false]], "generate_hash() (in module fl4health.utils.random)": [[184, "fl4health.utils.random.generate_hash", false]], "generate_parameter_scores() (sparsecooparameterexchanger method)": [[119, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.generate_parameter_scores", false]], "get_all_model_parameters() (in module fl4health.utils.parameter_extraction)": [[180, "fl4health.utils.parameter_extraction.get_all_model_parameters", false]], "get_all_peft_parameters_from_model() (in module fl4health.utils.peft_parameter_extraction)": [[182, "fl4health.utils.peft_parameter_extraction.get_all_peft_parameters_from_model", false]], "get_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.get_attribute", false]], "get_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.get_attribute", false]], "get_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.get_attribute", false]], "get_best_vertex_for_objective_function() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.get_best_vertex_for_objective_function", false]], "get_cifar10_data_and_target_tensors() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.get_cifar10_data_and_target_tensors", false]], "get_client_specific_logs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_logs", false]], "get_client_specific_logs() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_logs", false]], "get_client_specific_reports() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_reports", false]], "get_client_specific_reports() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_reports", false]], "get_condition_vector_size() (autoencoderdatasetconverter method)": [[170, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_condition_vector_size", false]], "get_criterion() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_criterion", false]], "get_criterion() (flexibleclientprotocolpresetup method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_criterion", false]], "get_criterion() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_criterion", false]], "get_current_weight_step_size() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.get_current_weight_step_size", false]], "get_data_loader() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_data_loader", false]], "get_data_loaders() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_data_loaders", false]], "get_data_loaders() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_loaders", false]], "get_data_loaders() (flexibleclientprotocolpresetup method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_data_loaders", false]], "get_data_loaders() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_data_loaders", false]], "get_data_tensor() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_tensor", false]], "get_dataset_n_voxels() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.get_dataset_n_voxels", false]], "get_default_fill_value() (tabulartype static method)": [[66, "fl4health.feature_alignment.tabular_type.TabularType.get_default_fill_value", false]], "get_delta() (clientlevelaccountant method)": [[127, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_delta", false]], "get_delta() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_delta", false]], "get_delta() (flclientlevelaccountantpoissonsampling method)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_delta", false]], "get_delta() (flinstancelevelaccountant method)": [[127, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_delta", false]], "get_delta() (momentsaccountant method)": [[128, "fl4health.privacy.moments_accountant.MomentsAccountant.get_delta", false]], "get_dp_event() (fixedsamplingwithoutreplacement method)": [[128, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.get_dp_event", false]], "get_dp_event() (poissonsampling method)": [[128, "fl4health.privacy.moments_accountant.PoissonSampling.get_dp_event", false]], "get_dp_event() (samplingstrategy method)": [[128, "fl4health.privacy.moments_accountant.SamplingStrategy.get_dp_event", false]], "get_epsilon() (clientlevelaccountant method)": [[127, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantpoissonsampling method)": [[127, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_epsilon", false]], "get_epsilon() (flinstancelevelaccountant method)": [[127, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_epsilon", false]], "get_epsilon() (momentsaccountant method)": [[128, "fl4health.privacy.moments_accountant.MomentsAccountant.get_epsilon", false]], "get_extracted_features() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_extracted_features", false]], "get_feature_name() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_name", false]], "get_feature_type() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_type", false]], "get_fill_value() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_fill_value", false]], "get_global_model() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_global_model", false]], "get_global_model() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_global_model", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_global_model", false]], "get_global_model() (dittopersonalizedprotocol method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedProtocol.get_global_model", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.get_global_model", false]], "get_global_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_global_model", false]], "get_hierarchical_attr() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_hierarchical_attr", false]], "get_input_output_tensors() (syntheticiidfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.get_input_output_tensors", false]], "get_input_output_tensors() (syntheticnoniidfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.get_input_output_tensors", false]], "get_layers_to_transfer() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.get_layers_to_transfer", false]], "get_local_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_local_model", false]], "get_lr() (polylrschedulerwrapper method)": [[179, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.get_lr", false]], "get_lr_scheduler() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_lr_scheduler", false]], "get_lr_scheduler() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_lr_scheduler", false]], "get_matching_component() (warmedupmodule method)": [[125, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.get_matching_component", false]], "get_metadata() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata", false]], "get_metadata_dimension() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata_dimension", false]], "get_mnist_data_and_target_tensors() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.get_mnist_data_and_target_tensors", false]], "get_model() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_model", false]], "get_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_model", false]], "get_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_model", false]], "get_model() (flexibleclientprotocolpresetup method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_model", false]], "get_model() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.get_model", false]], "get_model() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_model", false]], "get_msd_dataset_enum() (in module fl4health.utils.msd_dataset_sources)": [[178, "fl4health.utils.msd_dataset_sources.get_msd_dataset_enum", false]], "get_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_optimizer", false]], "get_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_optimizer", false]], "get_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_optimizer", false]], "get_optimizer() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_optimizer", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_optimizer", false]], "get_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.get_optimizer", false]], "get_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_optimizer", false]], "get_optimizer() (flexibleclientprotocolpresetup method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_optimizer", false]], "get_optimizer() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_optimizer", false]], "get_parameter_exchanger() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false]], "get_parameter_exchanger() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedperclient method)": [[34, "fl4health.clients.fedper_client.FedPerClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (partialweightexchangeclient method)": [[49, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameter_exchanger", false]], "get_parameters() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameters", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameters", false]], "get_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameters", false]], "get_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameters", false]], "get_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_parameters", false]], "get_parameters() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_parameters", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_parameters", false]], "get_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameters", false]], "get_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_parameters", false]], "get_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_parameters", false]], "get_parameters() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameters", false]], "get_parameters() (numpyclientminimalprotocol method)": [[87, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.get_parameters", false]], "get_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameters", false]], "get_parameters() (partialweightexchangeclient method)": [[49, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameters", false]], "get_parameters() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameters", false]], "get_properties() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_properties", false]], "get_properties() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.get_properties", false]], "get_segs_from_probs() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.get_segs_from_probs", false]], "get_test_data_loader() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_test_data_loader", false]], "get_test_data_loader() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.get_test_data_loader", false]], "get_train_and_val_cifar10_datasets() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.get_train_and_val_cifar10_datasets", false]], "get_train_and_val_mnist_datasets() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.get_train_and_val_mnist_datasets", false]], "get_unpacking_function() (autoencoderdatasetconverter method)": [[170, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_unpacking_function", false]], "global_forward() (apflmodule method)": [[92, "fl4health.model_bases.apfl_base.ApflModule.global_forward", false]], "global_model (dittopersonalizedprotocol attribute)": [[88, "fl4health.mixins.personalized.DittoPersonalizedProtocol.global_model", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.global_model", false]], "h1_mean_var_gram() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.h1_mean_var_gram", false]], "ham_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.ham_image_path_func", false]], "ham_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.ham_label_map_func", false]], "has_contrastive_loss() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_contrastive_loss", false]], "has_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_cosine_similarity_loss", false]], "has_perfcl_loss() (constrainedfendalosscontainer method)": [[71, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_perfcl_loss", false]], "head (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.HEAD", false]], "head_forward() (parallelsplitheadmodule method)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.head_forward", false]], "historysnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.HistorySnapshotter", false]], "infer_label_dim() (in module fl4health.metrics.utils)": [[84, "fl4health.metrics.utils.infer_label_dim", false]], "info (loglevel attribute)": [[187, "fl4health.utils.typing.LogLevel.INFO", false]], "initialize() (basereporter method)": [[130, "fl4health.reporting.base_reporter.BaseReporter.initialize", false]], "initialize() (filereporter method)": [[131, "fl4health.reporting.json_reporter.FileReporter.initialize", false]], "initialize() (reportsmanager method)": [[132, "fl4health.reporting.reports_manager.ReportsManager.initialize", false]], "initialize() (wandbreporter method)": [[129, "fl4health.reporting.WandBReporter.initialize", false], [133, "fl4health.reporting.wandb_reporter.WandBReporter.initialize", false]], "initialize_all_model_weights() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.initialize_all_model_weights", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.initialize_all_model_weights", false]], "initialize_all_model_weights() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.initialize_all_model_weights", false]], "initialize_control_variates() (scaffold method)": [[163, "fl4health.strategies.scaffold.Scaffold.initialize_control_variates", false]], "initialize_global_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.initialize_global_model", false]], "initialize_parameters() (modelmergestrategy method)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.initialize_parameters", false]], "initialize_server_model() (nnunetserver method)": [[145, "fl4health.servers.nnunet_server.NnunetServer.initialize_server_model", false]], "initialized (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.initialized", false]], "initialized (flexibleclientprotocolpresetup attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.initialized", false]], "instanceleveldpclient (class in fl4health.clients.instance_level_dp_client)": [[41, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient", false]], "instanceleveldpserver (class in fl4health.servers.instance_level_dp_server)": [[143, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer", false]], "invalidconfigerror": [[167, "fl4health.utils.config.InvalidConfigError", false]], "is_masked_module() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[101, "fl4health.model_bases.masked_layers.masked_layers_utils.is_masked_module", false]], "is_start_of_local_training() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.is_start_of_local_training", false]], "jsonreporter (class in fl4health.reporting)": [[129, "fl4health.reporting.JsonReporter", false]], "jsonreporter (class in fl4health.reporting.json_reporter)": [[131, "fl4health.reporting.json_reporter.JsonReporter", false]], "label_frequency() (in module fl4health.datasets.rxrx1.load_data)": [[55, "fl4health.datasets.rxrx1.load_data.label_frequency", false]], "labelbasedsampler (class in fl4health.utils.sampler)": [[185, "fl4health.utils.sampler.LabelBasedSampler", false]], "largest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.largest_final_magnitude_scores", false]], "largest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.largest_increase_in_magnitude_scores", false]], "largest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.largest_magnitude_change_scores", false]], "latestopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer", false]], "latesttorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer", false]], "layerexchangerwithexclusions (class in fl4health.parameter_exchange.layer_exchanger)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions", false]], "layernamesservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule", false]], "layers_to_exchange() (apflmodule method)": [[92, "fl4health.model_bases.apfl_base.ApflModule.layers_to_exchange", false]], "layers_to_exchange() (fendamodel method)": [[98, "fl4health.model_bases.fenda_base.FendaModel.layers_to_exchange", false]], "layers_to_exchange() (partiallayerexchangemodel method)": [[106, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel.layers_to_exchange", false]], "layers_to_exchange() (perfclmodel method)": [[108, "fl4health.model_bases.perfcl_base.PerFclModel.layers_to_exchange", false]], "layers_to_exchange() (sequentiallysplitexchangebasemodel method)": [[109, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel.layers_to_exchange", false]], "layerselectionfunctionconstructor (class in fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor", false]], "load_attribute() (abstractsnapshotter method)": [[186, "fl4health.utils.snapshotter.AbstractSnapshotter.load_attribute", false]], "load_attribute() (bytessnapshotter method)": [[186, "fl4health.utils.snapshotter.BytesSnapshotter.load_attribute", false]], "load_attribute() (enumsnapshotter method)": [[186, "fl4health.utils.snapshotter.EnumSnapshotter.load_attribute", false]], "load_attribute() (historysnapshotter method)": [[186, "fl4health.utils.snapshotter.HistorySnapshotter.load_attribute", false]], "load_attribute() (lrschedulersnapshotter method)": [[186, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.load_attribute", false]], "load_attribute() (optimizersnapshotter method)": [[186, "fl4health.utils.snapshotter.OptimizerSnapshotter.load_attribute", false]], "load_attribute() (serializableobjectsnapshotter method)": [[186, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.load_attribute", false]], "load_attribute() (singletonsnapshotter method)": [[186, "fl4health.utils.snapshotter.SingletonSnapshotter.load_attribute", false]], "load_attribute() (stringsnapshotter method)": [[186, "fl4health.utils.snapshotter.StringSnapshotter.load_attribute", false]], "load_attribute() (torchmodulesnapshotter method)": [[186, "fl4health.utils.snapshotter.TorchModuleSnapshotter.load_attribute", false]], "load_autoencoder() (autoencoderprocessing method)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.load_autoencoder", false]], "load_best_checkpoint_into_model() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_best_checkpoint_into_model", false]], "load_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_checkpoint", false]], "load_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_checkpoint", false]], "load_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.load_checkpoint", false]], "load_cifar10_data() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.load_cifar10_data", false]], "load_cifar10_test_data() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.load_cifar10_test_data", false]], "load_config() (in module fl4health.utils.config)": [[167, "fl4health.utils.config.load_config", false]], "load_from_pretrained() (warmedupmodule method)": [[125, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.load_from_pretrained", false]], "load_image() (in module fl4health.datasets.rxrx1.preprocess)": [[56, "fl4health.datasets.rxrx1.preprocess.load_image", false]], "load_image() (in module fl4health.datasets.skin_cancer.load_data)": [[58, "fl4health.datasets.skin_cancer.load_data.load_image", false]], "load_mnist_data() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.load_mnist_data", false]], "load_mnist_test_data() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.load_mnist_test_data", false]], "load_model_checkpoint_to_parameters() (evaluateserver method)": [[141, "fl4health.servers.evaluate_server.EvaluateServer.load_model_checkpoint_to_parameters", false]], "load_msd_dataset() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.load_msd_dataset", false]], "load_pca_module() (pcapreprocessor method)": [[124, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.load_pca_module", false]], "load_pretrained_model() (fedsimclrmodel static method)": [[97, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.load_pretrained_model", false]], "load_rxrx1_data() (in module fl4health.datasets.rxrx1.load_data)": [[55, "fl4health.datasets.rxrx1.load_data.load_rxrx1_data", false]], "load_rxrx1_test_data() (in module fl4health.datasets.rxrx1.load_data)": [[55, "fl4health.datasets.rxrx1.load_data.load_rxrx1_test_data", false]], "load_skin_cancer_data() (in module fl4health.datasets.skin_cancer.load_data)": [[58, "fl4health.datasets.skin_cancer.load_data.load_skin_cancer_data", false]], "load_snapshot() (earlystopper method)": [[171, "fl4health.utils.early_stopper.EarlyStopper.load_snapshot", false]], "load_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_state", false]], "local_forward() (apflmodule method)": [[92, "fl4health.model_bases.apfl_base.ApflModule.local_forward", false]], "loggingmode (class in fl4health.utils.logging)": [[174, "fl4health.utils.logging.LoggingMode", false]], "loglevel (class in fl4health.utils.typing)": [[187, "fl4health.utils.typing.LogLevel", false]], "loss (fairnessmetrictype attribute)": [[156, "fl4health.strategies.feddg_ga.FairnessMetricType.LOSS", false]], "loss_for_adaptation (adaptivedriftconstrainedprotocol attribute)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.loss_for_adaptation", false]], "loss_for_adaptation (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.loss_for_adaptation", false]], "losses (class in fl4health.utils.losses)": [[175, "fl4health.utils.losses.Losses", false]], "lossmeter (class in fl4health.utils.losses)": [[175, "fl4health.utils.losses.LossMeter", false]], "lossmetertype (class in fl4health.utils.losses)": [[175, "fl4health.utils.losses.LossMeterType", false]], "lrschedulersnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.LRSchedulerSnapshotter", false]], "main() (in module fl4health.datasets.rxrx1.preprocess)": [[56, "fl4health.datasets.rxrx1.preprocess.main", false]], "make_dict_with_epochs_or_steps() (in module fl4health.utils.config)": [[167, "fl4health.utils.config.make_dict_with_epochs_or_steps", false]], "make_it_personal() (in module fl4health.mixins.personalized)": [[88, "fl4health.mixins.personalized.make_it_personal", false]], "map_label_index_tensor_to_one_hot() (in module fl4health.metrics.utils)": [[84, "fl4health.metrics.utils.map_label_index_tensor_to_one_hot", false]], "map_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[183, "fl4health.utils.privacy_utilities.map_model_to_opacus_model", false]], "mask_data() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.mask_data", false]], "maskedbatchnorm1d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm1d", false]], "maskedbatchnorm2d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm2d", false]], "maskedbatchnorm3d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm3d", false]], "maskedconv1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d", false]], "maskedconv2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d", false]], "maskedconv3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d", false]], "maskedconvtranspose1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d", false]], "maskedconvtranspose2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d", false]], "maskedconvtranspose3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[100, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d", false]], "maskedlayernorm (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[103, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm", false]], "maskedlinear (class in fl4health.model_bases.masked_layers.masked_linear)": [[102, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear", false]], "maybe_checkpoint() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_extract_fingerprint() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.maybe_extract_fingerprint", false]], "maybe_load_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_load_client_state", false]], "maybe_load_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_load_server_state", false]], "maybe_load_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_load_state", false]], "maybe_load_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_load_state", false]], "maybe_preprocess() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.maybe_preprocess", false]], "maybe_progress_bar() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.maybe_progress_bar", false]], "maybe_reshape() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.maybe_reshape", false]], "maybe_set_default_checkpoint_name() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_set_default_checkpoint_name", false]], "maybe_set_default_checkpoint_name() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_set_default_checkpoint_name", false]], "merge_metrics() (evaluateclient static method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.merge_metrics", false]], "merge_subspaces_qr() (fedpca method)": [[158, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_qr", false]], "merge_subspaces_svd() (fedpca method)": [[158, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_svd", false]], "merge_two_subspaces_qr() (fedpca method)": [[158, "fl4health.strategies.fedpca.FedPCA.merge_two_subspaces_qr", false]], "metric (class in fl4health.metrics.base_metrics)": [[76, "fl4health.metrics.base_metrics.Metric", false]], "metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.metric_aggregation", false]], "metricmanager (class in fl4health.metrics.metric_managers)": [[81, "fl4health.metrics.metric_managers.MetricManager", false]], "metricoutcome (class in fl4health.metrics.efficient_metrics_base)": [[79, "fl4health.metrics.efficient_metrics_base.MetricOutcome", false]], "metricprefix (class in fl4health.metrics.base_metrics)": [[76, "fl4health.metrics.base_metrics.MetricPrefix", false]], "minoritylabelbasedsampler (class in fl4health.utils.sampler)": [[185, "fl4health.utils.sampler.MinorityLabelBasedSampler", false]], "mkmmdloss (class in fl4health.losses.mkmmd_loss)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss", false]], "mmdu() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.mmdu", false]], "model (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.model", false]], "model (flexibleclientprotocol attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.model", false]], "modellatentf (class in fl4health.losses.deep_mmd_loss)": [[70, "fl4health.losses.deep_mmd_loss.ModelLatentF", false]], "modelmergeclient (class in fl4health.clients.model_merge_client)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient", false]], "modelmergeserver (class in fl4health.servers.model_merge_server)": [[144, "fl4health.servers.model_merge_server.ModelMergeServer", false]], "modelmergestrategy (class in fl4health.strategies.model_merge_strategy)": [[161, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy", false]], "modify_grad() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.modify_grad", false]], "modify_noise_multiplier() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.modify_noise_multiplier", false]], "module": [[8, "module-fl4health", false], [9, "module-fl4health.checkpointing", false], [10, "module-fl4health.checkpointing.checkpointer", false], [11, "module-fl4health.checkpointing.client_module", false], [12, "module-fl4health.checkpointing.opacus_checkpointer", false], [13, "module-fl4health.checkpointing.server_module", false], [14, "module-fl4health.checkpointing.state_checkpointer", false], [15, "module-fl4health.client_managers", false], [16, "module-fl4health.client_managers.base_sampling_manager", false], [17, "module-fl4health.client_managers.fixed_sampling_client_manager", false], [18, "module-fl4health.client_managers.fixed_without_replacement_manager", false], [19, "module-fl4health.client_managers.poisson_sampling_manager", false], [20, "module-fl4health.clients", false], [21, "module-fl4health.clients.adaptive_drift_constraint_client", false], [22, "module-fl4health.clients.apfl_client", false], [23, "module-fl4health.clients.basic_client", false], [24, "module-fl4health.clients.clipping_client", false], [25, "module-fl4health.clients.constrained_fenda_client", false], [26, "module-fl4health.clients.deep_mmd_clients", false], [27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false], [28, "module-fl4health.clients.ditto_client", false], [29, "module-fl4health.clients.ensemble_client", false], [30, "module-fl4health.clients.evaluate_client", false], [31, "module-fl4health.clients.fed_pca_client", false], [32, "module-fl4health.clients.fed_prox_client", false], [33, "module-fl4health.clients.fedbn_client", false], [34, "module-fl4health.clients.fedper_client", false], [35, "module-fl4health.clients.fedpm_client", false], [36, "module-fl4health.clients.fedrep_client", false], [37, "module-fl4health.clients.fenda_client", false], [38, "module-fl4health.clients.fenda_ditto_client", false], [39, "module-fl4health.clients.flash_client", false], [40, "module-fl4health.clients.flexible_client", false], [41, "module-fl4health.clients.instance_level_dp_client", false], [42, "module-fl4health.clients.mkmmd_clients", false], [43, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false], [44, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false], [45, "module-fl4health.clients.model_merge_client", false], [46, "module-fl4health.clients.moon_client", false], [47, "module-fl4health.clients.mr_mtl_client", false], [48, "module-fl4health.clients.nnunet_client", false], [49, "module-fl4health.clients.partial_weight_exchange_client", false], [50, "module-fl4health.clients.perfcl_client", false], [51, "module-fl4health.clients.scaffold_client", false], [53, "module-fl4health.datasets", false], [54, "module-fl4health.datasets.rxrx1", false], [55, "module-fl4health.datasets.rxrx1.load_data", false], [56, "module-fl4health.datasets.rxrx1.preprocess", false], [57, "module-fl4health.datasets.skin_cancer", false], [58, "module-fl4health.datasets.skin_cancer.load_data", false], [59, "module-fl4health.datasets.skin_cancer.preprocess_skin", false], [60, "module-fl4health.feature_alignment", false], [61, "module-fl4health.feature_alignment.constants", false], [62, "module-fl4health.feature_alignment.string_columns_transformer", false], [65, "module-fl4health.feature_alignment.tabular_feature", false], [66, "module-fl4health.feature_alignment.tabular_type", false], [67, "module-fl4health.losses", false], [68, "module-fl4health.losses.contrastive_loss", false], [69, "module-fl4health.losses.cosine_similarity_loss", false], [70, "module-fl4health.losses.deep_mmd_loss", false], [71, "module-fl4health.losses.fenda_loss_config", false], [72, "module-fl4health.losses.mkmmd_loss", false], [73, "module-fl4health.losses.perfcl_loss", false], [74, "module-fl4health.losses.weight_drift_loss", false], [75, "module-fl4health.metrics", false], [76, "module-fl4health.metrics.base_metrics", false], [77, "module-fl4health.metrics.compound_metrics", false], [78, "module-fl4health.metrics.efficient_metrics", false], [79, "module-fl4health.metrics.efficient_metrics_base", false], [80, "module-fl4health.metrics.metric_aggregation", false], [81, "module-fl4health.metrics.metric_managers", false], [82, "module-fl4health.metrics.metrics", false], [83, "module-fl4health.metrics.metrics_utils", false], [84, "module-fl4health.metrics.utils", false], [85, "module-fl4health.mixins", false], [86, "module-fl4health.mixins.adaptive_drift_constrained", false], [87, "module-fl4health.mixins.core_protocols", false], [88, "module-fl4health.mixins.personalized", false], [89, "module-fl4health.mixins.personalized.ditto", false], [90, "module-fl4health.mixins.personalized.utils", false], [91, "module-fl4health.model_bases", false], [92, "module-fl4health.model_bases.apfl_base", false], [93, "module-fl4health.model_bases.autoencoders_base", false], [94, "module-fl4health.model_bases.ensemble_base", false], [95, "module-fl4health.model_bases.feature_extractor_buffer", false], [96, "module-fl4health.model_bases.fedrep_base", false], [97, "module-fl4health.model_bases.fedsimclr_base", false], [98, "module-fl4health.model_bases.fenda_base", false], [99, "module-fl4health.model_bases.masked_layers", false], [100, "module-fl4health.model_bases.masked_layers.masked_conv", false], [101, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false], [102, "module-fl4health.model_bases.masked_layers.masked_linear", false], [103, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false], [104, "module-fl4health.model_bases.moon_base", false], [105, "module-fl4health.model_bases.parallel_split_models", false], [106, "module-fl4health.model_bases.partial_layer_exchange_model", false], [107, "module-fl4health.model_bases.pca", false], [108, "module-fl4health.model_bases.perfcl_base", false], [109, "module-fl4health.model_bases.sequential_split_models", false], [110, "module-fl4health.parameter_exchange", false], [111, "module-fl4health.parameter_exchange.fedpm_exchanger", false], [112, "module-fl4health.parameter_exchange.full_exchanger", false], [113, "module-fl4health.parameter_exchange.layer_exchanger", false], [114, "module-fl4health.parameter_exchange.packing_exchanger", false], [115, "module-fl4health.parameter_exchange.parameter_exchanger_base", false], [116, "module-fl4health.parameter_exchange.parameter_packer", false], [117, "module-fl4health.parameter_exchange.parameter_selection_criteria", false], [118, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false], [119, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false], [120, "module-fl4health.preprocessing", false], [121, "module-fl4health.preprocessing.autoencoders", false], [122, "module-fl4health.preprocessing.autoencoders.dim_reduction", false], [123, "module-fl4health.preprocessing.autoencoders.loss", false], [124, "module-fl4health.preprocessing.pca_preprocessor", false], [125, "module-fl4health.preprocessing.warmed_up_module", false], [126, "module-fl4health.privacy", false], [127, "module-fl4health.privacy.fl_accountants", false], [128, "module-fl4health.privacy.moments_accountant", false], [129, "module-fl4health.reporting", false], [130, "module-fl4health.reporting.base_reporter", false], [131, "module-fl4health.reporting.json_reporter", false], [132, "module-fl4health.reporting.reports_manager", false], [133, "module-fl4health.reporting.wandb_reporter", false], [134, "module-fl4health.servers", false], [135, "module-fl4health.servers.adaptive_constraint_servers", false], [136, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false], [137, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false], [138, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false], [139, "module-fl4health.servers.base_server", false], [140, "module-fl4health.servers.client_level_dp_fed_avg_server", false], [141, "module-fl4health.servers.evaluate_server", false], [142, "module-fl4health.servers.fedpm_server", false], [143, "module-fl4health.servers.instance_level_dp_server", false], [144, "module-fl4health.servers.model_merge_server", false], [145, "module-fl4health.servers.nnunet_server", false], [146, "module-fl4health.servers.polling", false], [147, "module-fl4health.servers.scaffold_server", false], [149, "module-fl4health.strategies", false], [150, "module-fl4health.strategies.aggregate_utils", false], [151, "module-fl4health.strategies.basic_fedavg", false], [152, "module-fl4health.strategies.client_dp_fedavgm", false], [153, "module-fl4health.strategies.fedavg_dynamic_layer", false], [154, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false], [155, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false], [156, "module-fl4health.strategies.feddg_ga", false], [157, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false], [158, "module-fl4health.strategies.fedpca", false], [159, "module-fl4health.strategies.fedpm", false], [160, "module-fl4health.strategies.flash", false], [161, "module-fl4health.strategies.model_merge_strategy", false], [162, "module-fl4health.strategies.noisy_aggregate", false], [163, "module-fl4health.strategies.scaffold", false], [164, "module-fl4health.strategies.strategy_with_poll", false], [165, "module-fl4health.utils", false], [166, "module-fl4health.utils.client", false], [167, "module-fl4health.utils.config", false], [168, "module-fl4health.utils.data_generation", false], [169, "module-fl4health.utils.dataset", false], [170, "module-fl4health.utils.dataset_converter", false], [171, "module-fl4health.utils.early_stopper", false], [172, "module-fl4health.utils.functions", false], [173, "module-fl4health.utils.load_data", false], [174, "module-fl4health.utils.logging", false], [175, "module-fl4health.utils.losses", false], [177, "module-fl4health.utils.metrics", false], [178, "module-fl4health.utils.msd_dataset_sources", false], [179, "module-fl4health.utils.nnunet_utils", false], [180, "module-fl4health.utils.parameter_extraction", false], [181, "module-fl4health.utils.partitioners", false], [182, "module-fl4health.utils.peft_parameter_extraction", false], [183, "module-fl4health.utils.privacy_utilities", false], [184, "module-fl4health.utils.random", false], [185, "module-fl4health.utils.sampler", false], [186, "module-fl4health.utils.snapshotter", false], [187, "module-fl4health.utils.typing", false]], "module2losswrapper (class in fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.Module2LossWrapper", false]], "momentsaccountant (class in fl4health.privacy.moments_accountant)": [[128, "fl4health.privacy.moments_accountant.MomentsAccountant", false]], "moonclient (class in fl4health.clients.moon_client)": [[46, "fl4health.clients.moon_client.MoonClient", false]], "mooncontrastiveloss (class in fl4health.losses.contrastive_loss)": [[68, "fl4health.losses.contrastive_loss.MoonContrastiveLoss", false]], "mooncontrastivelosscontainer (class in fl4health.losses.fenda_loss_config)": [[71, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer", false]], "moonmodel (class in fl4health.model_bases.moon_base)": [[104, "fl4health.model_bases.moon_base.MoonModel", false]], "move_data_to_device() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.move_data_to_device", false]], "mrmtlclient (class in fl4health.clients.mr_mtl_client)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient", false]], "mrmtlmkmmdclient (class in fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient", false]], "mrmtlserver (class in fl4health.servers.adaptive_constraint_servers.mrmtl_server)": [[138, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer", false]], "msddataset (class in fl4health.utils.msd_dataset_sources)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset", false]], "multiclassdice (class in fl4health.metrics.efficient_metrics)": [[78, "fl4health.metrics.efficient_metrics.MultiClassDice", false]], "multiclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[79, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric", false]], "narrow_dict_type() (in module fl4health.utils.config)": [[167, "fl4health.utils.config.narrow_dict_type", false]], "narrow_dict_type_and_set_attribute() (in module fl4health.utils.config)": [[167, "fl4health.utils.config.narrow_dict_type_and_set_attribute", false]], "nnunetclient (class in fl4health.clients.nnunet_client)": [[48, "fl4health.clients.nnunet_client.NnunetClient", false]], "nnunetconfig (class in fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.NnunetConfig", false]], "nnunetdataloaderwrapper (class in fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper", false]], "nnunetserver (class in fl4health.servers.nnunet_server)": [[145, "fl4health.servers.nnunet_server.NnunetServer", false]], "nnunetservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule", false]], "nnunetserverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer", false]], "normalize() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.normalize", false]], "normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.normalize_metrics", false]], "notset (loglevel attribute)": [[187, "fl4health.utils.typing.LogLevel.NOTSET", false]], "ntxentloss (class in fl4health.losses.contrastive_loss)": [[68, "fl4health.losses.contrastive_loss.NtXentLoss", false]], "numeric (tabulartype attribute)": [[66, "fl4health.feature_alignment.tabular_type.TabularType.NUMERIC", false]], "numpyclientminimalprotocol (class in fl4health.mixins.core_protocols)": [[87, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol", false]], "numpyclippingclient (class in fl4health.clients.clipping_client)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient", false]], "one_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset.one_layer_map_inputs_to_outputs", false]], "opacusbasicfedavg (class in fl4health.strategies.basic_fedavg)": [[151, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg", false]], "opacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer", false]], "opacusscaffold (class in fl4health.strategies.scaffold)": [[163, "fl4health.strategies.scaffold.OpacusScaffold", false]], "opacusservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule", false]], "optimize_betas() (mkmmdloss method)": [[72, "fl4health.losses.mkmmd_loss.MkMmdLoss.optimize_betas", false]], "optimizer_keys (dittopersonalizedmixin property)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.optimizer_keys", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.optimizer_keys", false]], "optimizer_keys (dittopersonalizedprotocol attribute)": [[88, "fl4health.mixins.personalized.DittoPersonalizedProtocol.optimizer_keys", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizer_keys", false]], "optimizers (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizers", false]], "optimizers (flexibleclientprotocol attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.optimizers", false]], "optimizersnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.OptimizerSnapshotter", false]], "ordinal (tabulartype attribute)": [[66, "fl4health.feature_alignment.tabular_type.TabularType.ORDINAL", false]], "pack_parameters() (fullparameterexchangerwithpacking method)": [[114, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.pack_parameters", false]], "pack_parameters() (parameterpacker method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.pack_parameters", false]], "pack_parameters() (parameterpackeradaptiveconstraint method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.pack_parameters", false]], "pack_parameters() (parameterpackerwithclippingbit method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.pack_parameters", false]], "pack_parameters() (parameterpackerwithcontrolvariates method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.pack_parameters", false]], "pack_parameters() (parameterpackerwithlayernames method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.pack_parameters", false]], "pack_parameters() (partialparameterexchanger method)": [[118, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.pack_parameters", false]], "pack_parameters() (sparsecooparameterpacker method)": [[116, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.pack_parameters", false]], "packingservercheckpointandandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule", false]], "pad_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.pad_image_path_func", false]], "pad_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.pad_label_map_func", false]], "pairwise_distance_squared() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.pairwise_distance_squared", false]], "parallel_output_join() (parallelsplitheadmodule method)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.parallel_output_join", false]], "parallelfeaturejoinmode (class in fl4health.model_bases.parallel_split_models)": [[105, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode", false]], "parallelsplitheadmodule (class in fl4health.model_bases.parallel_split_models)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule", false]], "parallelsplitmodel (class in fl4health.model_bases.parallel_split_models)": [[105, "fl4health.model_bases.parallel_split_models.ParallelSplitModel", false]], "parameter_exchanger (adaptivedriftconstrainedprotocol attribute)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.parameter_exchanger", false]], "parameter_exchanger (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.parameter_exchanger", false]], "parameterexchanger (class in fl4health.parameter_exchange.parameter_exchanger_base)": [[115, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger", false]], "parameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPacker", false]], "parameterpackeradaptiveconstraint (class in fl4health.parameter_exchange.parameter_packer)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint", false]], "parameterpackerwithclippingbit (class in fl4health.parameter_exchange.parameter_packer)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit", false]], "parameterpackerwithcontrolvariates (class in fl4health.parameter_exchange.parameter_packer)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates", false]], "parameterpackerwithlayernames (class in fl4health.parameter_exchange.parameter_packer)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames", false]], "partiallayerexchangemodel (class in fl4health.model_bases.partial_layer_exchange_model)": [[106, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel", false]], "partialparameterexchanger (class in fl4health.parameter_exchange.partial_parameter_exchanger)": [[118, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger", false]], "partialweightexchangeclient (class in fl4health.clients.partial_weight_exchange_client)": [[49, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient", false]], "partition_dataset() (dirichletlabelbasedallocation method)": [[181, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_dataset", false]], "partition_label_indices() (dirichletlabelbasedallocation method)": [[181, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_label_indices", false]], "pcamodule (class in fl4health.model_bases.pca)": [[107, "fl4health.model_bases.pca.PcaModule", false]], "pcapreprocessor (class in fl4health.preprocessing.pca_preprocessor)": [[124, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor", false]], "penalty_loss_function (adaptivedriftconstrainedprotocol attribute)": [[86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.penalty_loss_function", false]], "penalty_loss_function (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.penalty_loss_function", false]], "perfclclient (class in fl4health.clients.perfcl_client)": [[50, "fl4health.clients.perfcl_client.PerFclClient", false]], "perfclloss (class in fl4health.losses.perfcl_loss)": [[73, "fl4health.losses.perfcl_loss.PerFclLoss", false]], "perfcllosscontainer (class in fl4health.losses.fenda_loss_config)": [[71, "fl4health.losses.fenda_loss_config.PerFclLossContainer", false]], "perfclmodel (class in fl4health.model_bases.perfcl_base)": [[108, "fl4health.model_bases.perfcl_base.PerFclModel", false]], "personalizedmode (class in fl4health.mixins.personalized)": [[88, "fl4health.mixins.personalized.PersonalizedMode", false]], "poissonsampling (class in fl4health.privacy.moments_accountant)": [[128, "fl4health.privacy.moments_accountant.PoissonSampling", false]], "poissonsamplingclientmanager (class in fl4health.client_managers.poisson_sampling_manager)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager", false]], "poll_client() (in module fl4health.servers.polling)": [[146, "fl4health.servers.polling.poll_client", false]], "poll_clients() (in module fl4health.servers.polling)": [[146, "fl4health.servers.polling.poll_clients", false]], "poll_clients_for_sample_counts() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.poll_clients_for_sample_counts", false]], "polylrschedulerwrapper (class in fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper", false]], "post_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.POST_AGGREGATION", false]], "pre_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.PRE_AGGREGATION", false]], "predict() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.predict", false]], "predict() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.predict", false]], "predict() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.predict", false]], "predict() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.predict", false]], "predict() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.predict", false]], "predict() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.predict", false]], "predict() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.predict", false]], "predict() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.predict", false]], "predict() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.predict", false]], "predict() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.predict", false]], "predict_with_model() (flexibleclient method)": [[40, "fl4health.clients.flexible_client.FlexibleClient.predict_with_model", false]], "predict_with_model() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.predict_with_model", false]], "prepare_data_forward() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.prepare_data_forward", false]], "prepare_loss_arg() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.prepare_loss_arg", false]], "preprocess_derm7pt() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_derm7pt", false]], "preprocess_ham10000() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_ham10000", false]], "preprocess_isic_2019() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_isic_2019", false]], "preprocess_pad_ufes_20() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_pad_ufes_20", false]], "privacy_validate_and_fix_modules() (in module fl4health.utils.privacy_utilities)": [[183, "fl4health.utils.privacy_utilities.privacy_validate_and_fix_modules", false]], "process_and_check_validation_steps() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.process_and_check_validation_steps", false]], "process_client_data() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.process_client_data", false]], "process_config() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.process_config", false]], "process_config() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.process_config", false]], "process_data() (in module fl4health.datasets.rxrx1.preprocess)": [[56, "fl4health.datasets.rxrx1.preprocess.process_data", false]], "process_fed_rep_config() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.process_fed_rep_config", false]], "project_back() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.project_back", false]], "project_lower_dim() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.project_lower_dim", false]], "pseudo_sort_scoring_function() (in module fl4health.utils.functions)": [[172, "fl4health.utils.functions.pseudo_sort_scoring_function", false]], "pull_parameters() (dynamiclayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.pull_parameters", false]], "pull_parameters() (fedpmexchanger method)": [[111, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.pull_parameters", false]], "pull_parameters() (fixedlayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.pull_parameters", false]], "pull_parameters() (fullparameterexchanger method)": [[112, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.pull_parameters", false]], "pull_parameters() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.pull_parameters", false]], "pull_parameters() (parameterexchanger method)": [[115, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.pull_parameters", false]], "pull_parameters() (sparsecooparameterexchanger method)": [[119, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.pull_parameters", false]], "push_parameters() (dynamiclayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.push_parameters", false]], "push_parameters() (fixedlayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.push_parameters", false]], "push_parameters() (fullparameterexchanger method)": [[112, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.push_parameters", false]], "push_parameters() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.push_parameters", false]], "push_parameters() (parameterexchanger method)": [[115, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.push_parameters", false]], "push_parameters() (sparsecooparameterexchanger method)": [[119, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.push_parameters", false]], "reduce_dimension() (pcapreprocessor method)": [[124, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.reduce_dimension", false]], "reload_modules() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.reload_modules", false]], "remove_hooks() (featureextractorbuffer method)": [[95, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.remove_hooks", false]], "report() (basereporter method)": [[130, "fl4health.reporting.base_reporter.BaseReporter.report", false]], "report() (filereporter method)": [[131, "fl4health.reporting.json_reporter.FileReporter.report", false]], "report() (reportsmanager method)": [[132, "fl4health.reporting.reports_manager.ReportsManager.report", false]], "report() (wandbreporter method)": [[129, "fl4health.reporting.WandBReporter.report", false], [133, "fl4health.reporting.wandb_reporter.WandBReporter.report", false]], "report_centralized_eval() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.report_centralized_eval", false]], "reportsmanager (class in fl4health.reporting.reports_manager)": [[132, "fl4health.reporting.reports_manager.ReportsManager", false]], "representation (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.REPRESENTATION", false]], "reset() (metricmanager method)": [[81, "fl4health.metrics.metric_managers.MetricManager.reset", false]], "reset() (nnunetdataloaderwrapper method)": [[179, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.reset", false]], "reset_beta_priors() (fedpm method)": [[159, "fl4health.strategies.fedpm.FedPm.reset_beta_priors", false]], "reset_sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.reset_sample", false]], "restore_random_state() (in module fl4health.utils.random)": [[184, "fl4health.utils.random.restore_random_state", false]], "rocauc (class in fl4health.metrics)": [[75, "fl4health.metrics.RocAuc", false]], "rocauc (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.RocAuc", false]], "round (wandbsteptype attribute)": [[129, "fl4health.reporting.WandBStepType.ROUND", false], [133, "fl4health.reporting.wandb_reporter.WandBStepType.ROUND", false]], "safe_global_model() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.safe_global_model", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.safe_global_model", false]], "safe_global_model() (dittopersonalizedprotocol method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedProtocol.safe_global_model", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.safe_global_model", false]], "sample() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample", false]], "sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.sample", false]], "sample_all() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_all", false]], "sample_fraction() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_fraction", false]], "sample_fraction() (fixedsamplingbyfractionclientmanager method)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager.sample_fraction", false]], "sample_fraction() (poissonsamplingclientmanager method)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager.sample_fraction", false]], "sampling() (conditionalvae method)": [[93, "fl4health.model_bases.autoencoders_base.ConditionalVae.sampling", false]], "sampling() (variationalae method)": [[93, "fl4health.model_bases.autoencoders_base.VariationalAe.sampling", false]], "samplingstrategy (class in fl4health.privacy.moments_accountant)": [[128, "fl4health.privacy.moments_accountant.SamplingStrategy", false]], "save_attribute() (abstractsnapshotter method)": [[186, "fl4health.utils.snapshotter.AbstractSnapshotter.save_attribute", false]], "save_attribute() (bytessnapshotter method)": [[186, "fl4health.utils.snapshotter.BytesSnapshotter.save_attribute", false]], "save_attribute() (enumsnapshotter method)": [[186, "fl4health.utils.snapshotter.EnumSnapshotter.save_attribute", false]], "save_attribute() (historysnapshotter method)": [[186, "fl4health.utils.snapshotter.HistorySnapshotter.save_attribute", false]], "save_attribute() (lrschedulersnapshotter method)": [[186, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.save_attribute", false]], "save_attribute() (optimizersnapshotter method)": [[186, "fl4health.utils.snapshotter.OptimizerSnapshotter.save_attribute", false]], "save_attribute() (serializableobjectsnapshotter method)": [[186, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.save_attribute", false]], "save_attribute() (singletonsnapshotter method)": [[186, "fl4health.utils.snapshotter.SingletonSnapshotter.save_attribute", false]], "save_attribute() (stringsnapshotter method)": [[186, "fl4health.utils.snapshotter.StringSnapshotter.save_attribute", false]], "save_attribute() (torchmodulesnapshotter method)": [[186, "fl4health.utils.snapshotter.TorchModuleSnapshotter.save_attribute", false]], "save_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_checkpoint", false]], "save_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.save_client_state", false]], "save_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.save_model", false]], "save_random_state() (in module fl4health.utils.random)": [[184, "fl4health.utils.random.save_random_state", false]], "save_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.save_server_state", false]], "save_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.save_state", false]], "save_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.save_state", false]], "save_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_state", false]], "save_to_json() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[59, "fl4health.datasets.skin_cancer.preprocess_skin.save_to_json", false]], "save_to_pkl() (in module fl4health.datasets.rxrx1.preprocess)": [[56, "fl4health.datasets.rxrx1.preprocess.save_to_pkl", false]], "scaffold (class in fl4health.strategies.scaffold)": [[163, "fl4health.strategies.scaffold.Scaffold", false]], "scaffoldclient (class in fl4health.clients.scaffold_client)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient", false]], "scaffoldserver (class in fl4health.servers.scaffold_server)": [[147, "fl4health.servers.scaffold_server.ScaffoldServer", false]], "scaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule", false]], "select_by_indices() (in module fl4health.utils.dataset)": [[169, "fl4health.utils.dataset.select_by_indices", false]], "select_by_percentage() (layerselectionfunctionconstructor method)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_percentage", false]], "select_by_threshold() (layerselectionfunctionconstructor method)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_threshold", false]], "select_layers_by_percentage() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_percentage", false]], "select_layers_by_threshold() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_threshold", false]], "select_parameters() (dynamiclayerexchanger method)": [[113, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.select_parameters", false]], "select_parameters() (partialparameterexchanger method)": [[118, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.select_parameters", false]], "select_parameters() (sparsecooparameterexchanger method)": [[119, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.select_parameters", false]], "select_scores_and_sample_masks() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.select_scores_and_sample_masks", false]], "select_zeroeth_element() (in module fl4health.utils.functions)": [[172, "fl4health.utils.functions.select_zeroeth_element", false]], "sequential_forward() (moonmodel method)": [[104, "fl4health.model_bases.moon_base.MoonModel.sequential_forward", false]], "sequential_forward() (sequentiallysplitmodel method)": [[109, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.sequential_forward", false]], "sequentiallysplitexchangebasemodel (class in fl4health.model_bases.sequential_split_models)": [[109, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel", false]], "sequentiallysplitmodel (class in fl4health.model_bases.sequential_split_models)": [[109, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel", false]], "serializableobjectsnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.SerializableObjectSnapshotter", false]], "serverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer", false]], "set_all_random_seeds() (in module fl4health.utils.random)": [[184, "fl4health.utils.random.set_all_random_seeds", false]], "set_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.set_attribute", false]], "set_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.set_attribute", false]], "set_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_attribute", false]], "set_checkpoint_path() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_checkpoint_path", false]], "set_data_mean() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.set_data_mean", false]], "set_fit_request() (textcolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_fit_request", false]], "set_fit_request() (textmulticolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_fit_request", false]], "set_initial_global_tensors() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_initial_global_tensors", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedprotocol method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedProtocol.set_initial_global_tensors", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.set_initial_global_tensors", false]], "set_initial_global_tensors() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_initial_global_tensors", false]], "set_nnunet_env() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.set_nnunet_env", false]], "set_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.set_optimizer", false]], "set_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_optimizer", false]], "set_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_optimizer", false]], "set_optimizer() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_optimizer", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_optimizer", false]], "set_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.set_optimizer", false]], "set_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.set_optimizer", false]], "set_pack_losses_with_val_metrics() (in module fl4health.utils.client)": [[166, "fl4health.utils.client.set_pack_losses_with_val_metrics", false]], "set_parameters() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.set_parameters", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.set_parameters", false]], "set_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.set_parameters", false]], "set_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_parameters", false]], "set_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_parameters", false]], "set_parameters() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_parameters", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_parameters", false]], "set_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.set_parameters", false]], "set_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.set_parameters", false]], "set_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_parameters", false]], "set_parameters() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.set_parameters", false]], "set_parameters() (mrmtlclient method)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient.set_parameters", false]], "set_parameters() (numpyclientminimalprotocol method)": [[87, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.set_parameters", false]], "set_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.set_parameters", false]], "set_parameters() (partialweightexchangeclient method)": [[49, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.set_parameters", false]], "set_parameters() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.set_parameters", false]], "set_principal_components() (pcamodule method)": [[107, "fl4health.model_bases.pca.PcaModule.set_principal_components", false]], "set_transform_request() (textcolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_transform_request", false]], "set_transform_request() (textmulticolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_transform_request", false]], "setup_client() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.setup_client", false]], "setup_client() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.setup_client", false]], "setup_client() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.setup_client", false]], "setup_client() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.setup_client", false]], "setup_client() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.setup_client", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.setup_client", false]], "setup_client() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.setup_client", false]], "setup_client() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.setup_client", false]], "setup_client() (fedbnclient method)": [[33, "fl4health.clients.fedbn_client.FedBnClient.setup_client", false]], "setup_client() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.setup_client", false]], "setup_client() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.setup_client", false]], "setup_client() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.setup_client", false]], "setup_client() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.setup_client", false]], "setup_client() (flexibleclientprotocolpresetup method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.setup_client", false]], "setup_client() (instanceleveldpclient method)": [[41, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_client", false]], "setup_client() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.setup_client", false]], "setup_client() (mrmtlclient method)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient.setup_client", false]], "setup_client() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.setup_client", false]], "setup_client() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.setup_client", false]], "setup_client() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.setup_client", false]], "setup_client() (partialweightexchangeclient method)": [[49, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.setup_client", false]], "setup_client() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.setup_client", false]], "setup_context() (bernoullisample static method)": [[172, "fl4health.utils.functions.BernoulliSample.setup_context", false]], "setup_opacus_objects() (instanceleveldpclient method)": [[41, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_opacus_objects", false]], "setup_privacy_accountant() (clientleveldpfedavgserver method)": [[140, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.setup_privacy_accountant", false]], "setup_privacy_accountant() (instanceleveldpserver method)": [[143, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.setup_privacy_accountant", false]], "should_layer_be_excluded() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_layer_be_excluded", false]], "should_module_be_excluded() (layerexchangerwithexclusions method)": [[113, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_module_be_excluded", false]], "should_stop() (earlystopper method)": [[171, "fl4health.utils.early_stopper.EarlyStopper.should_stop", false]], "shutdown() (basereporter method)": [[130, "fl4health.reporting.base_reporter.BaseReporter.shutdown", false]], "shutdown() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.shutdown", false]], "shutdown() (filereporter method)": [[131, "fl4health.reporting.json_reporter.FileReporter.shutdown", false]], "shutdown() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.shutdown", false]], "shutdown() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.shutdown", false]], "shutdown() (nnunetdataloaderwrapper method)": [[179, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.shutdown", false]], "shutdown() (reportsmanager method)": [[132, "fl4health.reporting.reports_manager.ReportsManager.shutdown", false]], "shutdown() (wandbreporter method)": [[129, "fl4health.reporting.WandBReporter.shutdown", false], [133, "fl4health.reporting.wandb_reporter.WandBReporter.shutdown", false]], "shutdown_dataloader() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.shutdown_dataloader", false]], "sigmoid_inverse() (in module fl4health.utils.functions)": [[172, "fl4health.utils.functions.sigmoid_inverse", false]], "signal_for_type() (fairnessmetrictype class method)": [[156, "fl4health.strategies.feddg_ga.FairnessMetricType.signal_for_type", false]], "signalfortypeerror": [[156, "fl4health.strategies.feddg_ga.SignalForTypeError", false]], "simplemetric (class in fl4health.metrics)": [[75, "fl4health.metrics.SimpleMetric", false]], "simplemetric (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.SimpleMetric", false]], "singletonsnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.SingletonSnapshotter", false]], "smallest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_final_magnitude_scores", false]], "smallest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_increase_in_magnitude_scores", false]], "smallest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[117, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_magnitude_change_scores", false]], "sparsecooparameterexchanger (class in fl4health.parameter_exchange.sparse_coo_parameter_exchanger)": [[119, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger", false]], "sparsecooparameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[116, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker", false]], "sparsecooservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule", false]], "split_data_and_targets() (in module fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.split_data_and_targets", false]], "split_model_weights_and_clipping_bits() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.split_model_weights_and_clipping_bits", false]], "ssltensordataset (class in fl4health.utils.dataset)": [[169, "fl4health.utils.dataset.SslTensorDataset", false]], "standard_normal_kl_divergence_loss() (vaeloss method)": [[123, "fl4health.preprocessing.autoencoders.loss.VaeLoss.standard_normal_kl_divergence_loss", false]], "start_run() (wandbreporter method)": [[129, "fl4health.reporting.WandBReporter.start_run", false], [133, "fl4health.reporting.wandb_reporter.WandBReporter.start_run", false]], "statecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer", false]], "step (wandbsteptype attribute)": [[129, "fl4health.reporting.WandBStepType.STEP", false], [133, "fl4health.reporting.wandb_reporter.WandBStepType.STEP", false]], "strategywithpolling (class in fl4health.strategies.strategy_with_poll)": [[164, "fl4health.strategies.strategy_with_poll.StrategyWithPolling", false]], "streamtologger (class in fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.StreamToLogger", false]], "string (tabulartype attribute)": [[66, "fl4health.feature_alignment.tabular_type.TabularType.STRING", false]], "stringsnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.StringSnapshotter", false]], "subsample() (dirichletlabelbasedsampler method)": [[185, "fl4health.utils.sampler.DirichletLabelBasedSampler.subsample", false]], "subsample() (labelbasedsampler method)": [[185, "fl4health.utils.sampler.LabelBasedSampler.subsample", false]], "subsample() (minoritylabelbasedsampler method)": [[185, "fl4health.utils.sampler.MinorityLabelBasedSampler.subsample", false]], "sum (parallelfeaturejoinmode attribute)": [[105, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.SUM", false]], "syntheticdataset (class in fl4health.utils.dataset)": [[169, "fl4health.utils.dataset.SyntheticDataset", false]], "syntheticfedproxdataset (class in fl4health.utils.data_generation)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset", false]], "syntheticiidfedproxdataset (class in fl4health.utils.data_generation)": [[168, "fl4health.utils.data_generation.SyntheticIidFedProxDataset", false]], "syntheticnoniidfedproxdataset (class in fl4health.utils.data_generation)": [[168, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset", false]], "tabularfeature (class in fl4health.feature_alignment.tabular_feature)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature", false]], "tabulartype (class in fl4health.feature_alignment.tabular_type)": [[66, "fl4health.feature_alignment.tabular_type.TabularType", false]], "task01_braintumour (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK01_BRAINTUMOUR", false]], "task02_heart (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK02_HEART", false]], "task03_liver (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK03_LIVER", false]], "task04_hippocampus (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK04_HIPPOCAMPUS", false]], "task05_prostate (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK05_PROSTATE", false]], "task06_lung (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK06_LUNG", false]], "task07_pancreas (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK07_PANCREAS", false]], "task08_hepaticvessel (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK08_HEPATICVESSEL", false]], "task09_spleen (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK09_SPLEEN", false]], "task10_colon (msddataset attribute)": [[178, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK10_COLON", false]], "tensordataset (class in fl4health.utils.dataset)": [[169, "fl4health.utils.dataset.TensorDataset", false]], "test (loggingmode attribute)": [[174, "fl4health.utils.logging.LoggingMode.TEST", false]], "test_loader (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.test_loader", false]], "test_loader (flexibleclientprotocol attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.test_loader", false]], "test_prefix (metricprefix attribute)": [[76, "fl4health.metrics.base_metrics.MetricPrefix.TEST_PREFIX", false]], "textcolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer", false]], "textmulticolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer", false]], "threshold_tensor() (in module fl4health.metrics.metrics_utils)": [[83, "fl4health.metrics.metrics_utils.threshold_tensor", false]], "to_json() (tabularfeature method)": [[65, "fl4health.feature_alignment.tabular_feature.TabularFeature.to_json", false]], "tonumpy (class in fl4health.utils.load_data)": [[173, "fl4health.utils.load_data.ToNumpy", false]], "torchmetric (class in fl4health.metrics)": [[75, "fl4health.metrics.TorchMetric", false]], "torchmetric (class in fl4health.metrics.metrics)": [[82, "fl4health.metrics.metrics.TorchMetric", false]], "torchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer", false]], "torchmodulesnapshotter (class in fl4health.utils.snapshotter)": [[186, "fl4health.utils.snapshotter.TorchModuleSnapshotter", false]], "train (loggingmode attribute)": [[174, "fl4health.utils.logging.LoggingMode.TRAIN", false]], "train_by_epochs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_epochs", false]], "train_by_epochs() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.train_by_epochs", false]], "train_by_steps() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_steps", false]], "train_fedrep_by_epochs() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_epochs", false]], "train_fedrep_by_steps() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_steps", false]], "train_kernel() (deepmmdloss method)": [[70, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.train_kernel", false]], "train_loader (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.train_loader", false]], "train_loader (flexibleclientprotocol attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.train_loader", false]], "train_step() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.train_step", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.train_step", false]], "train_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.train_step", false]], "train_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_step", false]], "train_step() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.train_step", false]], "train_step() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.train_step", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.train_step", false]], "train_step() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.train_step", false]], "train_step() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_step", false]], "train_step() (flexibleclient method)": [[40, "fl4health.clients.flexible_client.FlexibleClient.train_step", false]], "train_step() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.train_step", false]], "traininglosses (class in fl4health.utils.losses)": [[175, "fl4health.utils.losses.TrainingLosses", false]], "transform() (textcolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.transform", false]], "transform() (textmulticolumntransformer method)": [[62, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.transform", false]], "transform_gradients() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_gradients", false]], "transform_gradients() (flexibleclient method)": [[40, "fl4health.clients.flexible_client.FlexibleClient.transform_gradients", false]], "transform_gradients() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_gradients", false]], "transform_gradients() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.transform_gradients", false]], "transform_gradients() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.transform_gradients", false]], "transform_target() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_target", false]], "transform_target() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_target", false]], "transformsmetric (class in fl4health.metrics.compound_metrics)": [[77, "fl4health.metrics.compound_metrics.TransformsMetric", false]], "true_negative (metricoutcome attribute)": [[79, "fl4health.metrics.efficient_metrics_base.MetricOutcome.TRUE_NEGATIVE", false]], "true_positive (metricoutcome attribute)": [[79, "fl4health.metrics.efficient_metrics_base.MetricOutcome.TRUE_POSITIVE", false]], "two_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[168, "fl4health.utils.data_generation.SyntheticFedProxDataset.two_layer_map_inputs_to_outputs", false]], "unfreeze_base_module() (fedrepmodel method)": [[96, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_base_module", false]], "unfreeze_head_module() (fedrepmodel method)": [[96, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_head_module", false]], "uniform_evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.uniform_evaluate_metrics_aggregation_fn", false]], "uniform_metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.uniform_metric_aggregation", false]], "uniform_normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[80, "fl4health.metrics.metric_aggregation.uniform_normalize_metrics", false]], "unpack_input_condition() (autoencoderdatasetconverter static method)": [[170, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.unpack_input_condition", false]], "unpack_model_output() (vaeloss method)": [[123, "fl4health.preprocessing.autoencoders.loss.VaeLoss.unpack_model_output", false]], "unpack_parameters() (fullparameterexchangerwithpacking method)": [[114, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.unpack_parameters", false]], "unpack_parameters() (parameterpacker method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.unpack_parameters", false]], "unpack_parameters() (parameterpackeradaptiveconstraint method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithclippingbit method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithcontrolvariates method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithlayernames method)": [[116, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.unpack_parameters", false]], "unpack_parameters() (partialparameterexchanger method)": [[118, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.unpack_parameters", false]], "unpack_parameters() (sparsecooparameterpacker method)": [[116, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.unpack_parameters", false]], "unset_all_random_seeds() (in module fl4health.utils.random)": [[184, "fl4health.utils.random.unset_all_random_seeds", false]], "unweighted_aggregate() (fedavgdynamiclayer method)": [[153, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.unweighted_aggregate", false]], "unweighted_aggregate() (fedavgsparsecootensor method)": [[154, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.unweighted_aggregate", false]], "update() (classificationmetric method)": [[79, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.update", false]], "update() (emametric method)": [[77, "fl4health.metrics.compound_metrics.EmaMetric.update", false]], "update() (lossmeter method)": [[175, "fl4health.utils.losses.LossMeter.update", false]], "update() (metric method)": [[76, "fl4health.metrics.base_metrics.Metric.update", false]], "update() (metricmanager method)": [[81, "fl4health.metrics.metric_managers.MetricManager.update", false]], "update() (simplemetric method)": [[75, "fl4health.metrics.SimpleMetric.update", false], [82, "fl4health.metrics.metrics.SimpleMetric.update", false]], "update() (torchmetric method)": [[75, "fl4health.metrics.TorchMetric.update", false], [82, "fl4health.metrics.metrics.TorchMetric.update", false]], "update() (transformsmetric method)": [[77, "fl4health.metrics.compound_metrics.TransformsMetric.update", false]], "update_after_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.update_after_step", false]], "update_after_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_step", false]], "update_after_step() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_after_step", false]], "update_after_step() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_after_step", false]], "update_after_step() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_after_step", false]], "update_after_train() (adaptivedriftconstrainedmixin method)": [[85, "fl4health.mixins.AdaptiveDriftConstrainedMixin.update_after_train", false], [86, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.update_after_train", false]], "update_after_train() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.update_after_train", false]], "update_after_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_train", false]], "update_after_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_after_train", false]], "update_after_train() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.update_after_train", false]], "update_after_train() (numpyclientminimalprotocol method)": [[87, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.update_after_train", false]], "update_after_train() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.update_after_train", false]], "update_after_train() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.update_after_train", false]], "update_alpha() (apflmodule method)": [[92, "fl4health.model_bases.apfl_base.ApflModule.update_alpha", false]], "update_before_epoch() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_epoch", false]], "update_before_fit() (flserver method)": [[139, "fl4health.servers.base_server.FlServer.update_before_fit", false]], "update_before_fit() (nnunetserver method)": [[145, "fl4health.servers.nnunet_server.NnunetServer.update_before_fit", false]], "update_before_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_step", false]], "update_before_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_train", false]], "update_before_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_before_train", false]], "update_before_train() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.update_before_train", false]], "update_before_train() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_before_train", false]], "update_before_train() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_before_train", false]], "update_before_train() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.update_before_train", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.update_before_train", false]], "update_before_train() (fedproxclient method)": [[32, "fl4health.clients.fed_prox_client.FedProxClient.update_before_train", false]], "update_before_train() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.update_before_train", false]], "update_before_train() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.update_before_train", false]], "update_before_train() (moonclient method)": [[46, "fl4health.clients.moon_client.MoonClient.update_before_train", false]], "update_before_train() (mrmtlclient method)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient.update_before_train", false]], "update_before_train() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_before_train", false]], "update_before_train() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.update_before_train", false]], "update_before_train() (perfclclient method)": [[50, "fl4health.clients.perfcl_client.PerFclClient.update_before_train", false]], "update_buffers() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_buffers", false]], "update_buffers() (dittomkmmdclient method)": [[43, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_buffers", false]], "update_buffers() (mrmtlmkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_buffers", false]], "update_clipping_bound() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_clipping_bound", false]], "update_control_variates() (scaffoldclient method)": [[51, "fl4health.clients.scaffold_client.ScaffoldClient.update_control_variates", false]], "update_current_weights() (clientleveldpfedavgm method)": [[152, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_current_weights", false]], "update_lr_schedulers() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_lr_schedulers", false]], "update_metric_manager() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_metric_manager", false]], "update_metric_manager() (nnunetclient method)": [[48, "fl4health.clients.nnunet_client.NnunetClient.update_metric_manager", false]], "update_target_transform() (basedataset method)": [[169, "fl4health.utils.dataset.BaseDataset.update_target_transform", false]], "update_transform() (basedataset method)": [[169, "fl4health.utils.dataset.BaseDataset.update_transform", false]], "update_weights_by_ga() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.update_weights_by_ga", false]], "use_default_signal_handlers() (in module fl4health.utils.nnunet_utils)": [[179, "fl4health.utils.nnunet_utils.use_default_signal_handlers", false]], "vaeloss (class in fl4health.preprocessing.autoencoders.loss)": [[123, "fl4health.preprocessing.autoencoders.loss.VaeLoss", false]], "vaeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[122, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor", false]], "val_loader (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.val_loader", false]], "val_loader (flexibleclientprotocol attribute)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.val_loader", false]], "val_prefix (metricprefix attribute)": [[76, "fl4health.metrics.base_metrics.MetricPrefix.VAL_PREFIX", false]], "val_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.val_step", false]], "val_step() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.val_step", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.val_step", false]], "val_step() (flexibleclient method)": [[40, "fl4health.clients.flexible_client.FlexibleClient.val_step", false]], "validate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.validate", false]], "validate() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.validate", false]], "validate() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.validate", false]], "validate() (dittopersonalizedmixin method)": [[88, "fl4health.mixins.personalized.DittoPersonalizedMixin.validate", false], [89, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.validate", false]], "validate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate", false]], "validate() (flexibleclientprotocol method)": [[87, "fl4health.mixins.core_protocols.FlexibleClientProtocol.validate", false]], "validate() (modelmergeclient method)": [[45, "fl4health.clients.model_merge_client.ModelMergeClient.validate", false]], "validate() (mrmtlclient method)": [[47, "fl4health.clients.mr_mtl_client.MrMtlClient.validate", false]], "validate_on_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate_on_model", false]], "validation (loggingmode attribute)": [[174, "fl4health.utils.logging.LoggingMode.VALIDATION", false]], "variationalae (class in fl4health.model_bases.autoencoders_base)": [[93, "fl4health.model_bases.autoencoders_base.VariationalAe", false]], "vote (ensembleaggregationmode attribute)": [[94, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.VOTE", false]], "wait_and_filter() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.wait_and_filter", false]], "wandbreporter (class in fl4health.reporting)": [[129, "fl4health.reporting.WandBReporter", false]], "wandbreporter (class in fl4health.reporting.wandb_reporter)": [[133, "fl4health.reporting.wandb_reporter.WandBReporter", false]], "wandbsteptype (class in fl4health.reporting)": [[129, "fl4health.reporting.WandBStepType", false]], "wandbsteptype (class in fl4health.reporting.wandb_reporter)": [[133, "fl4health.reporting.wandb_reporter.WandBStepType", false]], "warmedupmodule (class in fl4health.preprocessing.warmed_up_module)": [[125, "fl4health.preprocessing.warmed_up_module.WarmedUpModule", false]], "warning (loglevel attribute)": [[187, "fl4health.utils.typing.LogLevel.WARNING", false]], "weight_and_aggregate_results() (feddgga method)": [[156, "fl4health.strategies.feddg_ga.FedDgGa.weight_and_aggregate_results", false]], "weightdriftloss (class in fl4health.losses.weight_drift_loss)": [[74, "fl4health.losses.weight_drift_loss.WeightDriftLoss", false]], "weighted_aggregate() (fedavgdynamiclayer method)": [[153, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.weighted_aggregate", false]], "weighted_aggregate() (fedavgsparsecootensor method)": [[154, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.weighted_aggregate", false]], "write() (streamtologger method)": [[179, "fl4health.utils.nnunet_utils.StreamToLogger.write", false]]}, "objects": {"": [[8, 0, 0, "-", "fl4health"]], "fl4health": [[9, 0, 0, "-", "checkpointing"], [15, 0, 0, "-", "client_managers"], [20, 0, 0, "-", "clients"], [53, 0, 0, "-", "datasets"], [60, 0, 0, "-", "feature_alignment"], [67, 0, 0, "-", "losses"], [75, 0, 0, "-", "metrics"], [85, 0, 0, "-", "mixins"], [91, 0, 0, "-", "model_bases"], [110, 0, 0, "-", "parameter_exchange"], [120, 0, 0, "-", "preprocessing"], [126, 0, 0, "-", "privacy"], [129, 0, 0, "-", "reporting"], [134, 0, 0, "-", "servers"], [149, 0, 0, "-", "strategies"], [165, 0, 0, "-", "utils"]], "fl4health.checkpointing": [[10, 0, 0, "-", "checkpointer"], [11, 0, 0, "-", "client_module"], [12, 0, 0, "-", "opacus_checkpointer"], [13, 0, 0, "-", "server_module"], [14, 0, 0, "-", "state_checkpointer"]], "fl4health.checkpointing.checkpointer": [[10, 1, 1, "", "BestLossTorchModuleCheckpointer"], [10, 1, 1, "", "BestMetricTorchModuleCheckpointer"], [10, 1, 1, "", "FunctionTorchModuleCheckpointer"], [10, 1, 1, "", "LatestTorchModuleCheckpointer"], [10, 1, 1, "", "TorchModuleCheckpointer"]], "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"]], "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "load_checkpoint"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.client_module": [[11, 1, 1, "", "CheckpointMode"], [11, 1, 1, "", "ClientCheckpointAndStateModule"]], "fl4health.checkpointing.client_module.CheckpointMode": [[11, 3, 1, "", "POST_AGGREGATION"], [11, 3, 1, "", "PRE_AGGREGATION"]], "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"], [11, 2, 1, "", "maybe_load_state"], [11, 2, 1, "", "save_state"]], "fl4health.checkpointing.opacus_checkpointer": [[12, 1, 1, "", "BestLossOpacusCheckpointer"], [12, 1, 1, "", "LatestOpacusCheckpointer"], [12, 1, 1, "", "OpacusCheckpointer"]], "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer": [[12, 2, 1, "", "load_best_checkpoint_into_model"], [12, 2, 1, "", "load_checkpoint"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.server_module": [[13, 1, 1, "", "AdaptiveConstraintServerCheckpointAndStateModule"], [13, 1, 1, "", "BaseServerCheckpointAndStateModule"], [13, 1, 1, "", "ClippingBitServerCheckpointAndStateModule"], [13, 1, 1, "", "DpScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "LayerNamesServerCheckpointAndStateModule"], [13, 1, 1, "", "NnUnetServerCheckpointAndStateModule"], [13, 1, 1, "", "OpacusServerCheckpointAndStateModule"], [13, 1, 1, "", "PackingServerCheckpointAndAndStateModule"], [13, 1, 1, "", "ScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "SparseCooServerCheckpointAndStateModule"]], "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "maybe_checkpoint"], [13, 2, 1, "", "maybe_load_state"], [13, 2, 1, "", "save_state"]], "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer": [[14, 1, 1, "", "ClientStateCheckpointer"], [14, 1, 1, "", "NnUnetServerStateCheckpointer"], [14, 1, 1, "", "ServerStateCheckpointer"], [14, 1, 1, "", "StateCheckpointer"]], "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_client_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_client_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer": [[14, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_server_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_server_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.StateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "add_to_snapshot_attr"], [14, 2, 1, "", "checkpoint_exists"], [14, 2, 1, "", "delete_from_snapshot_attr"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "load_checkpoint"], [14, 2, 1, "", "load_state"], [14, 2, 1, "", "save_checkpoint"], [14, 2, 1, "", "save_state"], [14, 2, 1, "", "set_attribute"], [14, 2, 1, "", "set_checkpoint_path"]], "fl4health.client_managers": [[16, 0, 0, "-", "base_sampling_manager"], [17, 0, 0, "-", "fixed_sampling_client_manager"], [18, 0, 0, "-", "fixed_without_replacement_manager"], [19, 0, 0, "-", "poisson_sampling_manager"]], "fl4health.client_managers.base_sampling_manager": [[16, 1, 1, "", "BaseFractionSamplingManager"]], "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager": [[16, 2, 1, "", "sample"], [16, 2, 1, "", "sample_all"], [16, 2, 1, "", "sample_fraction"], [16, 2, 1, "", "wait_and_filter"]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, 1, 1, "", "FixedSamplingClientManager"]], "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "reset_sample"], [17, 2, 1, "", "sample"]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, 1, 1, "", "FixedSamplingByFractionClientManager"]], "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager": [[18, 2, 1, "", "sample_fraction"]], "fl4health.client_managers.poisson_sampling_manager": [[19, 1, 1, "", "PoissonSamplingClientManager"]], "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager": [[19, 2, 1, "", "sample_fraction"]], "fl4health.clients": [[21, 0, 0, "-", "adaptive_drift_constraint_client"], [22, 0, 0, "-", "apfl_client"], [23, 0, 0, "-", "basic_client"], [24, 0, 0, "-", "clipping_client"], [25, 0, 0, "-", "constrained_fenda_client"], [26, 0, 0, "-", "deep_mmd_clients"], [28, 0, 0, "-", "ditto_client"], [29, 0, 0, "-", "ensemble_client"], [30, 0, 0, "-", "evaluate_client"], [31, 0, 0, "-", "fed_pca_client"], [32, 0, 0, "-", "fed_prox_client"], [33, 0, 0, "-", "fedbn_client"], [34, 0, 0, "-", "fedper_client"], [35, 0, 0, "-", "fedpm_client"], [36, 0, 0, "-", "fedrep_client"], [37, 0, 0, "-", "fenda_client"], [38, 0, 0, "-", "fenda_ditto_client"], [39, 0, 0, "-", "flash_client"], [40, 0, 0, "-", "flexible_client"], [41, 0, 0, "-", "instance_level_dp_client"], [42, 0, 0, "-", "mkmmd_clients"], [45, 0, 0, "-", "model_merge_client"], [46, 0, 0, "-", "moon_client"], [47, 0, 0, "-", "mr_mtl_client"], [48, 0, 0, "-", "nnunet_client"], [49, 0, 0, "-", "partial_weight_exchange_client"], [50, 0, 0, "-", "perfcl_client"], [51, 0, 0, "-", "scaffold_client"]], "fl4health.clients.adaptive_drift_constraint_client": [[21, 1, 1, "", "AdaptiveDriftConstraintClient"]], "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "compute_penalty_loss"], [21, 2, 1, "", "compute_training_loss"], [21, 2, 1, "", "get_parameter_exchanger"], [21, 2, 1, "", "get_parameters"], [21, 2, 1, "", "set_parameters"], [21, 2, 1, "", "update_after_train"]], "fl4health.clients.apfl_client": [[22, 1, 1, "", "ApflClient"]], "fl4health.clients.apfl_client.ApflClient": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "compute_loss_and_additional_losses"], [22, 2, 1, "", "get_optimizer"], [22, 2, 1, "", "get_parameter_exchanger"], [22, 2, 1, "", "is_start_of_local_training"], [22, 2, 1, "", "set_optimizer"], [22, 2, 1, "", "train_step"], [22, 2, 1, "", "update_after_step"]], "fl4health.clients.basic_client": [[23, 1, 1, "", "BasicClient"]], "fl4health.clients.basic_client.BasicClient": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "compute_evaluation_loss"], [23, 2, 1, "", "compute_loss_and_additional_losses"], [23, 2, 1, "", "compute_training_loss"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "get_client_specific_logs"], [23, 2, 1, "", "get_client_specific_reports"], [23, 2, 1, "", "get_criterion"], [23, 2, 1, "", "get_data_loaders"], [23, 2, 1, "", "get_lr_scheduler"], [23, 2, 1, "", "get_model"], [23, 2, 1, "", "get_optimizer"], [23, 2, 1, "", "get_parameter_exchanger"], [23, 2, 1, "", "get_parameters"], [23, 2, 1, "", "get_properties"], [23, 2, 1, "", "get_test_data_loader"], [23, 2, 1, "", "initialize_all_model_weights"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "process_config"], [23, 2, 1, "", "set_optimizer"], [23, 2, 1, "", "set_parameters"], [23, 2, 1, "", "setup_client"], [23, 2, 1, "", "shutdown"], [23, 2, 1, "", "train_by_epochs"], [23, 2, 1, "", "train_by_steps"], [23, 2, 1, "", "train_step"], [23, 2, 1, "", "transform_gradients"], [23, 2, 1, "", "transform_target"], [23, 2, 1, "", "update_after_step"], [23, 2, 1, "", "update_after_train"], [23, 2, 1, "", "update_before_epoch"], [23, 2, 1, "", "update_before_step"], [23, 2, 1, "", "update_before_train"], [23, 2, 1, "", "update_lr_schedulers"], [23, 2, 1, "", "update_metric_manager"], [23, 2, 1, "", "val_step"], [23, 2, 1, "", "validate"]], "fl4health.clients.clipping_client": [[24, 1, 1, "", "NumpyClippingClient"]], "fl4health.clients.clipping_client.NumpyClippingClient": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "calculate_parameters_norm"], [24, 2, 1, "", "clip_parameters"], [24, 2, 1, "", "compute_weight_update_and_clip"], [24, 2, 1, "", "get_parameter_exchanger"], [24, 2, 1, "", "get_parameters"], [24, 2, 1, "", "set_parameters"], [24, 2, 1, "", "setup_client"]], "fl4health.clients.constrained_fenda_client": [[25, 1, 1, "", "ConstrainedFendaClient"]], "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "compute_evaluation_loss"], [25, 2, 1, "", "compute_loss_and_additional_losses"], [25, 2, 1, "", "get_parameter_exchanger"], [25, 2, 1, "", "predict"], [25, 2, 1, "", "update_after_train"], [25, 2, 1, "", "update_before_train"]], "fl4health.clients.deep_mmd_clients": [[27, 0, 0, "-", "ditto_deep_mmd_client"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, 1, 1, "", "DittoDeepMmdClient"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "compute_evaluation_loss"], [27, 2, 1, "", "compute_loss_and_additional_losses"], [27, 2, 1, "", "compute_training_loss"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "setup_client"], [27, 2, 1, "", "update_after_step"], [27, 2, 1, "", "update_before_train"], [27, 2, 1, "", "update_buffers"], [27, 2, 1, "", "validate"]], "fl4health.clients.ditto_client": [[28, 1, 1, "", "DittoClient"]], "fl4health.clients.ditto_client.DittoClient": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "compute_evaluation_loss"], [28, 2, 1, "", "compute_loss_and_additional_losses"], [28, 2, 1, "", "compute_training_loss"], [28, 2, 1, "", "get_global_model"], [28, 2, 1, "", "get_optimizer"], [28, 2, 1, "", "get_parameters"], [28, 2, 1, "", "initialize_all_model_weights"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "set_initial_global_tensors"], [28, 2, 1, "", "set_optimizer"], [28, 2, 1, "", "set_parameters"], [28, 2, 1, "", "setup_client"], [28, 2, 1, "", "train_step"], [28, 2, 1, "", "update_before_train"], [28, 2, 1, "", "validate"]], "fl4health.clients.ensemble_client": [[29, 1, 1, "", "EnsembleClient"]], "fl4health.clients.ensemble_client.EnsembleClient": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "compute_evaluation_loss"], [29, 2, 1, "", "compute_training_loss"], [29, 2, 1, "", "get_optimizer"], [29, 2, 1, "", "set_optimizer"], [29, 2, 1, "", "setup_client"], [29, 2, 1, "", "train_step"]], "fl4health.clients.evaluate_client": [[30, 1, 1, "", "EvaluateClient"]], "fl4health.clients.evaluate_client.EvaluateClient": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "evaluate"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "get_data_loader"], [30, 2, 1, "", "get_local_model"], [30, 2, 1, "", "get_parameter_exchanger"], [30, 2, 1, "", "get_parameters"], [30, 2, 1, "", "initialize_global_model"], [30, 2, 1, "", "merge_metrics"], [30, 2, 1, "", "set_parameters"], [30, 2, 1, "", "setup_client"], [30, 2, 1, "", "validate"], [30, 2, 1, "", "validate_on_model"]], "fl4health.clients.fed_pca_client": [[31, 1, 1, "", "FedPCAClient"]], "fl4health.clients.fed_pca_client.FedPCAClient": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "evaluate"], [31, 2, 1, "", "fit"], [31, 2, 1, "", "generate_hash"], [31, 2, 1, "", "get_data_loaders"], [31, 2, 1, "", "get_data_tensor"], [31, 2, 1, "", "get_model"], [31, 2, 1, "", "get_parameters"], [31, 2, 1, "", "save_model"], [31, 2, 1, "", "set_parameters"], [31, 2, 1, "", "setup_client"]], "fl4health.clients.fed_prox_client": [[32, 1, 1, "", "FedProxClient"]], "fl4health.clients.fed_prox_client.FedProxClient": [[32, 2, 1, "", "update_before_train"]], "fl4health.clients.fedbn_client": [[33, 1, 1, "", "FedBnClient"]], "fl4health.clients.fedbn_client.FedBnClient": [[33, 2, 1, "", "setup_client"]], "fl4health.clients.fedper_client": [[34, 1, 1, "", "FedPerClient"]], "fl4health.clients.fedper_client.FedPerClient": [[34, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fedpm_client": [[35, 1, 1, "", "FedPmClient"]], "fl4health.clients.fedpm_client.FedPmClient": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get_parameter_exchanger"], [35, 2, 1, "", "setup_client"]], "fl4health.clients.fedrep_client": [[36, 1, 1, "", "FedRepClient"], [36, 1, 1, "", "FedRepTrainMode"]], "fl4health.clients.fedrep_client.FedRepClient": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "fit"], [36, 2, 1, "", "get_optimizer"], [36, 2, 1, "", "get_parameter_exchanger"], [36, 2, 1, "", "process_fed_rep_config"], [36, 2, 1, "", "set_optimizer"], [36, 2, 1, "", "train_fedrep_by_epochs"], [36, 2, 1, "", "train_fedrep_by_steps"], [36, 2, 1, "", "train_step"]], "fl4health.clients.fedrep_client.FedRepTrainMode": [[36, 3, 1, "", "HEAD"], [36, 3, 1, "", "REPRESENTATION"]], "fl4health.clients.fenda_client": [[37, 1, 1, "", "FendaClient"]], "fl4health.clients.fenda_client.FendaClient": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fenda_ditto_client": [[38, 1, 1, "", "FendaDittoClient"]], "fl4health.clients.fenda_ditto_client.FendaDittoClient": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "compute_training_loss"], [38, 2, 1, "", "get_global_model"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_parameters"], [38, 2, 1, "", "predict"], [38, 2, 1, "", "set_initial_global_tensors"], [38, 2, 1, "", "set_parameters"], [38, 2, 1, "", "setup_client"], [38, 2, 1, "", "update_before_train"]], "fl4health.clients.flash_client": [[39, 1, 1, "", "FlashClient"]], "fl4health.clients.flash_client.FlashClient": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "process_config"], [39, 2, 1, "", "setup_client"], [39, 2, 1, "", "train_by_epochs"]], "fl4health.clients.flexible_client": [[40, 1, 1, "", "FlexibleClient"]], "fl4health.clients.flexible_client.FlexibleClient": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "predict_with_model"], [40, 2, 1, "", "train_step"], [40, 2, 1, "", "transform_gradients"], [40, 2, 1, "", "val_step"]], "fl4health.clients.instance_level_dp_client": [[41, 1, 1, "", "InstanceLevelDpClient"]], "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "setup_client"], [41, 2, 1, "", "setup_opacus_objects"]], "fl4health.clients.mkmmd_clients": [[43, 0, 0, "-", "ditto_mkmmd_client"], [44, 0, 0, "-", "mr_mtl_mkmmd_client"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[43, 1, 1, "", "DittoMkMmdClient"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "compute_loss_and_additional_losses"], [43, 2, 1, "", "compute_training_loss"], [43, 2, 1, "", "predict"], [43, 2, 1, "", "setup_client"], [43, 2, 1, "", "update_after_step"], [43, 2, 1, "", "update_before_train"], [43, 2, 1, "", "update_buffers"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[44, 1, 1, "", "MrMtlMkMmdClient"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "compute_loss_and_additional_losses"], [44, 2, 1, "", "compute_training_loss"], [44, 2, 1, "", "predict"], [44, 2, 1, "", "setup_client"], [44, 2, 1, "", "update_after_step"], [44, 2, 1, "", "update_before_train"], [44, 2, 1, "", "update_buffers"]], "fl4health.clients.model_merge_client": [[45, 1, 1, "", "ModelMergeClient"]], "fl4health.clients.model_merge_client.ModelMergeClient": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "evaluate"], [45, 2, 1, "", "fit"], [45, 2, 1, "", "get_model"], [45, 2, 1, "", "get_parameter_exchanger"], [45, 2, 1, "", "get_parameters"], [45, 2, 1, "", "get_test_data_loader"], [45, 2, 1, "", "set_parameters"], [45, 2, 1, "", "setup_client"], [45, 2, 1, "", "validate"]], "fl4health.clients.moon_client": [[46, 1, 1, "", "MoonClient"]], "fl4health.clients.moon_client.MoonClient": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "compute_evaluation_loss"], [46, 2, 1, "", "compute_loss_and_additional_losses"], [46, 2, 1, "", "compute_training_loss"], [46, 2, 1, "", "predict"], [46, 2, 1, "", "update_after_train"], [46, 2, 1, "", "update_before_train"]], "fl4health.clients.mr_mtl_client": [[47, 1, 1, "", "MrMtlClient"]], "fl4health.clients.mr_mtl_client.MrMtlClient": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "compute_training_loss"], [47, 2, 1, "", "set_parameters"], [47, 2, 1, "", "setup_client"], [47, 2, 1, "", "update_before_train"], [47, 2, 1, "", "validate"]], "fl4health.clients.nnunet_client": [[48, 1, 1, "", "NnunetClient"]], "fl4health.clients.nnunet_client.NnunetClient": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "compute_loss_and_additional_losses"], [48, 2, 1, "", "create_plans"], [48, 2, 1, "", "empty_cache"], [48, 2, 1, "", "get_client_specific_logs"], [48, 2, 1, "", "get_client_specific_reports"], [48, 2, 1, "", "get_criterion"], [48, 2, 1, "", "get_data_loaders"], [48, 2, 1, "", "get_lr_scheduler"], [48, 2, 1, "", "get_model"], [48, 2, 1, "", "get_optimizer"], [48, 2, 1, "", "get_properties"], [48, 2, 1, "", "mask_data"], [48, 2, 1, "", "maybe_extract_fingerprint"], [48, 2, 1, "", "maybe_preprocess"], [48, 2, 1, "", "predict"], [48, 2, 1, "", "setup_client"], [48, 2, 1, "", "shutdown"], [48, 2, 1, "", "shutdown_dataloader"], [48, 2, 1, "", "train_step"], [48, 2, 1, "", "transform_gradients"], [48, 2, 1, "", "update_before_train"], [48, 2, 1, "", "update_metric_manager"]], "fl4health.clients.partial_weight_exchange_client": [[49, 1, 1, "", "PartialWeightExchangeClient"]], "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "get_parameter_exchanger"], [49, 2, 1, "", "get_parameters"], [49, 2, 1, "", "set_parameters"], [49, 2, 1, "", "setup_client"]], "fl4health.clients.perfcl_client": [[50, 1, 1, "", "PerFclClient"]], "fl4health.clients.perfcl_client.PerFclClient": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "compute_evaluation_loss"], [50, 2, 1, "", "compute_loss_and_additional_losses"], [50, 2, 1, "", "get_parameter_exchanger"], [50, 2, 1, "", "predict"], [50, 2, 1, "", "update_after_train"], [50, 2, 1, "", "update_before_train"]], "fl4health.clients.scaffold_client": [[51, 1, 1, "", "DPScaffoldClient"], [51, 1, 1, "", "ScaffoldClient"]], "fl4health.clients.scaffold_client.ScaffoldClient": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "compute_parameters_delta"], [51, 2, 1, "", "compute_updated_control_variates"], [51, 2, 1, "", "get_parameter_exchanger"], [51, 2, 1, "", "get_parameters"], [51, 2, 1, "", "modify_grad"], [51, 2, 1, "", "set_parameters"], [51, 2, 1, "", "setup_client"], [51, 2, 1, "", "transform_gradients"], [51, 2, 1, "", "update_after_train"], [51, 2, 1, "", "update_control_variates"]], "fl4health.datasets": [[54, 0, 0, "-", "rxrx1"], [57, 0, 0, "-", "skin_cancer"]], "fl4health.datasets.rxrx1": [[55, 0, 0, "-", "load_data"], [56, 0, 0, "-", "preprocess"]], "fl4health.datasets.rxrx1.load_data": [[55, 4, 1, "", "construct_rxrx1_tensor_dataset"], [55, 4, 1, "", "create_splits"], [55, 4, 1, "", "label_frequency"], [55, 4, 1, "", "load_rxrx1_data"], [55, 4, 1, "", "load_rxrx1_test_data"]], "fl4health.datasets.rxrx1.preprocess": [[56, 4, 1, "", "filter_and_save_data"], [56, 4, 1, "", "load_image"], [56, 4, 1, "", "main"], [56, 4, 1, "", "process_data"], [56, 4, 1, "", "save_to_pkl"]], "fl4health.datasets.skin_cancer": [[58, 0, 0, "-", "load_data"], [59, 0, 0, "-", "preprocess_skin"]], "fl4health.datasets.skin_cancer.load_data": [[58, 4, 1, "", "construct_skin_cancer_tensor_dataset"], [58, 4, 1, "", "load_image"], [58, 4, 1, "", "load_skin_cancer_data"]], "fl4health.datasets.skin_cancer.preprocess_skin": [[59, 4, 1, "", "derm7pt_image_path_func"], [59, 4, 1, "", "derm7pt_label_map_func"], [59, 4, 1, "", "ham_image_path_func"], [59, 4, 1, "", "ham_label_map_func"], [59, 4, 1, "", "pad_image_path_func"], [59, 4, 1, "", "pad_label_map_func"], [59, 4, 1, "", "preprocess_derm7pt"], [59, 4, 1, "", "preprocess_ham10000"], [59, 4, 1, "", "preprocess_isic_2019"], [59, 4, 1, "", "preprocess_pad_ufes_20"], [59, 4, 1, "", "process_client_data"], [59, 4, 1, "", "save_to_json"]], "fl4health.feature_alignment": [[61, 0, 0, "-", "constants"], [62, 0, 0, "-", "string_columns_transformer"], [65, 0, 0, "-", "tabular_feature"], [66, 0, 0, "-", "tabular_type"]], "fl4health.feature_alignment.string_columns_transformer": [[62, 1, 1, "", "TextColumnTransformer"], [62, 1, 1, "", "TextMulticolumnTransformer"]], "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "fit"], [62, 2, 1, "", "set_fit_request"], [62, 2, 1, "", "set_transform_request"], [62, 2, 1, "", "transform"]], "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "fit"], [62, 2, 1, "", "set_fit_request"], [62, 2, 1, "", "set_transform_request"], [62, 2, 1, "", "transform"]], "fl4health.feature_alignment.tabular_feature": [[65, 1, 1, "", "TabularFeature"]], "fl4health.feature_alignment.tabular_feature.TabularFeature": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "from_json"], [65, 2, 1, "", "get_feature_name"], [65, 2, 1, "", "get_feature_type"], [65, 2, 1, "", "get_fill_value"], [65, 2, 1, "", "get_metadata"], [65, 2, 1, "", "get_metadata_dimension"], [65, 2, 1, "", "to_json"]], "fl4health.feature_alignment.tabular_type": [[66, 1, 1, "", "TabularType"]], "fl4health.feature_alignment.tabular_type.TabularType": [[66, 3, 1, "", "BINARY"], [66, 3, 1, "", "NUMERIC"], [66, 3, 1, "", "ORDINAL"], [66, 3, 1, "", "STRING"], [66, 2, 1, "", "get_default_fill_value"]], "fl4health.losses": [[68, 0, 0, "-", "contrastive_loss"], [69, 0, 0, "-", "cosine_similarity_loss"], [70, 0, 0, "-", "deep_mmd_loss"], [71, 0, 0, "-", "fenda_loss_config"], [72, 0, 0, "-", "mkmmd_loss"], [73, 0, 0, "-", "perfcl_loss"], [74, 0, 0, "-", "weight_drift_loss"]], "fl4health.losses.contrastive_loss": [[68, 1, 1, "", "MoonContrastiveLoss"], [68, 1, 1, "", "NtXentLoss"]], "fl4health.losses.contrastive_loss.MoonContrastiveLoss": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "compute_negative_similarities"], [68, 2, 1, "", "forward"]], "fl4health.losses.contrastive_loss.NtXentLoss": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "forward"]], "fl4health.losses.cosine_similarity_loss": [[69, 1, 1, "", "CosineSimilarityLoss"]], "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "forward"]], "fl4health.losses.deep_mmd_loss": [[70, 1, 1, "", "DeepMmdLoss"], [70, 1, 1, "", "ModelLatentF"]], "fl4health.losses.deep_mmd_loss.DeepMmdLoss": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "compute_kernel"], [70, 2, 1, "", "forward"], [70, 2, 1, "", "h1_mean_var_gram"], [70, 2, 1, "", "mmdu"], [70, 2, 1, "", "pairwise_distance_squared"], [70, 2, 1, "", "train_kernel"]], "fl4health.losses.deep_mmd_loss.ModelLatentF": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "forward"]], "fl4health.losses.fenda_loss_config": [[71, 1, 1, "", "ConstrainedFendaLossContainer"], [71, 1, 1, "", "CosineSimilarityLossContainer"], [71, 1, 1, "", "MoonContrastiveLossContainer"], [71, 1, 1, "", "PerFclLossContainer"]], "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "compute_contrastive_loss"], [71, 2, 1, "", "compute_cosine_similarity_loss"], [71, 2, 1, "", "compute_perfcl_loss"], [71, 2, 1, "", "has_contrastive_loss"], [71, 2, 1, "", "has_cosine_similarity_loss"], [71, 2, 1, "", "has_perfcl_loss"]], "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer": [[71, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer": [[71, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.PerFclLossContainer": [[71, 2, 1, "", "__init__"]], "fl4health.losses.mkmmd_loss": [[72, 1, 1, "", "MkMmdLoss"]], "fl4health.losses.mkmmd_loss.MkMmdLoss": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "beta_with_extreme_kernel_base_values"], [72, 2, 1, "", "compute_all_h_u_all_samples"], [72, 2, 1, "", "compute_all_h_u_from_inner_products"], [72, 2, 1, "", "compute_all_h_u_from_inner_products_linear"], [72, 2, 1, "", "compute_all_h_u_linear"], [72, 2, 1, "", "compute_euclidean_inner_products"], [72, 2, 1, "", "compute_euclidean_inner_products_linear"], [72, 2, 1, "", "compute_h_u_from_inner_products"], [72, 2, 1, "", "compute_h_u_from_inner_products_linear"], [72, 2, 1, "", "compute_hat_d_per_kernel"], [72, 2, 1, "", "compute_hat_q_k"], [72, 2, 1, "", "compute_hat_q_k_linear"], [72, 2, 1, "", "compute_mkmmd"], [72, 2, 1, "", "compute_vertices"], [72, 2, 1, "", "construct_quadruples"], [72, 2, 1, "", "form_and_solve_qp"], [72, 2, 1, "", "form_h_u_delta_w_i"], [72, 2, 1, "", "form_kernel_samples_minus_expectation"], [72, 2, 1, "", "forward"], [72, 2, 1, "", "get_best_vertex_for_objective_function"], [72, 2, 1, "", "normalize"], [72, 2, 1, "", "optimize_betas"]], "fl4health.losses.perfcl_loss": [[73, 1, 1, "", "PerFclLoss"]], "fl4health.losses.perfcl_loss.PerFclLoss": [[73, 2, 1, "", "forward"]], "fl4health.losses.weight_drift_loss": [[74, 1, 1, "", "WeightDriftLoss"]], "fl4health.losses.weight_drift_loss.WeightDriftLoss": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "forward"]], "fl4health.metrics": [[75, 1, 1, "", "Accuracy"], [75, 1, 1, "", "BalancedAccuracy"], [75, 1, 1, "", "BinarySoftDiceCoefficient"], [75, 1, 1, "", "F1"], [75, 1, 1, "", "RocAuc"], [75, 1, 1, "", "SimpleMetric"], [75, 1, 1, "", "TorchMetric"], [76, 0, 0, "-", "base_metrics"], [77, 0, 0, "-", "compound_metrics"], [78, 0, 0, "-", "efficient_metrics"], [79, 0, 0, "-", "efficient_metrics_base"], [80, 0, 0, "-", "metric_aggregation"], [81, 0, 0, "-", "metric_managers"], [82, 0, 0, "-", "metrics"], [83, 0, 0, "-", "metrics_utils"], [84, 0, 0, "-", "utils"]], "fl4health.metrics.Accuracy": [[75, 2, 1, "", "__init__"]], "fl4health.metrics.BalancedAccuracy": [[75, 2, 1, "", "__init__"]], "fl4health.metrics.BinarySoftDiceCoefficient": [[75, 2, 1, "", "__init__"]], "fl4health.metrics.F1": [[75, 2, 1, "", "__init__"]], "fl4health.metrics.RocAuc": [[75, 2, 1, "", "__init__"]], "fl4health.metrics.SimpleMetric": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "clear"], [75, 2, 1, "", "compute"], [75, 2, 1, "", "update"]], "fl4health.metrics.TorchMetric": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "clear"], [75, 2, 1, "", "compute"], [75, 2, 1, "", "update"]], "fl4health.metrics.base_metrics": [[76, 1, 1, "", "Metric"], [76, 1, 1, "", "MetricPrefix"]], "fl4health.metrics.base_metrics.Metric": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "clear"], [76, 2, 1, "", "compute"], [76, 2, 1, "", "update"]], "fl4health.metrics.base_metrics.MetricPrefix": [[76, 3, 1, "", "TEST_PREFIX"], [76, 3, 1, "", "VAL_PREFIX"]], "fl4health.metrics.compound_metrics": [[77, 1, 1, "", "EmaMetric"], [77, 1, 1, "", "TransformsMetric"]], "fl4health.metrics.compound_metrics.EmaMetric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.metrics.compound_metrics.TransformsMetric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics": [[78, 1, 1, "", "BinaryDice"], [78, 1, 1, "", "MultiClassDice"]], "fl4health.metrics.efficient_metrics.BinaryDice": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics.MultiClassDice": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics_base": [[79, 1, 1, "", "BinaryClassificationMetric"], [79, 1, 1, "", "ClassificationMetric"], [79, 1, 1, "", "MetricOutcome"], [79, 1, 1, "", "MultiClassificationMetric"]], "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_from_counts"], [79, 2, 1, "", "count_tp_fp_tn_fn"]], "fl4health.metrics.efficient_metrics_base.ClassificationMetric": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "clear"], [79, 2, 1, "", "compute"], [79, 2, 1, "", "compute_from_counts"], [79, 2, 1, "", "count_tp_fp_tn_fn"], [79, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics_base.MetricOutcome": [[79, 3, 1, "", "FALSE_NEGATIVE"], [79, 3, 1, "", "FALSE_POSITIVE"], [79, 3, 1, "", "TRUE_NEGATIVE"], [79, 3, 1, "", "TRUE_POSITIVE"]], "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_from_counts"], [79, 2, 1, "", "count_tp_fp_tn_fn"]], "fl4health.metrics.metric_aggregation": [[80, 4, 1, "", "evaluate_metrics_aggregation_fn"], [80, 4, 1, "", "fit_metrics_aggregation_fn"], [80, 4, 1, "", "metric_aggregation"], [80, 4, 1, "", "normalize_metrics"], [80, 4, 1, "", "uniform_evaluate_metrics_aggregation_fn"], [80, 4, 1, "", "uniform_metric_aggregation"], [80, 4, 1, "", "uniform_normalize_metrics"]], "fl4health.metrics.metric_managers": [[81, 1, 1, "", "MetricManager"]], "fl4health.metrics.metric_managers.MetricManager": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "check_target_prediction_keys_equal"], [81, 2, 1, "", "clear"], [81, 2, 1, "", "compute"], [81, 2, 1, "", "reset"], [81, 2, 1, "", "update"]], "fl4health.metrics.metrics": [[82, 1, 1, "", "Accuracy"], [82, 1, 1, "", "BalancedAccuracy"], [82, 1, 1, "", "BinarySoftDiceCoefficient"], [82, 1, 1, "", "F1"], [82, 1, 1, "", "RocAuc"], [82, 1, 1, "", "SimpleMetric"], [82, 1, 1, "", "TorchMetric"]], "fl4health.metrics.metrics.Accuracy": [[82, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BalancedAccuracy": [[82, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BinarySoftDiceCoefficient": [[82, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.F1": [[82, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.RocAuc": [[82, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.SimpleMetric": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "clear"], [82, 2, 1, "", "compute"], [82, 2, 1, "", "update"]], "fl4health.metrics.metrics.TorchMetric": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "clear"], [82, 2, 1, "", "compute"], [82, 2, 1, "", "update"]], "fl4health.metrics.metrics_utils": [[83, 4, 1, "", "compute_dice_on_count_tensors"], [83, 4, 1, "", "threshold_tensor"]], "fl4health.metrics.utils": [[84, 4, 1, "", "align_pred_and_target_shapes"], [84, 4, 1, "", "infer_label_dim"], [84, 4, 1, "", "map_label_index_tensor_to_one_hot"]], "fl4health.mixins": [[85, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [86, 0, 0, "-", "adaptive_drift_constrained"], [87, 0, 0, "-", "core_protocols"], [88, 0, 0, "-", "personalized"]], "fl4health.mixins.AdaptiveDriftConstrainedMixin": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "compute_penalty_loss"], [85, 2, 1, "", "get_parameter_exchanger"], [85, 2, 1, "", "get_parameters"], [85, 2, 1, "", "set_parameters"], [85, 2, 1, "", "train_step"], [85, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained": [[86, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [86, 1, 1, "", "AdaptiveDriftConstrainedProtocol"], [86, 4, 1, "", "apply_adaptive_drift_to_client"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "compute_penalty_loss"], [86, 2, 1, "", "get_parameter_exchanger"], [86, 2, 1, "", "get_parameters"], [86, 2, 1, "", "set_parameters"], [86, 2, 1, "", "train_step"], [86, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol": [[86, 2, 1, "", "compute_penalty_loss"], [86, 3, 1, "", "drift_penalty_tensors"], [86, 3, 1, "", "drift_penalty_weight"], [86, 3, 1, "", "loss_for_adaptation"], [86, 3, 1, "", "parameter_exchanger"], [86, 3, 1, "", "penalty_loss_function"]], "fl4health.mixins.core_protocols": [[87, 1, 1, "", "FlexibleClientProtocol"], [87, 1, 1, "", "FlexibleClientProtocolPreSetup"], [87, 1, 1, "", "NumPyClientMinimalProtocol"]], "fl4health.mixins.core_protocols.FlexibleClientProtocol": [[87, 2, 1, "", "compute_evaluation_loss"], [87, 2, 1, "", "compute_training_loss"], [87, 3, 1, "", "criterion"], [87, 2, 1, "", "initialize_all_model_weights"], [87, 3, 1, "", "model"], [87, 3, 1, "", "optimizers"], [87, 2, 1, "", "predict_with_model"], [87, 3, 1, "", "test_loader"], [87, 3, 1, "", "train_loader"], [87, 2, 1, "", "transform_gradients"], [87, 2, 1, "", "transform_target"], [87, 2, 1, "", "update_before_train"], [87, 3, 1, "", "val_loader"], [87, 2, 1, "", "validate"]], "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup": [[87, 2, 1, "", "compute_loss_and_additional_losses"], [87, 3, 1, "", "device"], [87, 2, 1, "", "get_criterion"], [87, 2, 1, "", "get_data_loaders"], [87, 2, 1, "", "get_model"], [87, 2, 1, "", "get_optimizer"], [87, 3, 1, "", "initialized"], [87, 2, 1, "", "setup_client"]], "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol": [[87, 2, 1, "", "evaluate"], [87, 2, 1, "", "fit"], [87, 2, 1, "", "get_parameters"], [87, 2, 1, "", "set_parameters"], [87, 2, 1, "", "update_after_train"]], "fl4health.mixins.personalized": [[88, 1, 1, "", "DittoPersonalizedMixin"], [88, 1, 1, "", "DittoPersonalizedProtocol"], [88, 1, 1, "", "PersonalizedMode"], [89, 0, 0, "-", "ditto"], [88, 4, 1, "", "make_it_personal"], [90, 0, 0, "-", "utils"]], "fl4health.mixins.personalized.DittoPersonalizedMixin": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "compute_evaluation_loss"], [88, 2, 1, "", "get_global_model"], [88, 2, 1, "", "get_optimizer"], [88, 2, 1, "", "get_parameters"], [88, 2, 1, "", "initialize_all_model_weights"], [88, 5, 1, "", "optimizer_keys"], [88, 2, 1, "", "safe_global_model"], [88, 2, 1, "", "set_initial_global_tensors"], [88, 2, 1, "", "set_optimizer"], [88, 2, 1, "", "set_parameters"], [88, 2, 1, "", "setup_client"], [88, 2, 1, "", "train_step"], [88, 2, 1, "", "update_before_train"], [88, 2, 1, "", "val_step"], [88, 2, 1, "", "validate"]], "fl4health.mixins.personalized.DittoPersonalizedProtocol": [[88, 2, 1, "", "get_global_model"], [88, 3, 1, "", "global_model"], [88, 3, 1, "", "optimizer_keys"], [88, 2, 1, "", "safe_global_model"], [88, 2, 1, "", "set_initial_global_tensors"]], "fl4health.mixins.personalized.PersonalizedMode": [[88, 3, 1, "", "DITTO"]], "fl4health.mixins.personalized.ditto": [[89, 1, 1, "", "DittoPersonalizedMixin"], [89, 1, 1, "", "DittoPersonalizedProtocol"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "compute_evaluation_loss"], [89, 2, 1, "", "get_global_model"], [89, 2, 1, "", "get_optimizer"], [89, 2, 1, "", "get_parameters"], [89, 2, 1, "", "initialize_all_model_weights"], [89, 5, 1, "", "optimizer_keys"], [89, 2, 1, "", "safe_global_model"], [89, 2, 1, "", "set_initial_global_tensors"], [89, 2, 1, "", "set_optimizer"], [89, 2, 1, "", "set_parameters"], [89, 2, 1, "", "setup_client"], [89, 2, 1, "", "train_step"], [89, 2, 1, "", "update_before_train"], [89, 2, 1, "", "val_step"], [89, 2, 1, "", "validate"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol": [[89, 3, 1, "", "criterion"], [89, 3, 1, "", "device"], [89, 3, 1, "", "drift_penalty_tensors"], [89, 3, 1, "", "drift_penalty_weight"], [89, 2, 1, "", "get_global_model"], [89, 3, 1, "", "global_model"], [89, 3, 1, "", "initialized"], [89, 3, 1, "", "loss_for_adaptation"], [89, 3, 1, "", "model"], [89, 3, 1, "", "optimizer_keys"], [89, 3, 1, "", "optimizers"], [89, 3, 1, "", "parameter_exchanger"], [89, 3, 1, "", "penalty_loss_function"], [89, 2, 1, "", "safe_global_model"], [89, 2, 1, "", "set_initial_global_tensors"], [89, 3, 1, "", "test_loader"], [89, 3, 1, "", "train_loader"], [89, 3, 1, "", "val_loader"]], "fl4health.mixins.personalized.utils": [[90, 4, 1, "", "ensure_protocol_compliance"]], "fl4health.model_bases": [[92, 0, 0, "-", "apfl_base"], [93, 0, 0, "-", "autoencoders_base"], [94, 0, 0, "-", "ensemble_base"], [95, 0, 0, "-", "feature_extractor_buffer"], [96, 0, 0, "-", "fedrep_base"], [97, 0, 0, "-", "fedsimclr_base"], [98, 0, 0, "-", "fenda_base"], [99, 0, 0, "-", "masked_layers"], [104, 0, 0, "-", "moon_base"], [105, 0, 0, "-", "parallel_split_models"], [106, 0, 0, "-", "partial_layer_exchange_model"], [107, 0, 0, "-", "pca"], [108, 0, 0, "-", "perfcl_base"], [109, 0, 0, "-", "sequential_split_models"]], "fl4health.model_bases.apfl_base": [[92, 1, 1, "", "ApflModule"]], "fl4health.model_bases.apfl_base.ApflModule": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "forward"], [92, 2, 1, "", "global_forward"], [92, 2, 1, "", "layers_to_exchange"], [92, 2, 1, "", "local_forward"], [92, 2, 1, "", "update_alpha"]], "fl4health.model_bases.autoencoders_base": [[93, 1, 1, "", "AbstractAe"], [93, 1, 1, "", "BasicAe"], [93, 1, 1, "", "ConditionalVae"], [93, 1, 1, "", "VariationalAe"]], "fl4health.model_bases.autoencoders_base.AbstractAe": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.BasicAe": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "decode"], [93, 2, 1, "", "encode"], [93, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.ConditionalVae": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "decode"], [93, 2, 1, "", "encode"], [93, 2, 1, "", "forward"], [93, 2, 1, "", "sampling"]], "fl4health.model_bases.autoencoders_base.VariationalAe": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "decode"], [93, 2, 1, "", "encode"], [93, 2, 1, "", "forward"], [93, 2, 1, "", "sampling"]], "fl4health.model_bases.ensemble_base": [[94, 1, 1, "", "EnsembleAggregationMode"], [94, 1, 1, "", "EnsembleModel"]], "fl4health.model_bases.ensemble_base.EnsembleAggregationMode": [[94, 3, 1, "", "AVERAGE"], [94, 3, 1, "", "VOTE"]], "fl4health.model_bases.ensemble_base.EnsembleModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "ensemble_average"], [94, 2, 1, "", "ensemble_vote"], [94, 2, 1, "", "forward"]], "fl4health.model_bases.feature_extractor_buffer": [[95, 1, 1, "", "FeatureExtractorBuffer"]], "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "clear_buffers"], [95, 2, 1, "", "disable_accumulating_features"], [95, 2, 1, "", "enable_accumulating_features"], [95, 2, 1, "", "find_last_common_prefix"], [95, 2, 1, "", "flatten"], [95, 2, 1, "", "forward_hook"], [95, 2, 1, "", "get_extracted_features"], [95, 2, 1, "", "get_hierarchical_attr"], [95, 2, 1, "", "remove_hooks"]], "fl4health.model_bases.fedrep_base": [[96, 1, 1, "", "FedRepModel"]], "fl4health.model_bases.fedrep_base.FedRepModel": [[96, 2, 1, "", "freeze_base_module"], [96, 2, 1, "", "freeze_head_module"], [96, 2, 1, "", "unfreeze_base_module"], [96, 2, 1, "", "unfreeze_head_module"]], "fl4health.model_bases.fedsimclr_base": [[97, 1, 1, "", "FedSimClrModel"]], "fl4health.model_bases.fedsimclr_base.FedSimClrModel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "forward"], [97, 2, 1, "", "load_pretrained_model"]], "fl4health.model_bases.fenda_base": [[98, 1, 1, "", "FendaModel"], [98, 1, 1, "", "FendaModelWithFeatureState"]], "fl4health.model_bases.fenda_base.FendaModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.fenda_base.FendaModelWithFeatureState": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "forward"]], "fl4health.model_bases.masked_layers": [[100, 0, 0, "-", "masked_conv"], [101, 0, 0, "-", "masked_layers_utils"], [102, 0, 0, "-", "masked_linear"], [103, 0, 0, "-", "masked_normalization_layers"]], "fl4health.model_bases.masked_layers.masked_conv": [[100, 1, 1, "", "MaskedConv1d"], [100, 1, 1, "", "MaskedConv2d"], [100, 1, 1, "", "MaskedConv3d"], [100, 1, 1, "", "MaskedConvTranspose1d"], [100, 1, 1, "", "MaskedConvTranspose2d"], [100, 1, 1, "", "MaskedConvTranspose3d"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"], [100, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"], [100, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"], [100, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"], [100, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"], [100, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"], [100, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[101, 4, 1, "", "convert_to_masked_model"], [101, 4, 1, "", "is_masked_module"]], "fl4health.model_bases.masked_layers.masked_linear": [[102, 1, 1, "", "MaskedLinear"]], "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "forward"], [102, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[103, 1, 1, "", "MaskedBatchNorm1d"], [103, 1, 1, "", "MaskedBatchNorm2d"], [103, 1, 1, "", "MaskedBatchNorm3d"], [103, 1, 1, "", "MaskedLayerNorm"]], "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.moon_base": [[104, 1, 1, "", "MoonModel"]], "fl4health.model_bases.moon_base.MoonModel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "sequential_forward"]], "fl4health.model_bases.parallel_split_models": [[105, 1, 1, "", "ParallelFeatureJoinMode"], [105, 1, 1, "", "ParallelSplitHeadModule"], [105, 1, 1, "", "ParallelSplitModel"]], "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode": [[105, 3, 1, "", "CONCATENATE"], [105, 3, 1, "", "SUM"]], "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "head_forward"], [105, 2, 1, "", "parallel_output_join"]], "fl4health.model_bases.parallel_split_models.ParallelSplitModel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"]], "fl4health.model_bases.partial_layer_exchange_model": [[106, 1, 1, "", "PartialLayerExchangeModel"]], "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel": [[106, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.pca": [[107, 1, 1, "", "PcaModule"]], "fl4health.model_bases.pca.PcaModule": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "center_data"], [107, 2, 1, "", "compute_cumulative_explained_variance"], [107, 2, 1, "", "compute_explained_variance_ratios"], [107, 2, 1, "", "compute_projection_variance"], [107, 2, 1, "", "compute_reconstruction_error"], [107, 2, 1, "", "forward"], [107, 2, 1, "", "maybe_reshape"], [107, 2, 1, "", "prepare_data_forward"], [107, 2, 1, "", "project_back"], [107, 2, 1, "", "project_lower_dim"], [107, 2, 1, "", "set_data_mean"], [107, 2, 1, "", "set_principal_components"]], "fl4health.model_bases.perfcl_base": [[108, 1, 1, "", "PerFclModel"]], "fl4health.model_bases.perfcl_base.PerFclModel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "forward"], [108, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models": [[109, 1, 1, "", "SequentiallySplitExchangeBaseModel"], [109, 1, 1, "", "SequentiallySplitModel"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel": [[109, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitModel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "forward"], [109, 2, 1, "", "sequential_forward"]], "fl4health.parameter_exchange": [[111, 0, 0, "-", "fedpm_exchanger"], [112, 0, 0, "-", "full_exchanger"], [113, 0, 0, "-", "layer_exchanger"], [114, 0, 0, "-", "packing_exchanger"], [115, 0, 0, "-", "parameter_exchanger_base"], [116, 0, 0, "-", "parameter_packer"], [117, 0, 0, "-", "parameter_selection_criteria"], [118, 0, 0, "-", "partial_parameter_exchanger"], [119, 0, 0, "-", "sparse_coo_parameter_exchanger"]], "fl4health.parameter_exchange.fedpm_exchanger": [[111, 1, 1, "", "FedPmExchanger"]], "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger": [[111, 2, 1, "", "pull_parameters"]], "fl4health.parameter_exchange.full_exchanger": [[112, 1, 1, "", "FullParameterExchanger"]], "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger": [[112, 2, 1, "", "pull_parameters"], [112, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger": [[113, 1, 1, "", "DynamicLayerExchanger"], [113, 1, 1, "", "FixedLayerExchanger"], [113, 1, 1, "", "LayerExchangerWithExclusions"]], "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "pull_parameters"], [113, 2, 1, "", "push_parameters"], [113, 2, 1, "", "select_parameters"]], "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "apply_layer_filter"], [113, 2, 1, "", "pull_parameters"], [113, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "apply_layer_filter"], [113, 2, 1, "", "get_layers_to_transfer"], [113, 2, 1, "", "pull_parameters"], [113, 2, 1, "", "push_parameters"], [113, 2, 1, "", "should_layer_be_excluded"], [113, 2, 1, "", "should_module_be_excluded"]], "fl4health.parameter_exchange.packing_exchanger": [[114, 1, 1, "", "FullParameterExchangerWithPacking"]], "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking": [[114, 2, 1, "", "pack_parameters"], [114, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_exchanger_base": [[115, 1, 1, "", "ParameterExchanger"]], "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger": [[115, 2, 1, "", "pull_parameters"], [115, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.parameter_packer": [[116, 1, 1, "", "ParameterPacker"], [116, 1, 1, "", "ParameterPackerAdaptiveConstraint"], [116, 1, 1, "", "ParameterPackerWithClippingBit"], [116, 1, 1, "", "ParameterPackerWithControlVariates"], [116, 1, 1, "", "ParameterPackerWithLayerNames"], [116, 1, 1, "", "SparseCooParameterPacker"]], "fl4health.parameter_exchange.parameter_packer.ParameterPacker": [[116, 2, 1, "", "pack_parameters"], [116, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint": [[116, 2, 1, "", "pack_parameters"], [116, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit": [[116, 2, 1, "", "pack_parameters"], [116, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "pack_parameters"], [116, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames": [[116, 2, 1, "", "pack_parameters"], [116, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker": [[116, 2, 1, "", "extract_coo_info_from_dense"], [116, 2, 1, "", "pack_parameters"], [116, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_selection_criteria": [[117, 1, 1, "", "LayerSelectionFunctionConstructor"], [117, 4, 1, "", "largest_final_magnitude_scores"], [117, 4, 1, "", "largest_increase_in_magnitude_scores"], [117, 4, 1, "", "largest_magnitude_change_scores"], [117, 4, 1, "", "select_layers_by_percentage"], [117, 4, 1, "", "select_layers_by_threshold"], [117, 4, 1, "", "select_scores_and_sample_masks"], [117, 4, 1, "", "smallest_final_magnitude_scores"], [117, 4, 1, "", "smallest_increase_in_magnitude_scores"], [117, 4, 1, "", "smallest_magnitude_change_scores"]], "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "select_by_percentage"], [117, 2, 1, "", "select_by_threshold"]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[118, 1, 1, "", "PartialParameterExchanger"]], "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger": [[118, 2, 1, "", "pack_parameters"], [118, 2, 1, "", "select_parameters"], [118, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[119, 1, 1, "", "SparseCooParameterExchanger"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "generate_parameter_scores"], [119, 2, 1, "", "pull_parameters"], [119, 2, 1, "", "push_parameters"], [119, 2, 1, "", "select_parameters"]], "fl4health.preprocessing": [[121, 0, 0, "-", "autoencoders"], [124, 0, 0, "-", "pca_preprocessor"], [125, 0, 0, "-", "warmed_up_module"]], "fl4health.preprocessing.autoencoders": [[122, 0, 0, "-", "dim_reduction"], [123, 0, 0, "-", "loss"]], "fl4health.preprocessing.autoencoders.dim_reduction": [[122, 1, 1, "", "AeProcessor"], [122, 1, 1, "", "AutoEncoderProcessing"], [122, 1, 1, "", "CvaeFixedConditionProcessor"], [122, 1, 1, "", "CvaeVariableConditionProcessor"], [122, 1, 1, "", "VaeProcessor"]], "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "load_autoencoder"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor": [[122, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor": [[122, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor": [[122, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.loss": [[123, 1, 1, "", "VaeLoss"]], "fl4health.preprocessing.autoencoders.loss.VaeLoss": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "forward"], [123, 2, 1, "", "standard_normal_kl_divergence_loss"], [123, 2, 1, "", "unpack_model_output"]], "fl4health.preprocessing.pca_preprocessor": [[124, 1, 1, "", "PcaPreprocessor"]], "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "load_pca_module"], [124, 2, 1, "", "reduce_dimension"]], "fl4health.preprocessing.warmed_up_module": [[125, 1, 1, "", "WarmedUpModule"]], "fl4health.preprocessing.warmed_up_module.WarmedUpModule": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "get_matching_component"], [125, 2, 1, "", "load_from_pretrained"]], "fl4health.privacy": [[127, 0, 0, "-", "fl_accountants"], [128, 0, 0, "-", "moments_accountant"]], "fl4health.privacy.fl_accountants": [[127, 1, 1, "", "ClientLevelAccountant"], [127, 1, 1, "", "FlClientLevelAccountantFixedSamplingNoReplacement"], [127, 1, 1, "", "FlClientLevelAccountantPoissonSampling"], [127, 1, 1, "", "FlInstanceLevelAccountant"]], "fl4health.privacy.fl_accountants.ClientLevelAccountant": [[127, 2, 1, "", "get_delta"], [127, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "get_delta"], [127, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "get_delta"], [127, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "get_delta"], [127, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant": [[128, 1, 1, "", "FixedSamplingWithoutReplacement"], [128, 1, 1, "", "MomentsAccountant"], [128, 1, 1, "", "PoissonSampling"], [128, 1, 1, "", "SamplingStrategy"]], "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement": [[128, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.MomentsAccountant": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "get_delta"], [128, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant.PoissonSampling": [[128, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.SamplingStrategy": [[128, 2, 1, "", "get_dp_event"]], "fl4health.reporting": [[129, 1, 1, "", "JsonReporter"], [129, 1, 1, "", "WandBReporter"], [129, 1, 1, "", "WandBStepType"], [130, 0, 0, "-", "base_reporter"], [131, 0, 0, "-", "json_reporter"], [132, 0, 0, "-", "reports_manager"], [133, 0, 0, "-", "wandb_reporter"]], "fl4health.reporting.JsonReporter": [[129, 2, 1, "", "dump"]], "fl4health.reporting.WandBReporter": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "define_metrics"], [129, 2, 1, "", "initialize"], [129, 2, 1, "", "report"], [129, 2, 1, "", "shutdown"], [129, 2, 1, "", "start_run"]], "fl4health.reporting.WandBStepType": [[129, 3, 1, "", "EPOCH"], [129, 3, 1, "", "ROUND"], [129, 3, 1, "", "STEP"]], "fl4health.reporting.base_reporter": [[130, 1, 1, "", "BaseReporter"]], "fl4health.reporting.base_reporter.BaseReporter": [[130, 2, 1, "", "initialize"], [130, 2, 1, "", "report"], [130, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter": [[131, 1, 1, "", "FileReporter"], [131, 1, 1, "", "JsonReporter"]], "fl4health.reporting.json_reporter.FileReporter": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "dump"], [131, 2, 1, "", "initialize"], [131, 2, 1, "", "report"], [131, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter.JsonReporter": [[131, 2, 1, "", "dump"]], "fl4health.reporting.reports_manager": [[132, 1, 1, "", "ReportsManager"]], "fl4health.reporting.reports_manager.ReportsManager": [[132, 2, 1, "", "initialize"], [132, 2, 1, "", "report"], [132, 2, 1, "", "shutdown"]], "fl4health.reporting.wandb_reporter": [[133, 1, 1, "", "WandBReporter"], [133, 1, 1, "", "WandBStepType"]], "fl4health.reporting.wandb_reporter.WandBReporter": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "define_metrics"], [133, 2, 1, "", "initialize"], [133, 2, 1, "", "report"], [133, 2, 1, "", "shutdown"], [133, 2, 1, "", "start_run"]], "fl4health.reporting.wandb_reporter.WandBStepType": [[133, 3, 1, "", "EPOCH"], [133, 3, 1, "", "ROUND"], [133, 3, 1, "", "STEP"]], "fl4health.servers": [[135, 0, 0, "-", "adaptive_constraint_servers"], [139, 0, 0, "-", "base_server"], [140, 0, 0, "-", "client_level_dp_fed_avg_server"], [141, 0, 0, "-", "evaluate_server"], [142, 0, 0, "-", "fedpm_server"], [143, 0, 0, "-", "instance_level_dp_server"], [144, 0, 0, "-", "model_merge_server"], [145, 0, 0, "-", "nnunet_server"], [146, 0, 0, "-", "polling"], [147, 0, 0, "-", "scaffold_server"]], "fl4health.servers.adaptive_constraint_servers": [[136, 0, 0, "-", "ditto_server"], [137, 0, 0, "-", "fedprox_server"], [138, 0, 0, "-", "mrmtl_server"]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[136, 1, 1, "", "DittoServer"]], "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer": [[136, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[137, 1, 1, "", "FedProxServer"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer": [[137, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[138, 1, 1, "", "MrMtlServer"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer": [[138, 2, 1, "", "__init__"]], "fl4health.servers.base_server": [[139, 1, 1, "", "FlServer"]], "fl4health.servers.base_server.FlServer": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "evaluate_round"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "fit_round"], [139, 2, 1, "", "fit_with_per_round_checkpointing"], [139, 2, 1, "", "poll_clients_for_sample_counts"], [139, 2, 1, "", "report_centralized_eval"], [139, 2, 1, "", "shutdown"], [139, 2, 1, "", "update_before_fit"]], "fl4health.servers.client_level_dp_fed_avg_server": [[140, 1, 1, "", "ClientLevelDPFedAvgServer"]], "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "fit"], [140, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.evaluate_server": [[141, 1, 1, "", "EvaluateServer"]], "fl4health.servers.evaluate_server.EvaluateServer": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "aggregate_evaluate"], [141, 2, 1, "", "configure_evaluate"], [141, 2, 1, "", "federated_evaluate"], [141, 2, 1, "", "fit"], [141, 2, 1, "", "load_model_checkpoint_to_parameters"]], "fl4health.servers.fedpm_server": [[142, 1, 1, "", "FedPmServer"]], "fl4health.servers.fedpm_server.FedPmServer": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "fit_round"]], "fl4health.servers.instance_level_dp_server": [[143, 1, 1, "", "InstanceLevelDpServer"]], "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "fit"], [143, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.model_merge_server": [[144, 1, 1, "", "ModelMergeServer"]], "fl4health.servers.model_merge_server.ModelMergeServer": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "fit"]], "fl4health.servers.nnunet_server": [[145, 1, 1, "", "NnunetServer"], [145, 4, 1, "", "add_items_to_config_fn"]], "fl4health.servers.nnunet_server.NnunetServer": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "initialize_server_model"], [145, 2, 1, "", "update_before_fit"]], "fl4health.servers.polling": [[146, 4, 1, "", "poll_client"], [146, 4, 1, "", "poll_clients"]], "fl4health.servers.scaffold_server": [[147, 1, 1, "", "DPScaffoldServer"], [147, 1, 1, "", "ScaffoldServer"]], "fl4health.servers.scaffold_server.DPScaffoldServer": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "fit"]], "fl4health.servers.scaffold_server.ScaffoldServer": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "fit"]], "fl4health.strategies": [[150, 0, 0, "-", "aggregate_utils"], [151, 0, 0, "-", "basic_fedavg"], [152, 0, 0, "-", "client_dp_fedavgm"], [153, 0, 0, "-", "fedavg_dynamic_layer"], [154, 0, 0, "-", "fedavg_sparse_coo_tensor"], [155, 0, 0, "-", "fedavg_with_adaptive_constraint"], [156, 0, 0, "-", "feddg_ga"], [157, 0, 0, "-", "feddg_ga_with_adaptive_constraint"], [158, 0, 0, "-", "fedpca"], [159, 0, 0, "-", "fedpm"], [160, 0, 0, "-", "flash"], [161, 0, 0, "-", "model_merge_strategy"], [162, 0, 0, "-", "noisy_aggregate"], [163, 0, 0, "-", "scaffold"], [164, 0, 0, "-", "strategy_with_poll"]], "fl4health.strategies.aggregate_utils": [[150, 4, 1, "", "aggregate_losses"], [150, 4, 1, "", "aggregate_results"]], "fl4health.strategies.basic_fedavg": [[151, 1, 1, "", "BasicFedAvg"], [151, 1, 1, "", "OpacusBasicFedAvg"]], "fl4health.strategies.basic_fedavg.BasicFedAvg": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "aggregate_evaluate"], [151, 2, 1, "", "aggregate_fit"], [151, 2, 1, "", "configure_evaluate"], [151, 2, 1, "", "configure_fit"], [151, 2, 1, "", "configure_poll"]], "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg": [[151, 2, 1, "", "__init__"]], "fl4health.strategies.client_dp_fedavgm": [[152, 1, 1, "", "ClientLevelDPFedAvgM"]], "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "aggregate_fit"], [152, 2, 1, "", "calculate_update_with_momentum"], [152, 2, 1, "", "configure_evaluate"], [152, 2, 1, "", "configure_fit"], [152, 2, 1, "", "modify_noise_multiplier"], [152, 2, 1, "", "split_model_weights_and_clipping_bits"], [152, 2, 1, "", "update_clipping_bound"], [152, 2, 1, "", "update_current_weights"]], "fl4health.strategies.fedavg_dynamic_layer": [[153, 1, 1, "", "FedAvgDynamicLayer"]], "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "aggregate"], [153, 2, 1, "", "aggregate_fit"], [153, 2, 1, "", "unweighted_aggregate"], [153, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[154, 1, 1, "", "FedAvgSparseCooTensor"]], "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "aggregate"], [154, 2, 1, "", "aggregate_fit"], [154, 2, 1, "", "unweighted_aggregate"], [154, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[155, 1, 1, "", "FedAvgWithAdaptiveConstraint"]], "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.feddg_ga": [[156, 1, 1, "", "FairnessMetric"], [156, 1, 1, "", "FairnessMetricType"], [156, 1, 1, "", "FedDgGa"], [156, 6, 1, "", "SignalForTypeError"]], "fl4health.strategies.feddg_ga.FairnessMetric": [[156, 2, 1, "", "__init__"]], "fl4health.strategies.feddg_ga.FairnessMetricType": [[156, 3, 1, "", "ACCURACY"], [156, 3, 1, "", "CUSTOM"], [156, 3, 1, "", "LOSS"], [156, 2, 1, "", "signal_for_type"]], "fl4health.strategies.feddg_ga.FedDgGa": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "aggregate_evaluate"], [156, 2, 1, "", "aggregate_fit"], [156, 2, 1, "", "configure_evaluate"], [156, 2, 1, "", "configure_fit"], [156, 2, 1, "", "get_current_weight_step_size"], [156, 2, 1, "", "update_weights_by_ga"], [156, 2, 1, "", "weight_and_aggregate_results"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[157, 1, 1, "", "FedDgGaAdaptiveConstraint"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.fedpca": [[158, 1, 1, "", "FedPCA"]], "fl4health.strategies.fedpca.FedPCA": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "aggregate_fit"], [158, 2, 1, "", "merge_subspaces_qr"], [158, 2, 1, "", "merge_subspaces_svd"], [158, 2, 1, "", "merge_two_subspaces_qr"]], "fl4health.strategies.fedpm": [[159, 1, 1, "", "FedPm"]], "fl4health.strategies.fedpm.FedPm": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "aggregate"], [159, 2, 1, "", "aggregate_bayesian"], [159, 2, 1, "", "reset_beta_priors"]], "fl4health.strategies.flash": [[160, 1, 1, "", "Flash"]], "fl4health.strategies.flash.Flash": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.model_merge_strategy": [[161, 1, 1, "", "ModelMergeStrategy"]], "fl4health.strategies.model_merge_strategy.ModelMergeStrategy": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "aggregate_evaluate"], [161, 2, 1, "", "aggregate_fit"], [161, 2, 1, "", "configure_evaluate"], [161, 2, 1, "", "configure_fit"], [161, 2, 1, "", "evaluate"], [161, 2, 1, "", "initialize_parameters"]], "fl4health.strategies.noisy_aggregate": [[162, 4, 1, "", "add_noise_to_array"], [162, 4, 1, "", "add_noise_to_ndarrays"], [162, 4, 1, "", "gaussian_noisy_aggregate_clipping_bits"], [162, 4, 1, "", "gaussian_noisy_unweighted_aggregate"], [162, 4, 1, "", "gaussian_noisy_weighted_aggregate"]], "fl4health.strategies.scaffold": [[163, 1, 1, "", "OpacusScaffold"], [163, 1, 1, "", "Scaffold"]], "fl4health.strategies.scaffold.OpacusScaffold": [[163, 2, 1, "", "__init__"]], "fl4health.strategies.scaffold.Scaffold": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "aggregate"], [163, 2, 1, "", "aggregate_fit"], [163, 2, 1, "", "compute_parameter_delta"], [163, 2, 1, "", "compute_updated_control_variates"], [163, 2, 1, "", "compute_updated_parameters"], [163, 2, 1, "", "compute_updated_weights"], [163, 2, 1, "", "configure_fit_all"], [163, 2, 1, "", "initialize_control_variates"]], "fl4health.strategies.strategy_with_poll": [[164, 1, 1, "", "StrategyWithPolling"]], "fl4health.strategies.strategy_with_poll.StrategyWithPolling": [[164, 2, 1, "", "configure_poll"]], "fl4health.utils": [[166, 0, 0, "-", "client"], [167, 0, 0, "-", "config"], [168, 0, 0, "-", "data_generation"], [169, 0, 0, "-", "dataset"], [170, 0, 0, "-", "dataset_converter"], [171, 0, 0, "-", "early_stopper"], [172, 0, 0, "-", "functions"], [173, 0, 0, "-", "load_data"], [174, 0, 0, "-", "logging"], [175, 0, 0, "-", "losses"], [177, 0, 0, "-", "metrics"], [178, 0, 0, "-", "msd_dataset_sources"], [179, 0, 0, "-", "nnunet_utils"], [180, 0, 0, "-", "parameter_extraction"], [181, 0, 0, "-", "partitioners"], [182, 0, 0, "-", "peft_parameter_extraction"], [183, 0, 0, "-", "privacy_utilities"], [184, 0, 0, "-", "random"], [185, 0, 0, "-", "sampler"], [186, 0, 0, "-", "snapshotter"], [187, 0, 0, "-", "typing"]], "fl4health.utils.client": [[166, 4, 1, "", "check_if_batch_is_empty_and_verify_input"], [166, 4, 1, "", "clone_and_freeze_model"], [166, 4, 1, "", "fold_loss_dict_into_metrics"], [166, 4, 1, "", "maybe_progress_bar"], [166, 4, 1, "", "move_data_to_device"], [166, 4, 1, "", "process_and_check_validation_steps"], [166, 4, 1, "", "set_pack_losses_with_val_metrics"]], "fl4health.utils.config": [[167, 6, 1, "", "InvalidConfigError"], [167, 4, 1, "", "check_config"], [167, 4, 1, "", "load_config"], [167, 4, 1, "", "make_dict_with_epochs_or_steps"], [167, 4, 1, "", "narrow_dict_type"], [167, 4, 1, "", "narrow_dict_type_and_set_attribute"]], "fl4health.utils.data_generation": [[168, 1, 1, "", "SyntheticFedProxDataset"], [168, 1, 1, "", "SyntheticIidFedProxDataset"], [168, 1, 1, "", "SyntheticNonIidFedProxDataset"]], "fl4health.utils.data_generation.SyntheticFedProxDataset": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "construct_covariance_matrix"], [168, 2, 1, "", "generate"], [168, 2, 1, "", "generate_client_tensors"], [168, 2, 1, "", "one_layer_map_inputs_to_outputs"], [168, 2, 1, "", "two_layer_map_inputs_to_outputs"]], "fl4health.utils.data_generation.SyntheticIidFedProxDataset": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "generate_client_tensors"], [168, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "generate_client_tensors"], [168, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.dataset": [[169, 1, 1, "", "BaseDataset"], [169, 1, 1, "", "DictionaryDataset"], [169, 1, 1, "", "SslTensorDataset"], [169, 1, 1, "", "SyntheticDataset"], [169, 1, 1, "", "TensorDataset"], [169, 4, 1, "", "select_by_indices"]], "fl4health.utils.dataset.BaseDataset": [[169, 2, 1, "", "update_target_transform"], [169, 2, 1, "", "update_transform"]], "fl4health.utils.dataset.DictionaryDataset": [[169, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SyntheticDataset": [[169, 2, 1, "", "__init__"]], "fl4health.utils.dataset_converter": [[170, 1, 1, "", "AutoEncoderDatasetConverter"], [170, 1, 1, "", "DatasetConverter"]], "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "convert_dataset"], [170, 2, 1, "", "get_condition_vector_size"], [170, 2, 1, "", "get_unpacking_function"], [170, 2, 1, "", "unpack_input_condition"]], "fl4health.utils.dataset_converter.DatasetConverter": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "convert_dataset"]], "fl4health.utils.early_stopper": [[171, 1, 1, "", "EarlyStopper"]], "fl4health.utils.early_stopper.EarlyStopper": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "load_snapshot"], [171, 2, 1, "", "should_stop"]], "fl4health.utils.functions": [[172, 1, 1, "", "BernoulliSample"], [172, 4, 1, "", "decode_and_pseudo_sort_results"], [172, 4, 1, "", "pseudo_sort_scoring_function"], [172, 4, 1, "", "select_zeroeth_element"], [172, 4, 1, "", "sigmoid_inverse"]], "fl4health.utils.functions.BernoulliSample": [[172, 2, 1, "", "backward"], [172, 2, 1, "", "forward"], [172, 2, 1, "", "setup_context"]], "fl4health.utils.load_data": [[173, 1, 1, "", "ToNumpy"], [173, 4, 1, "", "get_cifar10_data_and_target_tensors"], [173, 4, 1, "", "get_mnist_data_and_target_tensors"], [173, 4, 1, "", "get_train_and_val_cifar10_datasets"], [173, 4, 1, "", "get_train_and_val_mnist_datasets"], [173, 4, 1, "", "load_cifar10_data"], [173, 4, 1, "", "load_cifar10_test_data"], [173, 4, 1, "", "load_mnist_data"], [173, 4, 1, "", "load_mnist_test_data"], [173, 4, 1, "", "load_msd_dataset"], [173, 4, 1, "", "split_data_and_targets"]], "fl4health.utils.logging": [[174, 1, 1, "", "LoggingMode"]], "fl4health.utils.logging.LoggingMode": [[174, 3, 1, "", "EARLY_STOP_VALIDATION"], [174, 3, 1, "", "TEST"], [174, 3, 1, "", "TRAIN"], [174, 3, 1, "", "VALIDATION"]], "fl4health.utils.losses": [[175, 1, 1, "", "EvaluationLosses"], [175, 1, 1, "", "LossMeter"], [175, 1, 1, "", "LossMeterType"], [175, 1, 1, "", "Losses"], [175, 1, 1, "", "TrainingLosses"]], "fl4health.utils.losses.EvaluationLosses": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "aggregate"], [175, 2, 1, "", "as_dict"]], "fl4health.utils.losses.LossMeter": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "aggregate_losses_dict"], [175, 2, 1, "", "clear"], [175, 2, 1, "", "compute"], [175, 2, 1, "", "update"]], "fl4health.utils.losses.LossMeterType": [[175, 3, 1, "", "ACCUMULATION"], [175, 3, 1, "", "AVERAGE"]], "fl4health.utils.losses.Losses": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "aggregate"], [175, 2, 1, "", "as_dict"]], "fl4health.utils.losses.TrainingLosses": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "aggregate"], [175, 2, 1, "", "as_dict"]], "fl4health.utils.msd_dataset_sources": [[178, 1, 1, "", "MsdDataset"], [178, 4, 1, "", "get_msd_dataset_enum"]], "fl4health.utils.msd_dataset_sources.MsdDataset": [[178, 3, 1, "", "TASK01_BRAINTUMOUR"], [178, 3, 1, "", "TASK02_HEART"], [178, 3, 1, "", "TASK03_LIVER"], [178, 3, 1, "", "TASK04_HIPPOCAMPUS"], [178, 3, 1, "", "TASK05_PROSTATE"], [178, 3, 1, "", "TASK06_LUNG"], [178, 3, 1, "", "TASK07_PANCREAS"], [178, 3, 1, "", "TASK08_HEPATICVESSEL"], [178, 3, 1, "", "TASK09_SPLEEN"], [178, 3, 1, "", "TASK10_COLON"]], "fl4health.utils.nnunet_utils": [[179, 1, 1, "", "Module2LossWrapper"], [179, 1, 1, "", "NnUNetDataLoaderWrapper"], [179, 1, 1, "", "NnunetConfig"], [179, 1, 1, "", "PolyLRSchedulerWrapper"], [179, 1, 1, "", "StreamToLogger"], [179, 4, 1, "", "collapse_one_hot_tensor"], [179, 4, 1, "", "convert_deep_supervision_dict_to_list"], [179, 4, 1, "", "convert_deep_supervision_list_to_dict"], [179, 4, 1, "", "get_dataset_n_voxels"], [179, 4, 1, "", "get_segs_from_probs"], [179, 4, 1, "", "prepare_loss_arg"], [179, 4, 1, "", "reload_modules"], [179, 4, 1, "", "set_nnunet_env"], [179, 4, 1, "", "use_default_signal_handlers"]], "fl4health.utils.nnunet_utils.Module2LossWrapper": [[179, 2, 1, "", "forward"]], "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "reset"], [179, 2, 1, "", "shutdown"]], "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "get_lr"]], "fl4health.utils.nnunet_utils.StreamToLogger": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "flush"], [179, 2, 1, "", "write"]], "fl4health.utils.parameter_extraction": [[180, 4, 1, "", "check_shape_match"], [180, 4, 1, "", "get_all_model_parameters"]], "fl4health.utils.partitioners": [[181, 1, 1, "", "DirichletLabelBasedAllocation"]], "fl4health.utils.partitioners.DirichletLabelBasedAllocation": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "partition_dataset"], [181, 2, 1, "", "partition_label_indices"]], "fl4health.utils.peft_parameter_extraction": [[182, 4, 1, "", "get_all_peft_parameters_from_model"]], "fl4health.utils.privacy_utilities": [[183, 4, 1, "", "convert_model_to_opacus_model"], [183, 4, 1, "", "map_model_to_opacus_model"], [183, 4, 1, "", "privacy_validate_and_fix_modules"]], "fl4health.utils.random": [[184, 4, 1, "", "generate_hash"], [184, 4, 1, "", "restore_random_state"], [184, 4, 1, "", "save_random_state"], [184, 4, 1, "", "set_all_random_seeds"], [184, 4, 1, "", "unset_all_random_seeds"]], "fl4health.utils.sampler": [[185, 1, 1, "", "DirichletLabelBasedSampler"], [185, 1, 1, "", "LabelBasedSampler"], [185, 1, 1, "", "MinorityLabelBasedSampler"]], "fl4health.utils.sampler.DirichletLabelBasedSampler": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "subsample"]], "fl4health.utils.sampler.LabelBasedSampler": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "subsample"]], "fl4health.utils.sampler.MinorityLabelBasedSampler": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "subsample"]], "fl4health.utils.snapshotter": [[186, 1, 1, "", "AbstractSnapshotter"], [186, 1, 1, "", "BytesSnapshotter"], [186, 1, 1, "", "EnumSnapshotter"], [186, 1, 1, "", "HistorySnapshotter"], [186, 1, 1, "", "LRSchedulerSnapshotter"], [186, 1, 1, "", "OptimizerSnapshotter"], [186, 1, 1, "", "SerializableObjectSnapshotter"], [186, 1, 1, "", "SingletonSnapshotter"], [186, 1, 1, "", "StringSnapshotter"], [186, 1, 1, "", "TorchModuleSnapshotter"]], "fl4health.utils.snapshotter.AbstractSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.BytesSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.EnumSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.HistorySnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.LRSchedulerSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.OptimizerSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SerializableObjectSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SingletonSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.StringSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.TorchModuleSnapshotter": [[186, 2, 1, "", "load_attribute"], [186, 2, 1, "", "save_attribute"]], "fl4health.utils.typing": [[187, 1, 1, "", "LogLevel"]], "fl4health.utils.typing.LogLevel": [[187, 3, 1, "", "CRITICAL"], [187, 3, 1, "", "DEBUG"], [187, 3, 1, "", "ERROR"], [187, 3, 1, "", "INFO"], [187, 3, 1, "", "NOTSET"], [187, 3, 1, "", "WARNING"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [1, 10, 11, 13, 14, 17, 21, 22, 23, 25, 27, 28, 29, 36, 38, 40, 43, 44, 46, 47, 48, 50, 51, 79, 88, 89, 95, 113, 117, 119, 129, 133, 139, 145, 151, 153, 154, 156, 158, 159, 160, 163, 164, 166, 168, 179, 181], "0": [7, 24, 27, 43, 44, 45, 46, 48, 50, 55, 58, 68, 70, 71, 73, 75, 77, 78, 79, 82, 83, 84, 92, 93, 94, 100, 102, 103, 107, 119, 129, 133, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 168, 172, 173, 179, 181, 185, 187], "000": 48, "000local": 48, "001": [7, 70], "00818": 34, "01": 92, "03075": 59, "03871": 152, "05": [72, 103], "05206": 36, "05629": [151, 155], "05709": [68, 97], "06127": 168, "06378": [51, 147, 163], "06963": [152, 162], "07": [75, 82], "07078": [36, 96], "07623": 33, "07978313": [181, 185], "08857052": [181, 185], "09": 160, "09158": [68, 97], "09278": [51, 147], "1": [16, 24, 27, 43, 44, 46, 48, 50, 51, 62, 68, 69, 70, 72, 75, 77, 78, 79, 82, 83, 84, 92, 94, 100, 102, 103, 107, 109, 119, 129, 133, 139, 140, 141, 142, 143, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 168, 171, 172, 173, 179, 181, 185], "10": [1, 27, 43, 44, 70, 84, 107, 168, 173, 179, 181, 185, 187], "100": 185, "1000": [168, 181, 185], "10000": 181, "12": 48, "1308": 172, "13461": 22, "15": 58, "15328": [35, 142, 159], "1602": [151, 155], "16825": 37, "1710": [152, 162], "1812": 168, "19": 72, "1905": 152, "1910": [51, 147, 163], "1912": 34, "19619462": [181, 185], "19644968": [181, 185], "19992536": [181, 185], "1d": [83, 100, 168, 181], "1e": [72, 75, 82, 103, 160], "2": [7, 23, 31, 48, 51, 68, 72, 75, 78, 79, 82, 83, 84, 107, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 168, 172, 173, 179, 181, 185], "20": [7, 27, 43, 44, 59, 187], "2002": [68, 97], "2003": 22, "20080513": [181, 185], "2016": [68, 128], "2019": 59, "2023": [156, 157], "2066252": [181, 185], "2102": [33, 36, 96], "2111": [51, 147], "2207": [59, 68, 97], "2209": [35, 142, 159], "2303": 36, "2309": 37, "23645891": [181, 185], "250": [48, 179], "29519184": [181, 185], "2999956": [181, 185], "2d": [33, 48, 78, 95, 100, 103, 107, 168], "2i": 72, "2n": 68, "3": [1, 7, 48, 62, 75, 78, 82, 84, 181], "30": 187, "32": [128, 146, 184], "333": 77, "3432": 172, "3837": 179, "3d": [75, 82, 100, 103], "3d_fullr": 48, "4": [48, 51, 72, 75, 78, 79, 82, 84, 172], "40": 187, "4096": 184, "42": 184, "4d": 103, "5": [46, 48, 50, 68, 70, 71, 73, 75, 77, 78, 82, 92, 93, 103, 107, 152, 155, 157, 168, 171, 179, 181, 185], "50": [70, 185, 187], "5d": 103, "6": 107, "60": 168, "64": [7, 84, 179], "667": 77, "6b180037abbebea991d8b1232f8a8ca9": 68, "7": [58, 84], "8": [31, 55, 58, 78, 79, 184, 185], "80": 1, "8080": 7, "8222": 78, "9": [1, 7, 77, 84, 152, 160, 179], "99": 160, "A": [1, 4, 10, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 92, 94, 95, 97, 98, 103, 104, 105, 107, 117, 119, 129, 130, 131, 133, 136, 138, 140, 141, 142, 143, 144, 145, 147, 150, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 169, 170, 173, 175, 179, 184, 186], "AND": [10, 36, 38, 78, 145, 163, 169], "AS": 50, "AT": [78, 79], "As": [1, 10, 11, 13, 28, 40, 75, 79, 82, 84, 88, 89, 107, 168, 172], "At": [1, 23, 30, 38, 45, 171], "By": [13, 21, 23, 27, 40, 43, 44, 48, 70, 85, 86, 105, 139, 163], "For": [1, 11, 13, 14, 17, 22, 23, 25, 27, 28, 32, 33, 36, 38, 43, 44, 45, 46, 47, 48, 50, 65, 75, 77, 78, 79, 82, 84, 88, 89, 92, 93, 100, 103, 107, 109, 113, 116, 119, 125, 128, 129, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 152, 153, 154, 155, 156, 157, 158, 162, 168, 169, 172, 179, 183, 184, 185], "If": [1, 7, 10, 11, 12, 13, 14, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 66, 71, 72, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 97, 100, 102, 103, 107, 122, 125, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 155, 156, 157, 158, 163, 166, 167, 168, 171, 172, 179, 181, 184], "In": [1, 4, 10, 21, 22, 23, 27, 28, 30, 36, 38, 43, 47, 48, 49, 50, 72, 78, 79, 84, 85, 86, 88, 89, 100, 102, 103, 117, 119, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 158, 159, 161, 168, 175, 181, 185], "It": [1, 12, 13, 14, 32, 47, 48, 68, 79, 93, 95, 96, 113, 117, 123, 129, 130, 133, 139, 151, 152, 156, 157, 163, 168, 172, 181, 183, 184], "NOT": [10, 38, 98, 108, 155, 157], "No": [18, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 127], "Not": [45, 47, 48, 62, 112, 141, 144, 161], "OR": 145, "On": [47, 79], "One": [4, 22, 79, 108, 143, 147, 173], "Or": 166, "TO": 50, "That": [1, 11, 30, 36, 78, 79, 92, 93, 104, 152, 163, 168, 181], "The": [1, 4, 7, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 59, 62, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 112, 113, 116, 119, 123, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 175, 179, 181, 183, 184, 185, 186], "Their": 79, "Then": [23, 24, 27, 28, 29, 33, 38, 43, 44, 47, 48, 51, 88, 89, 159, 163, 168], "There": [38, 79, 172, 181], "These": [1, 4, 23, 28, 30, 31, 38, 45, 49, 72, 78, 79, 88, 89, 92, 96, 104, 105, 108, 109, 113, 140, 141, 143, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 168, 180, 182], "To": [1, 7, 23, 29, 31, 38, 45, 48, 51, 75, 76, 77, 82, 85, 86, 93, 144, 175], "Will": [10, 14, 156, 169], "With": 7, "_": [7, 10, 12, 51, 73], "_1": 51, "_2": 51, "__call__": [75, 79, 82], "__init__": [1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 168, 169, 170, 171, 175, 179, 181, 185], "_config": 48, "_description_": [30, 90], "_f": 107, "_hydrate_model_for_checkpoint": [13, 144], "_loss": [7, 23, 48, 87, 89, 123, 179], "_lrschedul": [48, 179], "_maskedbatchnorm": 103, "_modul": 100, "_p": 73, "_post_process_count_tensor": 78, "_state": 14, "_train_step_with_model_and_optim": 40, "_type_": 90, "_val_step_with_model": 40, "ab": [22, 33, 34, 36, 51, 59, 147, 151, 152, 155, 168], "ab8068dbc96804a5c1a8b898fd115175cfebfe75": 92, "abadi": 128, "abc": [1, 10, 14, 75, 76, 79, 82, 93, 105, 106, 115, 116, 127, 128, 139, 164, 168, 169, 175, 185, 186], "abil": [38, 40, 85, 86], "abl": [1, 46], "ablat": [4, 37], "about": [21, 23, 24, 28, 30, 38, 45, 47, 51, 56, 85, 86, 88, 89], "abov": [1, 4, 27, 38, 43, 44, 72, 75, 78, 79, 82, 83, 107, 119, 127, 128, 129, 133, 152, 154, 158, 168], "absenc": 4, "absolut": [69, 179], "abstract": [10, 14, 45, 68, 75, 76, 79, 82, 93, 105, 106, 115, 116, 118, 122, 127, 128, 164, 168, 175, 185, 186], "abstracta": [8, 91, 93], "abstractsnapshott": [8, 14, 165, 186], "accept": [77, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 172], "accept_failur": [136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "access": [129, 133], "accessor": [88, 89], "accomplish": [78, 139, 185], "accord": [24, 48, 51, 84, 107, 119, 151, 154, 155, 161, 163, 175, 181], "accordingli": 93, "account": [41, 84, 127, 129, 133, 140, 143, 147, 152, 158], "accumul": [27, 43, 44, 75, 76, 77, 79, 81, 82, 95, 165, 175], "accumulate_featur": 95, "accuraci": [7, 8, 75, 77, 82, 149, 156, 161, 163], "achiev": [23, 40], "across": [38, 45, 47, 69, 73, 78, 79, 80, 95, 127, 129, 130, 133, 153, 154, 158, 159, 162, 163, 168, 172, 179, 181], "act": [94, 103, 105, 109, 166], "activ": [1, 7, 23, 25, 27, 28, 38, 40, 43, 44, 46, 50], "actual": [11, 47, 107], "ad": [1, 4, 10, 14, 21, 23, 24, 27, 28, 30, 38, 40, 43, 44, 45, 47, 51, 62, 85, 86, 88, 89, 95, 100, 103, 105, 107, 128, 129, 133, 140, 143, 145, 147, 162, 170], "adap": 179, "adapt": [4, 13, 21, 28, 39, 40, 47, 59, 85, 86, 92, 152, 155, 157, 160], "adapt_loss_weight": [155, 157], "adaptive_alpha": 92, "adaptive_clip": [24, 152], "adaptive_constraint_serv": [8, 134], "adaptive_drift_constrain": [8, 85], "adaptive_drift_constraint_cli": [8, 20], "adaptiveconstraintservercheckpointandstatemodul": [8, 9, 13, 136, 137, 138], "adaptivedriftconstrainedmixin": [8, 85, 86, 88, 89], "adaptivedriftconstrainedprotocol": [8, 85, 86, 88, 89], "adaptivedriftconstraintcli": [8, 20, 21, 28, 32, 47, 85, 86], "add": [4, 10, 14, 21, 27, 28, 35, 38, 43, 44, 47, 75, 82, 85, 86, 88, 89, 100, 107, 123, 129, 130, 133, 139, 142, 152, 162, 172], "add_items_to_config_fn": [8, 134, 145], "add_mean": 107, "add_noise_to_arrai": [8, 149, 162], "add_noise_to_ndarrai": [8, 149, 162], "add_to_snapshot_attr": [9, 14], "addit": [1, 4, 13, 21, 22, 23, 25, 27, 28, 29, 38, 39, 43, 44, 46, 47, 48, 50, 78, 79, 88, 89, 95, 100, 102, 103, 139, 145, 155, 168, 170, 175, 184], "addition": [28, 48], "additional_dim": 179, "additional_loss": 175, "additional_paramet": [114, 116, 118], "adher": 1, "adjust": [4, 155, 156, 157], "adjustment_weight": 156, "adjustment_weight_step_s": [156, 157], "advanc": [22, 23], "aeprocessor": [120, 121, 122], "affect": [78, 145, 184], "affin": [103, 168], "aforement": 172, "after": [4, 7, 10, 11, 13, 14, 21, 22, 23, 25, 27, 32, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 79, 85, 86, 92, 93, 103, 107, 117, 124, 129, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 152, 158, 159, 161, 168, 173, 179], "afterward": [93, 179], "again": 17, "against": [21, 22, 23, 25, 27, 28, 29, 38, 43, 44, 46, 47, 50, 75, 76, 77, 82, 88, 89, 156, 157], "agglom": 158, "aggreg": [4, 11, 13, 21, 22, 23, 25, 28, 30, 31, 32, 33, 38, 44, 45, 46, 47, 48, 49, 50, 51, 73, 78, 79, 80, 85, 86, 88, 89, 92, 94, 96, 98, 108, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 172, 175], "aggregate_bayesian": [149, 159], "aggregate_evalu": [134, 141, 149, 151, 156, 161], "aggregate_fit": [149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163], "aggregate_loss": [8, 149, 150], "aggregate_losses_dict": [165, 175], "aggregate_result": [8, 149, 150], "aggregate_util": [8, 149], "aggregated_metr": 80, "aggregation_mod": 94, "ai": [55, 129, 133], "aim": [4, 33, 50, 68, 72, 73, 93, 136, 137, 138, 139, 140, 142, 143, 145, 147], "akin": [11, 28, 47], "al": [59, 128, 156, 157], "algorithm": [4, 22, 23, 28, 30, 32, 35, 38, 46, 47, 88, 89, 107, 117, 136, 138, 142, 147, 152, 156, 157, 158, 160, 184], "alia": [25, 28, 29, 36, 46, 50, 62, 88, 89], "align": [70, 78, 79, 151, 153, 154, 158, 159, 163], "align_pred_and_target_shap": [8, 75, 84], "all": [1, 4, 11, 14, 16, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 38, 40, 43, 44, 46, 47, 48, 49, 50, 51, 56, 62, 65, 71, 78, 79, 80, 81, 83, 85, 86, 88, 89, 93, 95, 98, 100, 107, 112, 113, 117, 119, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 168, 170, 171, 172, 175, 179, 180, 182], "all_client_metr": 80, "all_h_u_per_sampl": 72, "all_h_u_per_v_i": 72, "alloc": [173, 181], "allow": [4, 10, 11, 13, 14, 21, 23, 24, 28, 30, 31, 36, 38, 39, 40, 41, 45, 47, 51, 62, 72, 77, 85, 86, 88, 89, 95, 104, 107, 125, 129, 133, 139, 142, 145, 151, 153, 154, 156, 158, 159, 171, 172, 184], "almost": 162, "along": [1, 4, 13, 22, 23, 29, 30, 31, 36, 38, 40, 45, 48, 51, 78, 79, 80, 81, 84, 95, 98, 108, 141, 152, 153, 154, 155, 158, 159, 175], "alpha": [23, 27, 43, 44, 92, 159, 168], "alpha_lr": 92, "alpha_new": 159, "alreadi": [1, 7, 10, 11, 12, 22, 23, 29, 40, 45, 48, 107, 113, 129, 133, 158, 173], "also": [1, 4, 13, 21, 23, 24, 25, 27, 28, 29, 35, 38, 43, 44, 46, 47, 48, 49, 50, 51, 72, 79, 85, 86, 88, 89, 96, 98, 104, 116, 117, 119, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 153, 154, 155, 156, 157, 158, 159, 163, 168, 170, 172, 179, 184], "alter": 1, "altern": [107, 168], "although": [93, 179], "alwai": [10, 12, 21, 24, 30, 45, 47, 48, 79, 85, 86, 104, 117, 129, 130, 133, 161, 179], "always_preprocess": 48, "ambigu": 84, "among": 154, "amount": [139, 140, 143, 147, 155, 157], "an": [1, 4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 62, 66, 76, 77, 78, 79, 83, 85, 86, 88, 89, 93, 94, 97, 100, 102, 103, 104, 105, 107, 116, 117, 119, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 166, 168, 169, 172, 174, 175, 178, 179, 181, 183, 185, 187], "analysi": [1, 107, 158], "analyt": 123, "analyz": 55, "ani": [1, 10, 11, 13, 14, 22, 23, 24, 25, 27, 29, 31, 33, 36, 40, 43, 44, 46, 48, 50, 56, 58, 59, 79, 87, 90, 92, 95, 96, 105, 113, 114, 115, 116, 117, 118, 119, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 153, 154, 156, 157, 158, 164, 167, 168, 170, 172, 179, 180, 183, 184, 185, 186], "announc": [23, 48], "anoth": [4, 7, 100, 102, 103, 119, 163, 168, 181], "anticip": 4, "anyth": [4, 23, 27, 28, 29, 88, 89, 100, 139], "apfl": [4, 22, 23, 27, 43, 44, 48, 92], "apfl_bas": [8, 91], "apfl_client": [8, 20], "apflclient": [8, 20, 22], "apflmodul": [8, 91, 92], "api": 4, "app": 141, "appear": 1, "append": [23, 48, 62, 75, 76, 77, 82, 175], "appendix": 168, "appli": [1, 4, 16, 17, 18, 21, 23, 25, 27, 29, 40, 43, 44, 48, 51, 55, 58, 62, 68, 77, 85, 86, 88, 89, 92, 100, 102, 103, 107, 124, 127, 128, 145, 159, 162, 170, 172, 173, 179], "applic": [4, 10, 62, 101, 124, 128, 155, 157, 179], "apply_adaptive_drift_to_cli": [8, 85, 86], "apply_layer_filt": [110, 113], "approach": [11, 33, 35, 37, 49, 50, 70, 92, 96, 108, 151, 152, 155, 158, 159, 183], "appropri": [21, 23, 30, 33, 36, 46, 50, 78, 85, 86, 88, 89, 93, 150, 168], "approv": 1, "approx": 152, "approxim": [27, 43, 44, 72, 107, 127, 158], "ar": [1, 4, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 68, 69, 70, 72, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 112, 113, 116, 117, 119, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 170, 171, 172, 179, 180, 181, 182, 183, 185], "arbitrari": [23, 116, 119, 130, 131, 153, 154, 172], "architectur": [4, 13, 28, 38, 88, 89, 92, 93, 96, 145, 151, 163], "area": [75, 82, 153, 154], "aren": 39, "arg": [85, 86, 87, 88, 89, 90, 106, 172, 183, 185], "argmax": 168, "argument": [7, 10, 12, 23, 27, 40, 43, 44, 77, 78, 79, 83, 107, 129, 130, 131, 133, 145, 166, 172, 179], "around": [1, 137], "arrai": [21, 85, 86, 112, 116, 144, 150, 159, 162, 163, 172, 180, 181, 182, 185], "arrang": 158, "art": 4, "articl": [50, 73], "artifact": [136, 137, 138, 139, 140, 142, 143, 145, 147], "arxiv": [22, 33, 34, 35, 36, 37, 51, 59, 68, 96, 97, 142, 147, 151, 152, 155, 159, 162, 163, 168, 172], "as_dict": [165, 175], "ask": [38, 136, 137, 138, 139, 140, 142, 143, 145, 147], "assert": 14, "assertionerror": [45, 75, 82, 84], "assess": 70, "assign": [181, 185], "assist": 14, "associ": [1, 10, 12, 14, 17, 23, 24, 30, 31, 37, 39, 46, 50, 55, 65, 71, 73, 75, 76, 77, 78, 79, 81, 82, 90, 92, 93, 108, 109, 116, 119, 129, 133, 141, 146, 147, 151, 152, 163, 168, 169, 180, 181, 182, 183], "assum": [13, 21, 22, 23, 24, 27, 28, 29, 30, 38, 40, 43, 44, 45, 48, 49, 51, 69, 72, 75, 78, 79, 82, 84, 85, 86, 88, 89, 93, 97, 100, 102, 103, 107, 108, 112, 113, 127, 128, 141, 152, 156, 158, 159, 161, 163, 166, 168, 172, 179, 181], "assumpt": [84, 93, 95], "attempt": [4, 10, 12, 30, 39, 50, 78, 79, 84, 181, 183], "attent": 169, "attribut": [10, 11, 14, 22, 23, 24, 25, 27, 28, 29, 30, 33, 38, 43, 44, 45, 47, 48, 51, 75, 76, 77, 79, 82, 88, 89, 95, 140, 143, 156, 167, 171, 172, 186], "attribute_nam": 167, "attribute_snapshot": 186, "aucroc": [75, 82], "augment": [32, 48, 179], "auto": 93, "autocast": 48, "autodocstr": 1, "autoencod": [8, 93, 120, 170], "autoencoderdatasetconvert": [8, 165, 170], "autoencoderprocess": [120, 121, 122], "autoencoders_bas": [8, 91], "autograd": 172, "autom": 1, "automat": [1, 7, 11, 40, 97, 172], "auxiliari": [21, 85, 86, 157], "avail": [1, 4, 11, 13, 16, 18, 139, 147, 151, 161, 163], "available_cli": [151, 161], "averag": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 75, 77, 78, 79, 82, 91, 94, 140, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 175, 179], "avoid": [14, 75, 82, 129, 133, 179, 184], "awai": [27, 43, 44, 107, 117], "awar": 39, "axi": [78, 79, 94], "b": [23, 48, 158, 168], "b_1": 168, "b_2": 168, "b_i": 168, "b_k": [128, 168], "back": [10, 12, 23, 30, 31, 45, 49, 100, 102, 103, 107, 152, 163, 179], "background": [78, 79, 88, 89, 179], "backprop": [22, 23, 40, 48], "backpropag": 29, "backward": [21, 23, 27, 28, 29, 38, 40, 43, 44, 46, 47, 51, 165, 172, 175], "balanc": [75, 82], "balanced_accuraci": [75, 82], "balanced_accuracy_scor": [75, 82], "balancedaccuraci": [8, 75, 82], "bar": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 166], "base": [10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 185, 186, 187], "base_loss": 123, "base_metr": [8, 75], "base_model": 109, "base_modul": [96, 104, 109], "base_report": [8, 129], "base_sampling_manag": [8, 15], "base_serv": [7, 8, 134], "basecli": [85, 86], "basedataset": [8, 124, 165, 169, 185], "baseestim": 62, "baseexcept": [141, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163], "basefractionsamplingmanag": [8, 15, 16, 18, 19, 152, 163], "basereport": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147], "baseservercheckpointandstatemodul": [8, 9, 13, 139, 140], "basi": [72, 79], "basic": [10, 13, 23, 48, 49, 51, 86, 88, 122, 129, 133, 136, 138, 145, 156], "basic_cli": [7, 8, 20], "basic_exampl": 7, "basic_fedavg": [8, 149], "basica": [8, 91, 93], "basiccli": [7, 8, 10, 11, 14, 20, 21, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 46, 48, 49, 50, 51, 87, 171], "basicfedavg": [8, 143, 149, 151, 152, 153, 154, 155, 158, 160, 163], "batch": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 68, 69, 77, 78, 79, 93, 94, 95, 103, 116, 127, 128, 143, 147, 152, 166, 173, 179], "batch_dim": [78, 79], "batch_siz": [7, 48, 55, 58, 68, 69, 73, 75, 82, 95, 98, 104, 108, 109, 143, 147, 173, 179], "batchnorm": 183, "batchnorm2d": 33, "bayesian": [142, 159], "bayesian_aggreg": 159, "becaus": [11, 36, 48, 78, 107, 112, 144, 152, 179], "becom": 16, "been": [1, 4, 7, 11, 13, 21, 23, 25, 30, 31, 35, 45, 51, 79, 80, 83, 85, 86, 88, 89, 93, 95, 100, 105, 107, 113, 116, 139, 144, 145, 152, 166, 168, 172, 181], "befor": [1, 7, 11, 13, 16, 23, 25, 27, 28, 32, 40, 43, 44, 45, 46, 47, 48, 50, 51, 72, 77, 88, 89, 104, 105, 129, 133, 136, 137, 138, 139, 140, 142, 144, 146, 147, 153, 154, 155, 157, 170, 171, 179], "begin": [23, 38, 48, 49, 139, 142, 159], "behavior": [21, 30, 31, 41, 48, 77, 78, 85, 86, 136, 137, 138, 139, 140, 142, 143, 147, 156, 179], "behind": 158, "being": [4, 12, 13, 14, 21, 23, 24, 25, 28, 30, 34, 37, 38, 39, 45, 46, 47, 49, 50, 51, 74, 77, 78, 79, 84, 85, 86, 88, 89, 109, 139, 140, 143, 145, 147, 151, 163, 179], "believ": 107, "belong": [90, 109, 116, 119, 154, 158], "below": [1, 24, 75, 77, 78, 79, 82, 83, 112, 168], "benchmark": 184, "bernoulli": [100, 102, 103, 159, 172], "bernoulli_prob": 172, "bernoullisampl": [8, 165, 172], "best": [4, 171], "bestlossopacuscheckpoint": [8, 9, 12], "bestlosstorchmodulecheckpoint": [8, 9, 10], "bestmetrictorchmodulecheckpoint": [8, 9, 10], "beta": [23, 27, 43, 44, 72, 142, 152, 159, 168, 181, 185], "beta_1": 160, "beta_2": 160, "beta_global_update_interv": [43, 44], "beta_new": 159, "beta_with_extreme_kernel_base_valu": [67, 72], "better": [1, 4, 10], "between": [4, 22, 23, 24, 25, 27, 28, 32, 34, 36, 37, 38, 43, 44, 46, 47, 49, 51, 68, 69, 70, 71, 72, 73, 74, 77, 78, 84, 100, 102, 103, 117, 119, 123, 159, 173], "bia": [100, 102, 103, 168], "bias": [103, 129, 133], "bias_scor": 117, "bin": 1, "binar": [78, 79], "binari": [48, 60, 66, 75, 78, 79, 82, 84, 100, 102, 103, 117, 152, 159, 179], "binaryclassificationmetr": [8, 75, 78, 79], "binarydic": [8, 75, 78], "binarysoftdicecoeffici": [8, 75, 82], "bit": [13, 24, 139, 142, 152, 162, 179], "black": 1, "blank": [136, 137, 138, 139, 140, 142, 143, 147], "blob": [48, 92, 128], "block": [77, 100, 158, 179], "bool": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 62, 65, 70, 71, 72, 85, 86, 87, 88, 89, 92, 95, 97, 98, 100, 101, 102, 103, 107, 109, 113, 117, 122, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 170, 171, 179, 183, 184, 186], "boolean": [21, 23, 24, 28, 30, 38, 47, 49, 85, 86, 88, 89, 95, 103, 172, 183, 186], "both": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 77, 78, 84, 88, 89, 92, 93, 94, 98, 100, 103, 108, 136, 137, 138, 139, 140, 142, 143, 145, 147, 163, 167], "bound": [24, 100, 102, 103, 127, 128, 152, 162, 185], "branch": 1, "break": [1, 4, 36, 181], "buf": 179, "buffer": [27, 43, 44, 95, 179], "bug": 168, "built": [1, 4, 152, 163], "byte": [30, 65, 87, 157, 160, 186], "bytessnapshott": [8, 165, 186], "c": [1, 24, 51, 103, 163, 168], "c_": 163, "c_i": 51, "c_t": 152, "c_updat": 163, "cach": 48, "calcul": [4, 22, 23, 25, 30, 38, 46, 50, 51, 75, 77, 78, 79, 82, 104, 117, 123, 152, 156, 163, 166, 179], "calculate_parameters_norm": [20, 24], "calculate_update_with_momentum": [149, 152], "call": [1, 7, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 32, 36, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 85, 86, 88, 89, 93, 95, 119, 129, 130, 131, 133, 139, 142, 153, 154, 159, 172, 179, 183, 185], "callabl": [1, 55, 58, 59, 77, 90, 93, 95, 117, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 170, 173, 179], "can": [1, 7, 14, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 47, 48, 51, 68, 70, 72, 78, 79, 85, 86, 93, 95, 97, 107, 116, 122, 125, 127, 129, 133, 139, 144, 145, 152, 153, 154, 156, 157, 158, 159, 161, 163, 164, 166, 170, 172, 179, 184], "cancer": 58, "cannot": [84, 129, 133], "capabl": 93, "care": [93, 179], "carri": 140, "case": [21, 22, 23, 27, 28, 31, 43, 45, 50, 78, 79, 85, 86, 88, 89, 119, 129, 130, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 158, 159, 161, 162, 166, 175, 179], "categor": [65, 83], "categori": 65, "caus": [136, 137, 138, 139, 140, 142, 143, 145, 147], "cc": 68, "cdot": [24, 51, 77, 92, 93, 107, 163, 168], "cell": 56, "cell_typ": 56, "center": [107, 162, 168], "center_data": [91, 107], "central": [127, 151, 152, 153, 154, 155, 158, 159, 161, 163], "certain": [12, 109, 154, 184], "cfg_fn": 145, "chang": [1, 7, 14, 35, 62, 129, 133, 155, 156, 157], "channel": [75, 78, 79, 82, 100, 103, 145], "charact": 179, "check": [14, 23, 29, 30, 39, 48, 95, 101, 129, 131, 133, 156, 166, 167, 179, 180], "check_config": [8, 165, 167], "check_if_batch_is_empty_and_verify_input": [8, 165, 166], "check_shape_match": [8, 165, 180], "check_target_prediction_keys_equ": [75, 81], "checker": 1, "checkpoint": [1, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 88, 89, 95, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 156, 171, 175], "checkpoint_and_state_modul": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 136, 137, 138, 139, 140, 142, 143, 145, 147], "checkpoint_dict": 14, "checkpoint_dir": [10, 11, 12, 14], "checkpoint_exist": [9, 14], "checkpoint_nam": [10, 11, 12, 14], "checkpoint_path": [10, 12, 13, 14], "checkpoint_score_funct": [10, 12], "checkpoint_score_nam": [10, 12], "checkpointing_path": [122, 124], "checkpointmod": [8, 9, 11], "checkpointscorefunctiontyp": 10, "child": [13, 23, 29, 31, 38, 45, 48, 79, 105, 139, 175, 179], "choic": 1, "choos": 107, "chosen": [107, 139, 142, 170], "cid": [16, 156, 172], "cifar10": 173, "cifarcli": 7, "circular": 100, "clarifi": 1, "class": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 185, 186, 187], "classif": [37, 38, 75, 79, 82, 84, 98, 104, 108, 109], "classifi": [4, 34, 36, 75, 82, 109], "classificationmetr": [8, 75, 79], "classmethod": [100, 102, 103, 156], "clear": [8, 75, 76, 77, 79, 81, 82, 95, 165, 175], "clear_buff": [91, 95], "client": [4, 8, 10, 11, 13, 14, 16, 17, 18, 19, 55, 56, 59, 73, 80, 85, 86, 88, 89, 98, 108, 113, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 170, 171, 172, 179, 181, 184], "client_": 14, "client_base_typ": [86, 88], "client_batch_s": 127, "client_dataset_s": 127, "client_dp_fedavgm": [8, 149], "client_instruct": 146, "client_level_dp_fed_avg_serv": [8, 134], "client_manag": [7, 8, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 156, 161, 163, 164], "client_model_upd": 162, "client_modul": [8, 9], "client_nam": [14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59], "client_num": [55, 56], "client_result": 172, "client_sampling_r": 127, "client_singular_valu": 158, "client_singular_vector": 158, "clientcheckpointandstatemodul": [8, 9, 11, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51], "clientlevelaccount": [8, 126, 127], "clientleveldpfedavgm": [8, 140, 149, 152], "clientleveldpfedavgserv": [8, 134, 140], "clientmanag": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 156, 161, 163], "clientproxi": [16, 17, 18, 19, 141, 146, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 172], "clientstatecheckpoint": [8, 9, 11, 14], "clip": [4, 13, 23, 24, 40, 48, 127, 128, 152, 162], "clip_paramet": [20, 24], "clipping_bit": 152, "clipping_bound": [24, 41, 162], "clipping_cli": [8, 20], "clipping_learning_r": 152, "clipping_noise_multipli": 152, "clipping_quantil": 152, "clippingbitservercheckpointandstatemodul": [8, 9, 13], "clone": [46, 166], "clone_and_freeze_model": [8, 165, 166], "close": [4, 37], "cnn_model": 7, "code": [4, 59, 70, 77, 168, 172], "codecov": 1, "codestyl": 1, "coeffici": [4, 21, 72, 75, 78, 82, 155, 163], "coincid": 72, "collabor": 7, "collaps": 179, "collapse_one_hot_tensor": [8, 165, 179], "collat": 31, "collect": [1, 156, 157, 175], "column": [59, 62, 107, 158], "com": [28, 48, 50, 59, 68, 70, 73, 88, 89, 92, 128, 168, 179, 184], "combin": [4, 22, 38, 92, 105, 152, 157, 172], "come": [1, 79, 172], "comm": 92, "command": 1, "commenc": 7, "comment": 1, "commit": 1, "common": 7, "commun": [13, 35, 45, 49, 139, 152], "compar": [49, 71, 79, 107, 117, 119], "comparison": [71, 117], "compat": [35, 38, 41, 75, 77, 82, 92, 93, 104, 105, 109, 129, 133, 172, 179, 183], "compil": 48, "complement": 78, "complet": [4, 22, 23, 27, 43, 44, 46, 95, 125, 127], "complex": 13, "compliant": 183, "compon": [4, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 73, 78, 97, 104, 107, 124, 125, 139, 142, 145, 158, 168], "compos": [79, 123], "composit": 105, "compound_metr": [8, 75], "compress": [4, 35], "comput": [8, 10, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 93, 97, 100, 102, 103, 107, 123, 124, 127, 139, 140, 143, 150, 152, 158, 161, 162, 163, 165, 172, 175, 179], "compute_all_h_u_all_sampl": [67, 72], "compute_all_h_u_from_inner_product": [67, 72], "compute_all_h_u_from_inner_products_linear": [67, 72], "compute_all_h_u_linear": [67, 72], "compute_contrastive_loss": [67, 71], "compute_cosine_similarity_loss": [67, 71], "compute_cumulative_explained_vari": [91, 107], "compute_dice_on_count_tensor": [8, 75, 83], "compute_euclidean_inner_product": [67, 72], "compute_euclidean_inner_products_linear": [67, 72], "compute_evaluation_loss": [20, 23, 25, 26, 27, 28, 29, 46, 50, 85, 87, 88, 89], "compute_explained_variance_ratio": [91, 107], "compute_from_count": [75, 78, 79], "compute_h_u_from_inner_product": [67, 72], "compute_h_u_from_inner_products_linear": [67, 72], "compute_hat_d_per_kernel": [67, 72], "compute_hat_q_k": [67, 72], "compute_hat_q_k_linear": [67, 72], "compute_kernel": [67, 70], "compute_loss_and_additional_loss": [20, 22, 23, 25, 26, 27, 28, 42, 43, 44, 46, 48, 50, 85, 87], "compute_mkmmd": [67, 72], "compute_negative_similar": [67, 68], "compute_parameter_delta": [149, 163], "compute_parameters_delta": [20, 51], "compute_penalty_loss": [8, 20, 21, 85, 86], "compute_perfcl_loss": [67, 71], "compute_projection_vari": [91, 107], "compute_reconstruction_error": [91, 107], "compute_training_loss": [20, 21, 23, 26, 27, 28, 29, 38, 42, 43, 44, 46, 47, 85, 87], "compute_updated_control_vari": [20, 51, 149, 163], "compute_updated_paramet": [149, 163], "compute_updated_weight": [149, 163], "compute_vertic": [67, 72], "compute_weight_update_and_clip": [20, 24], "concaten": [21, 28, 51, 62, 85, 86, 88, 89, 91, 93, 105], "concept": [13, 39, 160], "conclud": [25, 50], "concret": 79, "concurr": 146, "cond_vec_s": 170, "conda": 1, "condit": [93, 103, 122, 170, 172], "condition_vector_s": 170, "conditionalva": [8, 91, 93], "config": [1, 7, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 85, 86, 87, 88, 89, 111, 112, 113, 115, 119, 129, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 165, 166, 179], "config_path": 167, "configur": [1, 21, 25, 31, 35, 39, 41, 45, 48, 49, 50, 71, 75, 79, 82, 85, 86, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 167], "configure_evalu": [134, 141, 145, 149, 151, 152, 156, 161], "configure_fit": [145, 149, 151, 152, 156, 161], "configure_fit_al": [149, 163], "configure_pol": [139, 149, 151, 164], "conform": 1, "conjug": 159, "conjunct": [75, 76, 77, 79, 82], "connect": [4, 35, 100, 156], "consequ": 107, "consid": [1, 4, 13, 68, 77, 84, 166], "consist": [29, 38, 119, 124, 153, 154, 163], "constant": [8, 21, 60, 127, 152, 155, 157, 179], "constitut": [154, 181], "constrain": [4, 27, 28, 38, 43, 46, 47, 50, 71, 74, 85, 86, 88, 89], "constrained_fenda_cli": [8, 20], "constrainedfendacli": [8, 20, 25], "constrainedfendalosscontain": [8, 25, 67, 71], "constraint": [13, 25, 28, 38, 47, 85, 86, 88, 89, 155, 157], "constraint_tenor": 74, "constraint_tensor": 74, "construct": [14, 55, 58, 59, 65, 72, 113, 117, 154, 163, 181, 185], "construct_covariance_matrix": [165, 168], "construct_quadrupl": [67, 72], "construct_rxrx1_tensor_dataset": [53, 54, 55], "construct_skin_cancer_tensor_dataset": [53, 57, 58], "constructor": [48, 113], "contain": [1, 4, 21, 23, 24, 25, 27, 28, 29, 30, 36, 38, 40, 43, 44, 45, 46, 47, 50, 51, 55, 56, 58, 59, 71, 73, 78, 79, 81, 85, 86, 88, 89, 112, 116, 119, 123, 124, 125, 130, 131, 139, 140, 141, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 173, 179, 180, 182, 184, 185, 186], "content": [1, 84], "context": [10, 14, 88, 89, 172], "continu": [1, 4, 75, 78, 79, 82, 83, 84], "contrast": [4, 23, 25, 40, 46, 50, 68, 71, 73, 97, 104, 109, 158], "contrastive_loss": [8, 25, 46, 67], "contrastive_loss_config": 71, "contrastive_loss_minim": 25, "contrastive_loss_weight": 71, "contrastive_weight": 46, "contribut": [4, 10, 79, 80, 153, 154, 159], "control": [1, 4, 23, 49, 51, 116, 147, 160, 163, 179, 181, 185], "control_variates_upd": 163, "conv": 100, "conv1d": 100, "conv2d": 100, "conv3d": 100, "conv_modul": 100, "conveni": [88, 89], "convent": 1, "converg": 65, "convers": [170, 183], "convert": [35, 58, 83, 84, 88, 100, 101, 103, 116, 154, 170, 172, 173, 179, 180, 181, 182, 183], "convert_dataset": [165, 170], "convert_deep_supervision_dict_to_list": [8, 165, 179], "convert_deep_supervision_list_to_dict": [8, 165, 179], "convert_model_to_opacus_model": [8, 165, 183], "convert_to_masked_model": [91, 99, 101], "converter_funct": 170, "convex": [4, 22], "convolut": 100, "convolv": 100, "convtranspose1d": 100, "convtranspose2d": 100, "convtranspose3d": 100, "coo": [13, 116, 119, 154], "coordin": [23, 30, 36, 45, 49, 154], "copi": [38, 48, 49, 101, 102, 103], "core": 1, "core_protocol": [8, 85], "correct": [1, 4, 51, 79, 84, 146, 152], "correctli": [11, 13, 36, 156], "correspond": [10, 13, 21, 22, 23, 28, 29, 40, 47, 48, 49, 51, 65, 73, 74, 75, 78, 79, 82, 84, 85, 86, 88, 89, 92, 107, 108, 113, 116, 117, 128, 152, 158, 159, 162, 167, 169, 172, 175, 181], "cos_sim_loss": 25, "cos_sim_loss_weight": 71, "cosin": [25, 68, 69, 71], "cosine_similarity_loss": [8, 25, 67], "cosine_similarity_loss_config": 71, "cosinesimilarityloss": [8, 67, 69], "cosinesimilaritylosscontain": [8, 67, 71], "could": [79, 85, 86, 170, 186], "count": [23, 45, 48, 55, 78, 79, 80, 83, 139, 140, 143, 150, 151, 152, 153, 154, 155, 158, 159, 163, 172, 173], "count_tp_fp_tn_fn": [75, 79], "covari": [72, 116, 168], "cover": 159, "cpu": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 122, 166], "creat": [1, 10, 12, 14, 48, 55, 81, 86, 92, 124, 129, 133, 166, 167, 169, 173, 185], "create_plan": [20, 48], "create_split": [53, 54, 55], "creation": [1, 13, 170], "criteria": [107, 113, 155, 157, 171], "criterion": [11, 16, 17, 18, 19, 21, 46, 49, 50, 85, 87, 88, 89, 119], "critic": [165, 187], "cross": [47, 68], "crossentropyloss": 7, "csv": 56, "ctx": 172, "cubla": 184, "cublas_workspace_config": 184, "cuda": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 166, 184], "current": [1, 11, 13, 21, 23, 24, 25, 27, 28, 30, 32, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 73, 79, 85, 86, 88, 89, 105, 117, 119, 129, 130, 131, 133, 139, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 166, 172, 175, 179, 181], "current_epoch": [23, 48], "current_round": [22, 23, 27, 36, 39, 43, 44, 48], "current_server_round": [7, 23, 25, 27, 28, 32, 36, 38, 39, 43, 44, 46, 47, 48, 50, 87, 88, 89], "curv": [75, 82], "custom": [21, 22, 23, 24, 25, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 45, 47, 48, 51, 85, 86, 88, 89, 139, 141, 142, 145, 147, 149, 151, 156, 157, 163, 170, 172, 183], "custom_converter_funct": 170, "customtemplatepath": 1, "cvae": [93, 122, 123], "cvaefixedconditionprocessor": [120, 121, 122], "cvaevariableconditionprocessor": [120, 121, 122], "cycl": [152, 155, 171], "d": [107, 158, 169, 181, 185], "data": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 65, 70, 72, 81, 88, 89, 93, 94, 107, 122, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 158, 159, 166, 168, 169, 170, 172, 173, 179, 181, 185], "data_dir": [58, 173], "data_gener": [8, 165], "data_identifi": 48, "data_load": 31, "data_path": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 55, 59, 173], "data_shap": 170, "datafram": [55, 56, 59, 62, 65], "dataload": [7, 23, 24, 27, 28, 29, 30, 31, 33, 38, 41, 43, 44, 45, 47, 48, 51, 55, 58, 87, 88, 89, 124, 170, 173, 179], "datapoint": [55, 128, 169, 181, 185], "dataset": [7, 8, 23, 27, 28, 30, 31, 36, 45, 47, 48, 75, 78, 80, 82, 88, 89, 124, 127, 128, 145, 151, 152, 153, 154, 155, 158, 159, 161, 163, 165, 168, 170, 173, 179, 181, 185], "dataset_convert": [8, 58, 165, 173], "dataset_dir": 56, "dataset_fingerprint": 48, "dataset_id": 48, "dataset_json": 48, "dataset_nam": [48, 58, 178], "dataset_path": 7, "dataset_typ": 55, "datasetconvert": [8, 58, 165, 170, 173], "ddp": 4, "deal": [83, 169], "debug": [1, 48, 129, 133, 165, 187], "decai": 179, "decathelon": 173, "decid": [10, 11, 13, 93], "decis": [10, 12], "decod": [91, 93], "decode_and_pseudo_sort_result": [8, 165, 172], "decomposit": [107, 158], "decor": [90, 179], "decreas": [155, 157, 179], "deep": [27, 48, 70, 128, 145, 172, 179], "deep_mmd_client": [8, 20], "deep_mmd_loss": [8, 67], "deep_mmd_loss_weight": 27, "deepmmdloss": [8, 67, 70], "def": [7, 172], "default": [10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 55, 58, 62, 65, 66, 69, 70, 71, 72, 75, 77, 78, 79, 82, 84, 85, 86, 92, 93, 97, 98, 100, 102, 103, 104, 105, 107, 109, 112, 117, 122, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 168, 171, 173, 179, 181, 183, 184, 185], "defaultdict": 80, "defin": [1, 7, 10, 11, 12, 13, 14, 22, 23, 25, 29, 30, 31, 36, 38, 39, 45, 48, 72, 75, 76, 77, 78, 79, 82, 92, 93, 105, 107, 123, 129, 133, 143, 144, 145, 147, 156, 158, 170, 171, 172, 173, 179, 183], "define_metr": [8, 129, 133], "definit": [10, 13, 161], "degre": [70, 160], "deleg": 40, "delet": [14, 129, 133], "delete_from_snapshot_attr": [9, 14], "delta": [24, 127, 128, 140, 143, 147, 163], "delta_control_vari": 51, "delta_model_weight": 51, "denomin": [75, 82, 103, 162], "denot": [73, 158], "dens": [116, 154], "depend": [1, 7, 23, 30, 36, 49, 78, 79, 93, 97, 105, 109, 129, 133, 151, 183], "depth": 95, "deriv": [14, 23, 24, 27, 28, 29, 33, 38, 43, 44, 47, 48, 50, 51, 88, 89, 136, 138], "derm7pt": 59, "derm7pt_image_path_func": [53, 57, 59], "derm7pt_label_map_func": [53, 57, 59], "descent": 179, "describ": [37, 39, 72, 129, 133, 152, 168], "descript": [128, 168], "design": [4, 39, 170], "desir": [1, 21, 23, 24, 28, 30, 38, 45, 47, 51, 79, 85, 86, 88, 89, 95, 98, 100, 119, 150], "despit": 47, "detach": [28, 38, 88, 89], "detail": [1, 107, 113, 119, 154, 159, 168, 172, 184], "determin": [10, 11, 12, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 83, 85, 86, 88, 89, 97, 105, 119, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 171, 172, 179, 183, 184, 185], "determinist": [172, 184], "dev": [1, 127], "develop": 4, "deviat": [117, 128, 162, 168], "devic": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 68, 69, 70, 71, 72, 73, 74, 85, 87, 88, 89, 100, 102, 103, 122, 166], "diagon": [158, 168], "dice": [75, 78, 82, 83], "dict": [1, 10, 11, 12, 13, 14, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 65, 85, 86, 87, 88, 89, 92, 94, 95, 98, 105, 108, 109, 117, 119, 125, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 169, 173, 175, 179, 181, 184, 186], "dictionari": [10, 12, 14, 21, 22, 23, 25, 27, 28, 29, 30, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 55, 58, 59, 75, 76, 77, 79, 81, 82, 85, 86, 88, 89, 92, 94, 95, 105, 108, 109, 116, 119, 125, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 166, 167, 169, 173, 175, 179, 186], "dictionary_kei": 167, "dictionarydataset": [8, 165, 169, 185], "differ": [4, 13, 23, 29, 30, 32, 36, 38, 39, 45, 47, 48, 51, 71, 78, 79, 84, 116, 117, 128, 141, 153, 154, 159, 163, 168, 179, 181], "differenti": [4, 12, 24, 41, 51, 74, 93, 128, 140, 143, 147, 152, 172], "dilat": 100, "dim": [69, 84, 179], "dim_reduct": [120, 121], "dimens": [69, 70, 72, 75, 78, 79, 82, 83, 84, 93, 94, 95, 100, 103, 124, 168, 169, 172, 179], "dimension": [31, 93, 107, 123, 124], "dir": [14, 31], "direct": [4, 163], "directli": [1, 158, 172], "directori": [10, 11, 12, 13, 14, 55, 56, 58, 171, 173], "dirichlet": [181, 185], "dirichletlabelbasedalloc": [8, 165, 181], "dirichletlabelbasedsampl": [8, 165, 185], "disabl": [28, 47, 95, 184], "disable_accumulating_featur": [91, 95], "disable_torch_benchmark": 184, "discard": [79, 154, 185], "disconnect": 139, "discrep": [70, 72], "discuss": [38, 152], "disk": [14, 31, 48], "displai": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 129, 133, 180], "display_progress_bar": 166, "distanc": [27, 43, 44, 70, 72], "distinct": [11, 36, 38, 108, 136, 137, 138, 139, 142, 143, 145, 147], "distribut": [4, 7, 27, 43, 44, 70, 93, 123, 145, 158, 159, 168, 181, 185], "ditto": [4, 11, 23, 27, 28, 38, 43, 44, 47, 85, 88, 136], "ditto_cli": [8, 20], "ditto_deep_mmd_cli": [20, 26], "ditto_mkmmd_cli": [20, 42], "ditto_serv": [134, 135], "dittocli": [8, 20, 27, 28, 38, 43], "dittodeepmmdcli": [20, 26, 27], "dittomkmmdcli": [20, 42, 43], "dittopersonalizedmixin": [8, 85, 88, 89], "dittopersonalizedprotocol": [8, 85, 88, 89], "dittoserv": [134, 135, 136], "diverg": 123, "divid": [75, 80, 82, 117, 160], "divis": [72, 78, 83], "dk": 70, "dkfz": [48, 179], "dl_name": 48, "do": [1, 4, 7, 12, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 79, 100, 102, 103, 129, 133, 139, 144, 145, 156, 158, 164, 180, 185], "do_one_hot_encod": 170, "doc": [1, 100, 107, 116, 119, 128, 129, 133, 154, 184], "docstr": [1, 113], "docstringformat": 1, "document": [4, 48, 71, 78, 79, 107, 129, 133, 157, 184], "doe": [10, 12, 14, 45, 85, 86, 88, 89, 92, 103, 129, 133, 145, 154, 158, 161, 173, 181], "doesn": [11, 84], "domain": [4, 72, 78, 156, 157], "don": [28, 31, 38, 78, 88, 89, 179], "done": [1, 4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 79, 88, 89, 107, 127, 128, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 151, 152, 153, 154, 158, 168], "down": [23, 48, 162], "download": [7, 173], "downsampl": 185, "downsampling_ratio": 185, "downstream": 31, "dp": [4, 13, 41, 128, 140, 143, 147, 152, 183], "dpevent": 128, "dpscaffoldcli": [8, 20, 51], "dpscaffoldserv": [8, 134, 147], "dpscaffoldservercheckpointandstatemodul": [8, 9, 13, 147], "draw": 168, "drawn": [70, 168, 181], "drift": [4, 21, 27, 28, 32, 38, 39, 43, 44, 47, 51, 85, 86, 117, 155, 160], "drift_penalty_tensor": [85, 86, 88, 89], "drift_penalty_weight": [32, 85, 86, 88, 89], "drop": [78, 83], "dtype": [24, 78, 79, 87, 100, 102, 103, 113, 114, 115, 116, 117, 118, 119, 158], "due": [4, 48, 152, 159], "dummi": [10, 141], "dump": [8, 129, 131], "dure": [4, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 73, 77, 78, 79, 85, 86, 88, 89, 92, 93, 95, 100, 102, 103, 116, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 170, 172], "dynam": [49, 50, 86, 153, 166], "dynamiclayerexchang": [8, 110, 111, 113, 117], "e": [10, 13, 14, 21, 22, 23, 24, 29, 40, 46, 48, 62, 84, 98, 100, 102, 107, 128, 129, 130, 131, 133, 147, 152, 161, 163, 170, 172], "each": [1, 4, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 55, 56, 58, 62, 68, 70, 77, 78, 79, 80, 81, 83, 88, 89, 93, 95, 98, 100, 102, 107, 108, 113, 119, 122, 127, 128, 131, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 168, 171, 172, 175, 179, 181, 185], "earli": [14, 39, 171], "early_stop_valid": [165, 174], "early_stopp": [8, 165], "earlystopp": [8, 165, 171], "easi": 4, "easiest": [1, 7], "effect": [1, 4, 35, 62, 159, 184], "effici": [4, 35, 79, 107, 158, 183], "efficient_metr": [8, 75], "efficient_metrics_bas": [8, 75], "eg": 179, "eigenvector": 107, "either": [10, 11, 12, 66, 78, 79, 84, 97, 107, 109, 128, 129, 133, 145, 151, 163, 172, 179, 181, 186], "elaps": [139, 140, 141, 143, 144, 147], "element": [23, 25, 27, 28, 38, 40, 43, 44, 46, 48, 50, 51, 78, 79, 83, 100, 103, 117, 139, 140, 141, 143, 144, 147, 162, 163, 168, 172], "elementwis": 83, "elementwise_affin": 103, "elig": 1, "ema": 77, "ema_": 77, "emametr": [8, 75, 77], "empti": [28, 38, 45, 48, 75, 79, 82, 84, 105, 161, 166, 167, 175], "empty_cach": [20, 48], "enabl": [29, 48, 62, 95, 100, 101, 102, 103, 152, 155, 175], "enable_accumulating_featur": [91, 95], "enable_metadata_rout": 62, "encod": [13, 48, 78, 79, 84, 91, 93, 97, 122, 168, 170, 179], "encourag": 1, "end": [23, 27, 30, 43, 44, 48, 73, 79, 113, 129, 130, 131, 133, 152, 168, 185], "enforc": [1, 46, 129, 133, 137, 172], "engin": [4, 41], "enhanc": [68, 73], "ensembl": [29, 94], "ensemble_averag": [91, 94], "ensemble_bas": [8, 91], "ensemble_cli": [8, 20], "ensemble_model": [94, 175], "ensemble_vot": [91, 94], "ensembleaggregationmod": [8, 91, 94], "ensemblecli": [8, 20, 29], "ensemblemodel": [8, 29, 91, 94], "ensur": [1, 4, 13, 23, 28, 29, 33, 35, 36, 39, 50, 70, 84, 88, 89, 90, 136, 138, 143, 147, 151, 152, 154, 156, 163, 164, 179, 181, 183], "ensure_protocol_compli": [85, 88, 90], "entir": [13, 23, 27, 28, 30, 47, 56, 88, 89, 92, 154, 179, 185], "entiti": [129, 133], "entri": [23, 24, 48, 78, 79, 83, 141, 152, 163, 168], "entropi": 68, "enum": [11, 36, 66, 76, 79, 88, 94, 105, 129, 133, 156, 173, 174, 175, 178, 179, 186, 187], "enumer": [11, 36, 66, 76, 79, 88, 94, 105, 129, 133, 174, 175, 178, 187], "enumsnapshott": [8, 165, 186], "env_path": 1, "environ": [1, 7, 48, 179, 184], "ep": 103, "epoch": [8, 23, 36, 39, 48, 127, 128, 129, 130, 131, 132, 133, 143, 147, 167, 179], "epochs_per_round": 127, "epsilon": [70, 75, 82, 93, 127, 128, 140, 143, 147], "equal": [119, 124, 171, 179], "equat": [51, 159], "equival": [4, 128, 172], "error": [1, 10, 11, 13, 14, 62, 72, 88, 89, 90, 107, 129, 133, 152, 156, 163, 165, 169, 179, 180, 181, 184, 187], "error_messag": 180, "especi": 48, "essenti": [10, 37, 87, 98, 141, 145], "establish": 84, "estim": [62, 70, 72, 123, 128, 147, 152, 172, 179], "et": [59, 128, 156, 157], "eta": 160, "eta_l": 160, "etc": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 79, 163, 166], "eval": [7, 13, 23, 40, 141, 151, 152, 161], "evalu": [13, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 171, 175], "evaluate_after_fit": [23, 36, 39, 156], "evaluate_cli": [8, 20], "evaluate_config": 141, "evaluate_fn": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "evaluate_metrics_aggregation_fn": [7, 8, 75, 80, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "evaluate_round": [134, 139], "evaluate_serv": [8, 134], "evaluatecli": [8, 20, 30], "evaluatein": [141, 151, 152, 156, 161], "evaluater": [141, 151, 161], "evaluateresultsandfailur": [139, 141], "evaluateserv": [8, 134, 141], "evaluationloss": [8, 23, 25, 27, 28, 29, 30, 40, 46, 50, 87, 88, 89, 165, 175], "even": [4, 47, 48, 130, 131, 152, 155, 157, 163], "evenli": 185, "event": 11, "everi": [10, 48, 68, 92, 93, 101, 119, 128, 129, 131, 133, 154, 159, 166, 179], "everyth": 151, "ex": [93, 128], "exactli": [39, 48, 84, 113, 125, 166], "exampl": [1, 4, 7, 10, 12, 17, 21, 23, 27, 32, 33, 43, 44, 45, 47, 48, 58, 65, 77, 78, 79, 80, 83, 84, 109, 116, 117, 125, 128, 129, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 154, 155, 169, 172, 181, 183, 185], "exce": 117, "exceed": 181, "except": [4, 10, 11, 13, 14, 34, 35, 48, 100, 107, 113, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 158, 161, 163, 166, 167, 179], "exchang": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 47, 48, 49, 50, 51, 85, 86, 88, 89, 92, 96, 98, 108, 109, 113, 116, 117, 119, 144, 153, 154, 156], "exchange_percentag": 117, "exchangertyp": [13, 144], "exclud": [33, 78, 113, 129, 133], "exclus": [37, 113, 125, 181], "execut": [1, 27, 28, 31, 43, 46, 88, 89, 179], "executor": 146, "exhaust": 181, "exist": [4, 7, 10, 11, 12, 13, 14, 22, 23, 29, 30, 40, 48, 62, 71, 79, 97, 129, 133, 167, 169, 170, 173, 175, 181], "exp": 93, "expand": 84, "expect": [14, 21, 30, 48, 78, 79, 94, 98, 103, 104, 107, 108, 109, 129, 133, 152, 164, 167, 179], "expend": [75, 76, 77, 82], "experi": [56, 129, 133], "experienc": [151, 152, 153, 154, 155, 158, 161], "experiment": [4, 72, 129, 133], "explicit": 79, "explicitli": [10, 14, 28, 88, 89, 129, 133, 184, 185], "explor": 4, "expon": 179, "exponenti": 77, "extend": [4, 23, 25, 51, 76, 77, 151, 172, 185], "extens": [1, 4, 21, 151, 163], "extent": 19, "extra": [48, 113], "extra_adaptive_vari": 116, "extract": [13, 23, 25, 27, 34, 36, 38, 43, 44, 49, 50, 51, 72, 95, 97, 98, 105, 108, 109, 113, 116, 119, 146, 169, 173, 180, 182], "extract_coo_info_from_dens": [110, 116], "extracted_features_buff": 95, "extractor": [4, 25, 34, 36, 37, 38, 50, 73, 95, 98, 104, 105, 108, 109], "extrem": [136, 137, 138, 139, 140, 142, 143, 145, 146, 147], "f": [14, 169], "f1": [8, 75, 82], "f1_score": [75, 82], "facilit": [1, 4, 7, 11, 13, 14, 17, 31, 35, 49, 119, 139, 141, 144, 152, 156], "fact": 31, "factor": [77, 78, 179], "factori": 88, "fail": [1, 129, 133, 156, 163], "failur": [136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "fair": [28, 38, 88, 89, 156], "fairli": [32, 96, 168], "fairness_metr": [156, 157], "fairness_metric_typ": 156, "fairnessmetr": [8, 149, 156, 157], "fairnessmetrictyp": [8, 149, 156, 157], "fall": [10, 12, 117], "fals": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 62, 72, 78, 79, 83, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 107, 109, 122, 136, 137, 138, 139, 140, 142, 143, 145, 147, 152, 155, 157, 160, 166, 170, 171, 179, 184], "false_neg": [75, 78, 79, 83], "false_posit": [75, 78, 79, 83], "far": [21, 23, 85, 86, 107, 117, 171], "feasibl": 181, "featur": [1, 4, 21, 22, 23, 25, 27, 28, 29, 34, 36, 37, 38, 40, 43, 44, 46, 47, 48, 50, 62, 65, 66, 68, 69, 70, 71, 72, 73, 87, 88, 89, 95, 97, 98, 103, 104, 105, 108, 109, 168], "feature_align": 8, "feature_dimens": 68, "feature_extraction_lay": [43, 44], "feature_extraction_layers_with_s": 27, "feature_extractor_buff": [8, 91], "feature_l2_norm_weight": [43, 44], "feature_nam": 65, "feature_s": 95, "feature_typ": 65, "featureextractorbuff": [8, 91, 95], "features_org": 70, "fed": [22, 23, 25, 27, 28, 29, 38, 40, 43, 44, 46, 48, 50, 68, 170], "fed_pca_cli": [8, 20], "fed_prox_cli": [8, 20], "fedadagrad": 4, "fedadam": 4, "fedavg": [4, 7, 34, 36, 37, 50, 96, 139, 145, 151, 152, 153, 154, 155, 156, 158, 159, 163], "fedavg_dynamic_lay": [8, 149], "fedavg_sparse_coo_tensor": [8, 149], "fedavg_with_adaptive_constraint": [8, 149], "fedavgdynamiclay": [8, 149, 153, 154, 159], "fedavgm": 152, "fedavgsparsecootensor": [8, 149, 154], "fedavgwithadaptiveconstraint": [8, 21, 85, 86, 136, 137, 138, 149, 155, 157], "fedbn": [4, 33], "fedbn_client": [8, 20], "fedbnclient": [8, 20, 33], "feddg": [4, 17, 156, 157], "feddg_ga": [8, 149], "feddg_ga_with_adaptive_constraint": [8, 149], "feddgga": [8, 149, 156, 157], "feddggaadaptiveconstraint": [8, 149, 157], "feder": [4, 7, 11, 13, 14, 21, 23, 24, 28, 29, 30, 31, 32, 35, 37, 38, 39, 41, 45, 46, 47, 49, 51, 85, 86, 88, 89, 94, 97, 128, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 172], "federated_evalu": [134, 141], "federated_learning_with_differential_privaci": 128, "fedopt": 4, "fedpca": [8, 31, 149], "fedpcacli": [8, 20, 31], "fedper": [4, 34, 36], "fedper_cli": [8, 20], "fedpercli": [8, 20, 34], "fedpm": [4, 8, 35, 100, 101, 102, 103, 117, 142, 149], "fedpm_client": [8, 20], "fedpm_exchang": [8, 110], "fedpm_serv": [8, 134], "fedpmclient": [8, 20, 35], "fedpmexchang": [8, 35, 110, 111], "fedpmserv": [8, 134, 142], "fedprox": [4, 21, 23, 28, 32, 47, 88, 89, 137, 155, 157, 168], "fedprox_serv": [134, 135], "fedproxcli": [8, 20, 32], "fedproxserv": [134, 135, 137], "fedrep": [4, 36, 96], "fedrep_bas": [8, 91], "fedrep_cli": [8, 20], "fedrepcli": [8, 20, 36], "fedrepmodel": [8, 91, 96], "fedreptrainmod": [8, 20, 36], "fedsimclr": [23, 68], "fedsimclr_bas": [8, 91], "fedsimclrmodel": [8, 91, 97], "fedtorch": 92, "fedyogi": 4, "fenda": [4, 23, 25, 27, 32, 37, 38, 43, 44, 47, 48, 50, 71, 96, 98], "fenda_bas": [8, 91], "fenda_cli": [8, 20], "fenda_ditto_cli": [8, 20], "fenda_loss_config": [8, 67], "fendacli": [8, 20, 25, 37], "fendaditto": 38, "fendadittocli": [8, 20, 38], "fendamodel": [8, 38, 91, 98], "fendamodelwithfeaturest": [8, 91, 98], "fengliu90": 70, "fetch": [140, 143, 144], "few": 4, "fhook": 95, "field": 48, "file": [1, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 56, 58, 59, 125, 129, 130, 131, 133, 145, 179], "filereport": [8, 129, 131], "fill": [1, 65], "fill_valu": 65, "filter": [16, 17, 18, 56, 95, 100, 113, 117], "filter_and_save_data": [53, 54, 56], "filtrat": 16, "final": [11, 31, 46, 48, 73, 78, 79, 92, 97, 100, 102, 103, 105, 119, 154, 179, 184], "find": [1, 10], "find_last_common_prefix": [91, 95], "fine": [11, 97], "finetun": 97, "first": [4, 7, 11, 17, 21, 23, 24, 25, 27, 28, 30, 36, 38, 40, 43, 44, 46, 47, 48, 49, 50, 51, 62, 69, 70, 71, 72, 73, 77, 78, 79, 85, 86, 88, 89, 93, 95, 96, 105, 109, 117, 119, 139, 140, 141, 142, 143, 144, 147, 151, 152, 154, 163, 166, 168, 169, 172, 179, 180], "first_featur": 71, "first_feature_extractor": 105, "first_tensor": 105, "fit": [1, 7, 13, 20, 21, 23, 24, 28, 30, 31, 36, 38, 45, 47, 49, 60, 62, 80, 85, 86, 87, 88, 89, 134, 139, 140, 141, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 170], "fit_config": 7, "fit_config_fn": 7, "fit_metrics_aggregation_fn": [7, 8, 75, 80, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "fit_round": [134, 139, 142], "fit_with_per_round_checkpoint": [134, 139], "fitin": [151, 152, 156, 161, 163], "fitr": [151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 172], "fitresultsandfailur": [139, 142], "fitting_round": [21, 23, 24, 28, 30, 38, 47, 49, 51, 85, 86, 87, 88, 89], "fix": [1, 4, 12, 16, 17, 18, 19, 34, 41, 55, 92, 93, 96, 108, 117, 122, 127, 128, 147, 152, 168, 170, 179, 183], "fixed_sampling_client_manag": [8, 15], "fixed_without_replacement_manag": [8, 15], "fixedlayerexchang": [8, 50, 109, 110, 113], "fixedsamplingbyfractionclientmanag": [8, 15, 18], "fixedsamplingclientmanag": [8, 15, 17, 156], "fixedsamplingwithoutreplac": [8, 126, 128], "fl": [4, 11, 13, 14, 21, 23, 24, 27, 28, 30, 31, 36, 38, 40, 43, 44, 45, 47, 48, 51, 85, 86, 88, 89, 98, 113, 116, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 152, 163, 164, 167, 179], "fl4health": [0, 1, 7], "fl_account": [8, 126], "fl_config": [136, 137, 138, 139, 140, 142, 143, 145, 147], "flag": [95, 184], "flake8": 1, "flash": [4, 8, 39, 149], "flash_client": [8, 20], "flashclient": [8, 20, 39], "flat": 24, "flatten": [43, 44, 83, 91, 93, 95, 97, 98, 104, 107, 108, 109], "flatten_featur": [96, 98, 109], "flatten_feature_extraction_lay": 95, "flattened_output": 93, "flclientlevelaccountantfixedsamplingnoreplac": [8, 126, 127], "flclientlevelaccountantpoissonsampl": [8, 126, 127], "flexibl": [4, 10, 12, 38, 40, 151], "flexible_cli": [8, 20], "flexiblecli": [8, 20, 40, 85, 86, 88, 89, 90], "flexibleclientprotocol": [8, 85, 86, 87], "flexibleclientprotocolpresetup": [8, 85, 86, 87, 88, 89], "flinstancelevelaccount": [8, 126, 127], "float": [10, 11, 12, 13, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 36, 39, 43, 44, 45, 46, 47, 48, 50, 51, 55, 58, 65, 68, 70, 71, 74, 75, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 92, 103, 107, 116, 117, 119, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 172, 173, 175, 179, 181, 185, 186], "float32": [78, 79], "flow": [1, 13, 30, 33, 38, 39, 41, 49, 55, 93, 139, 142, 151, 152, 163], "flow_util": 92, "flower": [4, 16, 18, 19, 136, 137, 138, 139, 140, 142, 143, 147, 151, 172, 179, 180, 182], "flserver": [7, 8, 13, 14, 134, 136, 137, 138, 139, 140, 142, 143, 145, 147], "flush": [165, 179], "flwr": [7, 136, 137, 138, 139, 140, 142, 143, 145, 147, 179], "fn": [78, 79, 83, 145, 179], "focu": 4, "focus": 87, "fold": 48, "fold_loss_dict_into_metr": [8, 165, 166], "folder": [1, 131, 173], "follow": [1, 23, 24, 28, 30, 31, 36, 38, 39, 48, 59, 77, 88, 89, 92, 107, 116, 119, 128, 151, 152, 154, 158, 159, 161, 163, 172, 179], "footprint": 79, "forc": [35, 151, 156, 163, 184], "foreground_intensity_properties_per_channel": 48, "form": [14, 28, 38, 47, 72, 78, 79, 88, 89, 97, 112, 128, 163, 169], "form_and_solve_qp": [67, 72], "form_h_u_delta_w_i": [67, 72], "form_kernel_samples_minus_expect": [67, 72], "format": [1, 13, 65, 94, 116, 119, 154, 170], "former": [78, 79, 93, 136, 137, 138, 139, 140, 142, 143, 145, 147, 179], "formula": [163, 172], "forward": [23, 27, 28, 38, 40, 43, 44, 67, 68, 69, 70, 72, 73, 74, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 121, 123, 165, 172, 179], "forward_hook": [91, 95], "found": [72, 184], "foundat": 4, "four": [100, 154], "fp": [78, 79, 83], "frac": [24, 51, 163, 168], "fraction": [18, 19, 55, 141, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163], "fraction_evalu": [141, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163], "fraction_fit": [151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163], "framework": [27, 43, 44, 143], "free": 46, "freez": [38, 166], "freeze_base_modul": [91, 96], "freeze_global_feature_extractor": 38, "freeze_head_modul": [91, 96], "frequenc": [55, 56, 142, 171], "frequent": [130, 131], "from": [1, 4, 7, 10, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 62, 65, 70, 71, 72, 73, 77, 78, 79, 81, 85, 86, 88, 89, 92, 93, 95, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 113, 116, 117, 124, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 167, 168, 170, 171, 172, 180, 181, 182, 185], "from_json": [60, 65], "from_pretrain": [99, 100, 102, 103], "frozen": [4, 36, 38, 74, 116, 166], "full": [1, 13, 21, 22, 23, 24, 25, 30, 34, 36, 37, 38, 45, 49, 51, 55, 85, 86, 92, 95, 107, 127, 139, 140, 143, 147, 185], "full_exchang": [8, 110], "full_svd": 107, "fullparameterexchang": [8, 21, 23, 24, 28, 30, 38, 45, 49, 51, 85, 86, 88, 89, 110, 112, 114], "fullparameterexchangerwithpack": [8, 13, 86, 89, 110, 114], "func": [90, 167], "function": [1, 4, 7, 8, 10, 11, 12, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 59, 65, 66, 68, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 92, 93, 95, 97, 100, 102, 103, 104, 105, 109, 113, 116, 117, 119, 123, 125, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 182, 183, 184], "functiontorchcheckpoint": 12, "functiontorchmodulecheckpoint": [8, 9, 10, 12], "functool": [7, 117], "further": [1, 11, 37, 79, 117, 127], "furthermor": 1, "futur": 117, "g": [48, 62, 129, 130, 131, 133, 152, 161, 169, 172], "ga": [4, 17, 156, 157], "gamma": [39, 50, 72], "gather": 71, "gaussian": [70, 128, 143, 147, 162], "gaussian_degre": 70, "gaussian_noisy_aggregate_clipping_bit": [8, 149, 162], "gaussian_noisy_unweighted_aggreg": [8, 149, 162], "gaussian_noisy_weighted_aggreg": [8, 149, 162], "gener": [1, 4, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 70, 75, 77, 82, 84, 93, 95, 107, 114, 116, 118, 119, 123, 129, 133, 139, 142, 145, 153, 154, 155, 156, 157, 165, 168, 169, 175, 179, 181, 184, 185, 186], "generate_client_tensor": [165, 168], "generate_hash": [8, 20, 31, 165, 184], "generate_parameter_scor": [110, 119], "generatedocstringonent": 1, "get": [1, 4, 14, 45, 77, 78, 95, 125, 129, 133, 146, 168, 179], "get_all_model_paramet": [7, 8, 165, 180], "get_all_peft_parameters_from_model": [8, 165, 182], "get_attribut": [9, 14], "get_best_vertex_for_objective_funct": [67, 72], "get_cifar10_data_and_target_tensor": [8, 165, 173], "get_client_specific_log": [20, 23, 48], "get_client_specific_report": [20, 23, 48], "get_condition_vector_s": [165, 170], "get_criterion": [7, 20, 23, 40, 48, 85, 87], "get_current_weight_step_s": [149, 156], "get_data_load": [7, 20, 23, 30, 31, 40, 48, 85, 87], "get_data_tensor": [20, 31], "get_dataset_n_voxel": [8, 165, 179], "get_default_fill_valu": [60, 66], "get_delta": [126, 127, 128], "get_dp_ev": [126, 128], "get_epsilon": [126, 127, 128], "get_extracted_featur": [91, 95], "get_feature_nam": [60, 65], "get_feature_typ": [60, 65], "get_fill_valu": [60, 65], "get_global_model": [20, 28, 38, 85, 88, 89], "get_hierarchical_attr": [91, 95], "get_input_output_tensor": [165, 168], "get_layers_to_transf": [110, 113], "get_local_model": [20, 30], "get_lr": [165, 179], "get_lr_schedul": [20, 23, 48], "get_matching_compon": [120, 125], "get_metadata": [60, 65], "get_metadata_dimens": [60, 65], "get_mnist_data_and_target_tensor": [8, 165, 173], "get_model": [7, 20, 23, 28, 31, 38, 40, 45, 48, 85, 87, 88, 89], "get_msd_dataset_enum": [8, 165, 173, 178], "get_optim": [7, 20, 22, 23, 28, 29, 36, 40, 48, 85, 87, 88, 89], "get_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 45, 49, 51, 85, 86, 87, 88, 89], "get_parameter_exchang": [8, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 45, 49, 50, 51, 85, 86], "get_properti": [20, 23, 48, 145], "get_segs_from_prob": [8, 165, 179], "get_test_data_load": [20, 23, 45], "get_train_and_val_cifar10_dataset": [8, 165, 173], "get_train_and_val_mnist_dataset": [8, 165, 173], "get_unpacking_funct": [165, 170], "getpropertiesin": [146, 151, 164], "getpropertiesr": 146, "git": [1, 59], "github": [1, 4, 28, 48, 59, 68, 70, 88, 89, 92, 128, 168, 179], "give": 181, "given": [10, 14, 21, 22, 23, 24, 25, 27, 28, 29, 36, 38, 40, 43, 44, 46, 47, 48, 50, 56, 58, 62, 68, 75, 77, 78, 79, 81, 82, 83, 84, 88, 89, 93, 94, 95, 97, 101, 105, 127, 128, 139, 152, 156, 162, 163, 167, 169, 170, 172, 175, 179, 181], "global": [4, 11, 13, 22, 23, 25, 27, 28, 30, 32, 34, 36, 37, 38, 43, 44, 46, 47, 48, 50, 71, 73, 88, 89, 92, 96, 98, 105, 108, 136, 139, 141, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "global_deep_supervis": 145, "global_featur": [71, 73, 98, 108], "global_feature_contrastive_loss": 50, "global_feature_contrastive_loss_weight": [50, 71], "global_feature_loss_temperatur": [50, 71, 73], "global_forward": [91, 92], "global_logit": 92, "global_loss": [22, 27, 28, 38, 43, 44], "global_metr": 30, "global_model": [46, 85, 88, 89, 92, 125], "global_modul": [98, 108], "global_tensor": 105, "go": [13, 129, 133], "good": [4, 35, 107], "googl": 1, "grab": [151, 152, 163], "gracefulli": [48, 179], "grad": 172, "grad_output": 172, "grad_sample_mod": 183, "gradient": [4, 23, 28, 38, 40, 48, 51, 88, 89, 100, 102, 103, 143, 147, 152, 172], "gradsamplemodul": [151, 163, 183], "gradsamplingmodul": 163, "greater": 119, "ground": [21, 22, 23, 25, 27, 28, 29, 38, 43, 44, 46, 47, 48, 50, 75, 76, 77, 81, 82, 88, 89], "group": [100, 129, 133, 179], "groupnorm": 183, "guarante": [18, 98, 107, 181], "guess": 152, "guesstyp": 1, "guid": [1, 4, 62], "h1_mean_var_gram": [67, 70], "ha": [4, 7, 11, 13, 21, 23, 25, 29, 30, 33, 35, 36, 38, 45, 46, 48, 62, 68, 81, 84, 85, 86, 88, 89, 93, 98, 100, 102, 103, 105, 107, 113, 129, 133, 144, 151, 152, 154, 156, 157, 158, 161, 163, 166, 167, 168, 172, 179, 185], "ham10000": 59, "ham_image_path_func": [53, 57, 59], "ham_label_map_func": [53, 57, 59], "handl": [10, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 79, 85, 86, 95, 105, 116, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 153, 154, 159, 163, 170, 172, 179], "handler": 179, "happen": [21, 45, 85, 86, 136, 137, 138, 139, 140, 142, 143, 145, 147, 152, 172], "hard": 83, "hardcod": 131, "has_contrastive_loss": [67, 71], "has_cosine_similarity_loss": [67, 71], "has_perfcl_loss": [67, 71], "has_region": 179, "hash": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 68, 173, 184], "hash_kei": [173, 185], "hat": [73, 152, 168], "hat_d_per_kernel": 72, "hat_q_k": 72, "have": [1, 4, 7, 13, 21, 23, 24, 25, 28, 29, 30, 31, 35, 36, 38, 45, 47, 48, 50, 51, 62, 68, 72, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 93, 95, 98, 100, 102, 103, 108, 116, 117, 122, 128, 129, 133, 139, 141, 145, 152, 153, 154, 159, 162, 163, 166, 168, 172, 181], "he": 157, "head": [20, 36, 37, 38, 97, 98, 104, 105, 108, 109, 141], "head_epoch": 36, "head_forward": [91, 105], "head_modul": [96, 104, 109], "head_step": 36, "header": [23, 48], "health": 4, "healthcar": 4, "heavili": [77, 139], "held": [13, 45, 79, 139, 153, 154, 159], "help": [1, 13, 17, 18, 21, 23, 24, 28, 30, 38, 49, 85, 86, 88, 89, 146, 179], "helper": [40, 163, 172], "henc": [31, 158], "here": [1, 4, 28, 31, 36, 46, 47, 78, 88, 89, 124, 129, 133, 158, 159, 168, 181, 184], "heterogen": [4, 32, 39, 168, 181, 185], "heterogeneous_partition": 181, "heurist": [28, 47], "hidden": [70, 168], "hidden_dim": [70, 168], "hidden_s": 70, "hierarch": 95, "hierarchi": 179, "high": [130, 131, 181], "higher": [168, 179], "highest": [78, 79, 83], "hinder": 72, "hint": 1, "histori": [139, 140, 141, 143, 144, 147, 186], "historysnapshott": [8, 165, 186], "hold": [11, 13, 55, 71, 84, 139, 142, 146, 156], "hood": [48, 183], "hook": [1, 23, 27, 32, 40, 43, 44, 47, 48, 51, 93, 95, 139, 145, 179, 183], "hope": 10, "hot": [48, 78, 79, 84, 168, 170, 179], "hous": [1, 168], "how": [10, 11, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 75, 78, 79, 80, 82, 83, 93, 105, 129, 133, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 159, 168, 170, 179, 183], "howev": [1, 4, 21, 28, 30, 36, 40, 45, 47, 48, 78, 85, 86, 88, 89, 100, 102, 136, 138], "html": [68, 75, 82, 100, 107, 116, 119, 154, 184], "http": [22, 28, 33, 34, 35, 36, 37, 39, 48, 50, 51, 55, 59, 68, 70, 73, 75, 82, 88, 89, 92, 96, 97, 100, 107, 116, 119, 128, 129, 133, 142, 147, 151, 152, 154, 155, 159, 160, 162, 163, 168, 172, 179, 184], "huge": 107, "hydrat": [13, 30, 144], "hyperparamet": [129, 133], "hypothesi": [4, 35], "i": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 62, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 116, 117, 119, 122, 124, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181, 183, 184, 185], "id": [1, 31, 48, 129, 131, 133, 139, 141, 156, 169, 184], "idea": [4, 28, 32, 38, 46, 47, 88, 89], "idempot": [28, 88, 89], "ident": [11, 23, 28, 34, 38, 47, 88, 89, 97], "identifi": [21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81, 131, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 158, 161, 163], "ie": [22, 23, 81, 130, 131, 179], "ignor": [31, 48, 62, 93, 107, 131, 141, 179, 181], "ignore_background": [78, 79], "ignore_label": 48, "ii": 72, "iid": [46, 168, 185], "imag": [23, 55, 56, 58, 59, 75, 78, 79, 82, 100, 179], "image_path_func": 59, "imbalanc": [75, 82], "immedi": [23, 32, 44, 46, 47, 48], "implement": [1, 10, 12, 13, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 47, 49, 51, 68, 70, 73, 79, 85, 86, 88, 89, 92, 96, 98, 100, 102, 103, 105, 107, 113, 117, 128, 139, 151, 152, 155, 158, 159, 160, 162, 163, 164, 168, 172, 175, 179, 186], "impli": [78, 79, 83, 128, 168], "implicit": [78, 79], "implicitli": 79, "import": [1, 7, 77, 161, 179], "importantli": 45, "imput": 66, "in_channel": 100, "in_featur": 102, "includ": [1, 4, 14, 21, 23, 25, 27, 28, 30, 38, 40, 43, 44, 46, 47, 48, 50, 85, 86, 88, 89, 92, 127, 136, 137, 138, 139, 140, 142, 143, 145, 147, 163, 168, 170, 180], "include_loss_in_metr": 30, "include_losses_in_metr": [23, 27, 28, 30, 47, 87, 88, 89], "includeextendedsummari": 1, "includenam": 1, "incompat": 183, "incorpor": [1, 4], "increas": 77, "increment": 158, "indefinit": [139, 141, 142, 144, 145, 181], "independ": [79, 153, 154, 168], "index": [21, 22, 23, 25, 27, 28, 29, 38, 40, 43, 44, 46, 47, 48, 50, 78, 79, 83, 84, 88, 89, 94, 172, 179, 184], "indic": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 78, 79, 84, 85, 86, 88, 89, 95, 107, 116, 117, 119, 122, 129, 130, 131, 133, 139, 142, 145, 151, 152, 153, 154, 155, 158, 159, 161, 163, 166, 169, 181, 183], "individu": [27, 29, 43, 44, 46, 78, 79, 94, 129, 133, 139, 142], "infer": [84, 95, 129, 133, 145], "infer_label_dim": [8, 75, 84], "infimum": 128, "infinit": 179, "info": [1, 48, 165, 187], "inform": [4, 13, 21, 23, 24, 28, 30, 35, 38, 45, 47, 48, 51, 56, 65, 75, 82, 85, 86, 88, 89, 93, 100, 116, 119, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 152, 154, 156, 157, 184], "infti": [181, 185], "inherit": [23, 48, 79, 85, 86, 88, 89, 139, 179], "ini": 1, "init": [129, 133, 163], "initi": [8, 13, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 36, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73, 79, 81, 85, 86, 87, 88, 89, 92, 103, 119, 125, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 175, 179], "initial_clipping_bound": 152, "initial_control_vari": 163, "initial_global_featur": [71, 73], "initial_global_model": [27, 43, 44], "initial_loss_weight": [155, 157], "initial_lr": 179, "initial_model": [112, 113, 115, 117, 118, 119], "initial_paramet": [7, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163], "initialize_all_model_weight": [20, 23, 28, 85, 87, 88, 89], "initialize_control_vari": [149, 163], "initialize_global_model": [20, 30], "initialize_paramet": [149, 151, 161, 163], "initialize_server_model": [134, 145], "inject": [13, 23, 25, 28, 38, 40, 46, 50, 83, 88, 89, 93, 101, 104, 112, 152], "inner": [27, 28, 38, 43, 44, 47, 74], "inner_product": 72, "inner_product_all_sampl": 72, "inner_product_quadrupl": 72, "input": [22, 23, 25, 27, 28, 29, 36, 38, 40, 43, 44, 46, 48, 50, 56, 68, 70, 71, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 113, 116, 119, 123, 125, 129, 133, 145, 156, 158, 166, 168, 169, 170, 172, 173, 179, 181], "input_dim": 168, "input_dir": 56, "input_s": 70, "input_tensor": 105, "input_typ": 14, "ins": 146, "insert": [102, 144, 153, 154], "insid": [62, 119, 172], "inspir": 70, "instal": 1, "instanc": [4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 29, 31, 38, 41, 43, 44, 46, 47, 50, 51, 88, 89, 90, 93, 100, 102, 103, 127, 128, 143, 147, 156, 175, 179], "instance_level_dp_cli": [8, 20], "instance_level_dp_serv": [8, 134], "instanceleveldpcli": [8, 20, 41, 51, 151, 163], "instanceleveldpserv": [8, 134, 143, 147], "instanti": [30, 49, 145, 156], "instead": [10, 12, 23, 39, 40, 47, 62, 93, 95, 100, 102, 103, 172, 179], "instruct": [1, 141, 146, 151], "int": [1, 7, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 38, 39, 43, 44, 45, 46, 47, 48, 50, 51, 55, 56, 58, 65, 69, 70, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 107, 116, 123, 124, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 179, 181, 184, 185, 186], "integ": [22, 23, 27, 43, 44, 78, 79, 83, 103, 156, 172, 179], "integr": [1, 172], "intend": [145, 172], "interact": 12, "interest": 1, "interestingli": [4, 35], "interfac": [33, 75, 82], "intermedi": [23, 25, 27, 28, 38, 40, 43, 44, 46, 50, 95], "intern": [10, 11, 12, 129, 133], "interrupt": [11, 13, 14, 136, 137, 138, 139, 140, 142, 143, 145, 147, 179], "interv": [27, 43, 44, 78, 79, 130, 131, 171], "interval_step": 171, "introduc": [1, 48, 73], "invalidconfigerror": [8, 165, 167], "invok": 1, "involv": [23, 48], "ipynb": 128, "is_glob": 30, "is_masked_modul": [91, 99, 101], "is_smooth": 70, "is_start_of_local_train": [20, 22], "is_unbias": 70, "is_var_comput": 70, "isic": 59, "isn": [1, 71, 136, 138, 181], "isort": 1, "issu": [1, 4, 10, 12, 14, 151, 152, 153, 154, 155, 158, 161, 179], "istinct": 140, "item": [23, 48, 58, 81, 145, 154], "iter": [1, 25, 31, 50, 124, 166, 180, 181], "its": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 68, 75, 76, 77, 78, 79, 82, 101, 107, 116, 129, 133, 156, 158, 159, 166, 167, 170, 179, 181, 183], "itself": [1, 23, 98, 105, 116, 172, 173], "j": [84, 168], "jit": 48, "job": [48, 129, 133], "job_typ": [129, 133], "join": 105, "json": [1, 48, 59, 65, 125, 129, 131], "json_report": [8, 129], "json_str": 65, "jsonreport": [8, 129, 131], "just": [11, 12, 13, 21, 38, 48, 78, 79, 85, 86, 87, 139, 145, 147, 152, 166, 169, 172, 179], "justif": 158, "jvp": 172, "k": [51, 84, 107, 159], "k_x": 70, "k_xy": 70, "k_y": 70, "keep": [17, 48, 130], "kei": [10, 14, 22, 23, 25, 27, 28, 29, 36, 40, 43, 44, 46, 47, 48, 75, 76, 77, 79, 81, 82, 88, 89, 92, 95, 98, 105, 108, 112, 125, 129, 133, 156, 167, 173, 175, 179], "kept": 159, "kernel": [27, 70, 72, 100], "kernel_s": 100, "keyword": [23, 27, 40, 43, 44, 129, 130, 131, 133, 179], "kind": [25, 79, 101, 128, 169, 181], "kl": 123, "know": [13, 116], "known": [13, 72], "kwarg": [48, 85, 86, 87, 88, 89, 90, 106, 129, 130, 131, 132, 133, 172, 179, 183], "l": [103, 107, 128, 185], "l2": [4, 24, 27, 28, 38, 43, 44, 47, 117, 155], "l240": 92, "l_2": 74, "label": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 59, 78, 79, 81, 83, 84, 166, 168, 170, 173, 181, 185], "label_dim": [78, 79, 84], "label_frequ": [53, 54, 55], "label_index_tensor": 84, "label_indic": 181, "label_map_func": 59, "labelbasedsampl": [8, 58, 165, 173, 185], "lambda": [28, 47, 128], "lambda_m": 72, "languag": 169, "laplacian": 128, "larg": [72, 107, 146, 158, 181], "larger": [27, 43, 44, 48, 117, 129, 133, 151, 161, 168, 181, 185], "largest_final_magnitude_scor": [8, 110, 117], "largest_increase_in_magnitude_scor": [8, 110, 117], "largest_magnitude_change_scor": [8, 110, 117], "last": [1, 24, 41, 95, 96, 103, 129, 133, 152, 179], "latent": [27, 37, 43, 44, 50, 93, 97, 98, 108, 123, 158, 168], "latent_dim": 123, "latent_vector": 93, "later": [13, 14, 31, 79, 93, 107, 109, 145, 184], "latestopacuscheckpoint": [8, 9, 12], "latesttorchcheckpoint": 144, "latesttorchmodulecheckpoint": [8, 9, 10], "latter": [78, 79, 93, 136, 137, 138, 139, 140, 142, 143, 145, 147, 166, 179], "law": 168, "layer": [4, 12, 13, 27, 33, 34, 43, 44, 50, 72, 92, 93, 95, 96, 100, 101, 102, 103, 108, 109, 113, 116, 117, 119, 152, 153, 154, 158, 159, 162, 168, 183, 184], "layer1": 125, "layer_exchang": [8, 110], "layer_hierarchi": 95, "layer_nam": [72, 95, 113], "layer_norm_modul": 103, "layer_selection_funct": 113, "layerexchangerwithexclus": [8, 33, 110, 113], "layernamesservercheckpointandstatemodul": [8, 9, 13, 142], "layernorm": 103, "layers_nam": 95, "layers_to_exchang": [91, 92, 98, 106, 108, 109], "layers_to_transf": 113, "layerselectionfunct": 113, "layerselectionfunctionconstructor": [8, 110, 113, 117], "lazi": 124, "lead": [172, 179], "learn": [4, 7, 21, 23, 24, 28, 30, 35, 38, 39, 46, 47, 49, 51, 70, 75, 82, 85, 86, 88, 89, 92, 96, 102, 103, 107, 128, 139, 141, 152, 160, 163, 170, 179, 186], "learnabl": [100, 103], "learning_r": [51, 163], "least": [1, 16, 48, 78, 79, 117, 163], "leav": [33, 72, 78, 79, 129, 133], "left": [24, 48, 77, 78, 79, 84, 93, 105, 131, 158], "len": 181, "len_": 70, "len_old_models_buff": 46, "length": [23, 31, 45, 48, 70, 72, 84, 103, 163, 166, 179, 181, 184], "leq": 107, "less": [4, 117, 119], "level": [1, 4, 24, 41, 48, 51, 119, 127, 128, 130, 131, 140, 143, 147, 152, 179, 185], "leverag": [33, 117, 119, 124], "librari": [1, 4, 139, 172], "light": [4, 170], "like": [1, 13, 23, 48, 78, 79, 88, 89, 100, 102, 116, 129, 133, 139, 140, 143, 147, 157, 159, 166, 170, 179, 184], "limit": [172, 181], "line": [4, 163], "linear": [72, 102, 168], "linear_modul": 102, "linearli": [151, 152, 153, 154, 155, 158, 159, 160, 161, 163], "link": [1, 168], "list": [1, 14, 16, 17, 18, 19, 21, 23, 24, 43, 44, 46, 48, 49, 51, 55, 56, 58, 59, 65, 72, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 98, 100, 103, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 133, 139, 140, 141, 143, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 168, 169, 171, 172, 175, 179, 181, 185], "litian96": [28, 88, 89, 168], "ll": [152, 181], "load": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 58, 97, 125, 129, 133, 139, 141, 161, 167, 170, 171, 173, 179, 186], "load_attribut": [165, 186], "load_autoencod": [121, 122], "load_best_checkpoint_into_model": [9, 12], "load_checkpoint": [9, 10, 12, 14], "load_cifar10_data": [7, 8, 165, 173], "load_cifar10_test_data": [8, 165, 173], "load_config": [8, 165, 167], "load_data": [7, 8, 53, 54, 57, 165], "load_from_pretrain": [120, 125], "load_imag": [53, 54, 56, 57, 58], "load_mnist_data": [8, 165, 173], "load_mnist_test_data": [8, 165, 173], "load_model_checkpoint_to_paramet": [134, 141], "load_msd_dataset": [8, 165, 173], "load_pca_modul": [120, 124], "load_pretrained_model": [91, 97], "load_rxrx1_data": [53, 54, 55], "load_rxrx1_test_data": [53, 54, 55], "load_skin_cancer_data": [53, 57, 58], "load_snapshot": [165, 171], "load_stat": [9, 14], "loader": [23, 31, 45, 48, 55, 173], "local": [1, 4, 7, 11, 21, 22, 23, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71, 73, 85, 86, 88, 89, 92, 98, 105, 108, 141, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 171, 173, 179], "local_epoch": [7, 23, 30, 36, 39, 143, 147, 167], "local_featur": [71, 73, 98, 108], "local_feature_contrastive_loss": 50, "local_feature_contrastive_loss_weight": [50, 71], "local_feature_loss_temperatur": [50, 71, 73], "local_forward": [91, 92], "local_logit": 92, "local_loss": [22, 28], "local_metr": 30, "local_model": [27, 43, 44], "local_modul": [98, 108], "local_prediction_head": 96, "local_step": [21, 23, 25, 30, 36, 39, 46, 50, 51, 85, 86, 87, 143, 147, 167], "local_tensor": 105, "locat": [129, 133, 173], "lock": 1, "log": [7, 8, 10, 13, 23, 40, 48, 93, 123, 129, 133, 139, 142, 165, 179, 181], "logger": 179, "logging_mod": [23, 48, 166], "loggingmod": [8, 23, 48, 165, 174], "logic": [23, 40], "logit": [68, 75, 82], "logits_threshold": [75, 82], "loglevel": [1, 8, 23, 48, 165, 179, 187], "logvar": [93, 123], "long": [48, 139, 146, 172], "longer": [14, 172, 179], "look": [1, 40, 48, 84, 129, 133], "loop": [14, 27, 28, 36, 43, 88, 89, 170], "loss": [4, 7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 85, 86, 87, 88, 89, 97, 104, 107, 109, 120, 121, 129, 133, 139, 140, 141, 142, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 171, 179], "loss_contain": 25, "loss_dict": [21, 23, 25, 46, 50, 51, 85, 86, 87, 166], "loss_for_adapt": [21, 85, 86, 88, 89], "loss_list": 175, "loss_met": [30, 175], "loss_meter_typ": [21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 175], "loss_weight_delta": [155, 157], "loss_weight_pati": [155, 157], "losses_list": 175, "losses_typ": 175, "lossestyp": 175, "lossmet": [8, 165, 175, 186], "lossmetertyp": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 165, 175], "lotteri": [4, 35], "low": [107, 181], "low_rank": 107, "lower": [48, 107], "lr": [7, 23, 48, 51, 70, 179], "lrschedul": [23, 186], "lrschedulersnapshott": [8, 165, 186], "m": [7, 107, 159], "m_": 77, "m_t": [77, 152], "machineri": 139, "made": [4, 22, 131], "magnitud": [140, 156, 157], "mai": [1, 13, 21, 23, 25, 30, 38, 45, 49, 79, 85, 86, 93, 104, 107, 109, 128, 136, 137, 138, 139, 140, 142, 143, 145, 147, 153, 154, 159, 169, 172, 183, 184], "main": [1, 7, 53, 54, 56, 68, 128], "mainli": [31, 84], "maintain": [4, 35, 78, 79, 100, 102, 103, 112, 159], "major": 11, "make": [40, 41, 48, 75, 79, 82, 93, 94, 129, 133, 179, 181, 183], "make_dict_with_epochs_or_step": [8, 165, 167], "make_it_person": [8, 85, 88], "manag": [1, 10, 16, 17, 18, 19, 23, 48, 81, 141, 146, 151, 152, 156, 161, 163], "mandatori": 156, "manger": 151, "mani": [1, 21, 80, 168, 172], "manipul": [48, 50, 104], "manner": [29, 94, 97, 107, 159], "manual": 1, "map": [1, 13, 48, 55, 59, 75, 78, 79, 82, 83, 84, 93, 97, 98, 100, 102, 103, 105, 108, 119, 125, 153, 154, 159, 168], "map_label_index_tensor_to_one_hot": [8, 75, 84], "map_model_to_opacus_model": [8, 165, 183], "mark": 1, "mask": [35, 48, 100, 101, 102, 103, 117, 159, 169], "mask_data": [20, 48], "masked_conv": [91, 99], "masked_lay": [8, 91], "masked_layers_util": [91, 99], "masked_linear": [91, 99], "masked_normalization_lay": [91, 99], "maskedbatchnorm1d": [91, 99, 103], "maskedbatchnorm2d": [91, 99, 103], "maskedbatchnorm3d": [91, 99, 103], "maskedconv1d": [91, 99, 100], "maskedconv2d": [91, 99, 100], "maskedconv3d": [91, 99, 100], "maskedconvtranspose1d": [91, 99, 100], "maskedconvtranspose2d": [91, 99, 100], "maskedconvtranspose3d": [91, 99, 100], "maskedlayernorm": [91, 99, 103], "maskedlinear": [91, 99, 102], "master": [48, 168], "match": [13, 23, 27, 40, 43, 44, 48, 95, 113, 125, 145, 180, 181], "mathbf": [32, 93], "mathcal": [93, 168], "matric": [107, 158], "matrix": [24, 70, 72, 107, 158, 168], "matter": [1, 112], "max": 48, "max_grad_norm": 48, "max_retri": 181, "max_step": 179, "max_work": 146, "maxim": [10, 12, 72], "maximum": [48, 70, 72, 146, 152, 162, 179, 184], "mayb": [13, 130, 131], "maybe_checkpoint": [9, 10, 11, 12, 13], "maybe_extract_fingerprint": [20, 48], "maybe_load_client_st": [9, 14], "maybe_load_server_st": [9, 14], "maybe_load_st": [9, 11, 13], "maybe_preprocess": [20, 48], "maybe_progress_bar": [8, 165, 166], "maybe_reshap": [91, 107], "maybe_set_default_checkpoint_nam": [9, 14], "md": 48, "mean": [1, 21, 47, 69, 70, 72, 78, 85, 86, 93, 107, 123, 168, 179], "meant": [4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 55, 105, 117, 141], "measur": [24, 27, 43, 44, 72, 78, 127], "mechan": [11, 12, 28, 36, 41, 62, 88, 89, 105, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 171, 183], "median": 179, "median_image_size_in_voxel": 48, "medic": 173, "medical_feder": 59, "member": [1, 152, 162], "memori": 79, "mention": 1, "merg": [1, 4, 31, 45, 70, 105, 144, 158, 161], "merge_metr": [20, 30], "merge_subspaces_qr": [149, 158], "merge_subspaces_svd": [149, 158], "merge_two_subspaces_qr": [149, 158], "messag": [23, 48, 180], "met": [163, 181], "meta": 62, "metadata": [55, 56, 62, 65], "metadata_rout": 62, "meter": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 175], "method": [1, 4, 10, 11, 13, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 62, 75, 76, 77, 78, 79, 82, 84, 87, 88, 89, 90, 95, 105, 107, 116, 119, 129, 130, 131, 133, 137, 139, 145, 154, 158, 160, 163, 168, 175, 179, 184, 185, 186], "metric": [7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 88, 89, 129, 131, 133, 139, 140, 141, 142, 143, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166], "metric_aggreg": [7, 8, 75], "metric_manag": [8, 23, 48, 75], "metric_manager_nam": 81, "metric_met": 30, "metric_nam": 156, "metric_typ": 156, "metric_valu": [23, 30, 31], "metricmanag": [8, 23, 48, 75, 81, 186], "metricoutcom": [8, 75, 79], "metricprefix": [8, 75, 76], "metrics_util": [8, 75], "metricsaggregationfn": [141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "mic": [48, 179], "middl": 93, "might": [1, 10, 11, 21, 48, 49, 78, 79, 84, 117, 130, 131, 141, 155], "mimic": 183, "min": [24, 107], "min_available_cli": [7, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "min_evaluate_cli": [7, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161], "min_fit_cli": [7, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161], "min_label_exampl": 181, "min_num_cli": [16, 17, 18, 19], "mini": 103, "minim": [10, 12, 70, 72, 87, 136, 137, 138, 139, 140, 142, 143, 145, 147], "minimize_type_two_error": 72, "minimum": [16, 17, 18, 19, 23, 30, 45, 141, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 181], "minor": 185, "minority_label": 185, "minoritylabelbasedsampl": [8, 165, 185], "misalign": 84, "mismatch": [84, 183], "miss": 65, "mix": [48, 86, 88, 89, 92], "mixin": [8, 40], "mixtur": 92, "mk": [23, 27, 43, 44, 72], "mkmmd_client": [8, 20], "mkmmd_loss": [8, 67], "mkmmd_loss_weight": [43, 44], "mkmmdloss": [8, 67, 72], "mloptpsu": 92, "mlr": [39, 160], "mmd": [23, 27, 43, 44, 70, 72], "mmd_kernel_train_interv": 27, "mmdu": [67, 70], "mnist": [170, 173], "mode": [11, 22, 23, 29, 36, 38, 40, 47, 48, 88, 94, 105, 172], "model": [4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 101, 104, 105, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 122, 123, 125, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 175, 179, 180, 182, 183], "model_bas": 8, "model_checkpoint": 13, "model_checkpoint_path": [30, 141], "model_head": [98, 105, 108], "model_merge_cli": [8, 20], "model_merge_serv": [8, 134], "model_merge_strategi": [8, 149], "model_paramet": 116, "model_path": [45, 97], "model_save_dir": 31, "model_weight": [114, 116, 118], "modelcheckpoint": [11, 13], "modellatentf": [8, 67, 70], "modelmergecli": [8, 20, 45], "modelmergeserv": [8, 134, 144], "modelmergestrategi": [8, 144, 149, 161], "modern": 1, "modif": [4, 117, 155, 157, 183], "modifi": [4, 14, 23, 48, 51, 84, 129, 133, 143, 152, 155, 157, 166, 179, 183, 185], "modify_grad": [20, 51], "modify_noise_multipli": [149, 152], "modul": [4, 7, 8, 9, 15, 20, 26, 42, 53, 54, 57, 60, 67, 75, 85, 88, 91, 99, 110, 120, 121, 126, 129, 134, 135, 149, 165], "modular": 4, "module2losswrapp": [8, 165, 179], "module_exclus": 113, "modulelist": 95, "modulu": 72, "moment": [127, 128, 160], "moment_ord": [127, 128], "moments_account": [8, 126], "momentsaccount": [8, 126, 128], "momentum": [7, 103, 152, 160], "monitor": 171, "monolith": 31, "moon": [4, 23, 27, 32, 40, 43, 44, 46, 47, 48, 68, 71, 96, 104, 109], "moon_bas": [8, 91], "moon_client": [8, 20], "moonclient": [8, 20, 46], "mooncontrastiveloss": [8, 67, 68], "mooncontrastivelosscontain": [8, 67, 71], "moonmodel": [8, 91, 104], "more": [4, 13, 22, 23, 29, 30, 32, 36, 39, 45, 48, 75, 77, 81, 82, 84, 100, 107, 113, 116, 119, 130, 151, 154, 157, 158, 159, 168, 172, 179, 181, 183, 184, 185], "moreov": [78, 79], "most": [22, 23, 27, 43, 44, 78, 79, 117, 119, 136, 137, 138, 139, 140, 142, 143, 145, 147, 150, 167], "mostli": 49, "move": [1, 70, 72, 77, 146, 147, 163, 166], "move_data_to_devic": [8, 165, 166], "mp": 48, "mr": [4, 11, 44, 47, 136, 138], "mr_mtl_client": [8, 20], "mr_mtl_mkmmd_client": [20, 42], "mrmtl_server": [134, 135], "mrmtlclient": [8, 20, 44, 47], "mrmtlmkmmdclient": [20, 42, 44], "mrmtlserver": [134, 135, 138], "msd": 173, "msd_dataset_nam": 173, "msd_dataset_sourc": [8, 165], "msddataset": [8, 165, 173, 178], "mtl": [4, 11, 44, 47, 136, 138], "mu": [21, 32, 46, 50, 93, 122, 123, 155, 157, 168], "much": [13, 158], "multi": [72, 78, 79], "multiclassdic": [8, 75, 78], "multiclassificationmetr": [8, 75, 78, 79], "multidimension": 168, "multinomi": [181, 185], "multipl": [13, 23, 29, 48, 62, 68, 78, 79, 95, 125, 150, 158, 179], "multipli": [127, 152, 162], "multiprocess": 48, "multithread": 179, "multithreadedaugment": 179, "multivari": 168, "must": [1, 10, 13, 22, 23, 48, 49, 75, 77, 78, 79, 82, 84, 105, 119, 128, 129, 133, 136, 138, 142, 143, 144, 145, 147, 151, 153, 154, 155, 156, 157, 163, 169, 172, 179, 181], "mutual": [69, 125, 181], "mypi": 1, "n": [23, 27, 43, 44, 68, 93, 103, 107, 128, 158, 163, 168], "n_1": 158, "n_2": 158, "n_case": 179, "n_client": 162, "n_clients_sampl": 127, "n_dataload_process": 48, "n_featur": [68, 69, 72, 73], "n_i": 158, "n_k": 128, "n_n": 158, "n_pair": 68, "n_sampl": [72, 168], "n_server_round": 156, "n_total_cli": 127, "name": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 62, 65, 72, 75, 76, 77, 78, 79, 81, 82, 88, 89, 92, 95, 109, 113, 116, 117, 119, 125, 129, 131, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 153, 154, 156, 159, 167, 170, 173, 179], "named_modul": 95, "nan": 78, "narrow": 167, "narrow_dict_typ": [8, 165, 167], "narrow_dict_type_and_set_attribut": [8, 165, 167], "narrow_type_to": 167, "navig": 1, "ndarrai": [21, 23, 24, 28, 30, 31, 36, 38, 45, 47, 49, 51, 85, 86, 87, 88, 89, 112, 113, 114, 115, 116, 117, 118, 119, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 172, 181], "nearli": [4, 34], "necessari": [13, 31, 39, 46, 49, 65, 84, 109, 145, 179, 183], "necessarili": [13, 84], "need": [1, 4, 7, 10, 12, 13, 14, 23, 28, 30, 31, 34, 36, 38, 40, 45, 48, 75, 79, 82, 84, 88, 89, 93, 105, 107, 113, 125, 139, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 168, 172, 179, 184], "needs_input_grad": 172, "neg": [68, 71, 73, 78, 79, 83, 152], "negative_pair": [68, 71], "neighbor_rel": 128, "neither": 163, "net": 7, "network": [32, 38, 70, 95, 158, 179], "neural": 95, "neuron": 172, "never": [11, 47, 129, 133, 171], "new": [1, 14, 17, 24, 55, 59, 77, 79, 84, 97, 101, 102, 103, 124, 129, 133, 145, 156, 158, 170, 175, 181, 183, 185], "new_dimens": 124, "new_tag": [129, 133], "newli": 163, "next": [7, 25, 36, 50, 79, 84, 119, 141, 156, 157, 179, 181], "nice": 172, "nip": 68, "nn": [7, 10, 11, 12, 13, 14, 23, 27, 28, 33, 40, 43, 44, 45, 48, 74, 88, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 112, 113, 117, 119, 125, 144, 163, 166, 179, 180, 182, 183, 186], "nnunet": [13, 14, 48, 139, 145, 179], "nnunet_augment": 179, "nnunet_cli": [8, 20], "nnunet_config": [48, 179], "nnunet_dataload": 179, "nnunet_plan": [48, 145], "nnunet_serv": [8, 134], "nnunet_trainer_class": [48, 145], "nnunet_trainer_class_kwarg": 48, "nnunet_util": [8, 165], "nnunetcli": [8, 20, 48, 145, 179], "nnunetconfig": [8, 165, 179], "nnunetdataloaderwrapp": [8, 165, 179], "nnunetserv": [8, 13, 48, 134, 139, 145], "nnunetservercheckpointandstatemodul": [8, 9, 13, 145], "nnunetserverstatecheckpoint": [8, 9, 13, 14], "nnunettrain": [48, 145], "nnunetv2": [48, 145, 179], "node": 7, "nois": [24, 127, 128, 140, 143, 147, 152, 162], "noise_ev": 128, "noise_multipli": [41, 127, 128, 143, 147, 162], "noise_std_dev": 162, "noisi": 162, "noisy_aggreg": [8, 149], "non": [1, 4, 21, 45, 46, 70, 75, 82, 84, 128, 139, 142, 166, 167, 168, 169, 170, 172, 175, 179, 185], "nondetmultithreadedaugment": 179, "none": [1, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 62, 65, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 107, 111, 112, 113, 115, 117, 118, 119, 122, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 184, 185, 186], "nonneg": 117, "nonzero": [116, 154], "nor": [92, 163], "norm": [4, 24, 32, 43, 44, 48, 72, 113, 117], "norm_threshold": 117, "normal": [4, 33, 67, 68, 72, 80, 93, 103, 116, 117, 123, 162, 168, 175], "normalize_featur": 72, "normalize_metr": [8, 75, 80], "normalized_shap": 103, "notabl": 68, "notat": 168, "note": [1, 4, 7, 11, 13, 23, 28, 32, 38, 40, 44, 45, 47, 48, 49, 62, 72, 77, 78, 79, 84, 85, 86, 90, 93, 97, 100, 102, 103, 107, 112, 113, 116, 117, 124, 127, 128, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 168, 172, 181, 183, 184, 185], "notebook": 128, "noth": [7, 84, 92], "notimplementederror": [10, 23, 29, 31, 38, 45, 48, 75, 76, 77, 79, 82, 105, 175], "notset": [165, 187], "now": [1, 7, 84, 107, 130, 166], "np": [172, 181, 185], "nt": 68, "ntxentloss": [8, 67, 68], "num": [48, 186], "num_accumulating_batch": [27, 43, 44], "num_client": [16, 17, 168], "num_featur": 103, "num_input_channel": 145, "num_label": [78, 79], "num_round": [7, 139, 140, 141, 143, 144, 145, 147], "num_sampl": [78, 79, 179], "num_segmentation_head": 145, "num_server_round": [140, 143, 147], "num_spatial_dim": 179, "num_validation_step": [23, 30], "num_work": [55, 58], "number": [1, 4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 39, 43, 44, 45, 46, 47, 48, 50, 51, 55, 56, 58, 70, 72, 79, 80, 84, 85, 86, 88, 89, 100, 103, 107, 116, 117, 124, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 171, 172, 179, 181, 184, 185, 186], "number_of_partit": 181, "numer": [60, 66, 103, 172], "numpi": [21, 85, 86, 112, 116, 144, 150, 162, 163, 172, 180, 182, 184], "numpy_st": 184, "numpycli": [23, 31, 45, 87], "numpyclientminimalprotocol": [8, 85, 87], "numpyclippingcli": [8, 20, 24], "nunetserv": 145, "nutshel": 158, "nvidia": 184, "object": [11, 13, 14, 16, 18, 19, 21, 22, 23, 29, 30, 36, 39, 40, 45, 48, 49, 62, 65, 71, 79, 81, 85, 86, 88, 89, 95, 97, 113, 117, 122, 124, 125, 127, 128, 129, 130, 132, 133, 139, 140, 141, 143, 144, 146, 147, 153, 154, 156, 158, 159, 167, 171, 172, 173, 175, 179, 180, 182, 185, 186], "observ": 158, "obtain": [11, 13, 24, 31, 150, 158], "obviou": 1, "occur": [4, 23, 27, 28, 38, 40, 43, 44, 45, 88, 89, 139, 161, 168], "off": [45, 72, 139, 141, 152, 155, 157], "offer": [151, 184], "offici": [59, 107], "official_column": 59, "often": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 150, 166], "old": [24, 25, 46, 50, 73], "old_global_featur": [71, 73], "old_local_featur": [71, 73], "old_model": 46, "omit": 1, "on_evaluate_config_fn": [7, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "on_fit_config_fn": [7, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "on_init_parameters_config_fn": [136, 137, 138, 139, 140, 142, 143, 145, 147], "onc": [7, 45, 130, 131, 179], "one": [1, 11, 13, 23, 28, 29, 30, 31, 33, 35, 36, 39, 48, 73, 78, 79, 81, 84, 88, 89, 93, 95, 98, 100, 101, 102, 103, 104, 105, 125, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 152, 156, 159, 161, 163, 166, 167, 168, 170, 173, 175, 179, 184], "one_layer_map_inputs_to_output": [165, 168], "ones": [83, 103, 129, 133, 159, 163], "onli": [1, 4, 10, 11, 12, 13, 23, 27, 28, 30, 31, 34, 36, 38, 39, 40, 43, 44, 45, 49, 50, 51, 62, 78, 81, 90, 92, 98, 103, 105, 107, 109, 113, 122, 129, 133, 139, 141, 144, 145, 151, 152, 154, 155, 157, 158, 161, 162, 163, 169, 179], "onlin": 1, "onto": [70, 72, 107, 124], "op": [139, 184], "opacu": [12, 13, 41, 143, 151, 163, 183], "opacus_checkpoint": [8, 9], "opacusbasicfedavg": [8, 143, 149, 151], "opacuscheckpoint": [8, 9, 12], "opacusscaffold": [8, 149, 163], "opacusservercheckpointandstatemodul": [8, 9, 13, 143], "open": 4, "oper": [38, 75, 82, 119, 139, 172, 183], "oppos": 172, "optim": [4, 7, 22, 23, 24, 27, 28, 29, 31, 32, 33, 36, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 70, 71, 72, 85, 87, 88, 89, 92, 163, 175, 179, 183, 186], "optimization_step": 70, "optimize_beta": [67, 72], "optimizer_kei": [23, 48, 85, 88, 89], "optimizersnapshott": [8, 165, 186], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 62, 65, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 92, 93, 97, 98, 100, 103, 104, 107, 109, 112, 117, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 168, 170, 171, 173, 175, 179, 181, 183, 184, 185], "orchestr": [49, 93], "order": [1, 14, 36, 46, 77, 85, 86, 88, 89, 95, 112, 113, 116, 119, 127, 128, 141, 145, 147, 150, 152, 156, 157, 172, 179], "ordin": [60, 66], "ordinari": 35, "org": [22, 33, 34, 35, 36, 37, 51, 59, 68, 75, 82, 96, 97, 100, 107, 116, 119, 142, 147, 151, 152, 154, 155, 159, 162, 163, 168, 172, 184], "organ": [129, 133], "origin": [4, 28, 46, 47, 48, 50, 55, 59, 62, 70, 73, 88, 89, 92, 101, 107, 109, 145, 159, 166, 168, 170, 181], "original_column": 59, "original_dataset": 181, "original_label_map": 55, "original_median_shape_after_transp": 48, "original_median_spacing_after_transp": 48, "original_model": 101, "original_param": 163, "orthonorm": 158, "other": [1, 4, 21, 22, 23, 24, 27, 28, 29, 30, 33, 38, 40, 43, 44, 47, 48, 49, 51, 62, 77, 78, 84, 85, 86, 88, 89, 98, 100, 104, 108, 109, 119, 128, 136, 137, 138, 139, 140, 142, 143, 145, 147, 158, 162, 170, 172, 183], "otherwis": [7, 11, 13, 14, 23, 30, 38, 39, 49, 62, 78, 79, 101, 125, 129, 131, 133, 171, 181], "our": [1, 4, 7, 34, 40, 75, 82], "out": [1, 33, 117, 140, 152, 158], "out_channel": 100, "out_featur": 102, "outcom": [78, 79], "output": [23, 28, 36, 48, 56, 70, 75, 82, 88, 89, 92, 93, 95, 97, 98, 100, 102, 103, 105, 108, 109, 123, 145, 168, 172, 179], "output_dim": 168, "output_dir": 56, "output_fold": [129, 131], "output_pad": 100, "output_path": 56, "output_s": [70, 100], "outsid": [4, 129, 130, 131, 133, 184], "over": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 69, 70, 75, 76, 77, 78, 82, 85, 86, 103, 128, 129, 133, 136, 138, 151, 152, 163, 170, 179, 185], "overal": 1, "overestim": 107, "overfit": 171, "overflow": [78, 79], "overhead": 48, "overrid": [12, 16, 18, 19, 22, 23, 24, 25, 34, 36, 37, 40, 48, 49, 51, 79, 104, 141, 147, 156, 172, 179], "overridden": [21, 23, 30, 33, 40, 45, 48, 85, 86, 93, 139, 144, 156, 163, 172, 179], "overwrit": [10, 12, 95, 129, 133], "own": [4, 48, 179, 183], "p": [1, 78, 79, 152], "pack": [1, 21, 27, 28, 38, 43, 44, 51, 85, 86, 93, 116, 119, 141, 152, 153, 154, 155, 157, 158, 159, 170], "pack_losses_with_val_metr": [23, 39, 156], "pack_paramet": [110, 114, 116, 118], "packag": [0, 1, 7, 21, 119, 151, 152, 161, 163, 179], "packed_data": 170, "packed_paramet": [114, 116, 118], "packer": [13, 116, 152], "packing_exchang": [8, 110], "packingservercheckpointandandstatemodul": [8, 9, 13], "pad": [59, 100], "pad_image_path_func": [53, 57, 59], "pad_label_map_func": [53, 57, 59], "padding_mod": 100, "page": [1, 116, 119, 154], "pair": [68, 70, 71, 73, 75, 76, 77, 78, 82, 129, 133, 168], "pairwise_distance_squar": [67, 70], "panchal23a": [39, 160], "panda": 62, "paper": [28, 36, 46, 47, 50, 51, 59, 68, 70, 73, 128, 151, 152, 155, 158, 163, 168, 172], "paper_fil": 68, "paradigm": 159, "parallel": [37, 50, 58, 96, 98, 105], "parallel_output_join": [91, 105], "parallel_split_model": [8, 91], "parallelfeaturejoinmod": [8, 91, 105], "parallelsplitheadmodul": [8, 91, 98, 105, 108], "parallelsplitmodel": [8, 91, 98, 105, 108], "param": [51, 90, 116, 163], "paramet": [4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 186], "parameter_exchang": [8, 13, 49, 85, 86, 88, 89, 144], "parameter_exchanger_bas": [8, 110], "parameter_extract": [7, 8, 165], "parameter_pack": [8, 110, 114, 118], "parameter_selection_criteria": [8, 110], "parameter_upd": 163, "parameterexchang": [8, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 49, 50, 51, 85, 86, 110, 112, 113, 115, 118], "parameterpack": [8, 110, 116], "parameterpackeradaptiveconstraint": [8, 110, 116], "parameterpackerwithclippingbit": [8, 110, 116], "parameterpackerwithcontrolvari": [8, 110, 116], "parameterpackerwithlayernam": [8, 110, 116], "parametr": 70, "params1": 180, "params2": 180, "params_1": [51, 163], "params_2": [51, 163], "parent": [13, 29, 38, 48, 78, 104, 161], "part": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 77, 105, 128, 136, 137, 138, 139, 140, 142, 143, 145, 147, 154, 179, 185], "parti": 46, "partial": [7, 30, 49, 77, 96, 117, 125, 156, 163], "partial_layer_exchange_model": [8, 91], "partial_parameter_exchang": [8, 110], "partial_weight_exchange_cli": [8, 20], "partiallayerexchangemodel": [8, 91, 92, 98, 106, 108, 109], "partialparameterexchang": [8, 49, 110, 113, 118, 119], "partialweightexchangecli": [8, 20, 49], "particip": [136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 153, 154, 156, 163], "particular": [11, 78, 159, 181, 185], "partit": 181, "partition": [8, 165], "partition_dataset": [165, 181], "partition_label_indic": [165, 181], "partitioned_dataset": 181, "pass": [1, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 70, 75, 76, 77, 78, 79, 82, 85, 86, 88, 89, 90, 93, 95, 97, 100, 102, 103, 104, 105, 107, 109, 129, 130, 131, 133, 141, 145, 146, 147, 155, 157, 167, 170, 172, 179, 181, 185], "past": [10, 12, 30, 74], "patch": 179, "path": [7, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 58, 59, 97, 122, 124, 125, 131, 141, 171, 173], "path_to_checkpoint": [10, 12], "pathlib": 7, "patienc": 171, "pc": 158, "pca": [8, 31, 91, 158], "pca_lowrank": 107, "pca_preprocessor": [8, 120], "pcamodul": [8, 31, 91, 107, 124, 158], "pcapreprocessor": [8, 120, 124], "pd": [56, 59, 62], "pdf": [35, 36, 37, 39, 51, 68, 96, 97, 142, 152, 159, 160, 162, 163, 172], "peft": 182, "peft_parameter_extract": [8, 165], "penal": [21, 27, 43, 44], "penalti": [4, 21, 27, 28, 32, 38, 43, 44, 47, 85, 86, 88, 89, 155, 157], "penalty_loss_funct": [85, 86, 88, 89], "per": [48, 68, 78, 79, 80, 103, 107, 127, 128, 143, 147, 152, 162, 168, 179, 181], "per_client_example_cap": [152, 162], "per_round_checkpoint": [23, 30], "percentag": [55, 58, 113, 117, 185], "perfcl": [4, 25, 37, 50, 71, 73, 108], "perfcl_bas": [8, 91], "perfcl_client": [8, 20], "perfcl_loss": [8, 25, 67], "perfcl_loss_config": 71, "perfclclient": [8, 20, 50], "perfclloss": [8, 67, 73], "perfcllosscontain": [8, 67, 71], "perfclmodel": [8, 50, 91, 108], "perform": [4, 11, 16, 21, 23, 24, 25, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 75, 82, 85, 86, 93, 107, 119, 124, 127, 128, 139, 143, 144, 145, 147, 151, 152, 153, 154, 158, 159, 161, 163, 167, 170, 175, 179, 181, 183], "perform_linear_approxim": 72, "perhap": [13, 23, 31, 48, 93], "persist": 10, "person": [4, 8, 22, 28, 38, 40, 47, 85, 92, 138], "personalizedmod": [8, 85, 88], "perspect": [78, 163], "phase": [4, 13, 36, 97, 153, 154, 163], "pickl": [48, 56], "piec": [50, 65, 71, 93], "pii": [50, 73], "pinnabl": 172, "pip": [1, 7], "pipelin": [62, 93], "pixel": 79, "place": [13, 46, 62, 79, 153, 154, 179, 181], "placehold": 12, "plan": [48, 139, 145, 179], "plans_identifi": 48, "plans_nam": 48, "plansnam": 48, "plate": 56, "pleas": [1, 62, 100, 113, 116, 119, 154, 172], "plu": [46, 175], "plugin": 171, "poetri": 1, "point": [1, 45, 55, 107, 127, 128, 141, 158, 181, 185], "poisson": [19, 127, 128], "poisson_sampling_manag": [8, 15], "poissonsampl": [8, 126, 128], "poissonsamplingclientmanag": [8, 15, 19], "poll": [8, 45, 134, 139, 140, 143, 145, 151, 164], "poll_client": [8, 134, 146], "poll_clients_for_sample_count": [134, 139], "pollresultsandfailur": 146, "polylrschedulerwrapp": [8, 165, 179], "polynomi": 179, "pool": [139, 146], "popul": [128, 129, 133], "population_s": 128, "pos_label": [78, 79], "posit": [68, 71, 73, 78, 79, 83, 84], "positive_pair": [68, 71], "posixpath": [129, 131], "possibl": [1, 35, 71, 78, 79, 179, 183], "possibli": [39, 47, 183], "post": [11, 13, 79, 139, 142], "post_aggreg": [9, 11], "posterior": 159, "potenti": [4, 10, 11, 12, 13, 14, 23, 27, 28, 29, 30, 41, 47, 88, 89, 93, 136, 137, 138, 139, 140, 142, 143, 145, 147, 155, 170, 181, 183], "power": [72, 168], "pr": 1, "pre": [1, 11, 13, 97, 113, 122, 124, 170], "pre_aggreg": [9, 11], "preced": [105, 163], "precis": [48, 107, 154, 158, 159], "pred": [21, 22, 23, 25, 27, 28, 29, 38, 43, 44, 46, 47, 48, 50, 77, 78, 79, 81, 84, 87, 88, 89, 123, 179], "pred_1": 77, "pred_2": 77, "pred_transform": 77, "predict": [4, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 89, 92, 94, 97, 98, 104, 105, 108, 109, 123, 156, 179], "predict_with_model": [20, 40, 85, 87], "prediction_head": 97, "preds_1": 77, "preds_2": 77, "preds_list": 94, "preemption": 139, "prefix": [10, 48, 95, 125], "prepar": 107, "prepare_data_forward": [91, 107], "prepare_loss_arg": [8, 165, 179], "prepend": 10, "preprocess": [8, 48, 53, 54, 59, 79], "preprocess_derm7pt": [53, 57, 59], "preprocess_ham10000": [53, 57, 59], "preprocess_isic_2019": [53, 57, 59], "preprocess_pad_ufes_20": [53, 57, 59], "preprocess_skin": [53, 57], "prescrib": 1, "present": [4, 11, 23, 30, 36, 78, 79, 84, 97, 156, 167, 181], "preserv": [11, 13, 46, 109, 136, 137, 138, 139, 140, 142, 143, 145, 147, 166], "press": [39, 160], "pretrain": [97, 125], "pretrained_model": 125, "pretrained_model_path": 125, "prevent": [78, 79, 95], "previou": [4, 10, 46, 73, 74, 77, 129, 133, 152], "previous": [77, 184], "primari": 107, "princip": [4, 31, 107, 124, 158], "principal_compon": 107, "print": [48, 55, 166], "prior": [23, 25, 45, 50, 51, 77, 78, 79, 95, 107, 139, 142, 143, 145, 162, 167, 179, 181], "prior_distribut": 181, "priorit": [4, 167], "prioriti": [129, 133], "privaci": [8, 12, 24, 41, 47, 140, 143, 147, 152, 183], "privacy_util": [8, 165], "privacy_validate_and_fix_modul": [8, 165, 183], "privat": [4, 34, 36, 41, 51, 147, 152], "probabilist": 159, "probabl": [19, 100, 102, 103, 127, 128, 159, 168, 172, 179, 181, 185], "problem": [78, 84], "proce": [136, 137, 138, 139, 140, 142, 143, 145, 147], "procedur": [4, 27, 28, 43, 88, 89, 105, 128, 158], "proceed": [13, 27, 28, 39, 43, 88, 89, 147, 160], "process": [11, 13, 19, 23, 30, 36, 37, 39, 41, 48, 55, 56, 58, 59, 79, 117, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 170, 171, 172, 179, 184], "process_and_check_validation_step": [8, 165, 166], "process_client_data": [53, 57, 59], "process_config": [20, 23, 39], "process_data": [53, 54, 56], "process_fed_rep_config": [20, 36], "processor": 122, "produc": [1, 10, 17, 18, 22, 23, 29, 36, 40, 46, 48, 73, 78, 92, 93, 94, 98, 100, 102, 103, 104, 105, 108, 119, 136, 137, 138, 139, 140, 142, 143, 145, 147, 151, 152, 158, 163, 168, 175], "product": [27, 28, 38, 43, 44, 47, 74], "progress": [1, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 166], "progress_bar": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 166], "project": [4, 97, 104, 107, 124, 129, 133], "project_back": [91, 107], "project_lower_dim": [91, 107], "projection_head": 97, "projection_modul": 104, "propag": [100, 102, 103, 172], "proper": [10, 11, 12, 13, 28, 36, 88, 89, 97, 113, 143, 153, 154, 179], "properli": [1, 11, 13, 33, 35, 49], "properti": [23, 48, 49, 88, 89, 113, 145, 146, 151], "proport": [163, 173], "propos": [68, 70], "protocol": [86, 87, 88, 89], "provid": [4, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 65, 66, 68, 69, 71, 72, 78, 79, 80, 84, 92, 93, 97, 101, 102, 103, 112, 113, 125, 127, 128, 129, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 166, 169, 172, 179, 181, 183], "proxi": [146, 172], "proxim": [155, 157], "prune": 159, "pseudo": 172, "pseudo_sort_scoring_funct": [8, 165, 172], "pt": 14, "pull": [21, 23, 24, 28, 30, 38, 49, 85, 86, 88, 89], "pull_paramet": [110, 111, 112, 113, 115, 119], "purpos": [10, 48, 62, 107, 136, 138], "push": 1, "push_paramet": [110, 112, 113, 115, 119], "put": 55, "py": [1, 59, 92], "pylint": 1, "pypi": [1, 4], "pyproject": 1, "pytest": 1, "pytestarg": 1, "pytesten": 1, "python": [1, 4, 7, 129, 133, 179, 184], "python3": 1, "pytorch": [10, 12, 23, 28, 30, 31, 41, 45, 48, 79, 88, 89, 100, 107, 113, 116, 119, 124, 154, 169, 179, 180, 182, 183, 184], "q": [107, 128], "q_1": 128, "q_2": 128, "qinbinli": 68, "qr": 158, "quadrupl": 72, "quantil": 152, "quantiti": 163, "queri": 147, "quickli": 179, "quickstart": 4, "quintessenti": 155, "quotat": 1, "quotestyl": 1, "r": 172, "rais": [10, 11, 13, 14, 23, 28, 29, 30, 31, 36, 38, 39, 40, 43, 44, 45, 48, 62, 66, 75, 76, 77, 79, 82, 84, 85, 86, 88, 89, 90, 100, 105, 141, 152, 156, 163, 166, 167, 169, 175, 179, 181], "rand": 181, "randint": 181, "random": [8, 55, 58, 72, 107, 129, 133, 145, 165, 179, 181, 185], "random_st": 184, "randomli": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51], "rang": [4, 77, 181, 185], "rank": 107, "rank_estim": 107, "rapid": 179, "rate": [4, 23, 51, 70, 92, 128, 152, 160, 163, 179, 186], "rather": [1, 13, 19, 38, 85, 86, 96, 152, 169, 181], "ratio": [127, 128, 179], "raw": [141, 152, 163], "rbf": 72, "re": [1, 10, 21, 23, 28, 38, 72, 85, 86, 88, 89, 97, 129, 133, 139, 151, 152, 153, 154, 155, 158, 161, 163, 170, 175], "read": 179, "readi": [139, 179], "real": [13, 117, 124], "realiti": 124, "reason": [10, 12, 107, 145, 163], "recal": [13, 79], "receiv": [17, 21, 23, 25, 32, 44, 47, 48, 50, 75, 82, 100, 102, 103, 146, 153, 154, 155, 163, 168], "recent": [4, 22, 23, 27, 35, 43, 44, 139], "recip": [93, 179], "recogn": 11, "recommend": [1, 7, 48, 155, 163], "reconstitut": 112, "reconstruct": [65, 93, 107, 123], "record": [41, 139], "recov": 107, "redirect": 179, "redistribut": [144, 161], "reduc": [48, 68, 70, 73, 79, 107, 124, 155, 157], "reduce_dimens": [120, 124], "reduct": [31, 79, 107, 124], "ref": [129, 133], "ref_image_shap": 179, "refer": [4, 23, 46, 50, 74, 84, 159, 168], "reflect": [100, 163], "reformat": 48, "regardless": [10, 78, 79, 151, 170], "regist": [93, 95, 179], "regular": [47, 100, 102, 154], "regularized_q_k": 72, "reiniti": 183, "rel": [68, 78, 79, 107, 185], "relat": [4, 37, 50, 84, 152, 159], "releas": [1, 179], "relev": [21, 23, 24, 28, 30, 38, 45, 47, 50, 51, 62, 85, 86, 88, 89, 103, 150], "reli": [13, 34, 112, 113, 170], "reload": [31, 179], "reload_modul": [8, 165, 179], "remain": [11, 14, 68, 79, 98, 108, 152, 155, 157], "remaind": [55, 78, 104], "rememb": [1, 7], "remot": 1, "remov": [4, 14, 78, 79, 95], "removablehandl": 95, "remove_hook": [91, 95], "rep_epoch": 36, "rep_step": 36, "repack": 163, "reparameter": 93, "repeat": 181, "repeatedli": 172, "replac": [16, 18, 19, 47, 83, 127, 179, 183], "replic": 100, "report": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 78, 79, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147], "report_centralized_ev": [134, 139], "reports_manag": [8, 129], "reportsmanag": [8, 129, 132, 186], "repositori": [1, 59], "repres": [13, 14, 16, 18, 19, 22, 23, 25, 27, 30, 31, 36, 39, 43, 44, 45, 50, 65, 75, 76, 77, 79, 82, 83, 93, 94, 96, 107, 109, 116, 119, 123, 146, 150, 154, 162, 163, 168, 172, 175, 179], "represent": [4, 20, 36, 46, 70, 93, 97, 107, 168, 175], "reproduc": [173, 184], "request": [21, 62, 85, 86, 100, 136, 137, 138, 139, 140, 142, 143, 145, 147, 150, 151, 166, 181], "requir": [11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 28, 29, 34, 35, 36, 37, 46, 48, 49, 50, 51, 70, 78, 79, 85, 86, 88, 89, 98, 107, 109, 116, 119, 128, 137, 145, 146, 151, 152, 153, 154, 156, 158, 161, 169, 172, 181, 183], "requires_grad": 96, "resampl": [17, 181], "research": [1, 4], "resembl": 96, "reserv": 55, "reset": [17, 23, 27, 43, 44, 75, 76, 77, 79, 81, 82, 142, 159, 165, 175, 179], "reset_beta_prior": [149, 159], "reset_frequ": 142, "reset_sampl": [15, 17], "reshap": 107, "resili": 139, "resolut": 179, "respect": [7, 22, 25, 27, 28, 36, 38, 75, 76, 77, 78, 79, 82, 84, 88, 89, 98, 100, 102, 103, 108, 127, 173], "respond": [141, 144], "respons": [13, 23, 40, 105, 113, 116, 119, 139, 141, 142, 146, 158], "rest": 68, "restart": [11, 13, 14, 136, 137, 138, 139, 140, 142, 143, 145, 147], "restor": [93, 171, 184], "restore_random_st": [8, 165, 184], "restrict": [14, 152, 163], "result": [31, 77, 78, 79, 107, 116, 129, 133, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 172, 183, 184, 185], "resum": [129, 133], "retain": [62, 119, 154], "retri": 181, "retriev": [13, 140, 143, 146, 172], "return": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186], "return_mu_onli": 122, "reus": [28, 36, 88, 89, 93, 129, 133], "right": [4, 13, 24, 36, 93, 107, 137, 158], "robust": [28, 38, 88, 89], "roc_auc": [75, 82], "rocauc": [8, 75, 82], "root": [55, 56], "round": [7, 8, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 32, 36, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 73, 79, 85, 86, 88, 89, 92, 113, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 172, 179], "rout": [13, 28, 38, 47, 62, 88, 89, 97], "row": [56, 59, 107, 158], "rpc": 145, "rtype": [93, 172, 179], "rule": 1, "run": [1, 13, 17, 28, 31, 36, 48, 88, 89, 92, 93, 104, 109, 128, 129, 131, 133, 139, 140, 141, 143, 146, 147, 156, 163, 172, 179, 183, 184], "run_id": [129, 131], "runtim": 48, "runtimeerror": [85, 86, 88, 89], "rxrx": 55, "rxrx1": [8, 53], "s0031320323002078": [50, 73], "s_1": 158, "s_2": 158, "s_i": 158, "s_n": 158, "safe_global_model": [85, 88, 89], "said": 1, "same": [7, 17, 28, 35, 38, 39, 41, 48, 70, 72, 78, 79, 81, 84, 88, 89, 93, 100, 101, 102, 103, 104, 113, 125, 128, 129, 133, 139, 142, 145, 154, 155, 159, 162, 166, 168, 169, 172, 179, 181], "sampl": [15, 16, 17, 18, 19, 23, 30, 31, 36, 45, 48, 55, 70, 78, 79, 80, 91, 93, 94, 97, 100, 102, 103, 117, 122, 127, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 159, 161, 162, 163, 168, 170, 172, 173, 179, 181, 185], "sample_al": [15, 16], "sample_count": [140, 143], "sample_fract": [15, 16, 18, 19, 152], "sample_percentag": 185, "sample_s": 128, "sampler": [8, 58, 165, 173], "samples_per_cli": 168, "sampling_ratio": 128, "sampling_strategi": 128, "samplingstrategi": [8, 126, 128], "satisfi": [85, 86, 88, 89, 181], "save": [10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 56, 59, 73, 79, 88, 89, 97, 122, 124, 129, 131, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 170, 171, 172, 184, 186], "save_attribut": [165, 186], "save_checkpoint": [9, 14], "save_client_st": [9, 14], "save_for_backward": 172, "save_for_forward": 172, "save_model": [20, 31], "save_random_st": [8, 165, 184], "save_server_st": [9, 14], "save_st": [9, 11, 13, 14], "save_to_json": [53, 57, 59], "save_to_pkl": [53, 54, 56], "scaffold": [4, 8, 13, 23, 51, 116, 147, 149], "scaffold_cli": [8, 20], "scaffold_serv": [8, 134], "scaffoldcli": [8, 20, 51], "scaffoldserv": [8, 134, 147], "scaffoldservercheckpointandstatemodul": [8, 9, 13, 147], "scalar": [10, 11, 12, 13, 23, 27, 28, 30, 31, 36, 39, 45, 47, 48, 65, 66, 75, 76, 77, 79, 82, 88, 89, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163], "scale": [48, 68, 72, 74, 162, 163, 179], "scaling_coeffici": 163, "scenario": [23, 38, 95], "schedul": [23, 48, 179, 186], "scheme": [153, 154, 158, 159, 170], "scienc": [50, 73], "sciencedirect": [50, 73], "scikit": [75, 82], "scope": [129, 130, 131, 133, 179], "score": [10, 12, 13, 75, 77, 78, 79, 82, 83, 100, 102, 103, 117, 119, 159, 172], "score_gen_funct": 119, "scoregenfunct": 119, "script": [7, 55, 59], "second": [11, 23, 25, 27, 28, 35, 38, 40, 43, 44, 46, 48, 50, 51, 69, 71, 72, 73, 78, 105, 109, 139, 140, 141, 142, 143, 144, 147, 151, 152, 159, 160, 168, 180], "second_featur": 71, "second_feature_extractor": [105, 108], "second_tensor": 105, "section": [1, 168, 172], "secur": 4, "see": [1, 48, 62, 71, 75, 78, 79, 82, 100, 107, 113, 116, 119, 128, 129, 133, 139, 144, 154, 155, 157, 158, 168, 172, 179, 184], "seed": [55, 58, 172, 184, 185], "seem": [10, 14, 48], "seen": [10, 77, 155, 157, 171], "segment": [48, 79, 173, 179], "select": [16, 17, 18, 19, 49, 55, 113, 116, 117, 119, 128, 139, 140, 141, 143, 146, 169, 172, 185], "select_by_indic": [8, 165, 169], "select_by_percentag": [110, 117], "select_by_threshold": [110, 117], "select_drift_mor": 117, "select_layers_by_percentag": [8, 110, 117], "select_layers_by_threshold": [8, 110, 117], "select_paramet": [110, 113, 118, 119], "select_scores_and_sample_mask": [8, 110, 117], "select_zeroeth_el": [8, 165, 172], "selected_indic": 169, "self": [7, 10, 12, 14, 17, 21, 22, 23, 24, 27, 29, 33, 38, 40, 41, 43, 44, 45, 48, 49, 62, 78, 79, 105, 107, 109, 117, 129, 133, 156, 163, 166, 167, 168, 170, 181], "semant": 158, "send": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 88, 89, 112, 117, 122, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 153, 154, 158, 166, 171], "sens": [31, 79], "sensibl": 14, "sent": [21, 23, 24, 28, 29, 30, 31, 38, 41, 45, 47, 48, 49, 51, 71, 85, 86, 88, 89, 112, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 159, 161, 163], "sentri": 1, "seongjun": 59, "separ": [4, 7, 23, 27, 40, 43, 44, 47, 78, 79, 116, 130, 153, 172, 179], "sequenc": [1, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 77, 81, 103, 127, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 179], "sequenti": [38, 95, 104, 109], "sequential_forward": [91, 104, 109], "sequential_split_model": [8, 91], "sequentiallysplitexchangebasemodel": [8, 34, 91, 96, 109], "sequentiallysplitmodel": [8, 38, 91, 104, 109], "seri": 59, "serial": [48, 65], "serializ": 186, "serializableobjectsnapshott": [8, 165, 186], "serv": [21, 28, 33, 88, 89], "server": [4, 8, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73, 85, 86, 88, 89, 92, 96, 98, 108, 109, 113, 117, 127, 128, 129, 130, 131, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 171, 172], "server_": 14, "server_address": 7, "server_control_vari": 163, "server_learning_r": 152, "server_model": 144, "server_model_weight": 163, "server_modul": [8, 9], "server_nam": [14, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147], "server_noise_multipli": 140, "server_paramet": 13, "server_round": [139, 142, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164], "server_upd": [127, 128], "serverconfig": 7, "serverstatecheckpoint": [8, 9, 13, 14], "set": [1, 4, 7, 10, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 68, 69, 71, 72, 74, 77, 78, 79, 81, 83, 84, 85, 86, 88, 89, 92, 95, 96, 97, 102, 103, 105, 107, 108, 112, 113, 116, 119, 124, 128, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 167, 168, 169, 172, 173, 179, 181, 184, 185], "set_all_random_se": [8, 165, 184], "set_attribut": [9, 14], "set_checkpoint_path": [9, 14], "set_config": 62, "set_data_mean": [91, 107], "set_fit_request": [60, 62], "set_initial_global_tensor": [20, 28, 38, 85, 88, 89], "set_len": 179, "set_nnunet_env": [8, 165, 179], "set_optim": [20, 22, 23, 28, 29, 36, 85, 88, 89], "set_pack_losses_with_val_metr": [8, 165, 166], "set_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 45, 47, 49, 51, 85, 86, 87, 88, 89], "set_principal_compon": [91, 107], "set_transform_request": [60, 62], "setup": [1, 7, 28, 31, 35, 36, 41, 47, 49, 88, 89, 136, 137, 138, 139, 140, 142, 143, 145, 147, 168], "setup_cli": [20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 85, 87, 88, 89], "setup_context": [165, 172], "setup_opacus_object": [20, 41, 183], "setup_privacy_account": [134, 140, 143], "sever": [4, 79], "sgd": [7, 128, 143, 147, 183], "shape": [48, 68, 69, 72, 73, 75, 78, 79, 82, 84, 93, 95, 98, 100, 103, 104, 108, 109, 116, 119, 154, 159, 168, 170, 179, 180], "share": [4, 22, 32, 34, 36, 125, 136, 158, 168], "shift": 4, "short": [117, 129, 133], "should": [1, 7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 62, 69, 70, 72, 74, 78, 79, 84, 85, 86, 88, 89, 90, 93, 95, 98, 103, 107, 109, 113, 127, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 156, 157, 162, 164, 168, 169, 170, 171, 172, 175, 179, 181, 186], "should_layer_be_exclud": [110, 113], "should_module_be_exclud": [110, 113], "should_stop": [165, 171], "shouldn": [129, 133], "show": 1, "shown": [4, 35], "shuffl": 58, "shut": [23, 48], "shutdown": [7, 8, 20, 23, 48, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 145, 147, 165, 179], "shutdown_dataload": [20, 48], "side": [1, 4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73, 85, 86, 88, 89, 92, 100, 128, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163], "sigint": 179, "sigma": [128, 162, 168], "sigma_phi": 70, "sigma_q": 70, "sigmoid": [100, 102, 103, 159], "sigmoid_invers": [8, 165, 172], "signal": [17, 156, 179], "signal_for_typ": [149, 156], "signalfortypeerror": [8, 149, 156], "signalfortypeexcept": 156, "signatur": 172, "signific": 4, "significantli": [4, 48], "sigterm": 179, "silent": [93, 179], "silo": 47, "sim": [69, 93, 168], "simclr": [68, 97], "similar": [4, 25, 36, 40, 46, 48, 68, 69, 71, 73, 93, 97, 158, 181], "similarli": 158, "simpl": [4, 16, 18, 19, 21, 130, 144, 151, 163, 168], "simpleclientmanag": [7, 16, 17], "simplemetr": [8, 75, 82], "simplest": [22, 23], "simpli": [7, 11, 13, 25, 27, 28, 29, 33, 36, 38, 39, 43, 45, 46, 50, 83, 88, 89, 93, 98, 108, 112, 139, 142, 152, 155, 157, 159, 163, 172], "simultan": [28, 38, 88, 89], "sinc": [29, 31, 45, 49, 93, 125, 141, 153, 158, 159, 171, 179], "singl": [13, 21, 22, 23, 29, 31, 40, 48, 51, 62, 78, 79, 85, 86, 103, 105, 127, 146, 162, 175, 179, 186], "singlethreadedaugment": 179, "singleton": [103, 186], "singletonsnapshott": [8, 165, 186], "singular": [107, 158], "singular_valu": 107, "sirna_id": 56, "sit": [139, 142], "site": 56, "six": 100, "size": [27, 55, 58, 69, 70, 72, 78, 79, 84, 100, 102, 103, 116, 127, 128, 143, 147, 152, 156, 157, 158, 162, 166, 168, 170, 173, 179, 181, 185], "size_of_model_param": 116, "skew": [168, 181, 185], "skin": 58, "skin_canc": [8, 53], "skin_cancer_feder": 59, "sklearn": [62, 75, 82], "slice": 169, "slight": 107, "slightli": 36, "small": [75, 82, 107, 181], "smaller": [77, 158, 181, 185], "smallest_final_magnitude_scor": [8, 110, 117], "smallest_increase_in_magnitude_scor": [8, 110, 117], "smallest_magnitude_change_scor": [8, 110, 117], "smoke": 1, "smoke_test": 1, "smooth": [70, 77], "smoothing_factor": 77, "snapshot": [14, 171, 186], "snapshot_attr": [11, 13, 14], "snapshott": [8, 14, 165], "so": [1, 10, 12, 13, 14, 17, 21, 23, 28, 31, 33, 38, 39, 45, 48, 49, 85, 86, 88, 89, 107, 113, 124, 129, 133, 139, 145, 152, 153, 154, 159, 166, 167, 171, 172, 179, 181, 185], "soft": [75, 79, 82, 83, 84], "softmax": 168, "solver": 47, "some": [1, 11, 19, 29, 31, 41, 48, 62, 84, 93, 105, 119, 128, 129, 133, 139, 145, 152, 153, 154, 158, 162, 163, 179, 181], "someth": [1, 23, 28, 38, 40, 43, 44, 100, 184], "sometim": [130, 131], "soon": 4, "sophist": 159, "sort": [95, 172], "sourc": [1, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "source_plan": 179, "source_plans_nam": 48, "space": [37, 50, 93, 98, 100, 107, 123], "spars": [4, 13, 33, 35, 107, 116, 119, 154], "sparse_coo_parameter_exchang": [8, 110], "sparse_coo_tensor": [116, 119, 154], "sparsecooparameterexchang": [8, 110, 119], "sparsecooparameterpack": [8, 110, 116], "sparsecooservercheckpointandstatemodul": [8, 9, 13], "sparsiti": 119, "sparsity_level": 119, "spatial": [75, 82, 179], "spatial_dimens": [75, 82], "spawn": [48, 179], "special": [13, 40, 153, 154], "specif": [1, 4, 10, 12, 13, 14, 22, 23, 25, 33, 46, 48, 50, 59, 79, 95, 103, 104, 109, 112, 113, 119, 122, 158, 161, 163, 170, 179], "specifi": [7, 10, 12, 14, 23, 30, 35, 36, 48, 51, 55, 56, 66, 78, 79, 83, 90, 92, 93, 95, 104, 105, 107, 109, 113, 128, 129, 133, 142, 145, 147, 156, 157, 166, 171, 173, 179, 185], "spite": 152, "split": [37, 50, 55, 58, 98, 104, 105, 109, 116, 125, 152, 173], "split_data_and_target": [8, 165, 173], "split_model_weights_and_clipping_bit": [149, 152], "split_perc": 58, "sqrt": 152, "squar": 24, "ssltensordataset": [8, 165, 169], "stabil": 103, "stabl": [75, 82, 100, 107, 116, 119, 154, 184], "stack": [31, 38], "stage": [30, 97, 109, 168], "stai": [4, 28, 38, 88, 89, 104], "standalon": 90, "standard": [1, 4, 45, 48, 50, 93, 109, 123, 128, 145, 151, 152, 162, 163, 168, 183], "standard_normal_kl_divergence_loss": [121, 123], "start": [1, 4, 25, 46, 48, 49, 50, 73, 95, 117, 129, 133, 139, 168, 171, 179], "start_client": 7, "start_run": [8, 129, 133], "start_serv": 7, "startonnewlin": 1, "state": [1, 4, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 76, 77, 81, 82, 85, 86, 88, 89, 92, 108, 116, 125, 128, 136, 137, 138, 139, 140, 142, 143, 145, 147, 150, 166, 171, 180, 182, 184, 186], "state_checkpoint": [8, 9, 11, 13, 171], "state_dict": [12, 112, 113, 117], "statecheckpoint": [8, 9, 14], "static": [1, 30, 65, 66, 97, 113, 116, 170, 172, 175], "staticmethod": 172, "statist": [13, 39, 72], "std": [70, 127, 162], "stdout": [48, 179], "step": [7, 8, 13, 21, 22, 23, 25, 27, 28, 29, 36, 39, 40, 41, 43, 44, 46, 48, 50, 51, 70, 77, 85, 86, 88, 89, 129, 130, 131, 132, 133, 143, 147, 154, 156, 157, 163, 167, 170, 171, 179], "steps_per_lr": 179, "steptyp": [129, 133], "still": [136, 138, 151, 159, 161, 171], "stochast": 172, "stop": [14, 39, 171], "stopiter": 179, "stopper": 171, "storag": [49, 98], "store": [13, 14, 21, 23, 24, 27, 28, 29, 32, 38, 43, 44, 46, 49, 77, 78, 79, 85, 86, 88, 89, 92, 95, 98, 104, 105, 107, 108, 109, 172, 175], "store_initial_model": 49, "str": [1, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 62, 65, 66, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 98, 100, 105, 106, 108, 109, 113, 116, 117, 119, 125, 129, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 169, 170, 171, 173, 174, 175, 179, 180, 181, 183, 184, 186], "straight": 172, "straightforward": [32, 96], "strap": [38, 39, 41, 139], "strategi": [4, 7, 8, 12, 21, 28, 33, 47, 49, 51, 85, 86, 128, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147], "strategy_with_pol": [8, 149], "strategywithpol": [8, 139, 149, 151, 164], "stream": 179, "streamtologg": [8, 165, 179], "strict": 1, "strictli": [1, 4, 22, 168, 169], "stride": 100, "string": [1, 14, 22, 23, 28, 36, 48, 60, 62, 65, 66, 75, 76, 77, 79, 81, 82, 88, 89, 129, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 167, 179, 181, 186], "string_columns_transform": [8, 60], "stringio": 179, "stringsnapshott": [8, 165, 186], "strongli": 1, "structur": [14, 78, 93, 96], "stuff": 179, "style": [1, 168], "sub": 62, "subclass": [22, 23, 24, 25, 34, 36, 37, 40, 48, 49, 51, 79, 85, 86, 93, 168, 172, 175, 179], "subfold": 173, "subject": 185, "submit": [1, 4], "submodul": [8, 38, 53], "subpackag": 179, "subprocess": 179, "subsampl": [165, 169, 173, 181, 185], "subsequ": [17, 31, 45, 46, 77, 145, 179], "subset": [1, 13, 23, 30, 49, 50, 55, 113, 117, 119, 128, 153, 154, 169], "subspac": [107, 158], "subspace1": 158, "subspace2": 158, "subtract": [51, 107, 163], "success": [139, 141, 142, 163], "successfulli": 14, "suffici": [107, 128], "suggest": [28, 47, 158], "suit": 1, "sum": [24, 73, 79, 91, 105, 156, 157, 159, 162, 172], "summari": [129, 130, 131, 133], "summat": 105, "super": [130, 156], "supervis": [23, 48, 145, 170, 179], "suppli": 90, "support": [4, 45, 62, 94, 101, 117, 161, 168, 169, 170, 181], "suppos": 159, "sure": [129, 133, 181], "surfac": [10, 14], "svd": [107, 158], "svd_lowrank": 107, "svd_merg": 158, "swallow": [10, 14], "switch": 36, "sync": [38, 47], "synthet": [168, 169], "synthetic_1_1": 168, "syntheticdataset": [8, 165, 169, 181], "syntheticfedproxdataset": [8, 165, 168], "syntheticiidfedproxdataset": [8, 165, 168], "syntheticnoniidfedproxdataset": [8, 165, 168], "system": [4, 7, 141, 151, 155, 156, 157, 160, 161, 163], "t": [1, 11, 14, 28, 31, 32, 38, 39, 77, 78, 79, 84, 88, 89, 107, 114, 116, 118, 129, 133, 136, 138, 158, 166, 167, 168, 172, 179, 181, 185, 186], "t_1": 128, "t_2": 128, "tab_features_info_encod": [8, 60], "tab_features_preprocessor": [8, 60], "tabl": 1, "tabular": [65, 66], "tabular_data_cli": [8, 20], "tabular_featur": [8, 60], "tabular_feature_alignment_serv": [8, 134], "tabular_typ": [8, 60], "tabularfeatur": [8, 60, 65], "tabulartyp": [8, 60, 65, 66], "tag": [129, 133, 152], "take": [10, 93, 95, 98, 105, 107, 108, 112, 113, 116, 119, 129, 133, 153, 154, 158, 161, 163, 168, 179], "taken": [51, 128], "tandem": [28, 88, 89], "target": [1, 11, 12, 14, 21, 22, 23, 25, 27, 28, 29, 36, 38, 40, 43, 44, 46, 47, 48, 50, 58, 70, 72, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 100, 102, 103, 123, 125, 136, 138, 146, 166, 169, 173, 179, 180, 182], "target_is_grad_sample_modul": 12, "target_model": [12, 74], "target_shap": 84, "target_transform": [77, 169, 173], "targets_1": 77, "targets_2": 77, "task": [4, 31, 75, 82, 161, 170, 172], "task01_braintumour": [165, 178], "task02_heart": [165, 178], "task03_liv": [165, 178], "task04_hippocampu": [165, 178], "task05_prost": [165, 178], "task06_lung": [165, 178], "task07_pancrea": [165, 178], "task08_hepaticvessel": [165, 178], "task09_spleen": [165, 178], "task10_colon": [165, 178], "tau": 160, "team": [1, 129, 133], "temperatur": [46, 50, 68, 71, 168], "templat": 1, "tensor": [21, 22, 23, 24, 25, 27, 28, 29, 31, 36, 38, 40, 43, 44, 46, 47, 48, 50, 56, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 116, 117, 119, 122, 123, 154, 159, 166, 168, 169, 170, 172, 173, 175, 179, 180, 181, 184], "tensor1": 84, "tensor2": 84, "tensor_dict": 179, "tensor_list": 179, "tensordataset": [8, 55, 58, 165, 168, 169, 170, 173, 185], "tensorflow": 128, "term": [4, 28, 38, 47, 88, 89, 171], "termin": [7, 48, 139, 179], "test": [23, 30, 31, 45, 48, 55, 56, 58, 70, 76, 81, 107, 144, 161, 165, 169, 173, 174, 179, 181], "test_": 1, "test_best_checkpoint": 1, "test_load": [45, 85, 87, 88, 89], "test_prefix": [75, 76], "test_transform": 58, "text": [24, 51, 62, 77, 92, 93, 163, 168], "textcolumntransform": [8, 60, 62], "textfeaturetransform": 62, "textmulticolumntransform": [8, 60, 62], "than": [1, 10, 13, 19, 23, 27, 28, 29, 30, 38, 40, 43, 44, 45, 81, 85, 86, 96, 100, 119, 145, 151, 152, 158, 161, 169, 181], "thank": 1, "thei": [1, 4, 11, 13, 21, 22, 23, 24, 28, 29, 30, 31, 40, 45, 48, 51, 78, 79, 85, 86, 88, 89, 93, 104, 109, 116, 119, 127, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 154, 155, 157, 163, 166, 168, 169, 170, 172, 175, 179], "them": [4, 14, 16, 22, 27, 28, 38, 41, 43, 44, 50, 88, 89, 93, 95, 105, 112, 116, 119, 152, 154, 156, 157, 159, 170, 172, 179, 186], "themselv": [159, 172, 179], "theorem": 128, "theoret": 158, "thereaft": [24, 163], "therebi": [151, 163], "therefor": [1, 48, 129, 131, 133, 163, 172, 179], "therein": 78, "thereof": [23, 30], "theta": 159, "theta_cli": 152, "theta_serv": 152, "thi": [1, 4, 7, 10, 11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 97, 98, 103, 105, 107, 109, 113, 116, 117, 119, 123, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181, 183, 184, 185, 186], "thin": [75, 77, 82], "thing": [1, 23, 48, 116, 139, 140, 143, 145, 147], "third": [139, 141, 142], "thorough": 4, "those": [1, 4, 16, 28, 38, 47, 75, 82, 84, 88, 89, 100, 102, 103, 105, 109, 113, 116, 117, 151, 163, 168, 179], "though": [1, 172], "thought": 163, "thread": 55, "three": [11, 154, 170], "threshold": [39, 75, 78, 79, 82, 83, 113, 117, 119, 152, 163, 179, 181], "threshold_tensor": [8, 75, 83], "through": [1, 4, 10, 24, 28, 31, 32, 33, 34, 36, 38, 39, 40, 46, 88, 89, 92, 93, 97, 98, 100, 105, 108, 124, 129, 133, 145, 152, 163, 172, 181, 185], "throughout": [23, 30, 31, 36, 127], "throw": [10, 11, 13, 14, 39, 100, 129, 133, 136, 137, 138, 139, 140, 142, 143, 145, 147, 169, 181], "thrown": [11, 14, 66, 100, 107, 156, 167], "thu": [45, 156, 158], "ticket": [4, 35], "time": [1, 14, 17, 23, 28, 48, 49, 51, 77, 88, 89, 124, 128, 139, 140, 141, 142, 143, 144, 147, 166, 179, 181, 184], "timeout": [139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 158, 161, 163], "tmetric": [75, 82], "tn": [78, 79], "to_client": 7, "to_json": [60, 65], "togeth": [21, 28, 31, 49, 51, 79, 85, 86, 88, 89, 93, 105, 150, 163], "token": 169, "toml": 1, "ton": 172, "tonumpi": [8, 165, 173], "too": [29, 107], "tool": 1, "top": [56, 79, 107], "top_sirna_id": 56, "torch": [7, 10, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 97, 98, 100, 104, 105, 107, 108, 109, 113, 116, 119, 122, 123, 125, 154, 166, 168, 169, 170, 172, 175, 179, 180, 181, 184], "torch_stat": 184, "torchcheckpoint": 10, "torchfeaturetyp": [21, 23, 27, 28, 38, 40, 43, 44, 47, 88, 89], "torchinputtyp": [22, 23, 25, 27, 28, 29, 36, 38, 40, 43, 44, 46, 48, 50, 88, 89, 166], "torchmetr": [8, 75, 82], "torchmodul": 113, "torchmodulecheckpoint": [8, 9, 10], "torchmodulesnapshott": [8, 165, 186], "torchpredtyp": [21, 22, 23, 27, 28, 38, 40, 43, 44, 47, 48, 81, 88, 89], "torchshap": 103, "torchtargettyp": [21, 22, 23, 27, 28, 40, 43, 44, 47, 48, 81, 88, 89, 166], "torchtransformfunct": 77, "total": [25, 46, 47, 48, 50, 80, 123, 127, 129, 130, 131, 133, 140, 141, 143, 151, 155, 156, 157, 160, 161, 162, 163, 179, 181, 185], "total_client_count_by_metr": 80, "total_client_weight": 162, "total_exampl": 80, "total_loss": [25, 46, 50], "total_sampl": [140, 143, 147], "total_step": 23, "toward": 1, "tp": [78, 79, 83], "tqdm": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51], "track": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 158], "track_running_stat": 103, "tradit": 11, "train": [4, 7, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 70, 73, 78, 79, 81, 85, 86, 88, 89, 92, 93, 94, 97, 98, 100, 102, 103, 107, 108, 113, 117, 122, 123, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 179, 181, 184], "train_by_epoch": [20, 23, 39], "train_by_step": [20, 23], "train_data_tensor": 31, "train_fedrep_by_epoch": [20, 36], "train_fedrep_by_step": [20, 36], "train_fract": 55, "train_kernel": [67, 70], "train_load": [7, 85, 87, 88, 89], "train_loop_checkpoint_dir": 171, "train_step": [8, 20, 22, 23, 28, 29, 36, 40, 48, 85, 86, 88, 89], "train_transform": 58, "train_val_split": 55, "trainer": 48, "trainingloss": [8, 21, 22, 23, 27, 28, 29, 36, 38, 40, 43, 44, 46, 47, 48, 51, 85, 86, 87, 88, 89, 165, 175], "trajectori": [21, 155], "transfer": [23, 28, 30, 31, 38, 45, 49, 88, 89, 113], "transform": [23, 40, 48, 51, 55, 58, 60, 62, 68, 77, 84, 97, 100, 102, 103, 122, 124, 168, 169, 173], "transform_gradi": [20, 23, 40, 48, 51, 85, 87], "transform_target": [20, 23, 85, 87], "transformed_featur": 68, "transformermixin": 62, "transformsmetr": [8, 75, 77], "transpar": 181, "transpos": [100, 158], "travers": 95, "treat": [78, 103, 127, 130, 131, 179], "treatment": [13, 143, 153, 154], "tree": [168, 179], "trick": 93, "tripl": 1, "trivial": [1, 169], "true": [1, 10, 11, 14, 23, 24, 27, 28, 29, 33, 38, 43, 44, 45, 47, 48, 51, 62, 70, 72, 78, 79, 83, 88, 89, 92, 95, 96, 97, 100, 101, 102, 103, 107, 117, 122, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 171, 172, 179, 184], "true_neg": [75, 78, 79], "true_posit": [75, 78, 79, 83], "truth": [21, 22, 23, 25, 27, 28, 29, 38, 43, 44, 46, 47, 48, 50, 75, 76, 77, 81, 82, 88, 89, 136, 137, 138, 139, 140, 142, 143, 145, 147], "try": [1, 10, 14, 39, 72, 128, 129, 133, 152], "tst": 70, "tune": [11, 97], "tupl": [1, 7, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 55, 58, 70, 71, 73, 75, 79, 80, 82, 84, 85, 86, 87, 88, 89, 93, 98, 100, 104, 105, 107, 108, 109, 113, 114, 116, 117, 118, 119, 123, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 172, 173, 181, 183, 184], "turn": [152, 155, 157, 158, 163], "tutori": 128, "twin": [4, 22, 92], "two": [4, 7, 11, 23, 28, 35, 36, 38, 41, 48, 51, 69, 70, 73, 78, 79, 84, 88, 89, 98, 100, 102, 103, 105, 109, 113, 116, 119, 129, 133, 141, 145, 151, 154, 158, 163, 167, 168, 172, 180], "two_layer_map_inputs_to_output": [165, 168], "type": [1, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186], "type_data": 56, "typeerror": [23, 40, 43, 44, 90, 166, 169], "typevar": [114, 116, 118, 185], "typic": [23, 48, 95], "typing1": 1, "typing2": 1, "typing_stuff": 1, "u": [107, 158], "u_1": 158, "u_2": 158, "u_i": 158, "u_k": 168, "u_n": 158, "uf": 59, "ui": [129, 133], "un": 93, "unaffect": 184, "unbias": 70, "uncategor": [129, 133], "unchang": [62, 78, 79], "undefin": [78, 83], "under": [14, 27, 28, 38, 43, 44, 48, 75, 82, 92, 98, 103, 105, 107, 108, 129, 133, 183], "underli": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 75, 77, 82, 92, 172], "underpin": 173, "undo": 184, "unfreeze_base_modul": [91, 96], "unfreeze_head_modul": [91, 96], "unfrozen": 96, "unifi": 170, "uniform": [150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 179, 181], "uniform_evaluate_metrics_aggregation_fn": [8, 75, 80], "uniform_metric_aggreg": [8, 75, 80], "uniform_normalize_metr": [8, 75, 80], "uniformli": [80, 162, 163], "unintend": 1, "unintention": 1, "union": [1, 25, 28, 29, 30, 36, 46, 50, 65, 87, 88, 89, 157, 160], "uniqu": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 129, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 179, 184], "unique_label": [181, 185], "unit": [1, 72], "unitari": 158, "unittestarg": 1, "unittesten": 1, "unknown": 66, "unless": [30, 48, 144], "unlik": [4, 12, 13, 38, 40, 47, 181], "unpack": [13, 21, 24, 28, 51, 85, 86, 88, 89, 93, 116, 123, 170], "unpack_input_condit": [93, 165, 170], "unpack_model_output": [121, 123], "unpack_paramet": [110, 114, 116, 118], "unrespons": 147, "unseen": 4, "unset_all_random_se": [8, 165, 184], "unspecifi": [129, 133], "unstructur": 13, "unsuccess": [139, 142], "until": [1, 17, 51, 181], "unus": [48, 78, 161], "unweight": [4, 46, 150, 151, 152, 153, 154, 155, 157, 159, 161, 162, 163], "unweighted_aggreg": [149, 153, 154], "unwound": 49, "up": [1, 4, 11, 21, 27, 28, 36, 39, 41, 43, 45, 49, 79, 85, 86, 88, 89, 94, 130, 139, 140, 143, 152, 158, 168, 172, 181, 185], "updat": [1, 4, 8, 14, 21, 22, 23, 24, 27, 28, 29, 38, 40, 43, 44, 47, 48, 51, 62, 75, 76, 77, 78, 79, 81, 82, 88, 89, 92, 100, 102, 103, 127, 128, 129, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 152, 155, 156, 157, 159, 162, 163, 165, 166, 175], "update_after_step": [20, 22, 23, 26, 27, 42, 43, 44], "update_after_train": [8, 20, 21, 23, 25, 46, 50, 51, 85, 86, 87], "update_alpha": [91, 92], "update_before_epoch": [20, 23], "update_before_fit": [134, 139, 145], "update_before_step": [20, 23], "update_before_train": [20, 23, 25, 26, 27, 28, 32, 38, 42, 43, 44, 46, 47, 48, 50, 85, 87, 88, 89], "update_buff": [26, 27, 42, 43, 44], "update_clipping_bound": [149, 152], "update_control_vari": [20, 51], "update_current_weight": [149, 152], "update_lr_schedul": [20, 23], "update_metric_manag": [20, 23, 48], "update_target_transform": [165, 169], "update_transform": [165, 169], "update_weights_by_ga": [149, 156], "updated_param": 163, "upgrad": 1, "upload": [129, 133, 144], "upon": [13, 112], "us": [1, 4, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 62, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 95, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 112, 113, 116, 117, 119, 122, 123, 125, 127, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 169, 170, 172, 173, 175, 179, 181, 183, 184, 185, 186], "usag": [48, 172, 181], "use_default_signal_handl": [8, 165, 179], "use_deterministic_algorithm": 184, "use_deterministic_torch_algo": 184, "user": [10, 12, 22, 23, 28, 29, 30, 31, 33, 36, 38, 39, 40, 45, 48, 49, 50, 62, 75, 79, 82, 88, 89, 93, 95, 98, 105, 107, 123, 124, 125, 151, 156, 170, 181], "usernam": [129, 133], "usual": [10, 47, 128, 179], "util": [7, 8, 10, 23, 48, 62, 75, 85, 88, 92, 107], "uuid": [131, 172], "v": [1, 36, 79, 151, 158, 168], "v2": 179, "v202": [39, 160], "v_i": 72, "v_i_quadrupl": 72, "v_k": 168, "vae": [93, 122, 123], "vaeloss": [120, 121, 123], "vaeprocessor": [120, 121, 122], "val": [10, 23, 40, 58, 76, 81, 156], "val_load": [7, 85, 87, 88, 89, 166], "val_prefix": [75, 76], "val_step": [20, 23, 40, 85, 88, 89], "val_transform": 58, "valid": [11, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 85, 87, 88, 89, 107, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 171, 173, 174, 179, 183], "validate_on_model": [20, 30], "validation_proport": 173, "valu": [10, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 32, 36, 43, 44, 46, 48, 50, 56, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 89, 92, 93, 94, 95, 100, 102, 103, 105, 107, 116, 117, 119, 123, 127, 128, 129, 133, 139, 140, 141, 143, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 172, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187], "valueerror": [11, 13, 23, 28, 30, 36, 38, 39, 40, 43, 44, 66, 88, 89, 100, 152, 163, 166, 167, 181], "vanilla": [12, 27, 28, 38, 43, 44, 47, 88, 89], "vari": [1, 78], "variabl": [41, 48, 78, 122, 167, 179, 184], "varianc": [70, 93, 107, 123, 168], "variat": [4, 23, 51, 93, 116, 147, 163], "variationala": [8, 91, 93], "varieti": 23, "variou": [4, 11, 25, 49, 50, 79], "vector": [69, 78, 79, 84, 93, 97, 107, 158, 170], "venv": 1, "verbos": [48, 179], "veri": [1, 4, 21, 23, 24, 28, 30, 38, 49, 77, 85, 86, 88, 89, 136, 138, 172, 181], "verifi": [166, 167, 168], "version": [4, 23, 28, 47, 48, 62, 70, 74, 88, 89, 92, 152, 179], "vert": [24, 152, 163], "vert_2": 24, "vertic": 96, "via": [7, 10, 13, 21, 33, 85, 86, 94, 100, 102, 103, 107, 119, 127, 181, 183], "view": [158, 159], "violat": 181, "virtual": 1, "virtualenv": 1, "vjp": 172, "vote": [91, 94], "voxel": 179, "vram": 48, "vscode": 1, "w": [23, 32, 48, 128, 152, 168, 172], "w_1": 168, "w_2": 168, "w_i": 168, "wa": [10, 22, 23, 24, 27, 43, 44, 88, 89, 93, 97, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 152, 153, 154, 159, 179], "wai": [1, 7, 31, 45, 74, 79, 84, 103, 105, 151, 168, 172, 179, 185, 186], "wait": [7, 16, 139, 140, 141, 142, 143, 144, 146, 147, 163, 171], "wait_and_filt": [15, 16], "wandb": [129, 133], "wandb_init_kwarg": [129, 133], "wandb_report": [8, 23, 48, 129], "wandb_step": [129, 133], "wandb_step_typ": [129, 133], "wandbreport": [8, 129, 133], "wandbsteptyp": [8, 129, 133], "want": [11, 21, 23, 28, 33, 38, 47, 48, 55, 78, 84, 85, 86, 88, 89, 95, 129, 133, 136, 138, 139, 155, 156, 163, 164, 179, 181], "warm": [4, 147], "warm_start": 147, "warmed_up_modul": [8, 120], "warmedupmodul": [8, 120, 125], "warn": [165, 187], "we": [1, 4, 7, 10, 11, 12, 13, 14, 21, 23, 24, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 70, 72, 77, 78, 84, 85, 86, 88, 89, 90, 93, 95, 97, 104, 109, 113, 117, 128, 129, 130, 133, 139, 141, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 168, 172, 179, 181, 185], "weigh": [156, 157], "weight": [4, 13, 21, 23, 24, 25, 27, 28, 30, 32, 38, 40, 43, 44, 46, 47, 49, 50, 51, 71, 73, 74, 75, 77, 80, 82, 85, 86, 88, 89, 96, 97, 100, 102, 103, 112, 119, 125, 128, 129, 133, 140, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 172], "weight_and_aggregate_result": [149, 156], "weight_drift_loss": [8, 67], "weight_noise_multipli": 152, "weight_scor": 117, "weightdriftloss": [8, 67, 74, 86, 89], "weighted_aggreg": [149, 151, 152, 153, 154, 155, 158, 159, 160, 161], "weighted_eval_loss": [151, 152, 153, 154, 155, 158, 159, 160, 163], "weighted_train_loss": [155, 157], "weights_mapping_dir": 125, "weights_mapping_path": 125, "weights_nam": 116, "weights_upd": 152, "well": [1, 4, 7, 12, 56, 94, 107, 144, 152, 156, 159, 168, 172], "were": [51, 77, 79, 93, 128, 153, 154, 163, 172], "what": [1, 23, 48, 78, 129, 130, 133, 163], "whatev": [1, 10, 12, 33], "when": [1, 10, 12, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 65, 78, 84, 85, 86, 92, 98, 103, 105, 107, 109, 116, 117, 127, 129, 130, 133, 139, 145, 151, 152, 156, 157, 163, 164, 169, 170, 172, 179, 183], "whenev": 10, "where": [11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 69, 70, 75, 78, 79, 82, 84, 93, 94, 95, 98, 103, 104, 107, 109, 122, 127, 129, 133, 139, 142, 150, 151, 152, 153, 154, 158, 159, 163, 166, 168, 175, 179, 185], "wherein": 4, "whether": [7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 70, 72, 75, 82, 85, 86, 88, 89, 92, 95, 97, 98, 101, 107, 109, 117, 128, 129, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 172, 179, 183, 184], "which": [1, 4, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 62, 65, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 100, 102, 103, 107, 108, 116, 117, 119, 124, 127, 129, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 179, 181, 183, 184, 185, 186], "while": [4, 35, 68, 73, 84, 92, 93, 98, 107, 108, 119, 179], "who": 153, "whole": [27, 43, 44, 94], "whose": [37, 100, 102, 103, 107, 113, 117, 119, 124, 158, 163, 180, 182], "wide": 4, "window": 179, "wise": [13, 39, 51, 162, 163], "wish": 107, "within": [12, 13, 75, 79, 82, 90, 93, 113, 116, 119, 129, 130, 131, 133, 154, 166, 169, 179], "without": [1, 16, 18, 19, 21, 68, 77, 84, 129, 133, 147, 152, 166, 172], "wns823": 59, "word": [129, 133], "work": [1, 31, 39, 48, 62, 113, 122, 130, 131, 139, 156, 159, 172], "worker": [55, 58, 146], "workflow": [1, 12], "would": [1, 23, 65, 78, 83, 107, 172, 184], "woven": 49, "wrap": [12, 90, 145, 166, 179, 183], "wrap_model": 183, "wrapper": [75, 77, 82, 90, 94, 136, 137, 138], "wrapt": 90, "write": [165, 179], "written": 179, "wrong": [23, 36, 167], "www": [50, 55, 73], "wx": 168, "x": [48, 51, 62, 68, 70, 72, 98, 107, 116, 168, 172, 179], "x1": 69, "x2": 69, "x_": [70, 72, 168], "x_in_dim": 70, "x_lower_dim": 107, "x_out_dim": 70, "x_t": [70, 72], "xent": 68, "xt": [70, 72], "xxyxz": 179, "y": [48, 62, 70, 72, 168, 179], "y_": 72, "y_i": 51, "yaml": [1, 129, 133], "yang": 59, "yet": [88, 89], "yield": [4, 183], "you": [1, 10, 12, 55, 62, 78, 79, 95, 129, 133, 139, 172, 181, 184], "your": [1, 4, 7, 48, 79, 129, 133, 139, 183], "z": [48, 73, 128, 179], "z_": 73, "z_1": 128, "z_2": 128, "z_g": 73, "z_p": 73, "zero": [78, 83, 100, 103, 117, 119, 154, 163, 166], "zero_divis": [78, 83], "zeroeth": 172, "zhang": [156, 157]}, "titles": ["API Reference", "Contributing", "Basic Example", "Examples", "Welcome to FL4Health \u2728", "Checkpointing", "Module Guides", "Quickstart", "fl4health package", "fl4health.checkpointing package", "fl4health.checkpointing.checkpointer module", "fl4health.checkpointing.client_module module", "fl4health.checkpointing.opacus_checkpointer module", "fl4health.checkpointing.server_module module", "fl4health.checkpointing.state_checkpointer module", "fl4health.client_managers package", "fl4health.client_managers.base_sampling_manager module", "fl4health.client_managers.fixed_sampling_client_manager module", "fl4health.client_managers.fixed_without_replacement_manager module", "fl4health.client_managers.poisson_sampling_manager module", "fl4health.clients package", "fl4health.clients.adaptive_drift_constraint_client module", "fl4health.clients.apfl_client module", "fl4health.clients.basic_client module", "fl4health.clients.clipping_client module", "fl4health.clients.constrained_fenda_client module", "fl4health.clients.deep_mmd_clients package", "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module", "fl4health.clients.ditto_client module", "fl4health.clients.ensemble_client module", "fl4health.clients.evaluate_client module", "fl4health.clients.fed_pca_client module", "fl4health.clients.fed_prox_client module", "fl4health.clients.fedbn_client module", "fl4health.clients.fedper_client module", "fl4health.clients.fedpm_client module", "fl4health.clients.fedrep_client module", "fl4health.clients.fenda_client module", "fl4health.clients.fenda_ditto_client module", "fl4health.clients.flash_client module", "fl4health.clients.flexible_client module", "fl4health.clients.instance_level_dp_client module", "fl4health.clients.mkmmd_clients package", "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module", "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module", "fl4health.clients.model_merge_client module", "fl4health.clients.moon_client module", "fl4health.clients.mr_mtl_client module", "fl4health.clients.nnunet_client module", "fl4health.clients.partial_weight_exchange_client module", "fl4health.clients.perfcl_client module", "fl4health.clients.scaffold_client module", "fl4health.clients.tabular_data_client module", "fl4health.datasets package", "fl4health.datasets.rxrx1 package", "fl4health.datasets.rxrx1.load_data module", "fl4health.datasets.rxrx1.preprocess module", "fl4health.datasets.skin_cancer package", "fl4health.datasets.skin_cancer.load_data module", "fl4health.datasets.skin_cancer.preprocess_skin module", "fl4health.feature_alignment package", "fl4health.feature_alignment.constants module", "fl4health.feature_alignment.string_columns_transformer module", "fl4health.feature_alignment.tab_features_info_encoder module", "fl4health.feature_alignment.tab_features_preprocessor module", "fl4health.feature_alignment.tabular_feature module", "fl4health.feature_alignment.tabular_type module", "fl4health.losses package", "fl4health.losses.contrastive_loss module", "fl4health.losses.cosine_similarity_loss module", "fl4health.losses.deep_mmd_loss module", "fl4health.losses.fenda_loss_config module", "fl4health.losses.mkmmd_loss module", "fl4health.losses.perfcl_loss module", "fl4health.losses.weight_drift_loss module", "fl4health.metrics package", "fl4health.metrics.base_metrics module", "fl4health.metrics.compound_metrics module", "fl4health.metrics.efficient_metrics module", "fl4health.metrics.efficient_metrics_base module", "fl4health.metrics.metric_aggregation module", "fl4health.metrics.metric_managers module", "fl4health.metrics.metrics module", "fl4health.metrics.metrics_utils module", "fl4health.metrics.utils module", "fl4health.mixins package", "fl4health.mixins.adaptive_drift_constrained module", "fl4health.mixins.core_protocols module", "fl4health.mixins.personalized package", "fl4health.mixins.personalized.ditto module", "fl4health.mixins.personalized.utils module", "fl4health.model_bases package", "fl4health.model_bases.apfl_base module", "fl4health.model_bases.autoencoders_base module", "fl4health.model_bases.ensemble_base module", "fl4health.model_bases.feature_extractor_buffer module", "fl4health.model_bases.fedrep_base module", "fl4health.model_bases.fedsimclr_base module", "fl4health.model_bases.fenda_base module", "fl4health.model_bases.masked_layers package", "fl4health.model_bases.masked_layers.masked_conv module", "fl4health.model_bases.masked_layers.masked_layers_utils module", "fl4health.model_bases.masked_layers.masked_linear module", "fl4health.model_bases.masked_layers.masked_normalization_layers module", "fl4health.model_bases.moon_base module", "fl4health.model_bases.parallel_split_models module", "fl4health.model_bases.partial_layer_exchange_model module", "fl4health.model_bases.pca module", "fl4health.model_bases.perfcl_base module", "fl4health.model_bases.sequential_split_models module", "fl4health.parameter_exchange package", "fl4health.parameter_exchange.fedpm_exchanger module", "fl4health.parameter_exchange.full_exchanger module", "fl4health.parameter_exchange.layer_exchanger module", "fl4health.parameter_exchange.packing_exchanger module", "fl4health.parameter_exchange.parameter_exchanger_base module", "fl4health.parameter_exchange.parameter_packer module", "fl4health.parameter_exchange.parameter_selection_criteria module", "fl4health.parameter_exchange.partial_parameter_exchanger module", "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module", "fl4health.preprocessing package", "fl4health.preprocessing.autoencoders package", "fl4health.preprocessing.autoencoders.dim_reduction module", "fl4health.preprocessing.autoencoders.loss module", "fl4health.preprocessing.pca_preprocessor module", "fl4health.preprocessing.warmed_up_module module", "fl4health.privacy package", "fl4health.privacy.fl_accountants module", "fl4health.privacy.moments_accountant module", "fl4health.reporting package", "fl4health.reporting.base_reporter module", "fl4health.reporting.json_reporter module", "fl4health.reporting.reports_manager module", "fl4health.reporting.wandb_reporter module", "fl4health.servers package", "fl4health.servers.adaptive_constraint_servers package", "fl4health.servers.adaptive_constraint_servers.ditto_server module", "fl4health.servers.adaptive_constraint_servers.fedprox_server module", "fl4health.servers.adaptive_constraint_servers.mrmtl_server module", "fl4health.servers.base_server module", "fl4health.servers.client_level_dp_fed_avg_server module", "fl4health.servers.evaluate_server module", "fl4health.servers.fedpm_server module", "fl4health.servers.instance_level_dp_server module", "fl4health.servers.model_merge_server module", "fl4health.servers.nnunet_server module", "fl4health.servers.polling module", "fl4health.servers.scaffold_server module", "fl4health.servers.tabular_feature_alignment_server module", "fl4health.strategies package", "fl4health.strategies.aggregate_utils module", "fl4health.strategies.basic_fedavg module", "fl4health.strategies.client_dp_fedavgm module", "fl4health.strategies.fedavg_dynamic_layer module", "fl4health.strategies.fedavg_sparse_coo_tensor module", "fl4health.strategies.fedavg_with_adaptive_constraint module", "fl4health.strategies.feddg_ga module", "fl4health.strategies.feddg_ga_with_adaptive_constraint module", "fl4health.strategies.fedpca module", "fl4health.strategies.fedpm module", "fl4health.strategies.flash module", "fl4health.strategies.model_merge_strategy module", "fl4health.strategies.noisy_aggregate module", "fl4health.strategies.scaffold module", "fl4health.strategies.strategy_with_poll module", "fl4health.utils package", "fl4health.utils.client module", "fl4health.utils.config module", "fl4health.utils.data_generation module", "fl4health.utils.dataset module", "fl4health.utils.dataset_converter module", "fl4health.utils.early_stopper module", "fl4health.utils.functions module", "fl4health.utils.load_data module", "fl4health.utils.logging module", "fl4health.utils.losses module", "fl4health.utils.metric_aggregation module", "fl4health.utils.metrics module", "fl4health.utils.msd_dataset_sources module", "fl4health.utils.nnunet_utils module", "fl4health.utils.parameter_extraction module", "fl4health.utils.partitioners module", "fl4health.utils.peft_parameter_extraction module", "fl4health.utils.privacy_utilities module", "fl4health.utils.random module", "fl4health.utils.sampler module", "fl4health.utils.snapshotter module", "fl4health.utils.typing module"], "titleterms": {"": 4, "A": 7, "adaptive_constraint_serv": [135, 136, 137, 138], "adaptive_drift_constrain": 86, "adaptive_drift_constraint_cli": 21, "aggregate_util": 150, "apfl_bas": 92, "apfl_client": 22, "api": 0, "approach": 4, "autoencod": [121, 122, 123], "autoencoders_bas": 93, "base_metr": 76, "base_report": 130, "base_sampling_manag": 16, "base_serv": 139, "basic": 2, "basic_cli": 23, "basic_fedavg": 151, "capabl": 4, "check": 1, "checkpoint": [5, 9, 10, 11, 12, 13, 14], "client": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 166], "client_dp_fedavgm": 152, "client_level_dp_fed_avg_serv": 140, "client_manag": [15, 16, 17, 18, 19], "client_modul": 11, "clipping_cli": 24, "code": 1, "commun": 4, "compound_metr": 77, "config": 167, "constant": 61, "constrained_fenda_cli": 25, "contrastive_loss": 68, "contribut": 1, "core_protocol": 87, "cosine_similarity_loss": 69, "coverag": 1, "current": 4, "data_gener": 168, "dataset": [53, 54, 55, 56, 57, 58, 59, 169], "dataset_convert": 170, "deep_mmd_client": [26, 27], "deep_mmd_loss": 70, "develop": 1, "dim_reduct": 122, "ditto": 89, "ditto_cli": 28, "ditto_deep_mmd_cli": 27, "ditto_mkmmd_cli": 43, "ditto_serv": 136, "document": 1, "early_stopp": 171, "efficient_metr": 78, "efficient_metrics_bas": 79, "ensemble_bas": 94, "ensemble_cli": 29, "evaluate_cli": 30, "evaluate_serv": 141, "exampl": [2, 3], "feature_align": [60, 61, 62, 63, 64, 65, 66], "feature_extractor_buff": 95, "fed_pca_cli": 31, "fed_prox_cli": 32, "fedavg_dynamic_lay": 153, "fedavg_sparse_coo_tensor": 154, "fedavg_with_adaptive_constraint": 155, "fedbn_client": 33, "feddg_ga": 156, "feddg_ga_with_adaptive_constraint": 157, "fedpca": 158, "fedper_cli": 34, "fedpm": 159, "fedpm_client": 35, "fedpm_exchang": 111, "fedpm_serv": 142, "fedprox_serv": 137, "fedrep_bas": 96, "fedrep_cli": 36, "fedsimclr_bas": 97, "fenda_bas": 98, "fenda_cli": 37, "fenda_ditto_cli": 38, "fenda_loss_config": 71, "fixed_sampling_client_manag": 17, "fixed_without_replacement_manag": 18, "fl": 7, "fl4health": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "fl_account": 127, "flash": 160, "flash_client": 39, "flexible_cli": 40, "formatt": 1, "full_exchang": 112, "function": 172, "guid": 6, "guidelin": 1, "implement": 4, "instal": 7, "instance_level_dp_cli": 41, "instance_level_dp_serv": 143, "introduct": 4, "json_report": 131, "layer_exchang": 113, "load_data": [55, 58, 173], "log": 174, "loss": [67, 68, 69, 70, 71, 72, 73, 74, 123, 175], "masked_conv": 100, "masked_lay": [99, 100, 101, 102, 103], "masked_layers_util": 101, "masked_linear": 102, "masked_normalization_lay": 103, "metric": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 177], "metric_aggreg": [80, 176], "metric_manag": 81, "metrics_util": 83, "mixin": [85, 86, 87, 88, 89, 90], "mkmmd_client": [42, 43, 44], "mkmmd_loss": 72, "model_bas": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "model_merge_cli": 45, "model_merge_serv": 144, "model_merge_strategi": 161, "modul": [6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "moments_account": 128, "moon_bas": 104, "moon_client": 46, "mr_mtl_client": 47, "mr_mtl_mkmmd_client": 44, "mrmtl_server": 138, "msd_dataset_sourc": 178, "next": 4, "nnunet_cli": 48, "nnunet_serv": 145, "nnunet_util": 179, "noisy_aggreg": 162, "opacus_checkpoint": 12, "packag": [8, 9, 15, 20, 26, 42, 53, 54, 57, 60, 67, 75, 85, 88, 91, 99, 110, 120, 121, 126, 129, 134, 135, 149, 165], "packing_exchang": 114, "parallel_split_model": 105, "parameter_exchang": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "parameter_exchanger_bas": 115, "parameter_extract": 180, "parameter_pack": 116, "parameter_selection_criteria": 117, "partial_layer_exchange_model": 106, "partial_parameter_exchang": 118, "partial_weight_exchange_cli": 49, "partition": 181, "pca": 107, "pca_preprocessor": 124, "peft_parameter_extract": 182, "perfcl_bas": 108, "perfcl_client": 50, "perfcl_loss": 73, "person": [88, 89, 90], "poisson_sampling_manag": 19, "poll": 146, "practic": 1, "preprocess": [56, 120, 121, 122, 123, 124, 125], "preprocess_skin": 59, "privaci": [4, 126, 127, 128], "privacy_util": 183, "py": 7, "quickstart": 7, "random": 184, "refer": 0, "report": [129, 130, 131, 132, 133], "reports_manag": 132, "requir": 1, "run": 7, "rxrx1": [54, 55, 56], "sampler": 185, "scaffold": 163, "scaffold_cli": 51, "scaffold_serv": 147, "sequential_split_model": 109, "server": [7, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "server_modul": 13, "simpl": 7, "skin_canc": [57, 58, 59], "snapshott": 186, "sparse_coo_parameter_exchang": 119, "start": 7, "state_checkpoint": 14, "strategi": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "strategy_with_pol": 164, "string_columns_transform": 62, "submodul": [9, 15, 20, 26, 42, 54, 57, 60, 67, 75, 85, 88, 91, 99, 110, 120, 121, 126, 129, 134, 135, 149, 165], "subpackag": [8, 20, 53, 85, 91, 120, 134], "summari": 4, "tab_features_info_encod": 63, "tab_features_preprocessor": 64, "tabular_data_cli": 52, "tabular_featur": 65, "tabular_feature_alignment_serv": 148, "tabular_typ": 66, "task": 7, "test": 1, "type": 187, "util": [84, 90, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "wandb_report": 133, "warmed_up_modul": 125, "weight_drift_loss": 74, "welcom": 4, "what": 4}})