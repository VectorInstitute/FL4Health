Search.setIndex({"alltitles": {"A simple FL task": [[7, "a-simple-fl-task"]], "API Reference": [[0, null]], "Basic Example": [[2, null]], "Checkpointing": [[5, null]], "Code Coverage": [[1, "code-coverage"]], "Code Documentation": [[1, "code-documentation"]], "Coding Guidelines, Formatters, and Checks": [[1, "coding-guidelines-formatters-and-checks"]], "Community": [[4, "community"]], "Contributing to FL4Health": [[1, null]], "Development Practices": [[1, "development-practices"]], "Development Requirements": [[1, "development-requirements"]], "Examples": [[3, null]], "Installation": [[7, "installation"]], "Introduction": [[4, "introduction"]], "Module Guides": [[6, null]], "Privacy Capabilities": [[4, "privacy-capabilities"]], "Quickstart": [[7, null]], "Running the FL task": [[7, "running-the-fl-task"]], "Starting Clients": [[7, "starting-clients"]], "Starting Server": [[7, "starting-server"]], "Submodules": [[9, "submodules"], [15, "submodules"], [20, "submodules"], [26, "submodules"], [40, "submodules"], [44, "submodules"], [56, "submodules"], [59, "submodules"], [62, "submodules"], [69, "submodules"], [77, "submodules"], [87, "submodules"], [90, "submodules"], [93, "submodules"], [102, "submodules"], [113, "submodules"], [123, "submodules"], [124, "submodules"], [129, "submodules"], [132, "submodules"], [137, "submodules"], [138, "submodules"], [152, "submodules"], [168, "submodules"]], "Subpackages": [[8, "subpackages"], [20, "subpackages"], [55, "subpackages"], [87, "subpackages"], [93, "subpackages"], [123, "subpackages"], [137, "subpackages"]], "Summary of Currently Implemented Approaches": [[4, "summary-of-currently-implemented-approaches"]], "Tests": [[1, "tests"]], "Welcome to FL4Health \u2728": [[4, null]], "What\u2019s Next?": [[4, "what-s-next"]], "client.py": [[7, "client-py"]], "fl4health package": [[8, null]], "fl4health.checkpointing package": [[9, null]], "fl4health.checkpointing.checkpointer module": [[10, null]], "fl4health.checkpointing.client_module module": [[11, null]], "fl4health.checkpointing.opacus_checkpointer module": [[12, null]], "fl4health.checkpointing.server_module module": [[13, null]], "fl4health.checkpointing.state_checkpointer module": [[14, null]], "fl4health.client_managers package": [[15, null]], "fl4health.client_managers.base_sampling_manager module": [[16, null]], "fl4health.client_managers.fixed_sampling_client_manager module": [[17, null]], "fl4health.client_managers.fixed_without_replacement_manager module": [[18, null]], "fl4health.client_managers.poisson_sampling_manager module": [[19, null]], "fl4health.clients package": [[20, null]], "fl4health.clients.adaptive_drift_constraint_client module": [[21, null]], "fl4health.clients.apfl_client module": [[22, null]], "fl4health.clients.basic_client module": [[23, null]], "fl4health.clients.clipping_client module": [[24, null]], "fl4health.clients.constrained_fenda_client module": [[25, null]], "fl4health.clients.deep_mmd_clients package": [[26, null]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module": [[27, null]], "fl4health.clients.ditto_client module": [[28, null]], "fl4health.clients.ensemble_client module": [[29, null]], "fl4health.clients.evaluate_client module": [[30, null]], "fl4health.clients.fed_pca_client module": [[31, null]], "fl4health.clients.fed_prox_client module": [[32, null]], "fl4health.clients.fedbn_client module": [[33, null]], "fl4health.clients.fedper_client module": [[34, null]], "fl4health.clients.fedpm_client module": [[35, null]], "fl4health.clients.fedrep_client module": [[36, null]], "fl4health.clients.fenda_client module": [[37, null]], "fl4health.clients.fenda_ditto_client module": [[38, null]], "fl4health.clients.flash_client module": [[39, null]], "fl4health.clients.flexible package": [[40, null]], "fl4health.clients.flexible.base module": [[41, null]], "fl4health.clients.gpfl_client module": [[42, null]], "fl4health.clients.instance_level_dp_client module": [[43, null]], "fl4health.clients.mkmmd_clients package": [[44, null]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module": [[45, null]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module": [[46, null]], "fl4health.clients.model_merge_client module": [[47, null]], "fl4health.clients.moon_client module": [[48, null]], "fl4health.clients.mr_mtl_client module": [[49, null]], "fl4health.clients.nnunet_client module": [[50, null]], "fl4health.clients.partial_weight_exchange_client module": [[51, null]], "fl4health.clients.perfcl_client module": [[52, null]], "fl4health.clients.scaffold_client module": [[53, null]], "fl4health.clients.tabular_data_client module": [[54, null]], "fl4health.datasets package": [[55, null]], "fl4health.datasets.rxrx1 package": [[56, null]], "fl4health.datasets.rxrx1.load_data module": [[57, null]], "fl4health.datasets.rxrx1.preprocess module": [[58, null]], "fl4health.datasets.skin_cancer package": [[59, null]], "fl4health.datasets.skin_cancer.load_data module": [[60, null]], "fl4health.datasets.skin_cancer.preprocess_skin module": [[61, null]], "fl4health.feature_alignment package": [[62, null]], "fl4health.feature_alignment.constants module": [[63, null]], "fl4health.feature_alignment.string_columns_transformer module": [[64, null]], "fl4health.feature_alignment.tab_features_info_encoder module": [[65, null]], "fl4health.feature_alignment.tab_features_preprocessor module": [[66, null]], "fl4health.feature_alignment.tabular_feature module": [[67, null]], "fl4health.feature_alignment.tabular_type module": [[68, null]], "fl4health.losses package": [[69, null]], "fl4health.losses.contrastive_loss module": [[70, null]], "fl4health.losses.cosine_similarity_loss module": [[71, null]], "fl4health.losses.deep_mmd_loss module": [[72, null]], "fl4health.losses.fenda_loss_config module": [[73, null]], "fl4health.losses.mkmmd_loss module": [[74, null]], "fl4health.losses.perfcl_loss module": [[75, null]], "fl4health.losses.weight_drift_loss module": [[76, null]], "fl4health.metrics package": [[77, null]], "fl4health.metrics.base_metrics module": [[78, null]], "fl4health.metrics.compound_metrics module": [[79, null]], "fl4health.metrics.efficient_metrics module": [[80, null]], "fl4health.metrics.efficient_metrics_base module": [[81, null]], "fl4health.metrics.metric_aggregation module": [[82, null]], "fl4health.metrics.metric_managers module": [[83, null]], "fl4health.metrics.metrics module": [[84, null]], "fl4health.metrics.metrics_utils module": [[85, null]], "fl4health.metrics.utils module": [[86, null]], "fl4health.mixins package": [[87, null]], "fl4health.mixins.adaptive_drift_constrained module": [[88, null]], "fl4health.mixins.core_protocols module": [[89, null]], "fl4health.mixins.personalized package": [[90, null]], "fl4health.mixins.personalized.ditto module": [[91, null]], "fl4health.mixins.personalized.utils module": [[92, null]], "fl4health.model_bases package": [[93, null]], "fl4health.model_bases.apfl_base module": [[94, null]], "fl4health.model_bases.autoencoders_base module": [[95, null]], "fl4health.model_bases.ensemble_base module": [[96, null]], "fl4health.model_bases.feature_extractor_buffer module": [[97, null]], "fl4health.model_bases.fedrep_base module": [[98, null]], "fl4health.model_bases.fedsimclr_base module": [[99, null]], "fl4health.model_bases.fenda_base module": [[100, null]], "fl4health.model_bases.gpfl_base module": [[101, null]], "fl4health.model_bases.masked_layers package": [[102, null]], "fl4health.model_bases.masked_layers.masked_conv module": [[103, null]], "fl4health.model_bases.masked_layers.masked_layers_utils module": [[104, null]], "fl4health.model_bases.masked_layers.masked_linear module": [[105, null]], "fl4health.model_bases.masked_layers.masked_normalization_layers module": [[106, null]], "fl4health.model_bases.moon_base module": [[107, null]], "fl4health.model_bases.parallel_split_models module": [[108, null]], "fl4health.model_bases.partial_layer_exchange_model module": [[109, null]], "fl4health.model_bases.pca module": [[110, null]], "fl4health.model_bases.perfcl_base module": [[111, null]], "fl4health.model_bases.sequential_split_models module": [[112, null]], "fl4health.parameter_exchange package": [[113, null]], "fl4health.parameter_exchange.fedpm_exchanger module": [[114, null]], "fl4health.parameter_exchange.full_exchanger module": [[115, null]], "fl4health.parameter_exchange.layer_exchanger module": [[116, null]], "fl4health.parameter_exchange.packing_exchanger module": [[117, null]], "fl4health.parameter_exchange.parameter_exchanger_base module": [[118, null]], "fl4health.parameter_exchange.parameter_packer module": [[119, null]], "fl4health.parameter_exchange.parameter_selection_criteria module": [[120, null]], "fl4health.parameter_exchange.partial_parameter_exchanger module": [[121, null]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module": [[122, null]], "fl4health.preprocessing package": [[123, null]], "fl4health.preprocessing.autoencoders package": [[124, null]], "fl4health.preprocessing.autoencoders.dim_reduction module": [[125, null]], "fl4health.preprocessing.autoencoders.loss module": [[126, null]], "fl4health.preprocessing.pca_preprocessor module": [[127, null]], "fl4health.preprocessing.warmed_up_module module": [[128, null]], "fl4health.privacy package": [[129, null]], "fl4health.privacy.fl_accountants module": [[130, null]], "fl4health.privacy.moments_accountant module": [[131, null]], "fl4health.reporting package": [[132, null]], "fl4health.reporting.base_reporter module": [[133, null]], "fl4health.reporting.json_reporter module": [[134, null]], "fl4health.reporting.reports_manager module": [[135, null]], "fl4health.reporting.wandb_reporter module": [[136, null]], "fl4health.servers package": [[137, null]], "fl4health.servers.adaptive_constraint_servers package": [[138, null]], "fl4health.servers.adaptive_constraint_servers.ditto_server module": [[139, null]], "fl4health.servers.adaptive_constraint_servers.fedprox_server module": [[140, null]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server module": [[141, null]], "fl4health.servers.base_server module": [[142, null]], "fl4health.servers.client_level_dp_fed_avg_server module": [[143, null]], "fl4health.servers.evaluate_server module": [[144, null]], "fl4health.servers.fedpm_server module": [[145, null]], "fl4health.servers.instance_level_dp_server module": [[146, null]], "fl4health.servers.model_merge_server module": [[147, null]], "fl4health.servers.nnunet_server module": [[148, null]], "fl4health.servers.polling module": [[149, null]], "fl4health.servers.scaffold_server module": [[150, null]], "fl4health.servers.tabular_feature_alignment_server module": [[151, null]], "fl4health.strategies package": [[152, null]], "fl4health.strategies.aggregate_utils module": [[153, null]], "fl4health.strategies.basic_fedavg module": [[154, null]], "fl4health.strategies.client_dp_fedavgm module": [[155, null]], "fl4health.strategies.fedavg_dynamic_layer module": [[156, null]], "fl4health.strategies.fedavg_sparse_coo_tensor module": [[157, null]], "fl4health.strategies.fedavg_with_adaptive_constraint module": [[158, null]], "fl4health.strategies.feddg_ga module": [[159, null]], "fl4health.strategies.feddg_ga_with_adaptive_constraint module": [[160, null]], "fl4health.strategies.fedpca module": [[161, null]], "fl4health.strategies.fedpm module": [[162, null]], "fl4health.strategies.flash module": [[163, null]], "fl4health.strategies.model_merge_strategy module": [[164, null]], "fl4health.strategies.noisy_aggregate module": [[165, null]], "fl4health.strategies.scaffold module": [[166, null]], "fl4health.strategies.strategy_with_poll module": [[167, null]], "fl4health.utils package": [[168, null]], "fl4health.utils.client module": [[169, null]], "fl4health.utils.config module": [[170, null]], "fl4health.utils.data_generation module": [[171, null]], "fl4health.utils.dataset module": [[172, null]], "fl4health.utils.dataset_converter module": [[173, null]], "fl4health.utils.early_stopper module": [[174, null]], "fl4health.utils.functions module": [[175, null]], "fl4health.utils.load_data module": [[176, null]], "fl4health.utils.logging module": [[177, null]], "fl4health.utils.losses module": [[178, null]], "fl4health.utils.metrics module": [[179, null]], "fl4health.utils.msd_dataset_sources module": [[180, null]], "fl4health.utils.nnunet_utils module": [[181, null]], "fl4health.utils.parameter_extraction module": [[182, null]], "fl4health.utils.partitioners module": [[183, null]], "fl4health.utils.peft_parameter_extraction module": [[184, null]], "fl4health.utils.privacy_utilities module": [[185, null]], "fl4health.utils.random module": [[186, null]], "fl4health.utils.sampler module": [[187, null]], "fl4health.utils.snapshotter module": [[188, null]], "fl4health.utils.typing module": [[189, null]], "server.py": [[7, "server-py"]]}, "docnames": ["api", "contributing", "examples/basic/index", "examples/index", "index", "module_guides/checkpointing/index", "module_guides/index", "quickstart", "reference/api/fl4health", "reference/api/fl4health.checkpointing", "reference/api/fl4health.checkpointing.checkpointer", "reference/api/fl4health.checkpointing.client_module", "reference/api/fl4health.checkpointing.opacus_checkpointer", "reference/api/fl4health.checkpointing.server_module", "reference/api/fl4health.checkpointing.state_checkpointer", "reference/api/fl4health.client_managers", "reference/api/fl4health.client_managers.base_sampling_manager", "reference/api/fl4health.client_managers.fixed_sampling_client_manager", "reference/api/fl4health.client_managers.fixed_without_replacement_manager", "reference/api/fl4health.client_managers.poisson_sampling_manager", "reference/api/fl4health.clients", "reference/api/fl4health.clients.adaptive_drift_constraint_client", "reference/api/fl4health.clients.apfl_client", "reference/api/fl4health.clients.basic_client", "reference/api/fl4health.clients.clipping_client", "reference/api/fl4health.clients.constrained_fenda_client", "reference/api/fl4health.clients.deep_mmd_clients", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", "reference/api/fl4health.clients.ditto_client", "reference/api/fl4health.clients.ensemble_client", "reference/api/fl4health.clients.evaluate_client", "reference/api/fl4health.clients.fed_pca_client", "reference/api/fl4health.clients.fed_prox_client", "reference/api/fl4health.clients.fedbn_client", "reference/api/fl4health.clients.fedper_client", "reference/api/fl4health.clients.fedpm_client", "reference/api/fl4health.clients.fedrep_client", "reference/api/fl4health.clients.fenda_client", "reference/api/fl4health.clients.fenda_ditto_client", "reference/api/fl4health.clients.flash_client", "reference/api/fl4health.clients.flexible", "reference/api/fl4health.clients.flexible.base", "reference/api/fl4health.clients.gpfl_client", "reference/api/fl4health.clients.instance_level_dp_client", "reference/api/fl4health.clients.mkmmd_clients", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", "reference/api/fl4health.clients.model_merge_client", "reference/api/fl4health.clients.moon_client", "reference/api/fl4health.clients.mr_mtl_client", "reference/api/fl4health.clients.nnunet_client", "reference/api/fl4health.clients.partial_weight_exchange_client", "reference/api/fl4health.clients.perfcl_client", "reference/api/fl4health.clients.scaffold_client", "reference/api/fl4health.clients.tabular_data_client", "reference/api/fl4health.datasets", "reference/api/fl4health.datasets.rxrx1", "reference/api/fl4health.datasets.rxrx1.load_data", "reference/api/fl4health.datasets.rxrx1.preprocess", "reference/api/fl4health.datasets.skin_cancer", "reference/api/fl4health.datasets.skin_cancer.load_data", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin", "reference/api/fl4health.feature_alignment", "reference/api/fl4health.feature_alignment.constants", "reference/api/fl4health.feature_alignment.string_columns_transformer", "reference/api/fl4health.feature_alignment.tab_features_info_encoder", "reference/api/fl4health.feature_alignment.tab_features_preprocessor", "reference/api/fl4health.feature_alignment.tabular_feature", "reference/api/fl4health.feature_alignment.tabular_type", "reference/api/fl4health.losses", "reference/api/fl4health.losses.contrastive_loss", "reference/api/fl4health.losses.cosine_similarity_loss", "reference/api/fl4health.losses.deep_mmd_loss", "reference/api/fl4health.losses.fenda_loss_config", "reference/api/fl4health.losses.mkmmd_loss", "reference/api/fl4health.losses.perfcl_loss", "reference/api/fl4health.losses.weight_drift_loss", "reference/api/fl4health.metrics", "reference/api/fl4health.metrics.base_metrics", "reference/api/fl4health.metrics.compound_metrics", "reference/api/fl4health.metrics.efficient_metrics", "reference/api/fl4health.metrics.efficient_metrics_base", "reference/api/fl4health.metrics.metric_aggregation", "reference/api/fl4health.metrics.metric_managers", "reference/api/fl4health.metrics.metrics", "reference/api/fl4health.metrics.metrics_utils", "reference/api/fl4health.metrics.utils", "reference/api/fl4health.mixins", "reference/api/fl4health.mixins.adaptive_drift_constrained", "reference/api/fl4health.mixins.core_protocols", "reference/api/fl4health.mixins.personalized", "reference/api/fl4health.mixins.personalized.ditto", "reference/api/fl4health.mixins.personalized.utils", "reference/api/fl4health.model_bases", "reference/api/fl4health.model_bases.apfl_base", "reference/api/fl4health.model_bases.autoencoders_base", "reference/api/fl4health.model_bases.ensemble_base", "reference/api/fl4health.model_bases.feature_extractor_buffer", "reference/api/fl4health.model_bases.fedrep_base", "reference/api/fl4health.model_bases.fedsimclr_base", "reference/api/fl4health.model_bases.fenda_base", "reference/api/fl4health.model_bases.gpfl_base", "reference/api/fl4health.model_bases.masked_layers", "reference/api/fl4health.model_bases.masked_layers.masked_conv", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils", "reference/api/fl4health.model_bases.masked_layers.masked_linear", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers", "reference/api/fl4health.model_bases.moon_base", "reference/api/fl4health.model_bases.parallel_split_models", "reference/api/fl4health.model_bases.partial_layer_exchange_model", "reference/api/fl4health.model_bases.pca", "reference/api/fl4health.model_bases.perfcl_base", "reference/api/fl4health.model_bases.sequential_split_models", "reference/api/fl4health.parameter_exchange", "reference/api/fl4health.parameter_exchange.fedpm_exchanger", "reference/api/fl4health.parameter_exchange.full_exchanger", "reference/api/fl4health.parameter_exchange.layer_exchanger", "reference/api/fl4health.parameter_exchange.packing_exchanger", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base", "reference/api/fl4health.parameter_exchange.parameter_packer", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger", "reference/api/fl4health.preprocessing", "reference/api/fl4health.preprocessing.autoencoders", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction", "reference/api/fl4health.preprocessing.autoencoders.loss", "reference/api/fl4health.preprocessing.pca_preprocessor", "reference/api/fl4health.preprocessing.warmed_up_module", "reference/api/fl4health.privacy", "reference/api/fl4health.privacy.fl_accountants", "reference/api/fl4health.privacy.moments_accountant", "reference/api/fl4health.reporting", "reference/api/fl4health.reporting.base_reporter", "reference/api/fl4health.reporting.json_reporter", "reference/api/fl4health.reporting.reports_manager", "reference/api/fl4health.reporting.wandb_reporter", "reference/api/fl4health.servers", "reference/api/fl4health.servers.adaptive_constraint_servers", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server", "reference/api/fl4health.servers.base_server", "reference/api/fl4health.servers.client_level_dp_fed_avg_server", "reference/api/fl4health.servers.evaluate_server", "reference/api/fl4health.servers.fedpm_server", "reference/api/fl4health.servers.instance_level_dp_server", "reference/api/fl4health.servers.model_merge_server", "reference/api/fl4health.servers.nnunet_server", "reference/api/fl4health.servers.polling", "reference/api/fl4health.servers.scaffold_server", "reference/api/fl4health.servers.tabular_feature_alignment_server", "reference/api/fl4health.strategies", "reference/api/fl4health.strategies.aggregate_utils", "reference/api/fl4health.strategies.basic_fedavg", "reference/api/fl4health.strategies.client_dp_fedavgm", "reference/api/fl4health.strategies.fedavg_dynamic_layer", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint", "reference/api/fl4health.strategies.feddg_ga", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint", "reference/api/fl4health.strategies.fedpca", "reference/api/fl4health.strategies.fedpm", "reference/api/fl4health.strategies.flash", "reference/api/fl4health.strategies.model_merge_strategy", "reference/api/fl4health.strategies.noisy_aggregate", "reference/api/fl4health.strategies.scaffold", "reference/api/fl4health.strategies.strategy_with_poll", "reference/api/fl4health.utils", "reference/api/fl4health.utils.client", "reference/api/fl4health.utils.config", "reference/api/fl4health.utils.data_generation", "reference/api/fl4health.utils.dataset", "reference/api/fl4health.utils.dataset_converter", "reference/api/fl4health.utils.early_stopper", "reference/api/fl4health.utils.functions", "reference/api/fl4health.utils.load_data", "reference/api/fl4health.utils.logging", "reference/api/fl4health.utils.losses", "reference/api/fl4health.utils.metrics", "reference/api/fl4health.utils.msd_dataset_sources", "reference/api/fl4health.utils.nnunet_utils", "reference/api/fl4health.utils.parameter_extraction", "reference/api/fl4health.utils.partitioners", "reference/api/fl4health.utils.peft_parameter_extraction", "reference/api/fl4health.utils.privacy_utilities", "reference/api/fl4health.utils.random", "reference/api/fl4health.utils.sampler", "reference/api/fl4health.utils.snapshotter", "reference/api/fl4health.utils.typing"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "contributing.md", "examples/basic/index.md", "examples/index.md", "index.md", "module_guides/checkpointing/index.md", "module_guides/index.md", "quickstart.md", "reference/api/fl4health.rst", "reference/api/fl4health.checkpointing.rst", "reference/api/fl4health.checkpointing.checkpointer.rst", "reference/api/fl4health.checkpointing.client_module.rst", "reference/api/fl4health.checkpointing.opacus_checkpointer.rst", "reference/api/fl4health.checkpointing.server_module.rst", "reference/api/fl4health.checkpointing.state_checkpointer.rst", "reference/api/fl4health.client_managers.rst", "reference/api/fl4health.client_managers.base_sampling_manager.rst", "reference/api/fl4health.client_managers.fixed_sampling_client_manager.rst", "reference/api/fl4health.client_managers.fixed_without_replacement_manager.rst", "reference/api/fl4health.client_managers.poisson_sampling_manager.rst", "reference/api/fl4health.clients.rst", "reference/api/fl4health.clients.adaptive_drift_constraint_client.rst", "reference/api/fl4health.clients.apfl_client.rst", "reference/api/fl4health.clients.basic_client.rst", "reference/api/fl4health.clients.clipping_client.rst", "reference/api/fl4health.clients.constrained_fenda_client.rst", "reference/api/fl4health.clients.deep_mmd_clients.rst", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.rst", "reference/api/fl4health.clients.ditto_client.rst", "reference/api/fl4health.clients.ensemble_client.rst", "reference/api/fl4health.clients.evaluate_client.rst", "reference/api/fl4health.clients.fed_pca_client.rst", "reference/api/fl4health.clients.fed_prox_client.rst", "reference/api/fl4health.clients.fedbn_client.rst", "reference/api/fl4health.clients.fedper_client.rst", "reference/api/fl4health.clients.fedpm_client.rst", "reference/api/fl4health.clients.fedrep_client.rst", "reference/api/fl4health.clients.fenda_client.rst", "reference/api/fl4health.clients.fenda_ditto_client.rst", "reference/api/fl4health.clients.flash_client.rst", "reference/api/fl4health.clients.flexible.rst", "reference/api/fl4health.clients.flexible.base.rst", "reference/api/fl4health.clients.gpfl_client.rst", "reference/api/fl4health.clients.instance_level_dp_client.rst", "reference/api/fl4health.clients.mkmmd_clients.rst", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client.rst", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.rst", "reference/api/fl4health.clients.model_merge_client.rst", "reference/api/fl4health.clients.moon_client.rst", "reference/api/fl4health.clients.mr_mtl_client.rst", "reference/api/fl4health.clients.nnunet_client.rst", "reference/api/fl4health.clients.partial_weight_exchange_client.rst", "reference/api/fl4health.clients.perfcl_client.rst", "reference/api/fl4health.clients.scaffold_client.rst", "reference/api/fl4health.clients.tabular_data_client.rst", "reference/api/fl4health.datasets.rst", "reference/api/fl4health.datasets.rxrx1.rst", "reference/api/fl4health.datasets.rxrx1.load_data.rst", "reference/api/fl4health.datasets.rxrx1.preprocess.rst", "reference/api/fl4health.datasets.skin_cancer.rst", "reference/api/fl4health.datasets.skin_cancer.load_data.rst", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin.rst", "reference/api/fl4health.feature_alignment.rst", "reference/api/fl4health.feature_alignment.constants.rst", "reference/api/fl4health.feature_alignment.string_columns_transformer.rst", "reference/api/fl4health.feature_alignment.tab_features_info_encoder.rst", "reference/api/fl4health.feature_alignment.tab_features_preprocessor.rst", "reference/api/fl4health.feature_alignment.tabular_feature.rst", "reference/api/fl4health.feature_alignment.tabular_type.rst", "reference/api/fl4health.losses.rst", "reference/api/fl4health.losses.contrastive_loss.rst", "reference/api/fl4health.losses.cosine_similarity_loss.rst", "reference/api/fl4health.losses.deep_mmd_loss.rst", "reference/api/fl4health.losses.fenda_loss_config.rst", "reference/api/fl4health.losses.mkmmd_loss.rst", "reference/api/fl4health.losses.perfcl_loss.rst", "reference/api/fl4health.losses.weight_drift_loss.rst", "reference/api/fl4health.metrics.rst", "reference/api/fl4health.metrics.base_metrics.rst", "reference/api/fl4health.metrics.compound_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics_base.rst", "reference/api/fl4health.metrics.metric_aggregation.rst", "reference/api/fl4health.metrics.metric_managers.rst", "reference/api/fl4health.metrics.metrics.rst", "reference/api/fl4health.metrics.metrics_utils.rst", "reference/api/fl4health.metrics.utils.rst", "reference/api/fl4health.mixins.rst", "reference/api/fl4health.mixins.adaptive_drift_constrained.rst", "reference/api/fl4health.mixins.core_protocols.rst", "reference/api/fl4health.mixins.personalized.rst", "reference/api/fl4health.mixins.personalized.ditto.rst", "reference/api/fl4health.mixins.personalized.utils.rst", "reference/api/fl4health.model_bases.rst", "reference/api/fl4health.model_bases.apfl_base.rst", "reference/api/fl4health.model_bases.autoencoders_base.rst", "reference/api/fl4health.model_bases.ensemble_base.rst", "reference/api/fl4health.model_bases.feature_extractor_buffer.rst", "reference/api/fl4health.model_bases.fedrep_base.rst", "reference/api/fl4health.model_bases.fedsimclr_base.rst", "reference/api/fl4health.model_bases.fenda_base.rst", "reference/api/fl4health.model_bases.gpfl_base.rst", "reference/api/fl4health.model_bases.masked_layers.rst", "reference/api/fl4health.model_bases.masked_layers.masked_conv.rst", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils.rst", "reference/api/fl4health.model_bases.masked_layers.masked_linear.rst", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers.rst", "reference/api/fl4health.model_bases.moon_base.rst", "reference/api/fl4health.model_bases.parallel_split_models.rst", "reference/api/fl4health.model_bases.partial_layer_exchange_model.rst", "reference/api/fl4health.model_bases.pca.rst", "reference/api/fl4health.model_bases.perfcl_base.rst", "reference/api/fl4health.model_bases.sequential_split_models.rst", "reference/api/fl4health.parameter_exchange.rst", "reference/api/fl4health.parameter_exchange.fedpm_exchanger.rst", "reference/api/fl4health.parameter_exchange.full_exchanger.rst", "reference/api/fl4health.parameter_exchange.layer_exchanger.rst", "reference/api/fl4health.parameter_exchange.packing_exchanger.rst", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base.rst", "reference/api/fl4health.parameter_exchange.parameter_packer.rst", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria.rst", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger.rst", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger.rst", "reference/api/fl4health.preprocessing.rst", "reference/api/fl4health.preprocessing.autoencoders.rst", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction.rst", "reference/api/fl4health.preprocessing.autoencoders.loss.rst", "reference/api/fl4health.preprocessing.pca_preprocessor.rst", "reference/api/fl4health.preprocessing.warmed_up_module.rst", "reference/api/fl4health.privacy.rst", "reference/api/fl4health.privacy.fl_accountants.rst", "reference/api/fl4health.privacy.moments_accountant.rst", "reference/api/fl4health.reporting.rst", "reference/api/fl4health.reporting.base_reporter.rst", "reference/api/fl4health.reporting.json_reporter.rst", "reference/api/fl4health.reporting.reports_manager.rst", "reference/api/fl4health.reporting.wandb_reporter.rst", "reference/api/fl4health.servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server.rst", "reference/api/fl4health.servers.base_server.rst", "reference/api/fl4health.servers.client_level_dp_fed_avg_server.rst", "reference/api/fl4health.servers.evaluate_server.rst", "reference/api/fl4health.servers.fedpm_server.rst", "reference/api/fl4health.servers.instance_level_dp_server.rst", "reference/api/fl4health.servers.model_merge_server.rst", "reference/api/fl4health.servers.nnunet_server.rst", "reference/api/fl4health.servers.polling.rst", "reference/api/fl4health.servers.scaffold_server.rst", "reference/api/fl4health.servers.tabular_feature_alignment_server.rst", "reference/api/fl4health.strategies.rst", "reference/api/fl4health.strategies.aggregate_utils.rst", "reference/api/fl4health.strategies.basic_fedavg.rst", "reference/api/fl4health.strategies.client_dp_fedavgm.rst", "reference/api/fl4health.strategies.fedavg_dynamic_layer.rst", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor.rst", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.feddg_ga.rst", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.fedpca.rst", "reference/api/fl4health.strategies.fedpm.rst", "reference/api/fl4health.strategies.flash.rst", "reference/api/fl4health.strategies.model_merge_strategy.rst", "reference/api/fl4health.strategies.noisy_aggregate.rst", "reference/api/fl4health.strategies.scaffold.rst", "reference/api/fl4health.strategies.strategy_with_poll.rst", "reference/api/fl4health.utils.rst", "reference/api/fl4health.utils.client.rst", "reference/api/fl4health.utils.config.rst", "reference/api/fl4health.utils.data_generation.rst", "reference/api/fl4health.utils.dataset.rst", "reference/api/fl4health.utils.dataset_converter.rst", "reference/api/fl4health.utils.early_stopper.rst", "reference/api/fl4health.utils.functions.rst", "reference/api/fl4health.utils.load_data.rst", "reference/api/fl4health.utils.logging.rst", "reference/api/fl4health.utils.losses.rst", "reference/api/fl4health.utils.metrics.rst", "reference/api/fl4health.utils.msd_dataset_sources.rst", "reference/api/fl4health.utils.nnunet_utils.rst", "reference/api/fl4health.utils.parameter_extraction.rst", "reference/api/fl4health.utils.partitioners.rst", "reference/api/fl4health.utils.peft_parameter_extraction.rst", "reference/api/fl4health.utils.privacy_utilities.rst", "reference/api/fl4health.utils.random.rst", "reference/api/fl4health.utils.sampler.rst", "reference/api/fl4health.utils.snapshotter.rst", "reference/api/fl4health.utils.typing.rst"], "indexentries": {"__init__() (abstractae method)": [[95, "fl4health.model_bases.autoencoders_base.AbstractAe.__init__", false]], "__init__() (accuracy method)": [[77, "fl4health.metrics.Accuracy.__init__", false], [84, "fl4health.metrics.metrics.Accuracy.__init__", false]], "__init__() (adaptiveconstraintservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule.__init__", false]], "__init__() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.__init__", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.__init__", false]], "__init__() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.__init__", false]], "__init__() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.__init__", false]], "__init__() (apflmodule method)": [[94, "fl4health.model_bases.apfl_base.ApflModule.__init__", false]], "__init__() (autoencoderdatasetconverter method)": [[173, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.__init__", false]], "__init__() (autoencoderprocessing method)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.__init__", false]], "__init__() (balancedaccuracy method)": [[77, "fl4health.metrics.BalancedAccuracy.__init__", false], [84, "fl4health.metrics.metrics.BalancedAccuracy.__init__", false]], "__init__() (basedataset method)": [[172, "fl4health.utils.dataset.BaseDataset.__init__", false]], "__init__() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.__init__", false]], "__init__() (basicae method)": [[95, "fl4health.model_bases.autoencoders_base.BasicAe.__init__", false]], "__init__() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.__init__", false]], "__init__() (basicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg.__init__", false]], "__init__() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.__init__", false]], "__init__() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.__init__", false]], "__init__() (bestmetrictorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer.__init__", false]], "__init__() (binaryclassificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.__init__", false]], "__init__() (binarydice method)": [[80, "fl4health.metrics.efficient_metrics.BinaryDice.__init__", false]], "__init__() (binarysoftdicecoefficient method)": [[77, "fl4health.metrics.BinarySoftDiceCoefficient.__init__", false], [84, "fl4health.metrics.metrics.BinarySoftDiceCoefficient.__init__", false]], "__init__() (classificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.__init__", false]], "__init__() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.__init__", false]], "__init__() (clientlevelaccountant method)": [[130, "fl4health.privacy.fl_accountants.ClientLevelAccountant.__init__", false]], "__init__() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.__init__", false]], "__init__() (clientleveldpfedavgserver method)": [[143, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.__init__", false]], "__init__() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.__init__", false]], "__init__() (clippingbitservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule.__init__", false]], "__init__() (conditionalvae method)": [[95, "fl4health.model_bases.autoencoders_base.ConditionalVae.__init__", false]], "__init__() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.__init__", false]], "__init__() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.__init__", false]], "__init__() (cosinesimilarityloss method)": [[71, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.__init__", false]], "__init__() (cosinesimilaritylosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer.__init__", false]], "__init__() (cov method)": [[101, "fl4health.model_bases.gpfl_base.CoV.__init__", false]], "__init__() (cvaefixedconditionprocessor method)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor.__init__", false]], "__init__() (cvaevariableconditionprocessor method)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor.__init__", false]], "__init__() (datasetconverter method)": [[173, "fl4health.utils.dataset_converter.DatasetConverter.__init__", false]], "__init__() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.__init__", false]], "__init__() (dictionarydataset method)": [[172, "fl4health.utils.dataset.DictionaryDataset.__init__", false]], "__init__() (dirichletlabelbasedallocation method)": [[183, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.__init__", false]], "__init__() (dirichletlabelbasedsampler method)": [[187, "fl4health.utils.sampler.DirichletLabelBasedSampler.__init__", false]], "__init__() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.__init__", false]], "__init__() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.__init__", false]], "__init__() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.__init__", false]], "__init__() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.__init__", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.__init__", false]], "__init__() (dittoserver method)": [[139, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer.__init__", false]], "__init__() (dpscaffoldclient method)": [[53, "fl4health.clients.scaffold_client.DPScaffoldClient.__init__", false]], "__init__() (dpscaffoldserver method)": [[150, "fl4health.servers.scaffold_server.DPScaffoldServer.__init__", false]], "__init__() (dpscaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (dynamiclayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.__init__", false]], "__init__() (earlystopper method)": [[174, "fl4health.utils.early_stopper.EarlyStopper.__init__", false]], "__init__() (emametric method)": [[79, "fl4health.metrics.compound_metrics.EmaMetric.__init__", false]], "__init__() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.__init__", false]], "__init__() (ensemblemodel method)": [[96, "fl4health.model_bases.ensemble_base.EnsembleModel.__init__", false]], "__init__() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.__init__", false]], "__init__() (evaluateserver method)": [[144, "fl4health.servers.evaluate_server.EvaluateServer.__init__", false]], "__init__() (evaluationlosses method)": [[178, "fl4health.utils.losses.EvaluationLosses.__init__", false]], "__init__() (f1 method)": [[77, "fl4health.metrics.F1.__init__", false], [84, "fl4health.metrics.metrics.F1.__init__", false]], "__init__() (fairnessmetric method)": [[159, "fl4health.strategies.feddg_ga.FairnessMetric.__init__", false]], "__init__() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.__init__", false]], "__init__() (fedavgdynamiclayer method)": [[156, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.__init__", false]], "__init__() (fedavgsparsecootensor method)": [[157, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.__init__", false]], "__init__() (fedavgwithadaptiveconstraint method)": [[158, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.__init__", false]], "__init__() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.__init__", false]], "__init__() (feddggaadaptiveconstraint method)": [[160, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.__init__", false]], "__init__() (fedpca method)": [[161, "fl4health.strategies.fedpca.FedPCA.__init__", false]], "__init__() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.__init__", false]], "__init__() (fedpm method)": [[162, "fl4health.strategies.fedpm.FedPm.__init__", false]], "__init__() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.__init__", false]], "__init__() (fedpmexchanger method)": [[114, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.__init__", false]], "__init__() (fedpmserver method)": [[145, "fl4health.servers.fedpm_server.FedPmServer.__init__", false]], "__init__() (fedproxserver method)": [[140, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer.__init__", false]], "__init__() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.__init__", false]], "__init__() (fedsimclrmodel method)": [[99, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.__init__", false]], "__init__() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.__init__", false]], "__init__() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.__init__", false]], "__init__() (fendamodel method)": [[100, "fl4health.model_bases.fenda_base.FendaModel.__init__", false]], "__init__() (fendamodelwithfeaturestate method)": [[100, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.__init__", false]], "__init__() (filereporter method)": [[134, "fl4health.reporting.json_reporter.FileReporter.__init__", false]], "__init__() (fixedlayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.__init__", false]], "__init__() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.__init__", false]], "__init__() (fixedsamplingwithoutreplacement method)": [[131, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.__init__", false]], "__init__() (flash method)": [[163, "fl4health.strategies.flash.Flash.__init__", false]], "__init__() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.__init__", false]], "__init__() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.__init__", false]], "__init__() (flclientlevelaccountantpoissonsampling method)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.__init__", false]], "__init__() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.__init__", false]], "__init__() (flinstancelevelaccountant method)": [[130, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.__init__", false]], "__init__() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.__init__", false]], "__init__() (fullparameterexchangerwithpacking method)": [[117, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.__init__", false]], "__init__() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.__init__", false]], "__init__() (gce method)": [[101, "fl4health.model_bases.gpfl_base.Gce.__init__", false]], "__init__() (gpflbaseandheadmodules method)": [[101, "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules.__init__", false]], "__init__() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.__init__", false]], "__init__() (gpflmodel method)": [[101, "fl4health.model_bases.gpfl_base.GpflModel.__init__", false]], "__init__() (instanceleveldpclient method)": [[43, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.__init__", false]], "__init__() (instanceleveldpserver method)": [[146, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.__init__", false]], "__init__() (labelbasedsampler method)": [[187, "fl4health.utils.sampler.LabelBasedSampler.__init__", false]], "__init__() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.__init__", false]], "__init__() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.__init__", false]], "__init__() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.__init__", false]], "__init__() (layernamesservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule.__init__", false]], "__init__() (layerselectionfunctionconstructor method)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.__init__", false]], "__init__() (losses method)": [[178, "fl4health.utils.losses.Losses.__init__", false]], "__init__() (lossmeter method)": [[178, "fl4health.utils.losses.LossMeter.__init__", false]], "__init__() (maskedconv1d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.__init__", false]], "__init__() (maskedconv2d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.__init__", false]], "__init__() (maskedconv3d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.__init__", false]], "__init__() (maskedconvtranspose1d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.__init__", false]], "__init__() (maskedconvtranspose2d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.__init__", false]], "__init__() (maskedconvtranspose3d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.__init__", false]], "__init__() (maskedlayernorm method)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.__init__", false]], "__init__() (maskedlinear method)": [[105, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.__init__", false]], "__init__() (metric method)": [[78, "fl4health.metrics.base_metrics.Metric.__init__", false]], "__init__() (metricmanager method)": [[83, "fl4health.metrics.metric_managers.MetricManager.__init__", false]], "__init__() (minoritylabelbasedsampler method)": [[187, "fl4health.utils.sampler.MinorityLabelBasedSampler.__init__", false]], "__init__() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.__init__", false]], "__init__() (modellatentf method)": [[72, "fl4health.losses.deep_mmd_loss.ModelLatentF.__init__", false]], "__init__() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.__init__", false]], "__init__() (modelmergeserver method)": [[147, "fl4health.servers.model_merge_server.ModelMergeServer.__init__", false]], "__init__() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.__init__", false]], "__init__() (module2losswrapper method)": [[181, "fl4health.utils.nnunet_utils.Module2LossWrapper.__init__", false]], "__init__() (momentsaccountant method)": [[131, "fl4health.privacy.moments_accountant.MomentsAccountant.__init__", false]], "__init__() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.__init__", false]], "__init__() (mooncontrastiveloss method)": [[70, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.__init__", false]], "__init__() (mooncontrastivelosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer.__init__", false]], "__init__() (moonmodel method)": [[107, "fl4health.model_bases.moon_base.MoonModel.__init__", false]], "__init__() (mrmtlclient method)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient.__init__", false]], "__init__() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.__init__", false]], "__init__() (mrmtlserver method)": [[141, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer.__init__", false]], "__init__() (multiclassdice method)": [[80, "fl4health.metrics.efficient_metrics.MultiClassDice.__init__", false]], "__init__() (multiclassificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.__init__", false]], "__init__() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.__init__", false]], "__init__() (nnunetdataloaderwrapper method)": [[181, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.__init__", false]], "__init__() (nnunetserver method)": [[148, "fl4health.servers.nnunet_server.NnunetServer.__init__", false]], "__init__() (nnunetservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule.__init__", false]], "__init__() (nnunetserverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer.__init__", false]], "__init__() (ntxentloss method)": [[70, "fl4health.losses.contrastive_loss.NtXentLoss.__init__", false]], "__init__() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.__init__", false]], "__init__() (opacusbasicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg.__init__", false]], "__init__() (opacusscaffold method)": [[166, "fl4health.strategies.scaffold.OpacusScaffold.__init__", false]], "__init__() (opacusservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule.__init__", false]], "__init__() (packingservercheckpointandandstatemodule method)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule.__init__", false]], "__init__() (parallelsplitheadmodule method)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.__init__", false]], "__init__() (parallelsplitmodel method)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.__init__", false]], "__init__() (parameterpackerwithcontrolvariates method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.__init__", false]], "__init__() (partialparameterexchanger method)": [[121, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.__init__", false]], "__init__() (partialweightexchangeclient method)": [[51, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.__init__", false]], "__init__() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.__init__", false]], "__init__() (pcapreprocessor method)": [[127, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.__init__", false]], "__init__() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.__init__", false]], "__init__() (perfclloss method)": [[75, "fl4health.losses.perfcl_loss.PerFclLoss.__init__", false]], "__init__() (perfcllosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.PerFclLossContainer.__init__", false]], "__init__() (perfclmodel method)": [[111, "fl4health.model_bases.perfcl_base.PerFclModel.__init__", false]], "__init__() (poissonsampling method)": [[131, "fl4health.privacy.moments_accountant.PoissonSampling.__init__", false]], "__init__() (polylrschedulerwrapper method)": [[181, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.__init__", false]], "__init__() (reportsmanager method)": [[135, "fl4health.reporting.reports_manager.ReportsManager.__init__", false]], "__init__() (rocauc method)": [[77, "fl4health.metrics.RocAuc.__init__", false], [84, "fl4health.metrics.metrics.RocAuc.__init__", false]], "__init__() (samplingstrategy method)": [[131, "fl4health.privacy.moments_accountant.SamplingStrategy.__init__", false]], "__init__() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.__init__", false]], "__init__() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.__init__", false]], "__init__() (scaffoldserver method)": [[150, "fl4health.servers.scaffold_server.ScaffoldServer.__init__", false]], "__init__() (scaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (sequentiallysplitmodel method)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.__init__", false]], "__init__() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.__init__", false]], "__init__() (simplemetric method)": [[77, "fl4health.metrics.SimpleMetric.__init__", false], [84, "fl4health.metrics.metrics.SimpleMetric.__init__", false]], "__init__() (sparsecooparameterexchanger method)": [[122, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.__init__", false]], "__init__() (sparsecooservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule.__init__", false]], "__init__() (ssltensordataset method)": [[172, "fl4health.utils.dataset.SslTensorDataset.__init__", false]], "__init__() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.__init__", false]], "__init__() (streamtologger method)": [[181, "fl4health.utils.nnunet_utils.StreamToLogger.__init__", false]], "__init__() (syntheticdataset method)": [[172, "fl4health.utils.dataset.SyntheticDataset.__init__", false]], "__init__() (syntheticfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset.__init__", false]], "__init__() (syntheticiidfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.__init__", false]], "__init__() (syntheticnoniidfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.__init__", false]], "__init__() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.__init__", false]], "__init__() (tensordataset method)": [[172, "fl4health.utils.dataset.TensorDataset.__init__", false]], "__init__() (textcolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.__init__", false]], "__init__() (textmulticolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.__init__", false]], "__init__() (torchmetric method)": [[77, "fl4health.metrics.TorchMetric.__init__", false], [84, "fl4health.metrics.metrics.TorchMetric.__init__", false]], "__init__() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.__init__", false]], "__init__() (traininglosses method)": [[178, "fl4health.utils.losses.TrainingLosses.__init__", false]], "__init__() (transformsmetric method)": [[79, "fl4health.metrics.compound_metrics.TransformsMetric.__init__", false]], "__init__() (vaeloss method)": [[126, "fl4health.preprocessing.autoencoders.loss.VaeLoss.__init__", false]], "__init__() (vaeprocessor method)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor.__init__", false]], "__init__() (variationalae method)": [[95, "fl4health.model_bases.autoencoders_base.VariationalAe.__init__", false]], "__init__() (wandbreporter method)": [[132, "fl4health.reporting.WandBReporter.__init__", false], [136, "fl4health.reporting.wandb_reporter.WandBReporter.__init__", false]], "__init__() (warmedupmodule method)": [[128, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.__init__", false]], "__init__() (weightdriftloss method)": [[76, "fl4health.losses.weight_drift_loss.WeightDriftLoss.__init__", false]], "abstractae (class in fl4health.model_bases.autoencoders_base)": [[95, "fl4health.model_bases.autoencoders_base.AbstractAe", false]], "abstractsnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.AbstractSnapshotter", false]], "accumulation (lossmetertype attribute)": [[178, "fl4health.utils.losses.LossMeterType.ACCUMULATION", false]], "accuracy (class in fl4health.metrics)": [[77, "fl4health.metrics.Accuracy", false]], "accuracy (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.Accuracy", false]], "accuracy (fairnessmetrictype attribute)": [[159, "fl4health.strategies.feddg_ga.FairnessMetricType.ACCURACY", false]], "adaptiveconstraintservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins.adaptive_drift_constrained)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedprotocol (class in fl4health.mixins.adaptive_drift_constrained)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol", false]], "adaptivedriftconstraintclient (class in fl4health.clients.adaptive_drift_constraint_client)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient", false]], "add_items_to_config_fn() (in module fl4health.servers.nnunet_server)": [[148, "fl4health.servers.nnunet_server.add_items_to_config_fn", false]], "add_noise_to_array() (in module fl4health.strategies.noisy_aggregate)": [[165, "fl4health.strategies.noisy_aggregate.add_noise_to_array", false]], "add_noise_to_ndarrays() (in module fl4health.strategies.noisy_aggregate)": [[165, "fl4health.strategies.noisy_aggregate.add_noise_to_ndarrays", false]], "add_to_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.add_to_snapshot_attr", false]], "aeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.AeProcessor", false]], "aggregate() (evaluationlosses static method)": [[178, "fl4health.utils.losses.EvaluationLosses.aggregate", false]], "aggregate() (fedavgdynamiclayer method)": [[156, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate", false]], "aggregate() (fedavgsparsecootensor method)": [[157, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate", false]], "aggregate() (fedpm method)": [[162, "fl4health.strategies.fedpm.FedPm.aggregate", false]], "aggregate() (losses static method)": [[178, "fl4health.utils.losses.Losses.aggregate", false]], "aggregate() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.aggregate", false]], "aggregate() (traininglosses static method)": [[178, "fl4health.utils.losses.TrainingLosses.aggregate", false]], "aggregate_bayesian() (fedpm method)": [[162, "fl4health.strategies.fedpm.FedPm.aggregate_bayesian", false]], "aggregate_evaluate() (basicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_evaluate", false]], "aggregate_evaluate() (evaluateserver method)": [[144, "fl4health.servers.evaluate_server.EvaluateServer.aggregate_evaluate", false]], "aggregate_evaluate() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_evaluate", false]], "aggregate_evaluate() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_evaluate", false]], "aggregate_fit() (basicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_fit", false]], "aggregate_fit() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.aggregate_fit", false]], "aggregate_fit() (fedavgdynamiclayer method)": [[156, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate_fit", false]], "aggregate_fit() (fedavgsparsecootensor method)": [[157, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate_fit", false]], "aggregate_fit() (fedavgwithadaptiveconstraint method)": [[158, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_fit", false]], "aggregate_fit() (feddggaadaptiveconstraint method)": [[160, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (fedpca method)": [[161, "fl4health.strategies.fedpca.FedPCA.aggregate_fit", false]], "aggregate_fit() (flash method)": [[163, "fl4health.strategies.flash.Flash.aggregate_fit", false]], "aggregate_fit() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_fit", false]], "aggregate_fit() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.aggregate_fit", false]], "aggregate_losses() (in module fl4health.strategies.aggregate_utils)": [[153, "fl4health.strategies.aggregate_utils.aggregate_losses", false]], "aggregate_losses_dict() (lossmeter static method)": [[178, "fl4health.utils.losses.LossMeter.aggregate_losses_dict", false]], "aggregate_results() (in module fl4health.strategies.aggregate_utils)": [[153, "fl4health.strategies.aggregate_utils.aggregate_results", false]], "align_pred_and_target_shapes() (in module fl4health.metrics.utils)": [[86, "fl4health.metrics.utils.align_pred_and_target_shapes", false]], "apflclient (class in fl4health.clients.apfl_client)": [[22, "fl4health.clients.apfl_client.ApflClient", false]], "apflmodule (class in fl4health.model_bases.apfl_base)": [[94, "fl4health.model_bases.apfl_base.ApflModule", false]], "apply_adaptive_drift_to_client() (in module fl4health.mixins.adaptive_drift_constrained)": [[88, "fl4health.mixins.adaptive_drift_constrained.apply_adaptive_drift_to_client", false]], "apply_layer_filter() (fixedlayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.apply_layer_filter", false]], "apply_layer_filter() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.apply_layer_filter", false]], "as_dict() (evaluationlosses method)": [[178, "fl4health.utils.losses.EvaluationLosses.as_dict", false]], "as_dict() (losses method)": [[178, "fl4health.utils.losses.Losses.as_dict", false]], "as_dict() (traininglosses method)": [[178, "fl4health.utils.losses.TrainingLosses.as_dict", false]], "autoencoderdatasetconverter (class in fl4health.utils.dataset_converter)": [[173, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter", false]], "autoencoderprocessing (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing", false]], "average (ensembleaggregationmode attribute)": [[96, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.AVERAGE", false]], "average (lossmetertype attribute)": [[178, "fl4health.utils.losses.LossMeterType.AVERAGE", false]], "backward() (bernoullisample static method)": [[175, "fl4health.utils.functions.BernoulliSample.backward", false]], "balancedaccuracy (class in fl4health.metrics)": [[77, "fl4health.metrics.BalancedAccuracy", false]], "balancedaccuracy (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.BalancedAccuracy", false]], "basedataset (class in fl4health.utils.dataset)": [[172, "fl4health.utils.dataset.BaseDataset", false]], "basefractionsamplingmanager (class in fl4health.client_managers.base_sampling_manager)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager", false]], "basereporter (class in fl4health.reporting.base_reporter)": [[133, "fl4health.reporting.base_reporter.BaseReporter", false]], "baseservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule", false]], "basicae (class in fl4health.model_bases.autoencoders_base)": [[95, "fl4health.model_bases.autoencoders_base.BasicAe", false]], "basicclient (class in fl4health.clients.basic_client)": [[23, "fl4health.clients.basic_client.BasicClient", false]], "basicfedavg (class in fl4health.strategies.basic_fedavg)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg", false]], "bernoullisample (class in fl4health.utils.functions)": [[175, "fl4health.utils.functions.BernoulliSample", false]], "bestlossopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer", false]], "bestlosstorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer", false]], "bestmetrictorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer", false]], "beta_with_extreme_kernel_base_values() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.beta_with_extreme_kernel_base_values", false]], "binary (tabulartype attribute)": [[68, "fl4health.feature_alignment.tabular_type.TabularType.BINARY", false]], "binaryclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[81, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric", false]], "binarydice (class in fl4health.metrics.efficient_metrics)": [[80, "fl4health.metrics.efficient_metrics.BinaryDice", false]], "binarysoftdicecoefficient (class in fl4health.metrics)": [[77, "fl4health.metrics.BinarySoftDiceCoefficient", false]], "binarysoftdicecoefficient (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.BinarySoftDiceCoefficient", false]], "bytessnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.BytesSnapshotter", false]], "calculate_class_sample_proportions() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.calculate_class_sample_proportions", false]], "calculate_parameters_norm() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.calculate_parameters_norm", false]], "calculate_update_with_momentum() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.calculate_update_with_momentum", false]], "center_data() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.center_data", false]], "check_config() (in module fl4health.utils.config)": [[170, "fl4health.utils.config.check_config", false]], "check_if_batch_is_empty_and_verify_input() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.check_if_batch_is_empty_and_verify_input", false]], "check_shape_match() (in module fl4health.utils.parameter_extraction)": [[182, "fl4health.utils.parameter_extraction.check_shape_match", false]], "check_target_prediction_keys_equal() (metricmanager method)": [[83, "fl4health.metrics.metric_managers.MetricManager.check_target_prediction_keys_equal", false]], "checkpoint_exists() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.checkpoint_exists", false]], "checkpointmode (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.CheckpointMode", false]], "classificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric", false]], "classificationoutcome (class in fl4health.metrics.efficient_metrics_base)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome", false]], "clear() (classificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.clear", false]], "clear() (emametric method)": [[79, "fl4health.metrics.compound_metrics.EmaMetric.clear", false]], "clear() (lossmeter method)": [[178, "fl4health.utils.losses.LossMeter.clear", false]], "clear() (metric method)": [[78, "fl4health.metrics.base_metrics.Metric.clear", false]], "clear() (metricmanager method)": [[83, "fl4health.metrics.metric_managers.MetricManager.clear", false]], "clear() (simplemetric method)": [[77, "fl4health.metrics.SimpleMetric.clear", false], [84, "fl4health.metrics.metrics.SimpleMetric.clear", false]], "clear() (torchmetric method)": [[77, "fl4health.metrics.TorchMetric.clear", false], [84, "fl4health.metrics.metrics.TorchMetric.clear", false]], "clear() (transformsmetric method)": [[79, "fl4health.metrics.compound_metrics.TransformsMetric.clear", false]], "clear_buffers() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.clear_buffers", false]], "clientcheckpointandstatemodule (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule", false]], "clientlevelaccountant (class in fl4health.privacy.fl_accountants)": [[130, "fl4health.privacy.fl_accountants.ClientLevelAccountant", false]], "clientleveldpfedavgm (class in fl4health.strategies.client_dp_fedavgm)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM", false]], "clientleveldpfedavgserver (class in fl4health.servers.client_level_dp_fed_avg_server)": [[143, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer", false]], "clientstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer", false]], "clip_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.clip_parameters", false]], "clippingbitservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule", false]], "clone_and_freeze_model() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.clone_and_freeze_model", false]], "collapse_one_hot_tensor() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.collapse_one_hot_tensor", false]], "compute() (classificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute", false]], "compute() (emametric method)": [[79, "fl4health.metrics.compound_metrics.EmaMetric.compute", false]], "compute() (lossmeter method)": [[178, "fl4health.utils.losses.LossMeter.compute", false]], "compute() (metric method)": [[78, "fl4health.metrics.base_metrics.Metric.compute", false]], "compute() (metricmanager method)": [[83, "fl4health.metrics.metric_managers.MetricManager.compute", false]], "compute() (simplemetric method)": [[77, "fl4health.metrics.SimpleMetric.compute", false], [84, "fl4health.metrics.metrics.SimpleMetric.compute", false]], "compute() (torchmetric method)": [[77, "fl4health.metrics.TorchMetric.compute", false], [84, "fl4health.metrics.metrics.TorchMetric.compute", false]], "compute() (transformsmetric method)": [[79, "fl4health.metrics.compound_metrics.TransformsMetric.compute", false]], "compute_all_h_u_all_samples() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_all_samples", false]], "compute_all_h_u_from_inner_products() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products", false]], "compute_all_h_u_from_inner_products_linear() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products_linear", false]], "compute_all_h_u_linear() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_linear", false]], "compute_conditional_inputs() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.compute_conditional_inputs", false]], "compute_contrastive_loss() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_contrastive_loss", false]], "compute_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_cosine_similarity_loss", false]], "compute_cumulative_explained_variance() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.compute_cumulative_explained_variance", false]], "compute_dice_on_count_tensors() (in module fl4health.metrics.metrics_utils)": [[85, "fl4health.metrics.metrics_utils.compute_dice_on_count_tensors", false]], "compute_euclidean_inner_products() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products", false]], "compute_euclidean_inner_products_linear() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products_linear", false]], "compute_evaluation_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.compute_evaluation_loss", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.compute_evaluation_loss", false]], "compute_evaluation_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_evaluation_loss", false]], "compute_evaluation_loss() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.compute_evaluation_loss", false]], "compute_explained_variance_ratios() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.compute_explained_variance_ratios", false]], "compute_from_counts() (binaryclassificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.compute_from_counts", false]], "compute_from_counts() (binarydice method)": [[80, "fl4health.metrics.efficient_metrics.BinaryDice.compute_from_counts", false]], "compute_from_counts() (classificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute_from_counts", false]], "compute_from_counts() (multiclassdice method)": [[80, "fl4health.metrics.efficient_metrics.MultiClassDice.compute_from_counts", false]], "compute_from_counts() (multiclassificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.compute_from_counts", false]], "compute_h_u_from_inner_products() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products", false]], "compute_h_u_from_inner_products_linear() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products_linear", false]], "compute_hat_d_per_kernel() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_d_per_kernel", false]], "compute_hat_q_k() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k", false]], "compute_hat_q_k_linear() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k_linear", false]], "compute_kernel() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.compute_kernel", false]], "compute_loss_and_additional_losses() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (flexibleclientprotocolpresetup method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.compute_loss_and_additional_losses", false]], "compute_magnitude_level_loss() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.compute_magnitude_level_loss", false]], "compute_mkmmd() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_mkmmd", false]], "compute_negative_similarities() (mooncontrastiveloss method)": [[70, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.compute_negative_similarities", false]], "compute_parameter_delta() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.compute_parameter_delta", false]], "compute_parameters_delta() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.compute_parameters_delta", false]], "compute_penalty_loss() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstrainedprotocol method)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_penalty_loss", false]], "compute_perfcl_loss() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_perfcl_loss", false]], "compute_projection_variance() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.compute_projection_variance", false]], "compute_reconstruction_error() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.compute_reconstruction_error", false]], "compute_training_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_training_loss", false]], "compute_training_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_training_loss", false]], "compute_training_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_training_loss", false]], "compute_training_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_training_loss", false]], "compute_training_loss() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_training_loss", false]], "compute_training_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_training_loss", false]], "compute_training_loss() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.compute_training_loss", false]], "compute_training_loss() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_training_loss", false]], "compute_training_loss() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.compute_training_loss", false]], "compute_training_loss() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.compute_training_loss", false]], "compute_training_loss() (mrmtlclient method)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient.compute_training_loss", false]], "compute_training_loss() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_training_loss", false]], "compute_updated_control_variates() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.compute_updated_control_variates", false]], "compute_updated_control_variates() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.compute_updated_control_variates", false]], "compute_updated_parameters() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.compute_updated_parameters", false]], "compute_updated_weights() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.compute_updated_weights", false]], "compute_vertices() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_vertices", false]], "compute_weight_update_and_clip() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.compute_weight_update_and_clip", false]], "concatenate (parallelfeaturejoinmode attribute)": [[108, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.CONCATENATE", false]], "conditionalvae (class in fl4health.model_bases.autoencoders_base)": [[95, "fl4health.model_bases.autoencoders_base.ConditionalVae", false]], "configure_evaluate() (basicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_evaluate", false]], "configure_evaluate() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_evaluate", false]], "configure_evaluate() (evaluateserver method)": [[144, "fl4health.servers.evaluate_server.EvaluateServer.configure_evaluate", false]], "configure_evaluate() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.configure_evaluate", false]], "configure_evaluate() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_evaluate", false]], "configure_fit() (basicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_fit", false]], "configure_fit() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_fit", false]], "configure_fit() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.configure_fit", false]], "configure_fit() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_fit", false]], "configure_fit_all() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.configure_fit_all", false]], "configure_poll() (basicfedavg method)": [[154, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_poll", false]], "configure_poll() (strategywithpolling method)": [[167, "fl4health.strategies.strategy_with_poll.StrategyWithPolling.configure_poll", false]], "constrainedfendaclient (class in fl4health.clients.constrained_fenda_client)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient", false]], "constrainedfendalosscontainer (class in fl4health.losses.fenda_loss_config)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer", false]], "construct_covariance_matrix() (syntheticfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset.construct_covariance_matrix", false]], "construct_quadruples() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.construct_quadruples", false]], "construct_rxrx1_tensor_dataset() (in module fl4health.datasets.rxrx1.load_data)": [[57, "fl4health.datasets.rxrx1.load_data.construct_rxrx1_tensor_dataset", false]], "construct_skin_cancer_tensor_dataset() (in module fl4health.datasets.skin_cancer.load_data)": [[60, "fl4health.datasets.skin_cancer.load_data.construct_skin_cancer_tensor_dataset", false]], "convert_dataset() (autoencoderdatasetconverter method)": [[173, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.convert_dataset", false]], "convert_dataset() (datasetconverter method)": [[173, "fl4health.utils.dataset_converter.DatasetConverter.convert_dataset", false]], "convert_deep_supervision_dict_to_list() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.convert_deep_supervision_dict_to_list", false]], "convert_deep_supervision_list_to_dict() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.convert_deep_supervision_list_to_dict", false]], "convert_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[185, "fl4health.utils.privacy_utilities.convert_model_to_opacus_model", false]], "convert_to_masked_model() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[104, "fl4health.model_bases.masked_layers.masked_layers_utils.convert_to_masked_model", false]], "cosinesimilarityloss (class in fl4health.losses.cosine_similarity_loss)": [[71, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss", false]], "cosinesimilaritylosscontainer (class in fl4health.losses.fenda_loss_config)": [[73, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer", false]], "count_tp_fp_tn_fn() (binaryclassificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.count_tp_fp_tn_fn", false]], "count_tp_fp_tn_fn() (classificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.count_tp_fp_tn_fn", false]], "cov (class in fl4health.model_bases.gpfl_base)": [[101, "fl4health.model_bases.gpfl_base.CoV", false]], "create_plans() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.create_plans", false]], "create_splits() (in module fl4health.datasets.rxrx1.load_data)": [[57, "fl4health.datasets.rxrx1.load_data.create_splits", false]], "criterion (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.criterion", false]], "criterion (flexibleclientprotocol attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.criterion", false]], "critical (loglevel attribute)": [[189, "fl4health.utils.typing.LogLevel.CRITICAL", false]], "custom (fairnessmetrictype attribute)": [[159, "fl4health.strategies.feddg_ga.FairnessMetricType.CUSTOM", false]], "cvaefixedconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor", false]], "cvaevariableconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor", false]], "datasetconverter (class in fl4health.utils.dataset_converter)": [[173, "fl4health.utils.dataset_converter.DatasetConverter", false]], "debug (loglevel attribute)": [[189, "fl4health.utils.typing.LogLevel.DEBUG", false]], "decode() (basicae method)": [[95, "fl4health.model_bases.autoencoders_base.BasicAe.decode", false]], "decode() (conditionalvae method)": [[95, "fl4health.model_bases.autoencoders_base.ConditionalVae.decode", false]], "decode() (variationalae method)": [[95, "fl4health.model_bases.autoencoders_base.VariationalAe.decode", false]], "decode_and_pseudo_sort_results() (in module fl4health.utils.functions)": [[175, "fl4health.utils.functions.decode_and_pseudo_sort_results", false]], "deepmmdloss (class in fl4health.losses.deep_mmd_loss)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss", false]], "define_metrics() (wandbreporter method)": [[132, "fl4health.reporting.WandBReporter.define_metrics", false], [136, "fl4health.reporting.wandb_reporter.WandBReporter.define_metrics", false]], "delete_from_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.delete_from_snapshot_attr", false]], "derm7pt_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_image_path_func", false]], "derm7pt_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_label_map_func", false]], "device (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.device", false]], "device (flexibleclientprotocolpresetup attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.device", false]], "dictionarydataset (class in fl4health.utils.dataset)": [[172, "fl4health.utils.dataset.DictionaryDataset", false]], "dirichletlabelbasedallocation (class in fl4health.utils.partitioners)": [[183, "fl4health.utils.partitioners.DirichletLabelBasedAllocation", false]], "dirichletlabelbasedsampler (class in fl4health.utils.sampler)": [[187, "fl4health.utils.sampler.DirichletLabelBasedSampler", false]], "disable_accumulating_features() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.disable_accumulating_features", false]], "ditto (personalizedmode attribute)": [[90, "fl4health.mixins.personalized.PersonalizedMode.DITTO", false]], "dittoclient (class in fl4health.clients.ditto_client)": [[28, "fl4health.clients.ditto_client.DittoClient", false]], "dittodeepmmdclient (class in fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient", false]], "dittomkmmdclient (class in fl4health.clients.mkmmd_clients.ditto_mkmmd_client)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized.ditto)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized)": [[90, "fl4health.mixins.personalized.DittoPersonalizedProtocol", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized.ditto)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol", false]], "dittoserver (class in fl4health.servers.adaptive_constraint_servers.ditto_server)": [[139, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer", false]], "dpscaffoldclient (class in fl4health.clients.scaffold_client)": [[53, "fl4health.clients.scaffold_client.DPScaffoldClient", false]], "dpscaffoldserver (class in fl4health.servers.scaffold_server)": [[150, "fl4health.servers.scaffold_server.DPScaffoldServer", false]], "dpscaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule", false]], "drift_penalty_tensors (adaptivedriftconstrainedprotocol attribute)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_tensors", false]], "drift_penalty_tensors (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_tensors", false]], "drift_penalty_weight (adaptivedriftconstrainedprotocol attribute)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_weight", false]], "drift_penalty_weight (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_weight", false]], "dump() (filereporter method)": [[134, "fl4health.reporting.json_reporter.FileReporter.dump", false]], "dump() (jsonreporter method)": [[132, "fl4health.reporting.JsonReporter.dump", false], [134, "fl4health.reporting.json_reporter.JsonReporter.dump", false]], "dynamiclayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[116, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger", false]], "early_stop_validation (loggingmode attribute)": [[177, "fl4health.utils.logging.LoggingMode.EARLY_STOP_VALIDATION", false]], "earlystopper (class in fl4health.utils.early_stopper)": [[174, "fl4health.utils.early_stopper.EarlyStopper", false]], "emametric (class in fl4health.metrics.compound_metrics)": [[79, "fl4health.metrics.compound_metrics.EmaMetric", false]], "empty_cache() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.empty_cache", false]], "enable_accumulating_features() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.enable_accumulating_features", false]], "encode() (basicae method)": [[95, "fl4health.model_bases.autoencoders_base.BasicAe.encode", false]], "encode() (conditionalvae method)": [[95, "fl4health.model_bases.autoencoders_base.ConditionalVae.encode", false]], "encode() (variationalae method)": [[95, "fl4health.model_bases.autoencoders_base.VariationalAe.encode", false]], "ensemble_average() (ensemblemodel method)": [[96, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_average", false]], "ensemble_vote() (ensemblemodel method)": [[96, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_vote", false]], "ensembleaggregationmode (class in fl4health.model_bases.ensemble_base)": [[96, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode", false]], "ensembleclient (class in fl4health.clients.ensemble_client)": [[29, "fl4health.clients.ensemble_client.EnsembleClient", false]], "ensemblemodel (class in fl4health.model_bases.ensemble_base)": [[96, "fl4health.model_bases.ensemble_base.EnsembleModel", false]], "ensure_protocol_compliance() (in module fl4health.mixins.personalized.utils)": [[92, "fl4health.mixins.personalized.utils.ensure_protocol_compliance", false]], "enumsnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.EnumSnapshotter", false]], "epoch (wandbsteptype attribute)": [[132, "fl4health.reporting.WandBStepType.EPOCH", false], [136, "fl4health.reporting.wandb_reporter.WandBStepType.EPOCH", false]], "error (loglevel attribute)": [[189, "fl4health.utils.typing.LogLevel.ERROR", false]], "evaluate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.evaluate", false]], "evaluate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.evaluate", false]], "evaluate() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.evaluate", false]], "evaluate() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.evaluate", false]], "evaluate() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.evaluate", false]], "evaluate() (numpyclientminimalprotocol method)": [[89, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.evaluate", false]], "evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.evaluate_metrics_aggregation_fn", false]], "evaluate_round() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.evaluate_round", false]], "evaluateclient (class in fl4health.clients.evaluate_client)": [[30, "fl4health.clients.evaluate_client.EvaluateClient", false]], "evaluateserver (class in fl4health.servers.evaluate_server)": [[144, "fl4health.servers.evaluate_server.EvaluateServer", false]], "evaluationlosses (class in fl4health.utils.losses)": [[178, "fl4health.utils.losses.EvaluationLosses", false]], "extract_coo_info_from_dense() (sparsecooparameterpacker static method)": [[119, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.extract_coo_info_from_dense", false]], "f1 (class in fl4health.metrics)": [[77, "fl4health.metrics.F1", false]], "f1 (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.F1", false]], "fairnessmetric (class in fl4health.strategies.feddg_ga)": [[159, "fl4health.strategies.feddg_ga.FairnessMetric", false]], "fairnessmetrictype (class in fl4health.strategies.feddg_ga)": [[159, "fl4health.strategies.feddg_ga.FairnessMetricType", false]], "false_negative (classificationoutcome attribute)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.FALSE_NEGATIVE", false]], "false_positive (classificationoutcome attribute)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.FALSE_POSITIVE", false]], "featureextractorbuffer (class in fl4health.model_bases.feature_extractor_buffer)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer", false]], "features_forward() (sequentiallysplitmodel method)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.features_forward", false]], "fedavgdynamiclayer (class in fl4health.strategies.fedavg_dynamic_layer)": [[156, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer", false]], "fedavgsparsecootensor (class in fl4health.strategies.fedavg_sparse_coo_tensor)": [[157, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor", false]], "fedavgwithadaptiveconstraint (class in fl4health.strategies.fedavg_with_adaptive_constraint)": [[158, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint", false]], "fedbnclient (class in fl4health.clients.fedbn_client)": [[33, "fl4health.clients.fedbn_client.FedBnClient", false]], "feddgga (class in fl4health.strategies.feddg_ga)": [[159, "fl4health.strategies.feddg_ga.FedDgGa", false]], "feddggaadaptiveconstraint (class in fl4health.strategies.feddg_ga_with_adaptive_constraint)": [[160, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint", false]], "federated_evaluate() (evaluateserver method)": [[144, "fl4health.servers.evaluate_server.EvaluateServer.federated_evaluate", false]], "fedpca (class in fl4health.strategies.fedpca)": [[161, "fl4health.strategies.fedpca.FedPCA", false]], "fedpcaclient (class in fl4health.clients.fed_pca_client)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient", false]], "fedperclient (class in fl4health.clients.fedper_client)": [[34, "fl4health.clients.fedper_client.FedPerClient", false]], "fedpm (class in fl4health.strategies.fedpm)": [[162, "fl4health.strategies.fedpm.FedPm", false]], "fedpmclient (class in fl4health.clients.fedpm_client)": [[35, "fl4health.clients.fedpm_client.FedPmClient", false]], "fedpmexchanger (class in fl4health.parameter_exchange.fedpm_exchanger)": [[114, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger", false]], "fedpmserver (class in fl4health.servers.fedpm_server)": [[145, "fl4health.servers.fedpm_server.FedPmServer", false]], "fedproxclient (class in fl4health.clients.fed_prox_client)": [[32, "fl4health.clients.fed_prox_client.FedProxClient", false]], "fedproxserver (class in fl4health.servers.adaptive_constraint_servers.fedprox_server)": [[140, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer", false]], "fedrepclient (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepClient", false]], "fedrepmodel (class in fl4health.model_bases.fedrep_base)": [[98, "fl4health.model_bases.fedrep_base.FedRepModel", false]], "fedreptrainmode (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode", false]], "fedsimclrmodel (class in fl4health.model_bases.fedsimclr_base)": [[99, "fl4health.model_bases.fedsimclr_base.FedSimClrModel", false]], "fendaclient (class in fl4health.clients.fenda_client)": [[37, "fl4health.clients.fenda_client.FendaClient", false]], "fendadittoclient (class in fl4health.clients.fenda_ditto_client)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient", false]], "fendamodel (class in fl4health.model_bases.fenda_base)": [[100, "fl4health.model_bases.fenda_base.FendaModel", false]], "fendamodelwithfeaturestate (class in fl4health.model_bases.fenda_base)": [[100, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState", false]], "filereporter (class in fl4health.reporting.json_reporter)": [[134, "fl4health.reporting.json_reporter.FileReporter", false]], "filter_and_save_data() (in module fl4health.datasets.rxrx1.preprocess)": [[58, "fl4health.datasets.rxrx1.preprocess.filter_and_save_data", false]], "find_last_common_prefix() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.find_last_common_prefix", false]], "fit() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.fit", false]], "fit() (clientleveldpfedavgserver method)": [[143, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.fit", false]], "fit() (dpscaffoldserver method)": [[150, "fl4health.servers.scaffold_server.DPScaffoldServer.fit", false]], "fit() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.fit", false]], "fit() (evaluateserver method)": [[144, "fl4health.servers.evaluate_server.EvaluateServer.fit", false]], "fit() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.fit", false]], "fit() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.fit", false]], "fit() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.fit", false]], "fit() (instanceleveldpserver method)": [[146, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.fit", false]], "fit() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.fit", false]], "fit() (modelmergeserver method)": [[147, "fl4health.servers.model_merge_server.ModelMergeServer.fit", false]], "fit() (numpyclientminimalprotocol method)": [[89, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.fit", false]], "fit() (scaffoldserver method)": [[150, "fl4health.servers.scaffold_server.ScaffoldServer.fit", false]], "fit() (textcolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.fit", false]], "fit() (textmulticolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.fit", false]], "fit_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.fit_metrics_aggregation_fn", false]], "fit_round() (fedpmserver method)": [[145, "fl4health.servers.fedpm_server.FedPmServer.fit_round", false]], "fit_round() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.fit_round", false]], "fit_with_per_round_checkpointing() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.fit_with_per_round_checkpointing", false]], "fixedlayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[116, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger", false]], "fixedsamplingbyfractionclientmanager (class in fl4health.client_managers.fixed_without_replacement_manager)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager", false]], "fixedsamplingclientmanager (class in fl4health.client_managers.fixed_sampling_client_manager)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager", false]], "fixedsamplingwithoutreplacement (class in fl4health.privacy.moments_accountant)": [[131, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement", false]], "fl4health": [[8, "module-fl4health", false]], "fl4health.checkpointing": [[9, "module-fl4health.checkpointing", false]], "fl4health.checkpointing.checkpointer": [[10, "module-fl4health.checkpointing.checkpointer", false]], "fl4health.checkpointing.client_module": [[11, "module-fl4health.checkpointing.client_module", false]], "fl4health.checkpointing.opacus_checkpointer": [[12, "module-fl4health.checkpointing.opacus_checkpointer", false]], "fl4health.checkpointing.server_module": [[13, "module-fl4health.checkpointing.server_module", false]], "fl4health.checkpointing.state_checkpointer": [[14, "module-fl4health.checkpointing.state_checkpointer", false]], "fl4health.client_managers": [[15, "module-fl4health.client_managers", false]], "fl4health.client_managers.base_sampling_manager": [[16, "module-fl4health.client_managers.base_sampling_manager", false]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, "module-fl4health.client_managers.fixed_sampling_client_manager", false]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, "module-fl4health.client_managers.fixed_without_replacement_manager", false]], "fl4health.client_managers.poisson_sampling_manager": [[19, "module-fl4health.client_managers.poisson_sampling_manager", false]], "fl4health.clients": [[20, "module-fl4health.clients", false]], "fl4health.clients.adaptive_drift_constraint_client": [[21, "module-fl4health.clients.adaptive_drift_constraint_client", false]], "fl4health.clients.apfl_client": [[22, "module-fl4health.clients.apfl_client", false]], "fl4health.clients.basic_client": [[23, "module-fl4health.clients.basic_client", false]], "fl4health.clients.clipping_client": [[24, "module-fl4health.clients.clipping_client", false]], "fl4health.clients.constrained_fenda_client": [[25, "module-fl4health.clients.constrained_fenda_client", false]], "fl4health.clients.deep_mmd_clients": [[26, "module-fl4health.clients.deep_mmd_clients", false]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false]], "fl4health.clients.ditto_client": [[28, "module-fl4health.clients.ditto_client", false]], "fl4health.clients.ensemble_client": [[29, "module-fl4health.clients.ensemble_client", false]], "fl4health.clients.evaluate_client": [[30, "module-fl4health.clients.evaluate_client", false]], "fl4health.clients.fed_pca_client": [[31, "module-fl4health.clients.fed_pca_client", false]], "fl4health.clients.fed_prox_client": [[32, "module-fl4health.clients.fed_prox_client", false]], "fl4health.clients.fedbn_client": [[33, "module-fl4health.clients.fedbn_client", false]], "fl4health.clients.fedper_client": [[34, "module-fl4health.clients.fedper_client", false]], "fl4health.clients.fedpm_client": [[35, "module-fl4health.clients.fedpm_client", false]], "fl4health.clients.fedrep_client": [[36, "module-fl4health.clients.fedrep_client", false]], "fl4health.clients.fenda_client": [[37, "module-fl4health.clients.fenda_client", false]], "fl4health.clients.fenda_ditto_client": [[38, "module-fl4health.clients.fenda_ditto_client", false]], "fl4health.clients.flash_client": [[39, "module-fl4health.clients.flash_client", false]], "fl4health.clients.flexible": [[40, "module-fl4health.clients.flexible", false]], "fl4health.clients.flexible.base": [[41, "module-fl4health.clients.flexible.base", false]], "fl4health.clients.gpfl_client": [[42, "module-fl4health.clients.gpfl_client", false]], "fl4health.clients.instance_level_dp_client": [[43, "module-fl4health.clients.instance_level_dp_client", false]], "fl4health.clients.mkmmd_clients": [[44, "module-fl4health.clients.mkmmd_clients", false]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[45, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[46, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false]], "fl4health.clients.model_merge_client": [[47, "module-fl4health.clients.model_merge_client", false]], "fl4health.clients.moon_client": [[48, "module-fl4health.clients.moon_client", false]], "fl4health.clients.mr_mtl_client": [[49, "module-fl4health.clients.mr_mtl_client", false]], "fl4health.clients.nnunet_client": [[50, "module-fl4health.clients.nnunet_client", false]], "fl4health.clients.partial_weight_exchange_client": [[51, "module-fl4health.clients.partial_weight_exchange_client", false]], "fl4health.clients.perfcl_client": [[52, "module-fl4health.clients.perfcl_client", false]], "fl4health.clients.scaffold_client": [[53, "module-fl4health.clients.scaffold_client", false]], "fl4health.datasets": [[55, "module-fl4health.datasets", false]], "fl4health.datasets.rxrx1": [[56, "module-fl4health.datasets.rxrx1", false]], "fl4health.datasets.rxrx1.load_data": [[57, "module-fl4health.datasets.rxrx1.load_data", false]], "fl4health.datasets.rxrx1.preprocess": [[58, "module-fl4health.datasets.rxrx1.preprocess", false]], "fl4health.datasets.skin_cancer": [[59, "module-fl4health.datasets.skin_cancer", false]], "fl4health.datasets.skin_cancer.load_data": [[60, "module-fl4health.datasets.skin_cancer.load_data", false]], "fl4health.datasets.skin_cancer.preprocess_skin": [[61, "module-fl4health.datasets.skin_cancer.preprocess_skin", false]], "fl4health.feature_alignment": [[62, "module-fl4health.feature_alignment", false]], "fl4health.feature_alignment.constants": [[63, "module-fl4health.feature_alignment.constants", false]], "fl4health.feature_alignment.string_columns_transformer": [[64, "module-fl4health.feature_alignment.string_columns_transformer", false]], "fl4health.feature_alignment.tabular_feature": [[67, "module-fl4health.feature_alignment.tabular_feature", false]], "fl4health.feature_alignment.tabular_type": [[68, "module-fl4health.feature_alignment.tabular_type", false]], "fl4health.losses": [[69, "module-fl4health.losses", false]], "fl4health.losses.contrastive_loss": [[70, "module-fl4health.losses.contrastive_loss", false]], "fl4health.losses.cosine_similarity_loss": [[71, "module-fl4health.losses.cosine_similarity_loss", false]], "fl4health.losses.deep_mmd_loss": [[72, "module-fl4health.losses.deep_mmd_loss", false]], "fl4health.losses.fenda_loss_config": [[73, "module-fl4health.losses.fenda_loss_config", false]], "fl4health.losses.mkmmd_loss": [[74, "module-fl4health.losses.mkmmd_loss", false]], "fl4health.losses.perfcl_loss": [[75, "module-fl4health.losses.perfcl_loss", false]], "fl4health.losses.weight_drift_loss": [[76, "module-fl4health.losses.weight_drift_loss", false]], "fl4health.metrics": [[77, "module-fl4health.metrics", false]], "fl4health.metrics.base_metrics": [[78, "module-fl4health.metrics.base_metrics", false]], "fl4health.metrics.compound_metrics": [[79, "module-fl4health.metrics.compound_metrics", false]], "fl4health.metrics.efficient_metrics": [[80, "module-fl4health.metrics.efficient_metrics", false]], "fl4health.metrics.efficient_metrics_base": [[81, "module-fl4health.metrics.efficient_metrics_base", false]], "fl4health.metrics.metric_aggregation": [[82, "module-fl4health.metrics.metric_aggregation", false]], "fl4health.metrics.metric_managers": [[83, "module-fl4health.metrics.metric_managers", false]], "fl4health.metrics.metrics": [[84, "module-fl4health.metrics.metrics", false]], "fl4health.metrics.metrics_utils": [[85, "module-fl4health.metrics.metrics_utils", false]], "fl4health.metrics.utils": [[86, "module-fl4health.metrics.utils", false]], "fl4health.mixins": [[87, "module-fl4health.mixins", false]], "fl4health.mixins.adaptive_drift_constrained": [[88, "module-fl4health.mixins.adaptive_drift_constrained", false]], "fl4health.mixins.core_protocols": [[89, "module-fl4health.mixins.core_protocols", false]], "fl4health.mixins.personalized": [[90, "module-fl4health.mixins.personalized", false]], "fl4health.mixins.personalized.ditto": [[91, "module-fl4health.mixins.personalized.ditto", false]], "fl4health.mixins.personalized.utils": [[92, "module-fl4health.mixins.personalized.utils", false]], "fl4health.model_bases": [[93, "module-fl4health.model_bases", false]], "fl4health.model_bases.apfl_base": [[94, "module-fl4health.model_bases.apfl_base", false]], "fl4health.model_bases.autoencoders_base": [[95, "module-fl4health.model_bases.autoencoders_base", false]], "fl4health.model_bases.ensemble_base": [[96, "module-fl4health.model_bases.ensemble_base", false]], "fl4health.model_bases.feature_extractor_buffer": [[97, "module-fl4health.model_bases.feature_extractor_buffer", false]], "fl4health.model_bases.fedrep_base": [[98, "module-fl4health.model_bases.fedrep_base", false]], "fl4health.model_bases.fedsimclr_base": [[99, "module-fl4health.model_bases.fedsimclr_base", false]], "fl4health.model_bases.fenda_base": [[100, "module-fl4health.model_bases.fenda_base", false]], "fl4health.model_bases.gpfl_base": [[101, "module-fl4health.model_bases.gpfl_base", false]], "fl4health.model_bases.masked_layers": [[102, "module-fl4health.model_bases.masked_layers", false]], "fl4health.model_bases.masked_layers.masked_conv": [[103, "module-fl4health.model_bases.masked_layers.masked_conv", false]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[104, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false]], "fl4health.model_bases.masked_layers.masked_linear": [[105, "module-fl4health.model_bases.masked_layers.masked_linear", false]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[106, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false]], "fl4health.model_bases.moon_base": [[107, "module-fl4health.model_bases.moon_base", false]], "fl4health.model_bases.parallel_split_models": [[108, "module-fl4health.model_bases.parallel_split_models", false]], "fl4health.model_bases.partial_layer_exchange_model": [[109, "module-fl4health.model_bases.partial_layer_exchange_model", false]], "fl4health.model_bases.pca": [[110, "module-fl4health.model_bases.pca", false]], "fl4health.model_bases.perfcl_base": [[111, "module-fl4health.model_bases.perfcl_base", false]], "fl4health.model_bases.sequential_split_models": [[112, "module-fl4health.model_bases.sequential_split_models", false]], "fl4health.parameter_exchange": [[113, "module-fl4health.parameter_exchange", false]], "fl4health.parameter_exchange.fedpm_exchanger": [[114, "module-fl4health.parameter_exchange.fedpm_exchanger", false]], "fl4health.parameter_exchange.full_exchanger": [[115, "module-fl4health.parameter_exchange.full_exchanger", false]], "fl4health.parameter_exchange.layer_exchanger": [[116, "module-fl4health.parameter_exchange.layer_exchanger", false]], "fl4health.parameter_exchange.packing_exchanger": [[117, "module-fl4health.parameter_exchange.packing_exchanger", false]], "fl4health.parameter_exchange.parameter_exchanger_base": [[118, "module-fl4health.parameter_exchange.parameter_exchanger_base", false]], "fl4health.parameter_exchange.parameter_packer": [[119, "module-fl4health.parameter_exchange.parameter_packer", false]], "fl4health.parameter_exchange.parameter_selection_criteria": [[120, "module-fl4health.parameter_exchange.parameter_selection_criteria", false]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[121, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[122, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false]], "fl4health.preprocessing": [[123, "module-fl4health.preprocessing", false]], "fl4health.preprocessing.autoencoders": [[124, "module-fl4health.preprocessing.autoencoders", false]], "fl4health.preprocessing.autoencoders.dim_reduction": [[125, "module-fl4health.preprocessing.autoencoders.dim_reduction", false]], "fl4health.preprocessing.autoencoders.loss": [[126, "module-fl4health.preprocessing.autoencoders.loss", false]], "fl4health.preprocessing.pca_preprocessor": [[127, "module-fl4health.preprocessing.pca_preprocessor", false]], "fl4health.preprocessing.warmed_up_module": [[128, "module-fl4health.preprocessing.warmed_up_module", false]], "fl4health.privacy": [[129, "module-fl4health.privacy", false]], "fl4health.privacy.fl_accountants": [[130, "module-fl4health.privacy.fl_accountants", false]], "fl4health.privacy.moments_accountant": [[131, "module-fl4health.privacy.moments_accountant", false]], "fl4health.reporting": [[132, "module-fl4health.reporting", false]], "fl4health.reporting.base_reporter": [[133, "module-fl4health.reporting.base_reporter", false]], "fl4health.reporting.json_reporter": [[134, "module-fl4health.reporting.json_reporter", false]], "fl4health.reporting.reports_manager": [[135, "module-fl4health.reporting.reports_manager", false]], "fl4health.reporting.wandb_reporter": [[136, "module-fl4health.reporting.wandb_reporter", false]], "fl4health.servers": [[137, "module-fl4health.servers", false]], "fl4health.servers.adaptive_constraint_servers": [[138, "module-fl4health.servers.adaptive_constraint_servers", false]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[139, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[140, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[141, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false]], "fl4health.servers.base_server": [[142, "module-fl4health.servers.base_server", false]], "fl4health.servers.client_level_dp_fed_avg_server": [[143, "module-fl4health.servers.client_level_dp_fed_avg_server", false]], "fl4health.servers.evaluate_server": [[144, "module-fl4health.servers.evaluate_server", false]], "fl4health.servers.fedpm_server": [[145, "module-fl4health.servers.fedpm_server", false]], "fl4health.servers.instance_level_dp_server": [[146, "module-fl4health.servers.instance_level_dp_server", false]], "fl4health.servers.model_merge_server": [[147, "module-fl4health.servers.model_merge_server", false]], "fl4health.servers.nnunet_server": [[148, "module-fl4health.servers.nnunet_server", false]], "fl4health.servers.polling": [[149, "module-fl4health.servers.polling", false]], "fl4health.servers.scaffold_server": [[150, "module-fl4health.servers.scaffold_server", false]], "fl4health.strategies": [[152, "module-fl4health.strategies", false]], "fl4health.strategies.aggregate_utils": [[153, "module-fl4health.strategies.aggregate_utils", false]], "fl4health.strategies.basic_fedavg": [[154, "module-fl4health.strategies.basic_fedavg", false]], "fl4health.strategies.client_dp_fedavgm": [[155, "module-fl4health.strategies.client_dp_fedavgm", false]], "fl4health.strategies.fedavg_dynamic_layer": [[156, "module-fl4health.strategies.fedavg_dynamic_layer", false]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[157, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[158, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false]], "fl4health.strategies.feddg_ga": [[159, "module-fl4health.strategies.feddg_ga", false]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[160, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false]], "fl4health.strategies.fedpca": [[161, "module-fl4health.strategies.fedpca", false]], "fl4health.strategies.fedpm": [[162, "module-fl4health.strategies.fedpm", false]], "fl4health.strategies.flash": [[163, "module-fl4health.strategies.flash", false]], "fl4health.strategies.model_merge_strategy": [[164, "module-fl4health.strategies.model_merge_strategy", false]], "fl4health.strategies.noisy_aggregate": [[165, "module-fl4health.strategies.noisy_aggregate", false]], "fl4health.strategies.scaffold": [[166, "module-fl4health.strategies.scaffold", false]], "fl4health.strategies.strategy_with_poll": [[167, "module-fl4health.strategies.strategy_with_poll", false]], "fl4health.utils": [[168, "module-fl4health.utils", false]], "fl4health.utils.client": [[169, "module-fl4health.utils.client", false]], "fl4health.utils.config": [[170, "module-fl4health.utils.config", false]], "fl4health.utils.data_generation": [[171, "module-fl4health.utils.data_generation", false]], "fl4health.utils.dataset": [[172, "module-fl4health.utils.dataset", false]], "fl4health.utils.dataset_converter": [[173, "module-fl4health.utils.dataset_converter", false]], "fl4health.utils.early_stopper": [[174, "module-fl4health.utils.early_stopper", false]], "fl4health.utils.functions": [[175, "module-fl4health.utils.functions", false]], "fl4health.utils.load_data": [[176, "module-fl4health.utils.load_data", false]], "fl4health.utils.logging": [[177, "module-fl4health.utils.logging", false]], "fl4health.utils.losses": [[178, "module-fl4health.utils.losses", false]], "fl4health.utils.metrics": [[179, "module-fl4health.utils.metrics", false]], "fl4health.utils.msd_dataset_sources": [[180, "module-fl4health.utils.msd_dataset_sources", false]], "fl4health.utils.nnunet_utils": [[181, "module-fl4health.utils.nnunet_utils", false]], "fl4health.utils.parameter_extraction": [[182, "module-fl4health.utils.parameter_extraction", false]], "fl4health.utils.partitioners": [[183, "module-fl4health.utils.partitioners", false]], "fl4health.utils.peft_parameter_extraction": [[184, "module-fl4health.utils.peft_parameter_extraction", false]], "fl4health.utils.privacy_utilities": [[185, "module-fl4health.utils.privacy_utilities", false]], "fl4health.utils.random": [[186, "module-fl4health.utils.random", false]], "fl4health.utils.sampler": [[187, "module-fl4health.utils.sampler", false]], "fl4health.utils.snapshotter": [[188, "module-fl4health.utils.snapshotter", false]], "fl4health.utils.typing": [[189, "module-fl4health.utils.typing", false]], "flash (class in fl4health.strategies.flash)": [[163, "fl4health.strategies.flash.Flash", false]], "flashclient (class in fl4health.clients.flash_client)": [[39, "fl4health.clients.flash_client.FlashClient", false]], "flatten() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten", false]], "flclientlevelaccountantfixedsamplingnoreplacement (class in fl4health.privacy.fl_accountants)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement", false]], "flclientlevelaccountantpoissonsampling (class in fl4health.privacy.fl_accountants)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling", false]], "flexibleclient (class in fl4health.clients.flexible.base)": [[41, "fl4health.clients.flexible.base.FlexibleClient", false]], "flexibleclientprotocol (class in fl4health.mixins.core_protocols)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol", false]], "flexibleclientprotocolpresetup (class in fl4health.mixins.core_protocols)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup", false]], "flinstancelevelaccountant (class in fl4health.privacy.fl_accountants)": [[130, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant", false]], "flserver (class in fl4health.servers.base_server)": [[142, "fl4health.servers.base_server.FlServer", false]], "flush() (streamtologger method)": [[181, "fl4health.utils.nnunet_utils.StreamToLogger.flush", false]], "fold_loss_dict_into_metrics() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.fold_loss_dict_into_metrics", false]], "form_and_solve_qp() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_and_solve_qp", false]], "form_h_u_delta_w_i() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_h_u_delta_w_i", false]], "form_kernel_samples_minus_expectation() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_kernel_samples_minus_expectation", false]], "forward() (abstractae method)": [[95, "fl4health.model_bases.autoencoders_base.AbstractAe.forward", false]], "forward() (apflmodule method)": [[94, "fl4health.model_bases.apfl_base.ApflModule.forward", false]], "forward() (basicae method)": [[95, "fl4health.model_bases.autoencoders_base.BasicAe.forward", false]], "forward() (bernoullisample static method)": [[175, "fl4health.utils.functions.BernoulliSample.forward", false]], "forward() (conditionalvae method)": [[95, "fl4health.model_bases.autoencoders_base.ConditionalVae.forward", false]], "forward() (cosinesimilarityloss method)": [[71, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.forward", false]], "forward() (cov method)": [[101, "fl4health.model_bases.gpfl_base.CoV.forward", false]], "forward() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.forward", false]], "forward() (ensemblemodel method)": [[96, "fl4health.model_bases.ensemble_base.EnsembleModel.forward", false]], "forward() (fedsimclrmodel method)": [[99, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.forward", false]], "forward() (fendamodelwithfeaturestate method)": [[100, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.forward", false]], "forward() (gce method)": [[101, "fl4health.model_bases.gpfl_base.Gce.forward", false]], "forward() (gpflbaseandheadmodules method)": [[101, "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules.forward", false]], "forward() (gpflmodel method)": [[101, "fl4health.model_bases.gpfl_base.GpflModel.forward", false]], "forward() (maskedconv1d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.forward", false]], "forward() (maskedconv2d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.forward", false]], "forward() (maskedconv3d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.forward", false]], "forward() (maskedconvtranspose1d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.forward", false]], "forward() (maskedconvtranspose2d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.forward", false]], "forward() (maskedconvtranspose3d method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.forward", false]], "forward() (maskedlayernorm method)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.forward", false]], "forward() (maskedlinear method)": [[105, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.forward", false]], "forward() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.forward", false]], "forward() (modellatentf method)": [[72, "fl4health.losses.deep_mmd_loss.ModelLatentF.forward", false]], "forward() (module2losswrapper method)": [[181, "fl4health.utils.nnunet_utils.Module2LossWrapper.forward", false]], "forward() (mooncontrastiveloss method)": [[70, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.forward", false]], "forward() (ntxentloss method)": [[70, "fl4health.losses.contrastive_loss.NtXentLoss.forward", false]], "forward() (parallelsplitheadmodule method)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.forward", false]], "forward() (parallelsplitmodel method)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.forward", false]], "forward() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.forward", false]], "forward() (perfclloss method)": [[75, "fl4health.losses.perfcl_loss.PerFclLoss.forward", false]], "forward() (perfclmodel method)": [[111, "fl4health.model_bases.perfcl_base.PerFclModel.forward", false]], "forward() (sequentiallysplitmodel method)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.forward", false]], "forward() (vaeloss method)": [[126, "fl4health.preprocessing.autoencoders.loss.VaeLoss.forward", false]], "forward() (variationalae method)": [[95, "fl4health.model_bases.autoencoders_base.VariationalAe.forward", false]], "forward() (weightdriftloss method)": [[76, "fl4health.losses.weight_drift_loss.WeightDriftLoss.forward", false]], "forward_hook() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.forward_hook", false]], "freeze_base_module() (fedrepmodel method)": [[98, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_base_module", false]], "freeze_head_module() (fedrepmodel method)": [[98, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_head_module", false]], "from_json() (tabularfeature static method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.from_json", false]], "from_pretrained() (maskedconv1d class method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.from_pretrained", false]], "from_pretrained() (maskedconv2d class method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.from_pretrained", false]], "from_pretrained() (maskedconv3d class method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose1d class method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose2d class method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose3d class method)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.from_pretrained", false]], "from_pretrained() (maskedlayernorm class method)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.from_pretrained", false]], "from_pretrained() (maskedlinear class method)": [[105, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.from_pretrained", false]], "fullparameterexchanger (class in fl4health.parameter_exchange.full_exchanger)": [[115, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger", false]], "fullparameterexchangerwithpacking (class in fl4health.parameter_exchange.packing_exchanger)": [[117, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking", false]], "functiontorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer", false]], "gaussian_noisy_aggregate_clipping_bits() (in module fl4health.strategies.noisy_aggregate)": [[165, "fl4health.strategies.noisy_aggregate.gaussian_noisy_aggregate_clipping_bits", false]], "gaussian_noisy_unweighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[165, "fl4health.strategies.noisy_aggregate.gaussian_noisy_unweighted_aggregate", false]], "gaussian_noisy_weighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[165, "fl4health.strategies.noisy_aggregate.gaussian_noisy_weighted_aggregate", false]], "gce (class in fl4health.model_bases.gpfl_base)": [[101, "fl4health.model_bases.gpfl_base.Gce", false]], "generate() (syntheticfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate", false]], "generate_client_tensors() (syntheticfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticiidfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticnoniidfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.generate_client_tensors", false]], "generate_hash() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.generate_hash", false]], "generate_hash() (in module fl4health.utils.random)": [[186, "fl4health.utils.random.generate_hash", false]], "generate_parameter_scores() (sparsecooparameterexchanger method)": [[122, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.generate_parameter_scores", false]], "get_all_model_parameters() (in module fl4health.utils.parameter_extraction)": [[182, "fl4health.utils.parameter_extraction.get_all_model_parameters", false]], "get_all_peft_parameters_from_model() (in module fl4health.utils.peft_parameter_extraction)": [[184, "fl4health.utils.peft_parameter_extraction.get_all_peft_parameters_from_model", false]], "get_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.get_attribute", false]], "get_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.get_attribute", false]], "get_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.get_attribute", false]], "get_best_vertex_for_objective_function() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.get_best_vertex_for_objective_function", false]], "get_cifar10_data_and_target_tensors() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.get_cifar10_data_and_target_tensors", false]], "get_client_specific_logs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_logs", false]], "get_client_specific_logs() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_logs", false]], "get_client_specific_reports() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_reports", false]], "get_client_specific_reports() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_reports", false]], "get_condition_vector_size() (autoencoderdatasetconverter method)": [[173, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_condition_vector_size", false]], "get_criterion() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_criterion", false]], "get_criterion() (flexibleclientprotocolpresetup method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_criterion", false]], "get_criterion() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_criterion", false]], "get_current_weight_step_size() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.get_current_weight_step_size", false]], "get_data_loader() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_data_loader", false]], "get_data_loaders() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_data_loaders", false]], "get_data_loaders() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_loaders", false]], "get_data_loaders() (flexibleclientprotocolpresetup method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_data_loaders", false]], "get_data_loaders() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_data_loaders", false]], "get_data_tensor() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_tensor", false]], "get_dataset_n_voxels() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.get_dataset_n_voxels", false]], "get_default_fill_value() (tabulartype static method)": [[68, "fl4health.feature_alignment.tabular_type.TabularType.get_default_fill_value", false]], "get_delta() (clientlevelaccountant method)": [[130, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_delta", false]], "get_delta() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_delta", false]], "get_delta() (flclientlevelaccountantpoissonsampling method)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_delta", false]], "get_delta() (flinstancelevelaccountant method)": [[130, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_delta", false]], "get_delta() (momentsaccountant method)": [[131, "fl4health.privacy.moments_accountant.MomentsAccountant.get_delta", false]], "get_dp_event() (fixedsamplingwithoutreplacement method)": [[131, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.get_dp_event", false]], "get_dp_event() (poissonsampling method)": [[131, "fl4health.privacy.moments_accountant.PoissonSampling.get_dp_event", false]], "get_dp_event() (samplingstrategy method)": [[131, "fl4health.privacy.moments_accountant.SamplingStrategy.get_dp_event", false]], "get_epsilon() (clientlevelaccountant method)": [[130, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantpoissonsampling method)": [[130, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_epsilon", false]], "get_epsilon() (flinstancelevelaccountant method)": [[130, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_epsilon", false]], "get_epsilon() (momentsaccountant method)": [[131, "fl4health.privacy.moments_accountant.MomentsAccountant.get_epsilon", false]], "get_extracted_features() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_extracted_features", false]], "get_feature_name() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_name", false]], "get_feature_type() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_type", false]], "get_fill_value() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_fill_value", false]], "get_global_model() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_global_model", false]], "get_global_model() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_global_model", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_global_model", false]], "get_global_model() (dittopersonalizedprotocol method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedProtocol.get_global_model", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.get_global_model", false]], "get_global_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_global_model", false]], "get_hierarchical_attr() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_hierarchical_attr", false]], "get_input_output_tensors() (syntheticiidfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.get_input_output_tensors", false]], "get_input_output_tensors() (syntheticnoniidfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.get_input_output_tensors", false]], "get_layers_to_transfer() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.get_layers_to_transfer", false]], "get_local_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_local_model", false]], "get_lr() (polylrschedulerwrapper method)": [[181, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.get_lr", false]], "get_lr_scheduler() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_lr_scheduler", false]], "get_lr_scheduler() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_lr_scheduler", false]], "get_matching_component() (warmedupmodule method)": [[128, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.get_matching_component", false]], "get_metadata() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata", false]], "get_metadata_dimension() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata_dimension", false]], "get_mnist_data_and_target_tensors() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.get_mnist_data_and_target_tensors", false]], "get_model() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_model", false]], "get_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_model", false]], "get_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_model", false]], "get_model() (flexibleclientprotocolpresetup method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_model", false]], "get_model() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.get_model", false]], "get_model() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_model", false]], "get_msd_dataset_enum() (in module fl4health.utils.msd_dataset_sources)": [[180, "fl4health.utils.msd_dataset_sources.get_msd_dataset_enum", false]], "get_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_optimizer", false]], "get_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_optimizer", false]], "get_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_optimizer", false]], "get_optimizer() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_optimizer", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_optimizer", false]], "get_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.get_optimizer", false]], "get_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_optimizer", false]], "get_optimizer() (flexibleclientprotocolpresetup method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_optimizer", false]], "get_optimizer() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.get_optimizer", false]], "get_optimizer() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_optimizer", false]], "get_parameter_exchanger() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false]], "get_parameter_exchanger() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedperclient method)": [[34, "fl4health.clients.fedper_client.FedPerClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (partialweightexchangeclient method)": [[51, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameter_exchanger", false]], "get_parameters() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameters", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameters", false]], "get_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameters", false]], "get_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameters", false]], "get_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_parameters", false]], "get_parameters() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_parameters", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_parameters", false]], "get_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameters", false]], "get_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_parameters", false]], "get_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_parameters", false]], "get_parameters() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameters", false]], "get_parameters() (numpyclientminimalprotocol method)": [[89, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.get_parameters", false]], "get_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameters", false]], "get_parameters() (partialweightexchangeclient method)": [[51, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameters", false]], "get_parameters() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameters", false]], "get_properties() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_properties", false]], "get_properties() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.get_properties", false]], "get_segs_from_probs() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.get_segs_from_probs", false]], "get_test_data_loader() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_test_data_loader", false]], "get_test_data_loader() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.get_test_data_loader", false]], "get_train_and_val_cifar10_datasets() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.get_train_and_val_cifar10_datasets", false]], "get_train_and_val_mnist_datasets() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.get_train_and_val_mnist_datasets", false]], "get_unpacking_function() (autoencoderdatasetconverter method)": [[173, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_unpacking_function", false]], "global_forward() (apflmodule method)": [[94, "fl4health.model_bases.apfl_base.ApflModule.global_forward", false]], "global_model (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.DittoPersonalizedProtocol.global_model", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.global_model", false]], "gpflbaseandheadmodules (class in fl4health.model_bases.gpfl_base)": [[101, "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules", false]], "gpflclient (class in fl4health.clients.gpfl_client)": [[42, "fl4health.clients.gpfl_client.GpflClient", false]], "gpflmodel (class in fl4health.model_bases.gpfl_base)": [[101, "fl4health.model_bases.gpfl_base.GpflModel", false]], "h1_mean_var_gram() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.h1_mean_var_gram", false]], "ham_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.ham_image_path_func", false]], "ham_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.ham_label_map_func", false]], "has_contrastive_loss() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_contrastive_loss", false]], "has_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_cosine_similarity_loss", false]], "has_perfcl_loss() (constrainedfendalosscontainer method)": [[73, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_perfcl_loss", false]], "head (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.HEAD", false]], "head_forward() (parallelsplitheadmodule method)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.head_forward", false]], "historysnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.HistorySnapshotter", false]], "infer_label_dim() (in module fl4health.metrics.utils)": [[86, "fl4health.metrics.utils.infer_label_dim", false]], "info (loglevel attribute)": [[189, "fl4health.utils.typing.LogLevel.INFO", false]], "initialize() (basereporter method)": [[133, "fl4health.reporting.base_reporter.BaseReporter.initialize", false]], "initialize() (filereporter method)": [[134, "fl4health.reporting.json_reporter.FileReporter.initialize", false]], "initialize() (reportsmanager method)": [[135, "fl4health.reporting.reports_manager.ReportsManager.initialize", false]], "initialize() (wandbreporter method)": [[132, "fl4health.reporting.WandBReporter.initialize", false], [136, "fl4health.reporting.wandb_reporter.WandBReporter.initialize", false]], "initialize_all_model_weights() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.initialize_all_model_weights", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.initialize_all_model_weights", false]], "initialize_all_model_weights() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.initialize_all_model_weights", false]], "initialize_control_variates() (scaffold method)": [[166, "fl4health.strategies.scaffold.Scaffold.initialize_control_variates", false]], "initialize_global_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.initialize_global_model", false]], "initialize_parameters() (modelmergestrategy method)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.initialize_parameters", false]], "initialize_server_model() (nnunetserver method)": [[148, "fl4health.servers.nnunet_server.NnunetServer.initialize_server_model", false]], "initialized (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.initialized", false]], "initialized (flexibleclientprotocolpresetup attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.initialized", false]], "instanceleveldpclient (class in fl4health.clients.instance_level_dp_client)": [[43, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient", false]], "instanceleveldpserver (class in fl4health.servers.instance_level_dp_server)": [[146, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer", false]], "invalidconfigerror": [[170, "fl4health.utils.config.InvalidConfigError", false]], "is_masked_module() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[104, "fl4health.model_bases.masked_layers.masked_layers_utils.is_masked_module", false]], "is_start_of_local_training() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.is_start_of_local_training", false]], "jsonreporter (class in fl4health.reporting)": [[132, "fl4health.reporting.JsonReporter", false]], "jsonreporter (class in fl4health.reporting.json_reporter)": [[134, "fl4health.reporting.json_reporter.JsonReporter", false]], "label_frequency() (in module fl4health.datasets.rxrx1.load_data)": [[57, "fl4health.datasets.rxrx1.load_data.label_frequency", false]], "labelbasedsampler (class in fl4health.utils.sampler)": [[187, "fl4health.utils.sampler.LabelBasedSampler", false]], "largest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.largest_final_magnitude_scores", false]], "largest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.largest_increase_in_magnitude_scores", false]], "largest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.largest_magnitude_change_scores", false]], "latestopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer", false]], "latesttorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer", false]], "layerexchangerwithexclusions (class in fl4health.parameter_exchange.layer_exchanger)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions", false]], "layernamesservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule", false]], "layers_to_exchange() (apflmodule method)": [[94, "fl4health.model_bases.apfl_base.ApflModule.layers_to_exchange", false]], "layers_to_exchange() (fendamodel method)": [[100, "fl4health.model_bases.fenda_base.FendaModel.layers_to_exchange", false]], "layers_to_exchange() (gpflmodel method)": [[101, "fl4health.model_bases.gpfl_base.GpflModel.layers_to_exchange", false]], "layers_to_exchange() (partiallayerexchangemodel method)": [[109, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel.layers_to_exchange", false]], "layers_to_exchange() (perfclmodel method)": [[111, "fl4health.model_bases.perfcl_base.PerFclModel.layers_to_exchange", false]], "layers_to_exchange() (sequentiallysplitexchangebasemodel method)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel.layers_to_exchange", false]], "layerselectionfunctionconstructor (class in fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor", false]], "load_attribute() (abstractsnapshotter method)": [[188, "fl4health.utils.snapshotter.AbstractSnapshotter.load_attribute", false]], "load_attribute() (bytessnapshotter method)": [[188, "fl4health.utils.snapshotter.BytesSnapshotter.load_attribute", false]], "load_attribute() (enumsnapshotter method)": [[188, "fl4health.utils.snapshotter.EnumSnapshotter.load_attribute", false]], "load_attribute() (historysnapshotter method)": [[188, "fl4health.utils.snapshotter.HistorySnapshotter.load_attribute", false]], "load_attribute() (lrschedulersnapshotter method)": [[188, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.load_attribute", false]], "load_attribute() (optimizersnapshotter method)": [[188, "fl4health.utils.snapshotter.OptimizerSnapshotter.load_attribute", false]], "load_attribute() (serializableobjectsnapshotter method)": [[188, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.load_attribute", false]], "load_attribute() (singletonsnapshotter method)": [[188, "fl4health.utils.snapshotter.SingletonSnapshotter.load_attribute", false]], "load_attribute() (stringsnapshotter method)": [[188, "fl4health.utils.snapshotter.StringSnapshotter.load_attribute", false]], "load_attribute() (torchmodulesnapshotter method)": [[188, "fl4health.utils.snapshotter.TorchModuleSnapshotter.load_attribute", false]], "load_autoencoder() (autoencoderprocessing method)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.load_autoencoder", false]], "load_best_checkpoint_into_model() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_best_checkpoint_into_model", false]], "load_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_checkpoint", false]], "load_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_checkpoint", false]], "load_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.load_checkpoint", false]], "load_cifar10_data() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.load_cifar10_data", false]], "load_cifar10_test_data() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.load_cifar10_test_data", false]], "load_config() (in module fl4health.utils.config)": [[170, "fl4health.utils.config.load_config", false]], "load_from_pretrained() (warmedupmodule method)": [[128, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.load_from_pretrained", false]], "load_image() (in module fl4health.datasets.rxrx1.preprocess)": [[58, "fl4health.datasets.rxrx1.preprocess.load_image", false]], "load_image() (in module fl4health.datasets.skin_cancer.load_data)": [[60, "fl4health.datasets.skin_cancer.load_data.load_image", false]], "load_mnist_data() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.load_mnist_data", false]], "load_mnist_test_data() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.load_mnist_test_data", false]], "load_model_checkpoint_to_parameters() (evaluateserver method)": [[144, "fl4health.servers.evaluate_server.EvaluateServer.load_model_checkpoint_to_parameters", false]], "load_msd_dataset() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.load_msd_dataset", false]], "load_pca_module() (pcapreprocessor method)": [[127, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.load_pca_module", false]], "load_pretrained_model() (fedsimclrmodel static method)": [[99, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.load_pretrained_model", false]], "load_rxrx1_data() (in module fl4health.datasets.rxrx1.load_data)": [[57, "fl4health.datasets.rxrx1.load_data.load_rxrx1_data", false]], "load_rxrx1_test_data() (in module fl4health.datasets.rxrx1.load_data)": [[57, "fl4health.datasets.rxrx1.load_data.load_rxrx1_test_data", false]], "load_skin_cancer_data() (in module fl4health.datasets.skin_cancer.load_data)": [[60, "fl4health.datasets.skin_cancer.load_data.load_skin_cancer_data", false]], "load_snapshot() (earlystopper method)": [[174, "fl4health.utils.early_stopper.EarlyStopper.load_snapshot", false]], "load_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_state", false]], "local_forward() (apflmodule method)": [[94, "fl4health.model_bases.apfl_base.ApflModule.local_forward", false]], "loggingmode (class in fl4health.utils.logging)": [[177, "fl4health.utils.logging.LoggingMode", false]], "loglevel (class in fl4health.utils.typing)": [[189, "fl4health.utils.typing.LogLevel", false]], "lookup() (gce method)": [[101, "fl4health.model_bases.gpfl_base.Gce.lookup", false]], "loss (fairnessmetrictype attribute)": [[159, "fl4health.strategies.feddg_ga.FairnessMetricType.LOSS", false]], "loss_for_adaptation (adaptivedriftconstrainedprotocol attribute)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.loss_for_adaptation", false]], "loss_for_adaptation (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.loss_for_adaptation", false]], "losses (class in fl4health.utils.losses)": [[178, "fl4health.utils.losses.Losses", false]], "lossmeter (class in fl4health.utils.losses)": [[178, "fl4health.utils.losses.LossMeter", false]], "lossmetertype (class in fl4health.utils.losses)": [[178, "fl4health.utils.losses.LossMeterType", false]], "lrschedulersnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.LRSchedulerSnapshotter", false]], "main() (in module fl4health.datasets.rxrx1.preprocess)": [[58, "fl4health.datasets.rxrx1.preprocess.main", false]], "make_dict_with_epochs_or_steps() (in module fl4health.utils.config)": [[170, "fl4health.utils.config.make_dict_with_epochs_or_steps", false]], "make_it_personal() (in module fl4health.mixins.personalized)": [[90, "fl4health.mixins.personalized.make_it_personal", false]], "map_label_index_tensor_to_one_hot() (in module fl4health.metrics.utils)": [[86, "fl4health.metrics.utils.map_label_index_tensor_to_one_hot", false]], "map_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[185, "fl4health.utils.privacy_utilities.map_model_to_opacus_model", false]], "mask_data() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.mask_data", false]], "maskedbatchnorm1d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm1d", false]], "maskedbatchnorm2d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm2d", false]], "maskedbatchnorm3d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm3d", false]], "maskedconv1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d", false]], "maskedconv2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d", false]], "maskedconv3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d", false]], "maskedconvtranspose1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d", false]], "maskedconvtranspose2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d", false]], "maskedconvtranspose3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[103, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d", false]], "maskedlayernorm (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[106, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm", false]], "maskedlinear (class in fl4health.model_bases.masked_layers.masked_linear)": [[105, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear", false]], "maybe_checkpoint() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_extract_fingerprint() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.maybe_extract_fingerprint", false]], "maybe_load_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_load_client_state", false]], "maybe_load_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_load_server_state", false]], "maybe_load_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_load_state", false]], "maybe_load_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_load_state", false]], "maybe_preprocess() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.maybe_preprocess", false]], "maybe_progress_bar() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.maybe_progress_bar", false]], "maybe_reshape() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.maybe_reshape", false]], "maybe_set_default_checkpoint_name() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_set_default_checkpoint_name", false]], "maybe_set_default_checkpoint_name() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_set_default_checkpoint_name", false]], "merge_metrics() (evaluateclient static method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.merge_metrics", false]], "merge_subspaces_qr() (fedpca method)": [[161, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_qr", false]], "merge_subspaces_svd() (fedpca method)": [[161, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_svd", false]], "merge_two_subspaces_qr() (fedpca method)": [[161, "fl4health.strategies.fedpca.FedPCA.merge_two_subspaces_qr", false]], "metric (class in fl4health.metrics.base_metrics)": [[78, "fl4health.metrics.base_metrics.Metric", false]], "metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.metric_aggregation", false]], "metricmanager (class in fl4health.metrics.metric_managers)": [[83, "fl4health.metrics.metric_managers.MetricManager", false]], "metricoutcome (in module fl4health.metrics.efficient_metrics_base)": [[81, "fl4health.metrics.efficient_metrics_base.MetricOutcome", false]], "metricprefix (class in fl4health.metrics.base_metrics)": [[78, "fl4health.metrics.base_metrics.MetricPrefix", false]], "minoritylabelbasedsampler (class in fl4health.utils.sampler)": [[187, "fl4health.utils.sampler.MinorityLabelBasedSampler", false]], "mkmmdloss (class in fl4health.losses.mkmmd_loss)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss", false]], "mmdu() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.mmdu", false]], "model (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.model", false]], "model (flexibleclientprotocol attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.model", false]], "modellatentf (class in fl4health.losses.deep_mmd_loss)": [[72, "fl4health.losses.deep_mmd_loss.ModelLatentF", false]], "modelmergeclient (class in fl4health.clients.model_merge_client)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient", false]], "modelmergeserver (class in fl4health.servers.model_merge_server)": [[147, "fl4health.servers.model_merge_server.ModelMergeServer", false]], "modelmergestrategy (class in fl4health.strategies.model_merge_strategy)": [[164, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy", false]], "modify_grad() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.modify_grad", false]], "modify_noise_multiplier() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.modify_noise_multiplier", false]], "module": [[8, "module-fl4health", false], [9, "module-fl4health.checkpointing", false], [10, "module-fl4health.checkpointing.checkpointer", false], [11, "module-fl4health.checkpointing.client_module", false], [12, "module-fl4health.checkpointing.opacus_checkpointer", false], [13, "module-fl4health.checkpointing.server_module", false], [14, "module-fl4health.checkpointing.state_checkpointer", false], [15, "module-fl4health.client_managers", false], [16, "module-fl4health.client_managers.base_sampling_manager", false], [17, "module-fl4health.client_managers.fixed_sampling_client_manager", false], [18, "module-fl4health.client_managers.fixed_without_replacement_manager", false], [19, "module-fl4health.client_managers.poisson_sampling_manager", false], [20, "module-fl4health.clients", false], [21, "module-fl4health.clients.adaptive_drift_constraint_client", false], [22, "module-fl4health.clients.apfl_client", false], [23, "module-fl4health.clients.basic_client", false], [24, "module-fl4health.clients.clipping_client", false], [25, "module-fl4health.clients.constrained_fenda_client", false], [26, "module-fl4health.clients.deep_mmd_clients", false], [27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false], [28, "module-fl4health.clients.ditto_client", false], [29, "module-fl4health.clients.ensemble_client", false], [30, "module-fl4health.clients.evaluate_client", false], [31, "module-fl4health.clients.fed_pca_client", false], [32, "module-fl4health.clients.fed_prox_client", false], [33, "module-fl4health.clients.fedbn_client", false], [34, "module-fl4health.clients.fedper_client", false], [35, "module-fl4health.clients.fedpm_client", false], [36, "module-fl4health.clients.fedrep_client", false], [37, "module-fl4health.clients.fenda_client", false], [38, "module-fl4health.clients.fenda_ditto_client", false], [39, "module-fl4health.clients.flash_client", false], [40, "module-fl4health.clients.flexible", false], [41, "module-fl4health.clients.flexible.base", false], [42, "module-fl4health.clients.gpfl_client", false], [43, "module-fl4health.clients.instance_level_dp_client", false], [44, "module-fl4health.clients.mkmmd_clients", false], [45, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false], [46, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false], [47, "module-fl4health.clients.model_merge_client", false], [48, "module-fl4health.clients.moon_client", false], [49, "module-fl4health.clients.mr_mtl_client", false], [50, "module-fl4health.clients.nnunet_client", false], [51, "module-fl4health.clients.partial_weight_exchange_client", false], [52, "module-fl4health.clients.perfcl_client", false], [53, "module-fl4health.clients.scaffold_client", false], [55, "module-fl4health.datasets", false], [56, "module-fl4health.datasets.rxrx1", false], [57, "module-fl4health.datasets.rxrx1.load_data", false], [58, "module-fl4health.datasets.rxrx1.preprocess", false], [59, "module-fl4health.datasets.skin_cancer", false], [60, "module-fl4health.datasets.skin_cancer.load_data", false], [61, "module-fl4health.datasets.skin_cancer.preprocess_skin", false], [62, "module-fl4health.feature_alignment", false], [63, "module-fl4health.feature_alignment.constants", false], [64, "module-fl4health.feature_alignment.string_columns_transformer", false], [67, "module-fl4health.feature_alignment.tabular_feature", false], [68, "module-fl4health.feature_alignment.tabular_type", false], [69, "module-fl4health.losses", false], [70, "module-fl4health.losses.contrastive_loss", false], [71, "module-fl4health.losses.cosine_similarity_loss", false], [72, "module-fl4health.losses.deep_mmd_loss", false], [73, "module-fl4health.losses.fenda_loss_config", false], [74, "module-fl4health.losses.mkmmd_loss", false], [75, "module-fl4health.losses.perfcl_loss", false], [76, "module-fl4health.losses.weight_drift_loss", false], [77, "module-fl4health.metrics", false], [78, "module-fl4health.metrics.base_metrics", false], [79, "module-fl4health.metrics.compound_metrics", false], [80, "module-fl4health.metrics.efficient_metrics", false], [81, "module-fl4health.metrics.efficient_metrics_base", false], [82, "module-fl4health.metrics.metric_aggregation", false], [83, "module-fl4health.metrics.metric_managers", false], [84, "module-fl4health.metrics.metrics", false], [85, "module-fl4health.metrics.metrics_utils", false], [86, "module-fl4health.metrics.utils", false], [87, "module-fl4health.mixins", false], [88, "module-fl4health.mixins.adaptive_drift_constrained", false], [89, "module-fl4health.mixins.core_protocols", false], [90, "module-fl4health.mixins.personalized", false], [91, "module-fl4health.mixins.personalized.ditto", false], [92, "module-fl4health.mixins.personalized.utils", false], [93, "module-fl4health.model_bases", false], [94, "module-fl4health.model_bases.apfl_base", false], [95, "module-fl4health.model_bases.autoencoders_base", false], [96, "module-fl4health.model_bases.ensemble_base", false], [97, "module-fl4health.model_bases.feature_extractor_buffer", false], [98, "module-fl4health.model_bases.fedrep_base", false], [99, "module-fl4health.model_bases.fedsimclr_base", false], [100, "module-fl4health.model_bases.fenda_base", false], [101, "module-fl4health.model_bases.gpfl_base", false], [102, "module-fl4health.model_bases.masked_layers", false], [103, "module-fl4health.model_bases.masked_layers.masked_conv", false], [104, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false], [105, "module-fl4health.model_bases.masked_layers.masked_linear", false], [106, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false], [107, "module-fl4health.model_bases.moon_base", false], [108, "module-fl4health.model_bases.parallel_split_models", false], [109, "module-fl4health.model_bases.partial_layer_exchange_model", false], [110, "module-fl4health.model_bases.pca", false], [111, "module-fl4health.model_bases.perfcl_base", false], [112, "module-fl4health.model_bases.sequential_split_models", false], [113, "module-fl4health.parameter_exchange", false], [114, "module-fl4health.parameter_exchange.fedpm_exchanger", false], [115, "module-fl4health.parameter_exchange.full_exchanger", false], [116, "module-fl4health.parameter_exchange.layer_exchanger", false], [117, "module-fl4health.parameter_exchange.packing_exchanger", false], [118, "module-fl4health.parameter_exchange.parameter_exchanger_base", false], [119, "module-fl4health.parameter_exchange.parameter_packer", false], [120, "module-fl4health.parameter_exchange.parameter_selection_criteria", false], [121, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false], [122, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false], [123, "module-fl4health.preprocessing", false], [124, "module-fl4health.preprocessing.autoencoders", false], [125, "module-fl4health.preprocessing.autoencoders.dim_reduction", false], [126, "module-fl4health.preprocessing.autoencoders.loss", false], [127, "module-fl4health.preprocessing.pca_preprocessor", false], [128, "module-fl4health.preprocessing.warmed_up_module", false], [129, "module-fl4health.privacy", false], [130, "module-fl4health.privacy.fl_accountants", false], [131, "module-fl4health.privacy.moments_accountant", false], [132, "module-fl4health.reporting", false], [133, "module-fl4health.reporting.base_reporter", false], [134, "module-fl4health.reporting.json_reporter", false], [135, "module-fl4health.reporting.reports_manager", false], [136, "module-fl4health.reporting.wandb_reporter", false], [137, "module-fl4health.servers", false], [138, "module-fl4health.servers.adaptive_constraint_servers", false], [139, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false], [140, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false], [141, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false], [142, "module-fl4health.servers.base_server", false], [143, "module-fl4health.servers.client_level_dp_fed_avg_server", false], [144, "module-fl4health.servers.evaluate_server", false], [145, "module-fl4health.servers.fedpm_server", false], [146, "module-fl4health.servers.instance_level_dp_server", false], [147, "module-fl4health.servers.model_merge_server", false], [148, "module-fl4health.servers.nnunet_server", false], [149, "module-fl4health.servers.polling", false], [150, "module-fl4health.servers.scaffold_server", false], [152, "module-fl4health.strategies", false], [153, "module-fl4health.strategies.aggregate_utils", false], [154, "module-fl4health.strategies.basic_fedavg", false], [155, "module-fl4health.strategies.client_dp_fedavgm", false], [156, "module-fl4health.strategies.fedavg_dynamic_layer", false], [157, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false], [158, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false], [159, "module-fl4health.strategies.feddg_ga", false], [160, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false], [161, "module-fl4health.strategies.fedpca", false], [162, "module-fl4health.strategies.fedpm", false], [163, "module-fl4health.strategies.flash", false], [164, "module-fl4health.strategies.model_merge_strategy", false], [165, "module-fl4health.strategies.noisy_aggregate", false], [166, "module-fl4health.strategies.scaffold", false], [167, "module-fl4health.strategies.strategy_with_poll", false], [168, "module-fl4health.utils", false], [169, "module-fl4health.utils.client", false], [170, "module-fl4health.utils.config", false], [171, "module-fl4health.utils.data_generation", false], [172, "module-fl4health.utils.dataset", false], [173, "module-fl4health.utils.dataset_converter", false], [174, "module-fl4health.utils.early_stopper", false], [175, "module-fl4health.utils.functions", false], [176, "module-fl4health.utils.load_data", false], [177, "module-fl4health.utils.logging", false], [178, "module-fl4health.utils.losses", false], [179, "module-fl4health.utils.metrics", false], [180, "module-fl4health.utils.msd_dataset_sources", false], [181, "module-fl4health.utils.nnunet_utils", false], [182, "module-fl4health.utils.parameter_extraction", false], [183, "module-fl4health.utils.partitioners", false], [184, "module-fl4health.utils.peft_parameter_extraction", false], [185, "module-fl4health.utils.privacy_utilities", false], [186, "module-fl4health.utils.random", false], [187, "module-fl4health.utils.sampler", false], [188, "module-fl4health.utils.snapshotter", false], [189, "module-fl4health.utils.typing", false]], "module2losswrapper (class in fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.Module2LossWrapper", false]], "momentsaccountant (class in fl4health.privacy.moments_accountant)": [[131, "fl4health.privacy.moments_accountant.MomentsAccountant", false]], "moonclient (class in fl4health.clients.moon_client)": [[48, "fl4health.clients.moon_client.MoonClient", false]], "mooncontrastiveloss (class in fl4health.losses.contrastive_loss)": [[70, "fl4health.losses.contrastive_loss.MoonContrastiveLoss", false]], "mooncontrastivelosscontainer (class in fl4health.losses.fenda_loss_config)": [[73, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer", false]], "moonmodel (class in fl4health.model_bases.moon_base)": [[107, "fl4health.model_bases.moon_base.MoonModel", false]], "move_data_to_device() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.move_data_to_device", false]], "mrmtlclient (class in fl4health.clients.mr_mtl_client)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient", false]], "mrmtlmkmmdclient (class in fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient", false]], "mrmtlserver (class in fl4health.servers.adaptive_constraint_servers.mrmtl_server)": [[141, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer", false]], "msddataset (class in fl4health.utils.msd_dataset_sources)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset", false]], "multiclassdice (class in fl4health.metrics.efficient_metrics)": [[80, "fl4health.metrics.efficient_metrics.MultiClassDice", false]], "multiclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[81, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric", false]], "narrow_dict_type() (in module fl4health.utils.config)": [[170, "fl4health.utils.config.narrow_dict_type", false]], "narrow_dict_type_and_set_attribute() (in module fl4health.utils.config)": [[170, "fl4health.utils.config.narrow_dict_type_and_set_attribute", false]], "nnunetclient (class in fl4health.clients.nnunet_client)": [[50, "fl4health.clients.nnunet_client.NnunetClient", false]], "nnunetconfig (class in fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.NnunetConfig", false]], "nnunetdataloaderwrapper (class in fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper", false]], "nnunetserver (class in fl4health.servers.nnunet_server)": [[148, "fl4health.servers.nnunet_server.NnunetServer", false]], "nnunetservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule", false]], "nnunetserverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer", false]], "normalize() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.normalize", false]], "normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.normalize_metrics", false]], "notset (loglevel attribute)": [[189, "fl4health.utils.typing.LogLevel.NOTSET", false]], "ntxentloss (class in fl4health.losses.contrastive_loss)": [[70, "fl4health.losses.contrastive_loss.NtXentLoss", false]], "numeric (tabulartype attribute)": [[68, "fl4health.feature_alignment.tabular_type.TabularType.NUMERIC", false]], "numpyclientminimalprotocol (class in fl4health.mixins.core_protocols)": [[89, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol", false]], "numpyclippingclient (class in fl4health.clients.clipping_client)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient", false]], "one_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset.one_layer_map_inputs_to_outputs", false]], "opacusbasicfedavg (class in fl4health.strategies.basic_fedavg)": [[154, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg", false]], "opacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer", false]], "opacusscaffold (class in fl4health.strategies.scaffold)": [[166, "fl4health.strategies.scaffold.OpacusScaffold", false]], "opacusservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule", false]], "optimize_betas() (mkmmdloss method)": [[74, "fl4health.losses.mkmmd_loss.MkMmdLoss.optimize_betas", false]], "optimizer_keys (dittopersonalizedmixin property)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.optimizer_keys", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.optimizer_keys", false]], "optimizer_keys (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.DittoPersonalizedProtocol.optimizer_keys", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizer_keys", false]], "optimizers (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizers", false]], "optimizers (flexibleclientprotocol attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.optimizers", false]], "optimizersnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.OptimizerSnapshotter", false]], "ordinal (tabulartype attribute)": [[68, "fl4health.feature_alignment.tabular_type.TabularType.ORDINAL", false]], "pack_parameters() (fullparameterexchangerwithpacking method)": [[117, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.pack_parameters", false]], "pack_parameters() (parameterpacker method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.pack_parameters", false]], "pack_parameters() (parameterpackeradaptiveconstraint method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.pack_parameters", false]], "pack_parameters() (parameterpackerwithclippingbit method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.pack_parameters", false]], "pack_parameters() (parameterpackerwithcontrolvariates method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.pack_parameters", false]], "pack_parameters() (parameterpackerwithlayernames method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.pack_parameters", false]], "pack_parameters() (partialparameterexchanger method)": [[121, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.pack_parameters", false]], "pack_parameters() (sparsecooparameterpacker method)": [[119, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.pack_parameters", false]], "packingservercheckpointandandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule", false]], "pad_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.pad_image_path_func", false]], "pad_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.pad_label_map_func", false]], "pairwise_distance_squared() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.pairwise_distance_squared", false]], "parallel_output_join() (parallelsplitheadmodule method)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.parallel_output_join", false]], "parallelfeaturejoinmode (class in fl4health.model_bases.parallel_split_models)": [[108, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode", false]], "parallelsplitheadmodule (class in fl4health.model_bases.parallel_split_models)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule", false]], "parallelsplitmodel (class in fl4health.model_bases.parallel_split_models)": [[108, "fl4health.model_bases.parallel_split_models.ParallelSplitModel", false]], "parameter_exchanger (adaptivedriftconstrainedprotocol attribute)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.parameter_exchanger", false]], "parameter_exchanger (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.parameter_exchanger", false]], "parameterexchanger (class in fl4health.parameter_exchange.parameter_exchanger_base)": [[118, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger", false]], "parameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPacker", false]], "parameterpackeradaptiveconstraint (class in fl4health.parameter_exchange.parameter_packer)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint", false]], "parameterpackerwithclippingbit (class in fl4health.parameter_exchange.parameter_packer)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit", false]], "parameterpackerwithcontrolvariates (class in fl4health.parameter_exchange.parameter_packer)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates", false]], "parameterpackerwithlayernames (class in fl4health.parameter_exchange.parameter_packer)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames", false]], "partiallayerexchangemodel (class in fl4health.model_bases.partial_layer_exchange_model)": [[109, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel", false]], "partialparameterexchanger (class in fl4health.parameter_exchange.partial_parameter_exchanger)": [[121, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger", false]], "partialweightexchangeclient (class in fl4health.clients.partial_weight_exchange_client)": [[51, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient", false]], "partition_dataset() (dirichletlabelbasedallocation method)": [[183, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_dataset", false]], "partition_label_indices() (dirichletlabelbasedallocation method)": [[183, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_label_indices", false]], "pcamodule (class in fl4health.model_bases.pca)": [[110, "fl4health.model_bases.pca.PcaModule", false]], "pcapreprocessor (class in fl4health.preprocessing.pca_preprocessor)": [[127, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor", false]], "penalty_loss_function (adaptivedriftconstrainedprotocol attribute)": [[88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.penalty_loss_function", false]], "penalty_loss_function (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.penalty_loss_function", false]], "perfclclient (class in fl4health.clients.perfcl_client)": [[52, "fl4health.clients.perfcl_client.PerFclClient", false]], "perfclloss (class in fl4health.losses.perfcl_loss)": [[75, "fl4health.losses.perfcl_loss.PerFclLoss", false]], "perfcllosscontainer (class in fl4health.losses.fenda_loss_config)": [[73, "fl4health.losses.fenda_loss_config.PerFclLossContainer", false]], "perfclmodel (class in fl4health.model_bases.perfcl_base)": [[111, "fl4health.model_bases.perfcl_base.PerFclModel", false]], "personalizedmode (class in fl4health.mixins.personalized)": [[90, "fl4health.mixins.personalized.PersonalizedMode", false]], "poissonsampling (class in fl4health.privacy.moments_accountant)": [[131, "fl4health.privacy.moments_accountant.PoissonSampling", false]], "poissonsamplingclientmanager (class in fl4health.client_managers.poisson_sampling_manager)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager", false]], "poll_client() (in module fl4health.servers.polling)": [[149, "fl4health.servers.polling.poll_client", false]], "poll_clients() (in module fl4health.servers.polling)": [[149, "fl4health.servers.polling.poll_clients", false]], "poll_clients_for_sample_counts() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.poll_clients_for_sample_counts", false]], "polylrschedulerwrapper (class in fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper", false]], "post_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.POST_AGGREGATION", false]], "pre_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.PRE_AGGREGATION", false]], "predict() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.predict", false]], "predict() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.predict", false]], "predict() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.predict", false]], "predict() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.predict", false]], "predict() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.predict", false]], "predict() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.predict", false]], "predict() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.predict", false]], "predict() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.predict", false]], "predict() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.predict", false]], "predict() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.predict", false]], "predict_with_model() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.predict_with_model", false]], "predict_with_model() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.predict_with_model", false]], "prepare_data_forward() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.prepare_data_forward", false]], "prepare_loss_arg() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.prepare_loss_arg", false]], "preprocess_derm7pt() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_derm7pt", false]], "preprocess_ham10000() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_ham10000", false]], "preprocess_isic_2019() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_isic_2019", false]], "preprocess_pad_ufes_20() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_pad_ufes_20", false]], "privacy_validate_and_fix_modules() (in module fl4health.utils.privacy_utilities)": [[185, "fl4health.utils.privacy_utilities.privacy_validate_and_fix_modules", false]], "process_and_check_validation_steps() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.process_and_check_validation_steps", false]], "process_client_data() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.process_client_data", false]], "process_config() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.process_config", false]], "process_config() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.process_config", false]], "process_data() (in module fl4health.datasets.rxrx1.preprocess)": [[58, "fl4health.datasets.rxrx1.preprocess.process_data", false]], "process_fed_rep_config() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.process_fed_rep_config", false]], "project_back() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.project_back", false]], "project_lower_dim() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.project_lower_dim", false]], "pseudo_sort_scoring_function() (in module fl4health.utils.functions)": [[175, "fl4health.utils.functions.pseudo_sort_scoring_function", false]], "pull_parameters() (dynamiclayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.pull_parameters", false]], "pull_parameters() (fedpmexchanger method)": [[114, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.pull_parameters", false]], "pull_parameters() (fixedlayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.pull_parameters", false]], "pull_parameters() (fullparameterexchanger method)": [[115, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.pull_parameters", false]], "pull_parameters() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.pull_parameters", false]], "pull_parameters() (parameterexchanger method)": [[118, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.pull_parameters", false]], "pull_parameters() (sparsecooparameterexchanger method)": [[122, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.pull_parameters", false]], "push_parameters() (dynamiclayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.push_parameters", false]], "push_parameters() (fixedlayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.push_parameters", false]], "push_parameters() (fullparameterexchanger method)": [[115, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.push_parameters", false]], "push_parameters() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.push_parameters", false]], "push_parameters() (parameterexchanger method)": [[118, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.push_parameters", false]], "push_parameters() (sparsecooparameterexchanger method)": [[122, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.push_parameters", false]], "reduce_dimension() (pcapreprocessor method)": [[127, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.reduce_dimension", false]], "reload_modules() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.reload_modules", false]], "remove_hooks() (featureextractorbuffer method)": [[97, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.remove_hooks", false]], "report() (basereporter method)": [[133, "fl4health.reporting.base_reporter.BaseReporter.report", false]], "report() (filereporter method)": [[134, "fl4health.reporting.json_reporter.FileReporter.report", false]], "report() (reportsmanager method)": [[135, "fl4health.reporting.reports_manager.ReportsManager.report", false]], "report() (wandbreporter method)": [[132, "fl4health.reporting.WandBReporter.report", false], [136, "fl4health.reporting.wandb_reporter.WandBReporter.report", false]], "report_centralized_eval() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.report_centralized_eval", false]], "reportsmanager (class in fl4health.reporting.reports_manager)": [[135, "fl4health.reporting.reports_manager.ReportsManager", false]], "representation (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.REPRESENTATION", false]], "reset() (metricmanager method)": [[83, "fl4health.metrics.metric_managers.MetricManager.reset", false]], "reset() (nnunetdataloaderwrapper method)": [[181, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.reset", false]], "reset_beta_priors() (fedpm method)": [[162, "fl4health.strategies.fedpm.FedPm.reset_beta_priors", false]], "reset_sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.reset_sample", false]], "restore_random_state() (in module fl4health.utils.random)": [[186, "fl4health.utils.random.restore_random_state", false]], "rocauc (class in fl4health.metrics)": [[77, "fl4health.metrics.RocAuc", false]], "rocauc (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.RocAuc", false]], "round (wandbsteptype attribute)": [[132, "fl4health.reporting.WandBStepType.ROUND", false], [136, "fl4health.reporting.wandb_reporter.WandBStepType.ROUND", false]], "safe_global_model() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.safe_global_model", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.safe_global_model", false]], "safe_global_model() (dittopersonalizedprotocol method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedProtocol.safe_global_model", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.safe_global_model", false]], "sample() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample", false]], "sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.sample", false]], "sample_all() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_all", false]], "sample_fraction() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_fraction", false]], "sample_fraction() (fixedsamplingbyfractionclientmanager method)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager.sample_fraction", false]], "sample_fraction() (poissonsamplingclientmanager method)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager.sample_fraction", false]], "sampling() (conditionalvae method)": [[95, "fl4health.model_bases.autoencoders_base.ConditionalVae.sampling", false]], "sampling() (variationalae method)": [[95, "fl4health.model_bases.autoencoders_base.VariationalAe.sampling", false]], "samplingstrategy (class in fl4health.privacy.moments_accountant)": [[131, "fl4health.privacy.moments_accountant.SamplingStrategy", false]], "save_attribute() (abstractsnapshotter method)": [[188, "fl4health.utils.snapshotter.AbstractSnapshotter.save_attribute", false]], "save_attribute() (bytessnapshotter method)": [[188, "fl4health.utils.snapshotter.BytesSnapshotter.save_attribute", false]], "save_attribute() (enumsnapshotter method)": [[188, "fl4health.utils.snapshotter.EnumSnapshotter.save_attribute", false]], "save_attribute() (historysnapshotter method)": [[188, "fl4health.utils.snapshotter.HistorySnapshotter.save_attribute", false]], "save_attribute() (lrschedulersnapshotter method)": [[188, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.save_attribute", false]], "save_attribute() (optimizersnapshotter method)": [[188, "fl4health.utils.snapshotter.OptimizerSnapshotter.save_attribute", false]], "save_attribute() (serializableobjectsnapshotter method)": [[188, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.save_attribute", false]], "save_attribute() (singletonsnapshotter method)": [[188, "fl4health.utils.snapshotter.SingletonSnapshotter.save_attribute", false]], "save_attribute() (stringsnapshotter method)": [[188, "fl4health.utils.snapshotter.StringSnapshotter.save_attribute", false]], "save_attribute() (torchmodulesnapshotter method)": [[188, "fl4health.utils.snapshotter.TorchModuleSnapshotter.save_attribute", false]], "save_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_checkpoint", false]], "save_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.save_client_state", false]], "save_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.save_model", false]], "save_random_state() (in module fl4health.utils.random)": [[186, "fl4health.utils.random.save_random_state", false]], "save_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.save_server_state", false]], "save_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.save_state", false]], "save_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.save_state", false]], "save_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_state", false]], "save_to_json() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[61, "fl4health.datasets.skin_cancer.preprocess_skin.save_to_json", false]], "save_to_pkl() (in module fl4health.datasets.rxrx1.preprocess)": [[58, "fl4health.datasets.rxrx1.preprocess.save_to_pkl", false]], "scaffold (class in fl4health.strategies.scaffold)": [[166, "fl4health.strategies.scaffold.Scaffold", false]], "scaffoldclient (class in fl4health.clients.scaffold_client)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient", false]], "scaffoldserver (class in fl4health.servers.scaffold_server)": [[150, "fl4health.servers.scaffold_server.ScaffoldServer", false]], "scaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule", false]], "select_by_indices() (in module fl4health.utils.dataset)": [[172, "fl4health.utils.dataset.select_by_indices", false]], "select_by_percentage() (layerselectionfunctionconstructor method)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_percentage", false]], "select_by_threshold() (layerselectionfunctionconstructor method)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_threshold", false]], "select_layers_by_percentage() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_percentage", false]], "select_layers_by_threshold() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_threshold", false]], "select_parameters() (dynamiclayerexchanger method)": [[116, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.select_parameters", false]], "select_parameters() (partialparameterexchanger method)": [[121, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.select_parameters", false]], "select_parameters() (sparsecooparameterexchanger method)": [[122, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.select_parameters", false]], "select_scores_and_sample_masks() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.select_scores_and_sample_masks", false]], "select_zeroeth_element() (in module fl4health.utils.functions)": [[175, "fl4health.utils.functions.select_zeroeth_element", false]], "sequential_forward() (moonmodel method)": [[107, "fl4health.model_bases.moon_base.MoonModel.sequential_forward", false]], "sequential_forward() (sequentiallysplitmodel method)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.sequential_forward", false]], "sequentiallysplitexchangebasemodel (class in fl4health.model_bases.sequential_split_models)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel", false]], "sequentiallysplitmodel (class in fl4health.model_bases.sequential_split_models)": [[112, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel", false]], "serializableobjectsnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.SerializableObjectSnapshotter", false]], "serverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer", false]], "set_all_random_seeds() (in module fl4health.utils.random)": [[186, "fl4health.utils.random.set_all_random_seeds", false]], "set_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.set_attribute", false]], "set_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.set_attribute", false]], "set_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_attribute", false]], "set_checkpoint_path() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_checkpoint_path", false]], "set_data_mean() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.set_data_mean", false]], "set_fit_request() (textcolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_fit_request", false]], "set_fit_request() (textmulticolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_fit_request", false]], "set_initial_global_tensors() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_initial_global_tensors", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedprotocol method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedProtocol.set_initial_global_tensors", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.set_initial_global_tensors", false]], "set_initial_global_tensors() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_initial_global_tensors", false]], "set_nnunet_env() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.set_nnunet_env", false]], "set_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.set_optimizer", false]], "set_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_optimizer", false]], "set_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_optimizer", false]], "set_optimizer() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_optimizer", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_optimizer", false]], "set_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.set_optimizer", false]], "set_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.set_optimizer", false]], "set_optimizer() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.set_optimizer", false]], "set_pack_losses_with_val_metrics() (in module fl4health.utils.client)": [[169, "fl4health.utils.client.set_pack_losses_with_val_metrics", false]], "set_parameters() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.set_parameters", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.set_parameters", false]], "set_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.set_parameters", false]], "set_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_parameters", false]], "set_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_parameters", false]], "set_parameters() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_parameters", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_parameters", false]], "set_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.set_parameters", false]], "set_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.set_parameters", false]], "set_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_parameters", false]], "set_parameters() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.set_parameters", false]], "set_parameters() (mrmtlclient method)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient.set_parameters", false]], "set_parameters() (numpyclientminimalprotocol method)": [[89, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.set_parameters", false]], "set_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.set_parameters", false]], "set_parameters() (partialweightexchangeclient method)": [[51, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.set_parameters", false]], "set_parameters() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.set_parameters", false]], "set_principal_components() (pcamodule method)": [[110, "fl4health.model_bases.pca.PcaModule.set_principal_components", false]], "set_transform_request() (textcolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_transform_request", false]], "set_transform_request() (textmulticolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_transform_request", false]], "setup_client() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.setup_client", false]], "setup_client() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.setup_client", false]], "setup_client() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.setup_client", false]], "setup_client() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.setup_client", false]], "setup_client() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.setup_client", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.setup_client", false]], "setup_client() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.setup_client", false]], "setup_client() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.setup_client", false]], "setup_client() (fedbnclient method)": [[33, "fl4health.clients.fedbn_client.FedBnClient.setup_client", false]], "setup_client() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.setup_client", false]], "setup_client() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.setup_client", false]], "setup_client() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.setup_client", false]], "setup_client() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.setup_client", false]], "setup_client() (flexibleclientprotocolpresetup method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.setup_client", false]], "setup_client() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.setup_client", false]], "setup_client() (instanceleveldpclient method)": [[43, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_client", false]], "setup_client() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.setup_client", false]], "setup_client() (mrmtlclient method)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient.setup_client", false]], "setup_client() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.setup_client", false]], "setup_client() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.setup_client", false]], "setup_client() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.setup_client", false]], "setup_client() (partialweightexchangeclient method)": [[51, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.setup_client", false]], "setup_client() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.setup_client", false]], "setup_context() (bernoullisample static method)": [[175, "fl4health.utils.functions.BernoulliSample.setup_context", false]], "setup_opacus_objects() (instanceleveldpclient method)": [[43, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_opacus_objects", false]], "setup_privacy_accountant() (clientleveldpfedavgserver method)": [[143, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.setup_privacy_accountant", false]], "setup_privacy_accountant() (instanceleveldpserver method)": [[146, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.setup_privacy_accountant", false]], "should_layer_be_excluded() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_layer_be_excluded", false]], "should_module_be_excluded() (layerexchangerwithexclusions method)": [[116, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_module_be_excluded", false]], "should_stop() (earlystopper method)": [[174, "fl4health.utils.early_stopper.EarlyStopper.should_stop", false]], "shutdown() (basereporter method)": [[133, "fl4health.reporting.base_reporter.BaseReporter.shutdown", false]], "shutdown() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.shutdown", false]], "shutdown() (filereporter method)": [[134, "fl4health.reporting.json_reporter.FileReporter.shutdown", false]], "shutdown() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.shutdown", false]], "shutdown() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.shutdown", false]], "shutdown() (nnunetdataloaderwrapper method)": [[181, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.shutdown", false]], "shutdown() (reportsmanager method)": [[135, "fl4health.reporting.reports_manager.ReportsManager.shutdown", false]], "shutdown() (wandbreporter method)": [[132, "fl4health.reporting.WandBReporter.shutdown", false], [136, "fl4health.reporting.wandb_reporter.WandBReporter.shutdown", false]], "shutdown_dataloader() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.shutdown_dataloader", false]], "sigmoid_inverse() (in module fl4health.utils.functions)": [[175, "fl4health.utils.functions.sigmoid_inverse", false]], "signal_for_type() (fairnessmetrictype class method)": [[159, "fl4health.strategies.feddg_ga.FairnessMetricType.signal_for_type", false]], "signalfortypeerror": [[159, "fl4health.strategies.feddg_ga.SignalForTypeError", false]], "simplemetric (class in fl4health.metrics)": [[77, "fl4health.metrics.SimpleMetric", false]], "simplemetric (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.SimpleMetric", false]], "singletonsnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.SingletonSnapshotter", false]], "smallest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_final_magnitude_scores", false]], "smallest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_increase_in_magnitude_scores", false]], "smallest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[120, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_magnitude_change_scores", false]], "sparsecooparameterexchanger (class in fl4health.parameter_exchange.sparse_coo_parameter_exchanger)": [[122, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger", false]], "sparsecooparameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[119, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker", false]], "sparsecooservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule", false]], "split_data_and_targets() (in module fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.split_data_and_targets", false]], "split_model_weights_and_clipping_bits() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.split_model_weights_and_clipping_bits", false]], "ssltensordataset (class in fl4health.utils.dataset)": [[172, "fl4health.utils.dataset.SslTensorDataset", false]], "standard_normal_kl_divergence_loss() (vaeloss method)": [[126, "fl4health.preprocessing.autoencoders.loss.VaeLoss.standard_normal_kl_divergence_loss", false]], "start_run() (wandbreporter method)": [[132, "fl4health.reporting.WandBReporter.start_run", false], [136, "fl4health.reporting.wandb_reporter.WandBReporter.start_run", false]], "statecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer", false]], "step (wandbsteptype attribute)": [[132, "fl4health.reporting.WandBStepType.STEP", false], [136, "fl4health.reporting.wandb_reporter.WandBStepType.STEP", false]], "strategywithpolling (class in fl4health.strategies.strategy_with_poll)": [[167, "fl4health.strategies.strategy_with_poll.StrategyWithPolling", false]], "streamtologger (class in fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.StreamToLogger", false]], "string (tabulartype attribute)": [[68, "fl4health.feature_alignment.tabular_type.TabularType.STRING", false]], "stringsnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.StringSnapshotter", false]], "subsample() (dirichletlabelbasedsampler method)": [[187, "fl4health.utils.sampler.DirichletLabelBasedSampler.subsample", false]], "subsample() (labelbasedsampler method)": [[187, "fl4health.utils.sampler.LabelBasedSampler.subsample", false]], "subsample() (minoritylabelbasedsampler method)": [[187, "fl4health.utils.sampler.MinorityLabelBasedSampler.subsample", false]], "sum (parallelfeaturejoinmode attribute)": [[108, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.SUM", false]], "syntheticdataset (class in fl4health.utils.dataset)": [[172, "fl4health.utils.dataset.SyntheticDataset", false]], "syntheticfedproxdataset (class in fl4health.utils.data_generation)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset", false]], "syntheticiidfedproxdataset (class in fl4health.utils.data_generation)": [[171, "fl4health.utils.data_generation.SyntheticIidFedProxDataset", false]], "syntheticnoniidfedproxdataset (class in fl4health.utils.data_generation)": [[171, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset", false]], "tabularfeature (class in fl4health.feature_alignment.tabular_feature)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature", false]], "tabulartype (class in fl4health.feature_alignment.tabular_type)": [[68, "fl4health.feature_alignment.tabular_type.TabularType", false]], "task01_braintumour (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK01_BRAINTUMOUR", false]], "task02_heart (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK02_HEART", false]], "task03_liver (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK03_LIVER", false]], "task04_hippocampus (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK04_HIPPOCAMPUS", false]], "task05_prostate (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK05_PROSTATE", false]], "task06_lung (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK06_LUNG", false]], "task07_pancreas (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK07_PANCREAS", false]], "task08_hepaticvessel (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK08_HEPATICVESSEL", false]], "task09_spleen (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK09_SPLEEN", false]], "task10_colon (msddataset attribute)": [[180, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK10_COLON", false]], "tensordataset (class in fl4health.utils.dataset)": [[172, "fl4health.utils.dataset.TensorDataset", false]], "test (loggingmode attribute)": [[177, "fl4health.utils.logging.LoggingMode.TEST", false]], "test_loader (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.test_loader", false]], "test_loader (flexibleclientprotocol attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.test_loader", false]], "test_prefix (metricprefix attribute)": [[78, "fl4health.metrics.base_metrics.MetricPrefix.TEST_PREFIX", false]], "textcolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer", false]], "textmulticolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer", false]], "threshold_tensor() (in module fl4health.metrics.metrics_utils)": [[85, "fl4health.metrics.metrics_utils.threshold_tensor", false]], "to_json() (tabularfeature method)": [[67, "fl4health.feature_alignment.tabular_feature.TabularFeature.to_json", false]], "tonumpy (class in fl4health.utils.load_data)": [[176, "fl4health.utils.load_data.ToNumpy", false]], "torchmetric (class in fl4health.metrics)": [[77, "fl4health.metrics.TorchMetric", false]], "torchmetric (class in fl4health.metrics.metrics)": [[84, "fl4health.metrics.metrics.TorchMetric", false]], "torchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer", false]], "torchmodulesnapshotter (class in fl4health.utils.snapshotter)": [[188, "fl4health.utils.snapshotter.TorchModuleSnapshotter", false]], "train (loggingmode attribute)": [[177, "fl4health.utils.logging.LoggingMode.TRAIN", false]], "train_by_epochs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_epochs", false]], "train_by_epochs() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.train_by_epochs", false]], "train_by_steps() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_steps", false]], "train_fedrep_by_epochs() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_epochs", false]], "train_fedrep_by_steps() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_steps", false]], "train_kernel() (deepmmdloss method)": [[72, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.train_kernel", false]], "train_loader (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.train_loader", false]], "train_loader (flexibleclientprotocol attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.train_loader", false]], "train_step() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.train_step", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.train_step", false]], "train_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.train_step", false]], "train_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_step", false]], "train_step() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.train_step", false]], "train_step() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.train_step", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.train_step", false]], "train_step() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.train_step", false]], "train_step() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_step", false]], "train_step() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.train_step", false]], "train_step() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.train_step", false]], "train_step() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.train_step", false]], "traininglosses (class in fl4health.utils.losses)": [[178, "fl4health.utils.losses.TrainingLosses", false]], "transform() (textcolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.transform", false]], "transform() (textmulticolumntransformer method)": [[64, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.transform", false]], "transform_gradients() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_gradients", false]], "transform_gradients() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.transform_gradients", false]], "transform_gradients() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_gradients", false]], "transform_gradients() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.transform_gradients", false]], "transform_gradients() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.transform_gradients", false]], "transform_input() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.transform_input", false]], "transform_target() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_target", false]], "transform_target() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_target", false]], "transformsmetric (class in fl4health.metrics.compound_metrics)": [[79, "fl4health.metrics.compound_metrics.TransformsMetric", false]], "true_negative (classificationoutcome attribute)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.TRUE_NEGATIVE", false]], "true_positive (classificationoutcome attribute)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.TRUE_POSITIVE", false]], "two_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[171, "fl4health.utils.data_generation.SyntheticFedProxDataset.two_layer_map_inputs_to_outputs", false]], "unfreeze_base_module() (fedrepmodel method)": [[98, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_base_module", false]], "unfreeze_head_module() (fedrepmodel method)": [[98, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_head_module", false]], "uniform_evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.uniform_evaluate_metrics_aggregation_fn", false]], "uniform_metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.uniform_metric_aggregation", false]], "uniform_normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[82, "fl4health.metrics.metric_aggregation.uniform_normalize_metrics", false]], "unpack_input_condition() (autoencoderdatasetconverter static method)": [[173, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.unpack_input_condition", false]], "unpack_model_output() (vaeloss method)": [[126, "fl4health.preprocessing.autoencoders.loss.VaeLoss.unpack_model_output", false]], "unpack_parameters() (fullparameterexchangerwithpacking method)": [[117, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.unpack_parameters", false]], "unpack_parameters() (parameterpacker method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.unpack_parameters", false]], "unpack_parameters() (parameterpackeradaptiveconstraint method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithclippingbit method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithcontrolvariates method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithlayernames method)": [[119, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.unpack_parameters", false]], "unpack_parameters() (partialparameterexchanger method)": [[121, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.unpack_parameters", false]], "unpack_parameters() (sparsecooparameterpacker method)": [[119, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.unpack_parameters", false]], "unset_all_random_seeds() (in module fl4health.utils.random)": [[186, "fl4health.utils.random.unset_all_random_seeds", false]], "unweighted_aggregate() (fedavgdynamiclayer method)": [[156, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.unweighted_aggregate", false]], "unweighted_aggregate() (fedavgsparsecootensor method)": [[157, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.unweighted_aggregate", false]], "update() (classificationmetric method)": [[81, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.update", false]], "update() (emametric method)": [[79, "fl4health.metrics.compound_metrics.EmaMetric.update", false]], "update() (lossmeter method)": [[178, "fl4health.utils.losses.LossMeter.update", false]], "update() (metric method)": [[78, "fl4health.metrics.base_metrics.Metric.update", false]], "update() (metricmanager method)": [[83, "fl4health.metrics.metric_managers.MetricManager.update", false]], "update() (simplemetric method)": [[77, "fl4health.metrics.SimpleMetric.update", false], [84, "fl4health.metrics.metrics.SimpleMetric.update", false]], "update() (torchmetric method)": [[77, "fl4health.metrics.TorchMetric.update", false], [84, "fl4health.metrics.metrics.TorchMetric.update", false]], "update() (transformsmetric method)": [[79, "fl4health.metrics.compound_metrics.TransformsMetric.update", false]], "update_after_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.update_after_step", false]], "update_after_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_step", false]], "update_after_step() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_after_step", false]], "update_after_step() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_after_step", false]], "update_after_step() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_after_step", false]], "update_after_train() (adaptivedriftconstrainedmixin method)": [[87, "fl4health.mixins.AdaptiveDriftConstrainedMixin.update_after_train", false], [88, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.update_after_train", false]], "update_after_train() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.update_after_train", false]], "update_after_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_train", false]], "update_after_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_after_train", false]], "update_after_train() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.update_after_train", false]], "update_after_train() (numpyclientminimalprotocol method)": [[89, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.update_after_train", false]], "update_after_train() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.update_after_train", false]], "update_after_train() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.update_after_train", false]], "update_alpha() (apflmodule method)": [[94, "fl4health.model_bases.apfl_base.ApflModule.update_alpha", false]], "update_before_epoch() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_epoch", false]], "update_before_fit() (flserver method)": [[142, "fl4health.servers.base_server.FlServer.update_before_fit", false]], "update_before_fit() (nnunetserver method)": [[148, "fl4health.servers.nnunet_server.NnunetServer.update_before_fit", false]], "update_before_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_step", false]], "update_before_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_train", false]], "update_before_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_before_train", false]], "update_before_train() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.update_before_train", false]], "update_before_train() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_before_train", false]], "update_before_train() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_before_train", false]], "update_before_train() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.update_before_train", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.update_before_train", false]], "update_before_train() (fedproxclient method)": [[32, "fl4health.clients.fed_prox_client.FedProxClient.update_before_train", false]], "update_before_train() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.update_before_train", false]], "update_before_train() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.update_before_train", false]], "update_before_train() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.update_before_train", false]], "update_before_train() (moonclient method)": [[48, "fl4health.clients.moon_client.MoonClient.update_before_train", false]], "update_before_train() (mrmtlclient method)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient.update_before_train", false]], "update_before_train() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_before_train", false]], "update_before_train() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.update_before_train", false]], "update_before_train() (perfclclient method)": [[52, "fl4health.clients.perfcl_client.PerFclClient.update_before_train", false]], "update_buffers() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_buffers", false]], "update_buffers() (dittomkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_buffers", false]], "update_buffers() (mrmtlmkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_buffers", false]], "update_clipping_bound() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_clipping_bound", false]], "update_control_variates() (scaffoldclient method)": [[53, "fl4health.clients.scaffold_client.ScaffoldClient.update_control_variates", false]], "update_current_weights() (clientleveldpfedavgm method)": [[155, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_current_weights", false]], "update_lr_schedulers() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_lr_schedulers", false]], "update_metric_manager() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_metric_manager", false]], "update_metric_manager() (nnunetclient method)": [[50, "fl4health.clients.nnunet_client.NnunetClient.update_metric_manager", false]], "update_target_transform() (basedataset method)": [[172, "fl4health.utils.dataset.BaseDataset.update_target_transform", false]], "update_transform() (basedataset method)": [[172, "fl4health.utils.dataset.BaseDataset.update_transform", false]], "update_weights_by_ga() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.update_weights_by_ga", false]], "use_default_signal_handlers() (in module fl4health.utils.nnunet_utils)": [[181, "fl4health.utils.nnunet_utils.use_default_signal_handlers", false]], "vaeloss (class in fl4health.preprocessing.autoencoders.loss)": [[126, "fl4health.preprocessing.autoencoders.loss.VaeLoss", false]], "vaeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[125, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor", false]], "val_loader (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.val_loader", false]], "val_loader (flexibleclientprotocol attribute)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.val_loader", false]], "val_prefix (metricprefix attribute)": [[78, "fl4health.metrics.base_metrics.MetricPrefix.VAL_PREFIX", false]], "val_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.val_step", false]], "val_step() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.val_step", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.val_step", false]], "val_step() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.val_step", false]], "val_step() (gpflclient method)": [[42, "fl4health.clients.gpfl_client.GpflClient.val_step", false]], "validate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.validate", false]], "validate() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.validate", false]], "validate() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.validate", false]], "validate() (dittopersonalizedmixin method)": [[90, "fl4health.mixins.personalized.DittoPersonalizedMixin.validate", false], [91, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.validate", false]], "validate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate", false]], "validate() (flexibleclientprotocol method)": [[89, "fl4health.mixins.core_protocols.FlexibleClientProtocol.validate", false]], "validate() (modelmergeclient method)": [[47, "fl4health.clients.model_merge_client.ModelMergeClient.validate", false]], "validate() (mrmtlclient method)": [[49, "fl4health.clients.mr_mtl_client.MrMtlClient.validate", false]], "validate_on_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate_on_model", false]], "validation (loggingmode attribute)": [[177, "fl4health.utils.logging.LoggingMode.VALIDATION", false]], "variationalae (class in fl4health.model_bases.autoencoders_base)": [[95, "fl4health.model_bases.autoencoders_base.VariationalAe", false]], "vote (ensembleaggregationmode attribute)": [[96, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.VOTE", false]], "wait_and_filter() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.wait_and_filter", false]], "wandbreporter (class in fl4health.reporting)": [[132, "fl4health.reporting.WandBReporter", false]], "wandbreporter (class in fl4health.reporting.wandb_reporter)": [[136, "fl4health.reporting.wandb_reporter.WandBReporter", false]], "wandbsteptype (class in fl4health.reporting)": [[132, "fl4health.reporting.WandBStepType", false]], "wandbsteptype (class in fl4health.reporting.wandb_reporter)": [[136, "fl4health.reporting.wandb_reporter.WandBStepType", false]], "warmedupmodule (class in fl4health.preprocessing.warmed_up_module)": [[128, "fl4health.preprocessing.warmed_up_module.WarmedUpModule", false]], "warning (loglevel attribute)": [[189, "fl4health.utils.typing.LogLevel.WARNING", false]], "weight_and_aggregate_results() (feddgga method)": [[159, "fl4health.strategies.feddg_ga.FedDgGa.weight_and_aggregate_results", false]], "weightdriftloss (class in fl4health.losses.weight_drift_loss)": [[76, "fl4health.losses.weight_drift_loss.WeightDriftLoss", false]], "weighted_aggregate() (fedavgdynamiclayer method)": [[156, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.weighted_aggregate", false]], "weighted_aggregate() (fedavgsparsecootensor method)": [[157, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.weighted_aggregate", false]], "write() (streamtologger method)": [[181, "fl4health.utils.nnunet_utils.StreamToLogger.write", false]]}, "objects": {"": [[8, 0, 0, "-", "fl4health"]], "fl4health": [[9, 0, 0, "-", "checkpointing"], [15, 0, 0, "-", "client_managers"], [20, 0, 0, "-", "clients"], [55, 0, 0, "-", "datasets"], [62, 0, 0, "-", "feature_alignment"], [69, 0, 0, "-", "losses"], [77, 0, 0, "-", "metrics"], [87, 0, 0, "-", "mixins"], [93, 0, 0, "-", "model_bases"], [113, 0, 0, "-", "parameter_exchange"], [123, 0, 0, "-", "preprocessing"], [129, 0, 0, "-", "privacy"], [132, 0, 0, "-", "reporting"], [137, 0, 0, "-", "servers"], [152, 0, 0, "-", "strategies"], [168, 0, 0, "-", "utils"]], "fl4health.checkpointing": [[10, 0, 0, "-", "checkpointer"], [11, 0, 0, "-", "client_module"], [12, 0, 0, "-", "opacus_checkpointer"], [13, 0, 0, "-", "server_module"], [14, 0, 0, "-", "state_checkpointer"]], "fl4health.checkpointing.checkpointer": [[10, 1, 1, "", "BestLossTorchModuleCheckpointer"], [10, 1, 1, "", "BestMetricTorchModuleCheckpointer"], [10, 1, 1, "", "FunctionTorchModuleCheckpointer"], [10, 1, 1, "", "LatestTorchModuleCheckpointer"], [10, 1, 1, "", "TorchModuleCheckpointer"]], "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"]], "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "load_checkpoint"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.client_module": [[11, 1, 1, "", "CheckpointMode"], [11, 1, 1, "", "ClientCheckpointAndStateModule"]], "fl4health.checkpointing.client_module.CheckpointMode": [[11, 3, 1, "", "POST_AGGREGATION"], [11, 3, 1, "", "PRE_AGGREGATION"]], "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"], [11, 2, 1, "", "maybe_load_state"], [11, 2, 1, "", "save_state"]], "fl4health.checkpointing.opacus_checkpointer": [[12, 1, 1, "", "BestLossOpacusCheckpointer"], [12, 1, 1, "", "LatestOpacusCheckpointer"], [12, 1, 1, "", "OpacusCheckpointer"]], "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer": [[12, 2, 1, "", "load_best_checkpoint_into_model"], [12, 2, 1, "", "load_checkpoint"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.server_module": [[13, 1, 1, "", "AdaptiveConstraintServerCheckpointAndStateModule"], [13, 1, 1, "", "BaseServerCheckpointAndStateModule"], [13, 1, 1, "", "ClippingBitServerCheckpointAndStateModule"], [13, 1, 1, "", "DpScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "LayerNamesServerCheckpointAndStateModule"], [13, 1, 1, "", "NnUnetServerCheckpointAndStateModule"], [13, 1, 1, "", "OpacusServerCheckpointAndStateModule"], [13, 1, 1, "", "PackingServerCheckpointAndAndStateModule"], [13, 1, 1, "", "ScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "SparseCooServerCheckpointAndStateModule"]], "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "maybe_checkpoint"], [13, 2, 1, "", "maybe_load_state"], [13, 2, 1, "", "save_state"]], "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer": [[14, 1, 1, "", "ClientStateCheckpointer"], [14, 1, 1, "", "NnUnetServerStateCheckpointer"], [14, 1, 1, "", "ServerStateCheckpointer"], [14, 1, 1, "", "StateCheckpointer"]], "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_client_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_client_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer": [[14, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_server_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_server_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.StateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "add_to_snapshot_attr"], [14, 2, 1, "", "checkpoint_exists"], [14, 2, 1, "", "delete_from_snapshot_attr"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "load_checkpoint"], [14, 2, 1, "", "load_state"], [14, 2, 1, "", "save_checkpoint"], [14, 2, 1, "", "save_state"], [14, 2, 1, "", "set_attribute"], [14, 2, 1, "", "set_checkpoint_path"]], "fl4health.client_managers": [[16, 0, 0, "-", "base_sampling_manager"], [17, 0, 0, "-", "fixed_sampling_client_manager"], [18, 0, 0, "-", "fixed_without_replacement_manager"], [19, 0, 0, "-", "poisson_sampling_manager"]], "fl4health.client_managers.base_sampling_manager": [[16, 1, 1, "", "BaseFractionSamplingManager"]], "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager": [[16, 2, 1, "", "sample"], [16, 2, 1, "", "sample_all"], [16, 2, 1, "", "sample_fraction"], [16, 2, 1, "", "wait_and_filter"]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, 1, 1, "", "FixedSamplingClientManager"]], "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "reset_sample"], [17, 2, 1, "", "sample"]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, 1, 1, "", "FixedSamplingByFractionClientManager"]], "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager": [[18, 2, 1, "", "sample_fraction"]], "fl4health.client_managers.poisson_sampling_manager": [[19, 1, 1, "", "PoissonSamplingClientManager"]], "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager": [[19, 2, 1, "", "sample_fraction"]], "fl4health.clients": [[21, 0, 0, "-", "adaptive_drift_constraint_client"], [22, 0, 0, "-", "apfl_client"], [23, 0, 0, "-", "basic_client"], [24, 0, 0, "-", "clipping_client"], [25, 0, 0, "-", "constrained_fenda_client"], [26, 0, 0, "-", "deep_mmd_clients"], [28, 0, 0, "-", "ditto_client"], [29, 0, 0, "-", "ensemble_client"], [30, 0, 0, "-", "evaluate_client"], [31, 0, 0, "-", "fed_pca_client"], [32, 0, 0, "-", "fed_prox_client"], [33, 0, 0, "-", "fedbn_client"], [34, 0, 0, "-", "fedper_client"], [35, 0, 0, "-", "fedpm_client"], [36, 0, 0, "-", "fedrep_client"], [37, 0, 0, "-", "fenda_client"], [38, 0, 0, "-", "fenda_ditto_client"], [39, 0, 0, "-", "flash_client"], [40, 0, 0, "-", "flexible"], [42, 0, 0, "-", "gpfl_client"], [43, 0, 0, "-", "instance_level_dp_client"], [44, 0, 0, "-", "mkmmd_clients"], [47, 0, 0, "-", "model_merge_client"], [48, 0, 0, "-", "moon_client"], [49, 0, 0, "-", "mr_mtl_client"], [50, 0, 0, "-", "nnunet_client"], [51, 0, 0, "-", "partial_weight_exchange_client"], [52, 0, 0, "-", "perfcl_client"], [53, 0, 0, "-", "scaffold_client"]], "fl4health.clients.adaptive_drift_constraint_client": [[21, 1, 1, "", "AdaptiveDriftConstraintClient"]], "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "compute_penalty_loss"], [21, 2, 1, "", "compute_training_loss"], [21, 2, 1, "", "get_parameter_exchanger"], [21, 2, 1, "", "get_parameters"], [21, 2, 1, "", "set_parameters"], [21, 2, 1, "", "update_after_train"]], "fl4health.clients.apfl_client": [[22, 1, 1, "", "ApflClient"]], "fl4health.clients.apfl_client.ApflClient": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "compute_loss_and_additional_losses"], [22, 2, 1, "", "get_optimizer"], [22, 2, 1, "", "get_parameter_exchanger"], [22, 2, 1, "", "is_start_of_local_training"], [22, 2, 1, "", "set_optimizer"], [22, 2, 1, "", "train_step"], [22, 2, 1, "", "update_after_step"]], "fl4health.clients.basic_client": [[23, 1, 1, "", "BasicClient"]], "fl4health.clients.basic_client.BasicClient": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "compute_evaluation_loss"], [23, 2, 1, "", "compute_loss_and_additional_losses"], [23, 2, 1, "", "compute_training_loss"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "get_client_specific_logs"], [23, 2, 1, "", "get_client_specific_reports"], [23, 2, 1, "", "get_criterion"], [23, 2, 1, "", "get_data_loaders"], [23, 2, 1, "", "get_lr_scheduler"], [23, 2, 1, "", "get_model"], [23, 2, 1, "", "get_optimizer"], [23, 2, 1, "", "get_parameter_exchanger"], [23, 2, 1, "", "get_parameters"], [23, 2, 1, "", "get_properties"], [23, 2, 1, "", "get_test_data_loader"], [23, 2, 1, "", "initialize_all_model_weights"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "process_config"], [23, 2, 1, "", "set_optimizer"], [23, 2, 1, "", "set_parameters"], [23, 2, 1, "", "setup_client"], [23, 2, 1, "", "shutdown"], [23, 2, 1, "", "train_by_epochs"], [23, 2, 1, "", "train_by_steps"], [23, 2, 1, "", "train_step"], [23, 2, 1, "", "transform_gradients"], [23, 2, 1, "", "transform_target"], [23, 2, 1, "", "update_after_step"], [23, 2, 1, "", "update_after_train"], [23, 2, 1, "", "update_before_epoch"], [23, 2, 1, "", "update_before_step"], [23, 2, 1, "", "update_before_train"], [23, 2, 1, "", "update_lr_schedulers"], [23, 2, 1, "", "update_metric_manager"], [23, 2, 1, "", "val_step"], [23, 2, 1, "", "validate"]], "fl4health.clients.clipping_client": [[24, 1, 1, "", "NumpyClippingClient"]], "fl4health.clients.clipping_client.NumpyClippingClient": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "calculate_parameters_norm"], [24, 2, 1, "", "clip_parameters"], [24, 2, 1, "", "compute_weight_update_and_clip"], [24, 2, 1, "", "get_parameter_exchanger"], [24, 2, 1, "", "get_parameters"], [24, 2, 1, "", "set_parameters"], [24, 2, 1, "", "setup_client"]], "fl4health.clients.constrained_fenda_client": [[25, 1, 1, "", "ConstrainedFendaClient"]], "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "compute_evaluation_loss"], [25, 2, 1, "", "compute_loss_and_additional_losses"], [25, 2, 1, "", "get_parameter_exchanger"], [25, 2, 1, "", "predict"], [25, 2, 1, "", "update_after_train"], [25, 2, 1, "", "update_before_train"]], "fl4health.clients.deep_mmd_clients": [[27, 0, 0, "-", "ditto_deep_mmd_client"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, 1, 1, "", "DittoDeepMmdClient"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "compute_evaluation_loss"], [27, 2, 1, "", "compute_loss_and_additional_losses"], [27, 2, 1, "", "compute_training_loss"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "setup_client"], [27, 2, 1, "", "update_after_step"], [27, 2, 1, "", "update_before_train"], [27, 2, 1, "", "update_buffers"], [27, 2, 1, "", "validate"]], "fl4health.clients.ditto_client": [[28, 1, 1, "", "DittoClient"]], "fl4health.clients.ditto_client.DittoClient": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "compute_evaluation_loss"], [28, 2, 1, "", "compute_loss_and_additional_losses"], [28, 2, 1, "", "compute_training_loss"], [28, 2, 1, "", "get_global_model"], [28, 2, 1, "", "get_optimizer"], [28, 2, 1, "", "get_parameters"], [28, 2, 1, "", "initialize_all_model_weights"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "set_initial_global_tensors"], [28, 2, 1, "", "set_optimizer"], [28, 2, 1, "", "set_parameters"], [28, 2, 1, "", "setup_client"], [28, 2, 1, "", "train_step"], [28, 2, 1, "", "update_before_train"], [28, 2, 1, "", "validate"]], "fl4health.clients.ensemble_client": [[29, 1, 1, "", "EnsembleClient"]], "fl4health.clients.ensemble_client.EnsembleClient": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "compute_evaluation_loss"], [29, 2, 1, "", "compute_training_loss"], [29, 2, 1, "", "get_optimizer"], [29, 2, 1, "", "set_optimizer"], [29, 2, 1, "", "setup_client"], [29, 2, 1, "", "train_step"]], "fl4health.clients.evaluate_client": [[30, 1, 1, "", "EvaluateClient"]], "fl4health.clients.evaluate_client.EvaluateClient": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "evaluate"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "get_data_loader"], [30, 2, 1, "", "get_local_model"], [30, 2, 1, "", "get_parameter_exchanger"], [30, 2, 1, "", "get_parameters"], [30, 2, 1, "", "initialize_global_model"], [30, 2, 1, "", "merge_metrics"], [30, 2, 1, "", "set_parameters"], [30, 2, 1, "", "setup_client"], [30, 2, 1, "", "validate"], [30, 2, 1, "", "validate_on_model"]], "fl4health.clients.fed_pca_client": [[31, 1, 1, "", "FedPCAClient"]], "fl4health.clients.fed_pca_client.FedPCAClient": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "evaluate"], [31, 2, 1, "", "fit"], [31, 2, 1, "", "generate_hash"], [31, 2, 1, "", "get_data_loaders"], [31, 2, 1, "", "get_data_tensor"], [31, 2, 1, "", "get_model"], [31, 2, 1, "", "get_parameters"], [31, 2, 1, "", "save_model"], [31, 2, 1, "", "set_parameters"], [31, 2, 1, "", "setup_client"]], "fl4health.clients.fed_prox_client": [[32, 1, 1, "", "FedProxClient"]], "fl4health.clients.fed_prox_client.FedProxClient": [[32, 2, 1, "", "update_before_train"]], "fl4health.clients.fedbn_client": [[33, 1, 1, "", "FedBnClient"]], "fl4health.clients.fedbn_client.FedBnClient": [[33, 2, 1, "", "setup_client"]], "fl4health.clients.fedper_client": [[34, 1, 1, "", "FedPerClient"]], "fl4health.clients.fedper_client.FedPerClient": [[34, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fedpm_client": [[35, 1, 1, "", "FedPmClient"]], "fl4health.clients.fedpm_client.FedPmClient": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get_parameter_exchanger"], [35, 2, 1, "", "setup_client"]], "fl4health.clients.fedrep_client": [[36, 1, 1, "", "FedRepClient"], [36, 1, 1, "", "FedRepTrainMode"]], "fl4health.clients.fedrep_client.FedRepClient": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "fit"], [36, 2, 1, "", "get_optimizer"], [36, 2, 1, "", "get_parameter_exchanger"], [36, 2, 1, "", "process_fed_rep_config"], [36, 2, 1, "", "set_optimizer"], [36, 2, 1, "", "train_fedrep_by_epochs"], [36, 2, 1, "", "train_fedrep_by_steps"], [36, 2, 1, "", "train_step"]], "fl4health.clients.fedrep_client.FedRepTrainMode": [[36, 3, 1, "", "HEAD"], [36, 3, 1, "", "REPRESENTATION"]], "fl4health.clients.fenda_client": [[37, 1, 1, "", "FendaClient"]], "fl4health.clients.fenda_client.FendaClient": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fenda_ditto_client": [[38, 1, 1, "", "FendaDittoClient"]], "fl4health.clients.fenda_ditto_client.FendaDittoClient": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "compute_training_loss"], [38, 2, 1, "", "get_global_model"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_parameters"], [38, 2, 1, "", "predict"], [38, 2, 1, "", "set_initial_global_tensors"], [38, 2, 1, "", "set_parameters"], [38, 2, 1, "", "setup_client"], [38, 2, 1, "", "update_before_train"]], "fl4health.clients.flash_client": [[39, 1, 1, "", "FlashClient"]], "fl4health.clients.flash_client.FlashClient": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "process_config"], [39, 2, 1, "", "setup_client"], [39, 2, 1, "", "train_by_epochs"]], "fl4health.clients.flexible": [[41, 0, 0, "-", "base"]], "fl4health.clients.flexible.base": [[41, 1, 1, "", "FlexibleClient"]], "fl4health.clients.flexible.base.FlexibleClient": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "predict_with_model"], [41, 2, 1, "", "train_step"], [41, 2, 1, "", "transform_gradients"], [41, 2, 1, "", "val_step"]], "fl4health.clients.gpfl_client": [[42, 1, 1, "", "GpflClient"]], "fl4health.clients.gpfl_client.GpflClient": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "calculate_class_sample_proportions"], [42, 2, 1, "", "compute_conditional_inputs"], [42, 2, 1, "", "compute_magnitude_level_loss"], [42, 2, 1, "", "compute_training_loss"], [42, 2, 1, "", "get_optimizer"], [42, 2, 1, "", "get_parameter_exchanger"], [42, 2, 1, "", "set_optimizer"], [42, 2, 1, "", "setup_client"], [42, 2, 1, "", "train_step"], [42, 2, 1, "", "transform_input"], [42, 2, 1, "", "update_before_train"], [42, 2, 1, "", "val_step"]], "fl4health.clients.instance_level_dp_client": [[43, 1, 1, "", "InstanceLevelDpClient"]], "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "setup_client"], [43, 2, 1, "", "setup_opacus_objects"]], "fl4health.clients.mkmmd_clients": [[45, 0, 0, "-", "ditto_mkmmd_client"], [46, 0, 0, "-", "mr_mtl_mkmmd_client"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[45, 1, 1, "", "DittoMkMmdClient"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "compute_loss_and_additional_losses"], [45, 2, 1, "", "compute_training_loss"], [45, 2, 1, "", "predict"], [45, 2, 1, "", "setup_client"], [45, 2, 1, "", "update_after_step"], [45, 2, 1, "", "update_before_train"], [45, 2, 1, "", "update_buffers"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[46, 1, 1, "", "MrMtlMkMmdClient"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "compute_loss_and_additional_losses"], [46, 2, 1, "", "compute_training_loss"], [46, 2, 1, "", "predict"], [46, 2, 1, "", "setup_client"], [46, 2, 1, "", "update_after_step"], [46, 2, 1, "", "update_before_train"], [46, 2, 1, "", "update_buffers"]], "fl4health.clients.model_merge_client": [[47, 1, 1, "", "ModelMergeClient"]], "fl4health.clients.model_merge_client.ModelMergeClient": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "evaluate"], [47, 2, 1, "", "fit"], [47, 2, 1, "", "get_model"], [47, 2, 1, "", "get_parameter_exchanger"], [47, 2, 1, "", "get_parameters"], [47, 2, 1, "", "get_test_data_loader"], [47, 2, 1, "", "set_parameters"], [47, 2, 1, "", "setup_client"], [47, 2, 1, "", "validate"]], "fl4health.clients.moon_client": [[48, 1, 1, "", "MoonClient"]], "fl4health.clients.moon_client.MoonClient": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "compute_evaluation_loss"], [48, 2, 1, "", "compute_loss_and_additional_losses"], [48, 2, 1, "", "compute_training_loss"], [48, 2, 1, "", "predict"], [48, 2, 1, "", "update_after_train"], [48, 2, 1, "", "update_before_train"]], "fl4health.clients.mr_mtl_client": [[49, 1, 1, "", "MrMtlClient"]], "fl4health.clients.mr_mtl_client.MrMtlClient": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "compute_training_loss"], [49, 2, 1, "", "set_parameters"], [49, 2, 1, "", "setup_client"], [49, 2, 1, "", "update_before_train"], [49, 2, 1, "", "validate"]], "fl4health.clients.nnunet_client": [[50, 1, 1, "", "NnunetClient"]], "fl4health.clients.nnunet_client.NnunetClient": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "compute_loss_and_additional_losses"], [50, 2, 1, "", "create_plans"], [50, 2, 1, "", "empty_cache"], [50, 2, 1, "", "get_client_specific_logs"], [50, 2, 1, "", "get_client_specific_reports"], [50, 2, 1, "", "get_criterion"], [50, 2, 1, "", "get_data_loaders"], [50, 2, 1, "", "get_lr_scheduler"], [50, 2, 1, "", "get_model"], [50, 2, 1, "", "get_optimizer"], [50, 2, 1, "", "get_properties"], [50, 2, 1, "", "mask_data"], [50, 2, 1, "", "maybe_extract_fingerprint"], [50, 2, 1, "", "maybe_preprocess"], [50, 2, 1, "", "predict"], [50, 2, 1, "", "setup_client"], [50, 2, 1, "", "shutdown"], [50, 2, 1, "", "shutdown_dataloader"], [50, 2, 1, "", "train_step"], [50, 2, 1, "", "transform_gradients"], [50, 2, 1, "", "update_before_train"], [50, 2, 1, "", "update_metric_manager"]], "fl4health.clients.partial_weight_exchange_client": [[51, 1, 1, "", "PartialWeightExchangeClient"]], "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "get_parameter_exchanger"], [51, 2, 1, "", "get_parameters"], [51, 2, 1, "", "set_parameters"], [51, 2, 1, "", "setup_client"]], "fl4health.clients.perfcl_client": [[52, 1, 1, "", "PerFclClient"]], "fl4health.clients.perfcl_client.PerFclClient": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "compute_evaluation_loss"], [52, 2, 1, "", "compute_loss_and_additional_losses"], [52, 2, 1, "", "get_parameter_exchanger"], [52, 2, 1, "", "predict"], [52, 2, 1, "", "update_after_train"], [52, 2, 1, "", "update_before_train"]], "fl4health.clients.scaffold_client": [[53, 1, 1, "", "DPScaffoldClient"], [53, 1, 1, "", "ScaffoldClient"]], "fl4health.clients.scaffold_client.DPScaffoldClient": [[53, 2, 1, "", "__init__"]], "fl4health.clients.scaffold_client.ScaffoldClient": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "compute_parameters_delta"], [53, 2, 1, "", "compute_updated_control_variates"], [53, 2, 1, "", "get_parameter_exchanger"], [53, 2, 1, "", "get_parameters"], [53, 2, 1, "", "modify_grad"], [53, 2, 1, "", "set_parameters"], [53, 2, 1, "", "setup_client"], [53, 2, 1, "", "transform_gradients"], [53, 2, 1, "", "update_after_train"], [53, 2, 1, "", "update_control_variates"]], "fl4health.datasets": [[56, 0, 0, "-", "rxrx1"], [59, 0, 0, "-", "skin_cancer"]], "fl4health.datasets.rxrx1": [[57, 0, 0, "-", "load_data"], [58, 0, 0, "-", "preprocess"]], "fl4health.datasets.rxrx1.load_data": [[57, 4, 1, "", "construct_rxrx1_tensor_dataset"], [57, 4, 1, "", "create_splits"], [57, 4, 1, "", "label_frequency"], [57, 4, 1, "", "load_rxrx1_data"], [57, 4, 1, "", "load_rxrx1_test_data"]], "fl4health.datasets.rxrx1.preprocess": [[58, 4, 1, "", "filter_and_save_data"], [58, 4, 1, "", "load_image"], [58, 4, 1, "", "main"], [58, 4, 1, "", "process_data"], [58, 4, 1, "", "save_to_pkl"]], "fl4health.datasets.skin_cancer": [[60, 0, 0, "-", "load_data"], [61, 0, 0, "-", "preprocess_skin"]], "fl4health.datasets.skin_cancer.load_data": [[60, 4, 1, "", "construct_skin_cancer_tensor_dataset"], [60, 4, 1, "", "load_image"], [60, 4, 1, "", "load_skin_cancer_data"]], "fl4health.datasets.skin_cancer.preprocess_skin": [[61, 4, 1, "", "derm7pt_image_path_func"], [61, 4, 1, "", "derm7pt_label_map_func"], [61, 4, 1, "", "ham_image_path_func"], [61, 4, 1, "", "ham_label_map_func"], [61, 4, 1, "", "pad_image_path_func"], [61, 4, 1, "", "pad_label_map_func"], [61, 4, 1, "", "preprocess_derm7pt"], [61, 4, 1, "", "preprocess_ham10000"], [61, 4, 1, "", "preprocess_isic_2019"], [61, 4, 1, "", "preprocess_pad_ufes_20"], [61, 4, 1, "", "process_client_data"], [61, 4, 1, "", "save_to_json"]], "fl4health.feature_alignment": [[63, 0, 0, "-", "constants"], [64, 0, 0, "-", "string_columns_transformer"], [67, 0, 0, "-", "tabular_feature"], [68, 0, 0, "-", "tabular_type"]], "fl4health.feature_alignment.string_columns_transformer": [[64, 1, 1, "", "TextColumnTransformer"], [64, 1, 1, "", "TextMulticolumnTransformer"]], "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "fit"], [64, 2, 1, "", "set_fit_request"], [64, 2, 1, "", "set_transform_request"], [64, 2, 1, "", "transform"]], "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "fit"], [64, 2, 1, "", "set_fit_request"], [64, 2, 1, "", "set_transform_request"], [64, 2, 1, "", "transform"]], "fl4health.feature_alignment.tabular_feature": [[67, 1, 1, "", "TabularFeature"]], "fl4health.feature_alignment.tabular_feature.TabularFeature": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "from_json"], [67, 2, 1, "", "get_feature_name"], [67, 2, 1, "", "get_feature_type"], [67, 2, 1, "", "get_fill_value"], [67, 2, 1, "", "get_metadata"], [67, 2, 1, "", "get_metadata_dimension"], [67, 2, 1, "", "to_json"]], "fl4health.feature_alignment.tabular_type": [[68, 1, 1, "", "TabularType"]], "fl4health.feature_alignment.tabular_type.TabularType": [[68, 3, 1, "", "BINARY"], [68, 3, 1, "", "NUMERIC"], [68, 3, 1, "", "ORDINAL"], [68, 3, 1, "", "STRING"], [68, 2, 1, "", "get_default_fill_value"]], "fl4health.losses": [[70, 0, 0, "-", "contrastive_loss"], [71, 0, 0, "-", "cosine_similarity_loss"], [72, 0, 0, "-", "deep_mmd_loss"], [73, 0, 0, "-", "fenda_loss_config"], [74, 0, 0, "-", "mkmmd_loss"], [75, 0, 0, "-", "perfcl_loss"], [76, 0, 0, "-", "weight_drift_loss"]], "fl4health.losses.contrastive_loss": [[70, 1, 1, "", "MoonContrastiveLoss"], [70, 1, 1, "", "NtXentLoss"]], "fl4health.losses.contrastive_loss.MoonContrastiveLoss": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "compute_negative_similarities"], [70, 2, 1, "", "forward"]], "fl4health.losses.contrastive_loss.NtXentLoss": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "forward"]], "fl4health.losses.cosine_similarity_loss": [[71, 1, 1, "", "CosineSimilarityLoss"]], "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "forward"]], "fl4health.losses.deep_mmd_loss": [[72, 1, 1, "", "DeepMmdLoss"], [72, 1, 1, "", "ModelLatentF"]], "fl4health.losses.deep_mmd_loss.DeepMmdLoss": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "compute_kernel"], [72, 2, 1, "", "forward"], [72, 2, 1, "", "h1_mean_var_gram"], [72, 2, 1, "", "mmdu"], [72, 2, 1, "", "pairwise_distance_squared"], [72, 2, 1, "", "train_kernel"]], "fl4health.losses.deep_mmd_loss.ModelLatentF": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "forward"]], "fl4health.losses.fenda_loss_config": [[73, 1, 1, "", "ConstrainedFendaLossContainer"], [73, 1, 1, "", "CosineSimilarityLossContainer"], [73, 1, 1, "", "MoonContrastiveLossContainer"], [73, 1, 1, "", "PerFclLossContainer"]], "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "compute_contrastive_loss"], [73, 2, 1, "", "compute_cosine_similarity_loss"], [73, 2, 1, "", "compute_perfcl_loss"], [73, 2, 1, "", "has_contrastive_loss"], [73, 2, 1, "", "has_cosine_similarity_loss"], [73, 2, 1, "", "has_perfcl_loss"]], "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer": [[73, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer": [[73, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.PerFclLossContainer": [[73, 2, 1, "", "__init__"]], "fl4health.losses.mkmmd_loss": [[74, 1, 1, "", "MkMmdLoss"]], "fl4health.losses.mkmmd_loss.MkMmdLoss": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "beta_with_extreme_kernel_base_values"], [74, 2, 1, "", "compute_all_h_u_all_samples"], [74, 2, 1, "", "compute_all_h_u_from_inner_products"], [74, 2, 1, "", "compute_all_h_u_from_inner_products_linear"], [74, 2, 1, "", "compute_all_h_u_linear"], [74, 2, 1, "", "compute_euclidean_inner_products"], [74, 2, 1, "", "compute_euclidean_inner_products_linear"], [74, 2, 1, "", "compute_h_u_from_inner_products"], [74, 2, 1, "", "compute_h_u_from_inner_products_linear"], [74, 2, 1, "", "compute_hat_d_per_kernel"], [74, 2, 1, "", "compute_hat_q_k"], [74, 2, 1, "", "compute_hat_q_k_linear"], [74, 2, 1, "", "compute_mkmmd"], [74, 2, 1, "", "compute_vertices"], [74, 2, 1, "", "construct_quadruples"], [74, 2, 1, "", "form_and_solve_qp"], [74, 2, 1, "", "form_h_u_delta_w_i"], [74, 2, 1, "", "form_kernel_samples_minus_expectation"], [74, 2, 1, "", "forward"], [74, 2, 1, "", "get_best_vertex_for_objective_function"], [74, 2, 1, "", "normalize"], [74, 2, 1, "", "optimize_betas"]], "fl4health.losses.perfcl_loss": [[75, 1, 1, "", "PerFclLoss"]], "fl4health.losses.perfcl_loss.PerFclLoss": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "forward"]], "fl4health.losses.weight_drift_loss": [[76, 1, 1, "", "WeightDriftLoss"]], "fl4health.losses.weight_drift_loss.WeightDriftLoss": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "forward"]], "fl4health.metrics": [[77, 1, 1, "", "Accuracy"], [77, 1, 1, "", "BalancedAccuracy"], [77, 1, 1, "", "BinarySoftDiceCoefficient"], [77, 1, 1, "", "F1"], [77, 1, 1, "", "RocAuc"], [77, 1, 1, "", "SimpleMetric"], [77, 1, 1, "", "TorchMetric"], [78, 0, 0, "-", "base_metrics"], [79, 0, 0, "-", "compound_metrics"], [80, 0, 0, "-", "efficient_metrics"], [81, 0, 0, "-", "efficient_metrics_base"], [82, 0, 0, "-", "metric_aggregation"], [83, 0, 0, "-", "metric_managers"], [84, 0, 0, "-", "metrics"], [85, 0, 0, "-", "metrics_utils"], [86, 0, 0, "-", "utils"]], "fl4health.metrics.Accuracy": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.BalancedAccuracy": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.BinarySoftDiceCoefficient": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.F1": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.RocAuc": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.SimpleMetric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.metrics.TorchMetric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.metrics.base_metrics": [[78, 1, 1, "", "Metric"], [78, 1, 1, "", "MetricPrefix"]], "fl4health.metrics.base_metrics.Metric": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "compute"], [78, 2, 1, "", "update"]], "fl4health.metrics.base_metrics.MetricPrefix": [[78, 3, 1, "", "TEST_PREFIX"], [78, 3, 1, "", "VAL_PREFIX"]], "fl4health.metrics.compound_metrics": [[79, 1, 1, "", "EmaMetric"], [79, 1, 1, "", "TransformsMetric"]], "fl4health.metrics.compound_metrics.EmaMetric": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "clear"], [79, 2, 1, "", "compute"], [79, 2, 1, "", "update"]], "fl4health.metrics.compound_metrics.TransformsMetric": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "clear"], [79, 2, 1, "", "compute"], [79, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics": [[80, 1, 1, "", "BinaryDice"], [80, 1, 1, "", "MultiClassDice"]], "fl4health.metrics.efficient_metrics.BinaryDice": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics.MultiClassDice": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics_base": [[81, 1, 1, "", "BinaryClassificationMetric"], [81, 1, 1, "", "ClassificationMetric"], [81, 1, 1, "", "ClassificationOutcome"], [81, 3, 1, "", "MetricOutcome"], [81, 1, 1, "", "MultiClassificationMetric"]], "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "compute_from_counts"], [81, 2, 1, "", "count_tp_fp_tn_fn"]], "fl4health.metrics.efficient_metrics_base.ClassificationMetric": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "clear"], [81, 2, 1, "", "compute"], [81, 2, 1, "", "compute_from_counts"], [81, 2, 1, "", "count_tp_fp_tn_fn"], [81, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics_base.ClassificationOutcome": [[81, 3, 1, "", "FALSE_NEGATIVE"], [81, 3, 1, "", "FALSE_POSITIVE"], [81, 3, 1, "", "TRUE_NEGATIVE"], [81, 3, 1, "", "TRUE_POSITIVE"]], "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.metric_aggregation": [[82, 4, 1, "", "evaluate_metrics_aggregation_fn"], [82, 4, 1, "", "fit_metrics_aggregation_fn"], [82, 4, 1, "", "metric_aggregation"], [82, 4, 1, "", "normalize_metrics"], [82, 4, 1, "", "uniform_evaluate_metrics_aggregation_fn"], [82, 4, 1, "", "uniform_metric_aggregation"], [82, 4, 1, "", "uniform_normalize_metrics"]], "fl4health.metrics.metric_managers": [[83, 1, 1, "", "MetricManager"]], "fl4health.metrics.metric_managers.MetricManager": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "check_target_prediction_keys_equal"], [83, 2, 1, "", "clear"], [83, 2, 1, "", "compute"], [83, 2, 1, "", "reset"], [83, 2, 1, "", "update"]], "fl4health.metrics.metrics": [[84, 1, 1, "", "Accuracy"], [84, 1, 1, "", "BalancedAccuracy"], [84, 1, 1, "", "BinarySoftDiceCoefficient"], [84, 1, 1, "", "F1"], [84, 1, 1, "", "RocAuc"], [84, 1, 1, "", "SimpleMetric"], [84, 1, 1, "", "TorchMetric"]], "fl4health.metrics.metrics.Accuracy": [[84, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BalancedAccuracy": [[84, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BinarySoftDiceCoefficient": [[84, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.F1": [[84, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.RocAuc": [[84, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.SimpleMetric": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "clear"], [84, 2, 1, "", "compute"], [84, 2, 1, "", "update"]], "fl4health.metrics.metrics.TorchMetric": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "clear"], [84, 2, 1, "", "compute"], [84, 2, 1, "", "update"]], "fl4health.metrics.metrics_utils": [[85, 4, 1, "", "compute_dice_on_count_tensors"], [85, 4, 1, "", "threshold_tensor"]], "fl4health.metrics.utils": [[86, 4, 1, "", "align_pred_and_target_shapes"], [86, 4, 1, "", "infer_label_dim"], [86, 4, 1, "", "map_label_index_tensor_to_one_hot"]], "fl4health.mixins": [[87, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [88, 0, 0, "-", "adaptive_drift_constrained"], [89, 0, 0, "-", "core_protocols"], [90, 0, 0, "-", "personalized"]], "fl4health.mixins.AdaptiveDriftConstrainedMixin": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "compute_penalty_loss"], [87, 2, 1, "", "get_parameter_exchanger"], [87, 2, 1, "", "get_parameters"], [87, 2, 1, "", "set_parameters"], [87, 2, 1, "", "train_step"], [87, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained": [[88, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [88, 1, 1, "", "AdaptiveDriftConstrainedProtocol"], [88, 4, 1, "", "apply_adaptive_drift_to_client"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "compute_penalty_loss"], [88, 2, 1, "", "get_parameter_exchanger"], [88, 2, 1, "", "get_parameters"], [88, 2, 1, "", "set_parameters"], [88, 2, 1, "", "train_step"], [88, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol": [[88, 2, 1, "", "compute_penalty_loss"], [88, 3, 1, "", "drift_penalty_tensors"], [88, 3, 1, "", "drift_penalty_weight"], [88, 3, 1, "", "loss_for_adaptation"], [88, 3, 1, "", "parameter_exchanger"], [88, 3, 1, "", "penalty_loss_function"]], "fl4health.mixins.core_protocols": [[89, 1, 1, "", "FlexibleClientProtocol"], [89, 1, 1, "", "FlexibleClientProtocolPreSetup"], [89, 1, 1, "", "NumPyClientMinimalProtocol"]], "fl4health.mixins.core_protocols.FlexibleClientProtocol": [[89, 2, 1, "", "compute_evaluation_loss"], [89, 2, 1, "", "compute_training_loss"], [89, 3, 1, "", "criterion"], [89, 2, 1, "", "initialize_all_model_weights"], [89, 3, 1, "", "model"], [89, 3, 1, "", "optimizers"], [89, 2, 1, "", "predict_with_model"], [89, 3, 1, "", "test_loader"], [89, 3, 1, "", "train_loader"], [89, 2, 1, "", "transform_gradients"], [89, 2, 1, "", "transform_target"], [89, 2, 1, "", "update_before_train"], [89, 3, 1, "", "val_loader"], [89, 2, 1, "", "validate"]], "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup": [[89, 2, 1, "", "compute_loss_and_additional_losses"], [89, 3, 1, "", "device"], [89, 2, 1, "", "get_criterion"], [89, 2, 1, "", "get_data_loaders"], [89, 2, 1, "", "get_model"], [89, 2, 1, "", "get_optimizer"], [89, 3, 1, "", "initialized"], [89, 2, 1, "", "setup_client"]], "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol": [[89, 2, 1, "", "evaluate"], [89, 2, 1, "", "fit"], [89, 2, 1, "", "get_parameters"], [89, 2, 1, "", "set_parameters"], [89, 2, 1, "", "update_after_train"]], "fl4health.mixins.personalized": [[90, 1, 1, "", "DittoPersonalizedMixin"], [90, 1, 1, "", "DittoPersonalizedProtocol"], [90, 1, 1, "", "PersonalizedMode"], [91, 0, 0, "-", "ditto"], [90, 4, 1, "", "make_it_personal"], [92, 0, 0, "-", "utils"]], "fl4health.mixins.personalized.DittoPersonalizedMixin": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "compute_evaluation_loss"], [90, 2, 1, "", "get_global_model"], [90, 2, 1, "", "get_optimizer"], [90, 2, 1, "", "get_parameters"], [90, 2, 1, "", "initialize_all_model_weights"], [90, 5, 1, "", "optimizer_keys"], [90, 2, 1, "", "safe_global_model"], [90, 2, 1, "", "set_initial_global_tensors"], [90, 2, 1, "", "set_optimizer"], [90, 2, 1, "", "set_parameters"], [90, 2, 1, "", "setup_client"], [90, 2, 1, "", "train_step"], [90, 2, 1, "", "update_before_train"], [90, 2, 1, "", "val_step"], [90, 2, 1, "", "validate"]], "fl4health.mixins.personalized.DittoPersonalizedProtocol": [[90, 2, 1, "", "get_global_model"], [90, 3, 1, "", "global_model"], [90, 3, 1, "", "optimizer_keys"], [90, 2, 1, "", "safe_global_model"], [90, 2, 1, "", "set_initial_global_tensors"]], "fl4health.mixins.personalized.PersonalizedMode": [[90, 3, 1, "", "DITTO"]], "fl4health.mixins.personalized.ditto": [[91, 1, 1, "", "DittoPersonalizedMixin"], [91, 1, 1, "", "DittoPersonalizedProtocol"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "compute_evaluation_loss"], [91, 2, 1, "", "get_global_model"], [91, 2, 1, "", "get_optimizer"], [91, 2, 1, "", "get_parameters"], [91, 2, 1, "", "initialize_all_model_weights"], [91, 5, 1, "", "optimizer_keys"], [91, 2, 1, "", "safe_global_model"], [91, 2, 1, "", "set_initial_global_tensors"], [91, 2, 1, "", "set_optimizer"], [91, 2, 1, "", "set_parameters"], [91, 2, 1, "", "setup_client"], [91, 2, 1, "", "train_step"], [91, 2, 1, "", "update_before_train"], [91, 2, 1, "", "val_step"], [91, 2, 1, "", "validate"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol": [[91, 3, 1, "", "criterion"], [91, 3, 1, "", "device"], [91, 3, 1, "", "drift_penalty_tensors"], [91, 3, 1, "", "drift_penalty_weight"], [91, 2, 1, "", "get_global_model"], [91, 3, 1, "", "global_model"], [91, 3, 1, "", "initialized"], [91, 3, 1, "", "loss_for_adaptation"], [91, 3, 1, "", "model"], [91, 3, 1, "", "optimizer_keys"], [91, 3, 1, "", "optimizers"], [91, 3, 1, "", "parameter_exchanger"], [91, 3, 1, "", "penalty_loss_function"], [91, 2, 1, "", "safe_global_model"], [91, 2, 1, "", "set_initial_global_tensors"], [91, 3, 1, "", "test_loader"], [91, 3, 1, "", "train_loader"], [91, 3, 1, "", "val_loader"]], "fl4health.mixins.personalized.utils": [[92, 4, 1, "", "ensure_protocol_compliance"]], "fl4health.model_bases": [[94, 0, 0, "-", "apfl_base"], [95, 0, 0, "-", "autoencoders_base"], [96, 0, 0, "-", "ensemble_base"], [97, 0, 0, "-", "feature_extractor_buffer"], [98, 0, 0, "-", "fedrep_base"], [99, 0, 0, "-", "fedsimclr_base"], [100, 0, 0, "-", "fenda_base"], [101, 0, 0, "-", "gpfl_base"], [102, 0, 0, "-", "masked_layers"], [107, 0, 0, "-", "moon_base"], [108, 0, 0, "-", "parallel_split_models"], [109, 0, 0, "-", "partial_layer_exchange_model"], [110, 0, 0, "-", "pca"], [111, 0, 0, "-", "perfcl_base"], [112, 0, 0, "-", "sequential_split_models"]], "fl4health.model_bases.apfl_base": [[94, 1, 1, "", "ApflModule"]], "fl4health.model_bases.apfl_base.ApflModule": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "forward"], [94, 2, 1, "", "global_forward"], [94, 2, 1, "", "layers_to_exchange"], [94, 2, 1, "", "local_forward"], [94, 2, 1, "", "update_alpha"]], "fl4health.model_bases.autoencoders_base": [[95, 1, 1, "", "AbstractAe"], [95, 1, 1, "", "BasicAe"], [95, 1, 1, "", "ConditionalVae"], [95, 1, 1, "", "VariationalAe"]], "fl4health.model_bases.autoencoders_base.AbstractAe": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.BasicAe": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "decode"], [95, 2, 1, "", "encode"], [95, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.ConditionalVae": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "decode"], [95, 2, 1, "", "encode"], [95, 2, 1, "", "forward"], [95, 2, 1, "", "sampling"]], "fl4health.model_bases.autoencoders_base.VariationalAe": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "decode"], [95, 2, 1, "", "encode"], [95, 2, 1, "", "forward"], [95, 2, 1, "", "sampling"]], "fl4health.model_bases.ensemble_base": [[96, 1, 1, "", "EnsembleAggregationMode"], [96, 1, 1, "", "EnsembleModel"]], "fl4health.model_bases.ensemble_base.EnsembleAggregationMode": [[96, 3, 1, "", "AVERAGE"], [96, 3, 1, "", "VOTE"]], "fl4health.model_bases.ensemble_base.EnsembleModel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "ensemble_average"], [96, 2, 1, "", "ensemble_vote"], [96, 2, 1, "", "forward"]], "fl4health.model_bases.feature_extractor_buffer": [[97, 1, 1, "", "FeatureExtractorBuffer"]], "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "clear_buffers"], [97, 2, 1, "", "disable_accumulating_features"], [97, 2, 1, "", "enable_accumulating_features"], [97, 2, 1, "", "find_last_common_prefix"], [97, 2, 1, "", "flatten"], [97, 2, 1, "", "forward_hook"], [97, 2, 1, "", "get_extracted_features"], [97, 2, 1, "", "get_hierarchical_attr"], [97, 2, 1, "", "remove_hooks"]], "fl4health.model_bases.fedrep_base": [[98, 1, 1, "", "FedRepModel"]], "fl4health.model_bases.fedrep_base.FedRepModel": [[98, 2, 1, "", "freeze_base_module"], [98, 2, 1, "", "freeze_head_module"], [98, 2, 1, "", "unfreeze_base_module"], [98, 2, 1, "", "unfreeze_head_module"]], "fl4health.model_bases.fedsimclr_base": [[99, 1, 1, "", "FedSimClrModel"]], "fl4health.model_bases.fedsimclr_base.FedSimClrModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "forward"], [99, 2, 1, "", "load_pretrained_model"]], "fl4health.model_bases.fenda_base": [[100, 1, 1, "", "FendaModel"], [100, 1, 1, "", "FendaModelWithFeatureState"]], "fl4health.model_bases.fenda_base.FendaModel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.fenda_base.FendaModelWithFeatureState": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "forward"]], "fl4health.model_bases.gpfl_base": [[101, 1, 1, "", "CoV"], [101, 1, 1, "", "Gce"], [101, 1, 1, "", "GpflBaseAndHeadModules"], [101, 1, 1, "", "GpflModel"]], "fl4health.model_bases.gpfl_base.CoV": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"]], "fl4health.model_bases.gpfl_base.Gce": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "lookup"]], "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"]], "fl4health.model_bases.gpfl_base.GpflModel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.masked_layers": [[103, 0, 0, "-", "masked_conv"], [104, 0, 0, "-", "masked_layers_utils"], [105, 0, 0, "-", "masked_linear"], [106, 0, 0, "-", "masked_normalization_layers"]], "fl4health.model_bases.masked_layers.masked_conv": [[103, 1, 1, "", "MaskedConv1d"], [103, 1, 1, "", "MaskedConv2d"], [103, 1, 1, "", "MaskedConv3d"], [103, 1, 1, "", "MaskedConvTranspose1d"], [103, 1, 1, "", "MaskedConvTranspose2d"], [103, 1, 1, "", "MaskedConvTranspose3d"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[104, 4, 1, "", "convert_to_masked_model"], [104, 4, 1, "", "is_masked_module"]], "fl4health.model_bases.masked_layers.masked_linear": [[105, 1, 1, "", "MaskedLinear"]], "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[106, 1, 1, "", "MaskedBatchNorm1d"], [106, 1, 1, "", "MaskedBatchNorm2d"], [106, 1, 1, "", "MaskedBatchNorm3d"], [106, 1, 1, "", "MaskedLayerNorm"]], "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "forward"], [106, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.moon_base": [[107, 1, 1, "", "MoonModel"]], "fl4health.model_bases.moon_base.MoonModel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "sequential_forward"]], "fl4health.model_bases.parallel_split_models": [[108, 1, 1, "", "ParallelFeatureJoinMode"], [108, 1, 1, "", "ParallelSplitHeadModule"], [108, 1, 1, "", "ParallelSplitModel"]], "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode": [[108, 3, 1, "", "CONCATENATE"], [108, 3, 1, "", "SUM"]], "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "forward"], [108, 2, 1, "", "head_forward"], [108, 2, 1, "", "parallel_output_join"]], "fl4health.model_bases.parallel_split_models.ParallelSplitModel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "forward"]], "fl4health.model_bases.partial_layer_exchange_model": [[109, 1, 1, "", "PartialLayerExchangeModel"]], "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel": [[109, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.pca": [[110, 1, 1, "", "PcaModule"]], "fl4health.model_bases.pca.PcaModule": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "center_data"], [110, 2, 1, "", "compute_cumulative_explained_variance"], [110, 2, 1, "", "compute_explained_variance_ratios"], [110, 2, 1, "", "compute_projection_variance"], [110, 2, 1, "", "compute_reconstruction_error"], [110, 2, 1, "", "forward"], [110, 2, 1, "", "maybe_reshape"], [110, 2, 1, "", "prepare_data_forward"], [110, 2, 1, "", "project_back"], [110, 2, 1, "", "project_lower_dim"], [110, 2, 1, "", "set_data_mean"], [110, 2, 1, "", "set_principal_components"]], "fl4health.model_bases.perfcl_base": [[111, 1, 1, "", "PerFclModel"]], "fl4health.model_bases.perfcl_base.PerFclModel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "forward"], [111, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models": [[112, 1, 1, "", "SequentiallySplitExchangeBaseModel"], [112, 1, 1, "", "SequentiallySplitModel"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel": [[112, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitModel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "features_forward"], [112, 2, 1, "", "forward"], [112, 2, 1, "", "sequential_forward"]], "fl4health.parameter_exchange": [[114, 0, 0, "-", "fedpm_exchanger"], [115, 0, 0, "-", "full_exchanger"], [116, 0, 0, "-", "layer_exchanger"], [117, 0, 0, "-", "packing_exchanger"], [118, 0, 0, "-", "parameter_exchanger_base"], [119, 0, 0, "-", "parameter_packer"], [120, 0, 0, "-", "parameter_selection_criteria"], [121, 0, 0, "-", "partial_parameter_exchanger"], [122, 0, 0, "-", "sparse_coo_parameter_exchanger"]], "fl4health.parameter_exchange.fedpm_exchanger": [[114, 1, 1, "", "FedPmExchanger"]], "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "pull_parameters"]], "fl4health.parameter_exchange.full_exchanger": [[115, 1, 1, "", "FullParameterExchanger"]], "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger": [[115, 2, 1, "", "pull_parameters"], [115, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger": [[116, 1, 1, "", "DynamicLayerExchanger"], [116, 1, 1, "", "FixedLayerExchanger"], [116, 1, 1, "", "LayerExchangerWithExclusions"]], "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "pull_parameters"], [116, 2, 1, "", "push_parameters"], [116, 2, 1, "", "select_parameters"]], "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "apply_layer_filter"], [116, 2, 1, "", "pull_parameters"], [116, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "apply_layer_filter"], [116, 2, 1, "", "get_layers_to_transfer"], [116, 2, 1, "", "pull_parameters"], [116, 2, 1, "", "push_parameters"], [116, 2, 1, "", "should_layer_be_excluded"], [116, 2, 1, "", "should_module_be_excluded"]], "fl4health.parameter_exchange.packing_exchanger": [[117, 1, 1, "", "FullParameterExchangerWithPacking"]], "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_exchanger_base": [[118, 1, 1, "", "ParameterExchanger"]], "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger": [[118, 2, 1, "", "pull_parameters"], [118, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.parameter_packer": [[119, 1, 1, "", "ParameterPacker"], [119, 1, 1, "", "ParameterPackerAdaptiveConstraint"], [119, 1, 1, "", "ParameterPackerWithClippingBit"], [119, 1, 1, "", "ParameterPackerWithControlVariates"], [119, 1, 1, "", "ParameterPackerWithLayerNames"], [119, 1, 1, "", "SparseCooParameterPacker"]], "fl4health.parameter_exchange.parameter_packer.ParameterPacker": [[119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint": [[119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit": [[119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames": [[119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker": [[119, 2, 1, "", "extract_coo_info_from_dense"], [119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_selection_criteria": [[120, 1, 1, "", "LayerSelectionFunctionConstructor"], [120, 4, 1, "", "largest_final_magnitude_scores"], [120, 4, 1, "", "largest_increase_in_magnitude_scores"], [120, 4, 1, "", "largest_magnitude_change_scores"], [120, 4, 1, "", "select_layers_by_percentage"], [120, 4, 1, "", "select_layers_by_threshold"], [120, 4, 1, "", "select_scores_and_sample_masks"], [120, 4, 1, "", "smallest_final_magnitude_scores"], [120, 4, 1, "", "smallest_increase_in_magnitude_scores"], [120, 4, 1, "", "smallest_magnitude_change_scores"]], "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "select_by_percentage"], [120, 2, 1, "", "select_by_threshold"]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[121, 1, 1, "", "PartialParameterExchanger"]], "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "select_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[122, 1, 1, "", "SparseCooParameterExchanger"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "generate_parameter_scores"], [122, 2, 1, "", "pull_parameters"], [122, 2, 1, "", "push_parameters"], [122, 2, 1, "", "select_parameters"]], "fl4health.preprocessing": [[124, 0, 0, "-", "autoencoders"], [127, 0, 0, "-", "pca_preprocessor"], [128, 0, 0, "-", "warmed_up_module"]], "fl4health.preprocessing.autoencoders": [[125, 0, 0, "-", "dim_reduction"], [126, 0, 0, "-", "loss"]], "fl4health.preprocessing.autoencoders.dim_reduction": [[125, 1, 1, "", "AeProcessor"], [125, 1, 1, "", "AutoEncoderProcessing"], [125, 1, 1, "", "CvaeFixedConditionProcessor"], [125, 1, 1, "", "CvaeVariableConditionProcessor"], [125, 1, 1, "", "VaeProcessor"]], "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "load_autoencoder"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor": [[125, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor": [[125, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor": [[125, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.loss": [[126, 1, 1, "", "VaeLoss"]], "fl4health.preprocessing.autoencoders.loss.VaeLoss": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "forward"], [126, 2, 1, "", "standard_normal_kl_divergence_loss"], [126, 2, 1, "", "unpack_model_output"]], "fl4health.preprocessing.pca_preprocessor": [[127, 1, 1, "", "PcaPreprocessor"]], "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "load_pca_module"], [127, 2, 1, "", "reduce_dimension"]], "fl4health.preprocessing.warmed_up_module": [[128, 1, 1, "", "WarmedUpModule"]], "fl4health.preprocessing.warmed_up_module.WarmedUpModule": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "get_matching_component"], [128, 2, 1, "", "load_from_pretrained"]], "fl4health.privacy": [[130, 0, 0, "-", "fl_accountants"], [131, 0, 0, "-", "moments_accountant"]], "fl4health.privacy.fl_accountants": [[130, 1, 1, "", "ClientLevelAccountant"], [130, 1, 1, "", "FlClientLevelAccountantFixedSamplingNoReplacement"], [130, 1, 1, "", "FlClientLevelAccountantPoissonSampling"], [130, 1, 1, "", "FlInstanceLevelAccountant"]], "fl4health.privacy.fl_accountants.ClientLevelAccountant": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "get_delta"], [130, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "get_delta"], [130, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "get_delta"], [130, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "get_delta"], [130, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant": [[131, 1, 1, "", "FixedSamplingWithoutReplacement"], [131, 1, 1, "", "MomentsAccountant"], [131, 1, 1, "", "PoissonSampling"], [131, 1, 1, "", "SamplingStrategy"]], "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.MomentsAccountant": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_delta"], [131, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant.PoissonSampling": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.SamplingStrategy": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_dp_event"]], "fl4health.reporting": [[132, 1, 1, "", "JsonReporter"], [132, 1, 1, "", "WandBReporter"], [132, 1, 1, "", "WandBStepType"], [133, 0, 0, "-", "base_reporter"], [134, 0, 0, "-", "json_reporter"], [135, 0, 0, "-", "reports_manager"], [136, 0, 0, "-", "wandb_reporter"]], "fl4health.reporting.JsonReporter": [[132, 2, 1, "", "dump"]], "fl4health.reporting.WandBReporter": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "define_metrics"], [132, 2, 1, "", "initialize"], [132, 2, 1, "", "report"], [132, 2, 1, "", "shutdown"], [132, 2, 1, "", "start_run"]], "fl4health.reporting.WandBStepType": [[132, 3, 1, "", "EPOCH"], [132, 3, 1, "", "ROUND"], [132, 3, 1, "", "STEP"]], "fl4health.reporting.base_reporter": [[133, 1, 1, "", "BaseReporter"]], "fl4health.reporting.base_reporter.BaseReporter": [[133, 2, 1, "", "initialize"], [133, 2, 1, "", "report"], [133, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter": [[134, 1, 1, "", "FileReporter"], [134, 1, 1, "", "JsonReporter"]], "fl4health.reporting.json_reporter.FileReporter": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "dump"], [134, 2, 1, "", "initialize"], [134, 2, 1, "", "report"], [134, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter.JsonReporter": [[134, 2, 1, "", "dump"]], "fl4health.reporting.reports_manager": [[135, 1, 1, "", "ReportsManager"]], "fl4health.reporting.reports_manager.ReportsManager": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "initialize"], [135, 2, 1, "", "report"], [135, 2, 1, "", "shutdown"]], "fl4health.reporting.wandb_reporter": [[136, 1, 1, "", "WandBReporter"], [136, 1, 1, "", "WandBStepType"]], "fl4health.reporting.wandb_reporter.WandBReporter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "define_metrics"], [136, 2, 1, "", "initialize"], [136, 2, 1, "", "report"], [136, 2, 1, "", "shutdown"], [136, 2, 1, "", "start_run"]], "fl4health.reporting.wandb_reporter.WandBStepType": [[136, 3, 1, "", "EPOCH"], [136, 3, 1, "", "ROUND"], [136, 3, 1, "", "STEP"]], "fl4health.servers": [[138, 0, 0, "-", "adaptive_constraint_servers"], [142, 0, 0, "-", "base_server"], [143, 0, 0, "-", "client_level_dp_fed_avg_server"], [144, 0, 0, "-", "evaluate_server"], [145, 0, 0, "-", "fedpm_server"], [146, 0, 0, "-", "instance_level_dp_server"], [147, 0, 0, "-", "model_merge_server"], [148, 0, 0, "-", "nnunet_server"], [149, 0, 0, "-", "polling"], [150, 0, 0, "-", "scaffold_server"]], "fl4health.servers.adaptive_constraint_servers": [[139, 0, 0, "-", "ditto_server"], [140, 0, 0, "-", "fedprox_server"], [141, 0, 0, "-", "mrmtl_server"]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[139, 1, 1, "", "DittoServer"]], "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer": [[139, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[140, 1, 1, "", "FedProxServer"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer": [[140, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[141, 1, 1, "", "MrMtlServer"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer": [[141, 2, 1, "", "__init__"]], "fl4health.servers.base_server": [[142, 1, 1, "", "FlServer"]], "fl4health.servers.base_server.FlServer": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "evaluate_round"], [142, 2, 1, "", "fit"], [142, 2, 1, "", "fit_round"], [142, 2, 1, "", "fit_with_per_round_checkpointing"], [142, 2, 1, "", "poll_clients_for_sample_counts"], [142, 2, 1, "", "report_centralized_eval"], [142, 2, 1, "", "shutdown"], [142, 2, 1, "", "update_before_fit"]], "fl4health.servers.client_level_dp_fed_avg_server": [[143, 1, 1, "", "ClientLevelDPFedAvgServer"]], "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "fit"], [143, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.evaluate_server": [[144, 1, 1, "", "EvaluateServer"]], "fl4health.servers.evaluate_server.EvaluateServer": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "aggregate_evaluate"], [144, 2, 1, "", "configure_evaluate"], [144, 2, 1, "", "federated_evaluate"], [144, 2, 1, "", "fit"], [144, 2, 1, "", "load_model_checkpoint_to_parameters"]], "fl4health.servers.fedpm_server": [[145, 1, 1, "", "FedPmServer"]], "fl4health.servers.fedpm_server.FedPmServer": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit_round"]], "fl4health.servers.instance_level_dp_server": [[146, 1, 1, "", "InstanceLevelDpServer"]], "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "fit"], [146, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.model_merge_server": [[147, 1, 1, "", "ModelMergeServer"]], "fl4health.servers.model_merge_server.ModelMergeServer": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "fit"]], "fl4health.servers.nnunet_server": [[148, 1, 1, "", "NnunetServer"], [148, 4, 1, "", "add_items_to_config_fn"]], "fl4health.servers.nnunet_server.NnunetServer": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "initialize_server_model"], [148, 2, 1, "", "update_before_fit"]], "fl4health.servers.polling": [[149, 4, 1, "", "poll_client"], [149, 4, 1, "", "poll_clients"]], "fl4health.servers.scaffold_server": [[150, 1, 1, "", "DPScaffoldServer"], [150, 1, 1, "", "ScaffoldServer"]], "fl4health.servers.scaffold_server.DPScaffoldServer": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "fit"]], "fl4health.servers.scaffold_server.ScaffoldServer": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "fit"]], "fl4health.strategies": [[153, 0, 0, "-", "aggregate_utils"], [154, 0, 0, "-", "basic_fedavg"], [155, 0, 0, "-", "client_dp_fedavgm"], [156, 0, 0, "-", "fedavg_dynamic_layer"], [157, 0, 0, "-", "fedavg_sparse_coo_tensor"], [158, 0, 0, "-", "fedavg_with_adaptive_constraint"], [159, 0, 0, "-", "feddg_ga"], [160, 0, 0, "-", "feddg_ga_with_adaptive_constraint"], [161, 0, 0, "-", "fedpca"], [162, 0, 0, "-", "fedpm"], [163, 0, 0, "-", "flash"], [164, 0, 0, "-", "model_merge_strategy"], [165, 0, 0, "-", "noisy_aggregate"], [166, 0, 0, "-", "scaffold"], [167, 0, 0, "-", "strategy_with_poll"]], "fl4health.strategies.aggregate_utils": [[153, 4, 1, "", "aggregate_losses"], [153, 4, 1, "", "aggregate_results"]], "fl4health.strategies.basic_fedavg": [[154, 1, 1, "", "BasicFedAvg"], [154, 1, 1, "", "OpacusBasicFedAvg"]], "fl4health.strategies.basic_fedavg.BasicFedAvg": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "aggregate_evaluate"], [154, 2, 1, "", "aggregate_fit"], [154, 2, 1, "", "configure_evaluate"], [154, 2, 1, "", "configure_fit"], [154, 2, 1, "", "configure_poll"]], "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg": [[154, 2, 1, "", "__init__"]], "fl4health.strategies.client_dp_fedavgm": [[155, 1, 1, "", "ClientLevelDPFedAvgM"]], "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate_fit"], [155, 2, 1, "", "calculate_update_with_momentum"], [155, 2, 1, "", "configure_evaluate"], [155, 2, 1, "", "configure_fit"], [155, 2, 1, "", "modify_noise_multiplier"], [155, 2, 1, "", "split_model_weights_and_clipping_bits"], [155, 2, 1, "", "update_clipping_bound"], [155, 2, 1, "", "update_current_weights"]], "fl4health.strategies.fedavg_dynamic_layer": [[156, 1, 1, "", "FedAvgDynamicLayer"]], "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "aggregate"], [156, 2, 1, "", "aggregate_fit"], [156, 2, 1, "", "unweighted_aggregate"], [156, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[157, 1, 1, "", "FedAvgSparseCooTensor"]], "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "aggregate"], [157, 2, 1, "", "aggregate_fit"], [157, 2, 1, "", "unweighted_aggregate"], [157, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[158, 1, 1, "", "FedAvgWithAdaptiveConstraint"]], "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.feddg_ga": [[159, 1, 1, "", "FairnessMetric"], [159, 1, 1, "", "FairnessMetricType"], [159, 1, 1, "", "FedDgGa"], [159, 6, 1, "", "SignalForTypeError"]], "fl4health.strategies.feddg_ga.FairnessMetric": [[159, 2, 1, "", "__init__"]], "fl4health.strategies.feddg_ga.FairnessMetricType": [[159, 3, 1, "", "ACCURACY"], [159, 3, 1, "", "CUSTOM"], [159, 3, 1, "", "LOSS"], [159, 2, 1, "", "signal_for_type"]], "fl4health.strategies.feddg_ga.FedDgGa": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "aggregate_evaluate"], [159, 2, 1, "", "aggregate_fit"], [159, 2, 1, "", "configure_evaluate"], [159, 2, 1, "", "configure_fit"], [159, 2, 1, "", "get_current_weight_step_size"], [159, 2, 1, "", "update_weights_by_ga"], [159, 2, 1, "", "weight_and_aggregate_results"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[160, 1, 1, "", "FedDgGaAdaptiveConstraint"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.fedpca": [[161, 1, 1, "", "FedPCA"]], "fl4health.strategies.fedpca.FedPCA": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "aggregate_fit"], [161, 2, 1, "", "merge_subspaces_qr"], [161, 2, 1, "", "merge_subspaces_svd"], [161, 2, 1, "", "merge_two_subspaces_qr"]], "fl4health.strategies.fedpm": [[162, 1, 1, "", "FedPm"]], "fl4health.strategies.fedpm.FedPm": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "aggregate"], [162, 2, 1, "", "aggregate_bayesian"], [162, 2, 1, "", "reset_beta_priors"]], "fl4health.strategies.flash": [[163, 1, 1, "", "Flash"]], "fl4health.strategies.flash.Flash": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.model_merge_strategy": [[164, 1, 1, "", "ModelMergeStrategy"]], "fl4health.strategies.model_merge_strategy.ModelMergeStrategy": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "aggregate_evaluate"], [164, 2, 1, "", "aggregate_fit"], [164, 2, 1, "", "configure_evaluate"], [164, 2, 1, "", "configure_fit"], [164, 2, 1, "", "evaluate"], [164, 2, 1, "", "initialize_parameters"]], "fl4health.strategies.noisy_aggregate": [[165, 4, 1, "", "add_noise_to_array"], [165, 4, 1, "", "add_noise_to_ndarrays"], [165, 4, 1, "", "gaussian_noisy_aggregate_clipping_bits"], [165, 4, 1, "", "gaussian_noisy_unweighted_aggregate"], [165, 4, 1, "", "gaussian_noisy_weighted_aggregate"]], "fl4health.strategies.scaffold": [[166, 1, 1, "", "OpacusScaffold"], [166, 1, 1, "", "Scaffold"]], "fl4health.strategies.scaffold.OpacusScaffold": [[166, 2, 1, "", "__init__"]], "fl4health.strategies.scaffold.Scaffold": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "aggregate"], [166, 2, 1, "", "aggregate_fit"], [166, 2, 1, "", "compute_parameter_delta"], [166, 2, 1, "", "compute_updated_control_variates"], [166, 2, 1, "", "compute_updated_parameters"], [166, 2, 1, "", "compute_updated_weights"], [166, 2, 1, "", "configure_fit_all"], [166, 2, 1, "", "initialize_control_variates"]], "fl4health.strategies.strategy_with_poll": [[167, 1, 1, "", "StrategyWithPolling"]], "fl4health.strategies.strategy_with_poll.StrategyWithPolling": [[167, 2, 1, "", "configure_poll"]], "fl4health.utils": [[169, 0, 0, "-", "client"], [170, 0, 0, "-", "config"], [171, 0, 0, "-", "data_generation"], [172, 0, 0, "-", "dataset"], [173, 0, 0, "-", "dataset_converter"], [174, 0, 0, "-", "early_stopper"], [175, 0, 0, "-", "functions"], [176, 0, 0, "-", "load_data"], [177, 0, 0, "-", "logging"], [178, 0, 0, "-", "losses"], [179, 0, 0, "-", "metrics"], [180, 0, 0, "-", "msd_dataset_sources"], [181, 0, 0, "-", "nnunet_utils"], [182, 0, 0, "-", "parameter_extraction"], [183, 0, 0, "-", "partitioners"], [184, 0, 0, "-", "peft_parameter_extraction"], [185, 0, 0, "-", "privacy_utilities"], [186, 0, 0, "-", "random"], [187, 0, 0, "-", "sampler"], [188, 0, 0, "-", "snapshotter"], [189, 0, 0, "-", "typing"]], "fl4health.utils.client": [[169, 4, 1, "", "check_if_batch_is_empty_and_verify_input"], [169, 4, 1, "", "clone_and_freeze_model"], [169, 4, 1, "", "fold_loss_dict_into_metrics"], [169, 4, 1, "", "maybe_progress_bar"], [169, 4, 1, "", "move_data_to_device"], [169, 4, 1, "", "process_and_check_validation_steps"], [169, 4, 1, "", "set_pack_losses_with_val_metrics"]], "fl4health.utils.config": [[170, 6, 1, "", "InvalidConfigError"], [170, 4, 1, "", "check_config"], [170, 4, 1, "", "load_config"], [170, 4, 1, "", "make_dict_with_epochs_or_steps"], [170, 4, 1, "", "narrow_dict_type"], [170, 4, 1, "", "narrow_dict_type_and_set_attribute"]], "fl4health.utils.data_generation": [[171, 1, 1, "", "SyntheticFedProxDataset"], [171, 1, 1, "", "SyntheticIidFedProxDataset"], [171, 1, 1, "", "SyntheticNonIidFedProxDataset"]], "fl4health.utils.data_generation.SyntheticFedProxDataset": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "construct_covariance_matrix"], [171, 2, 1, "", "generate"], [171, 2, 1, "", "generate_client_tensors"], [171, 2, 1, "", "one_layer_map_inputs_to_outputs"], [171, 2, 1, "", "two_layer_map_inputs_to_outputs"]], "fl4health.utils.data_generation.SyntheticIidFedProxDataset": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "generate_client_tensors"], [171, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "generate_client_tensors"], [171, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.dataset": [[172, 1, 1, "", "BaseDataset"], [172, 1, 1, "", "DictionaryDataset"], [172, 1, 1, "", "SslTensorDataset"], [172, 1, 1, "", "SyntheticDataset"], [172, 1, 1, "", "TensorDataset"], [172, 4, 1, "", "select_by_indices"]], "fl4health.utils.dataset.BaseDataset": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "update_target_transform"], [172, 2, 1, "", "update_transform"]], "fl4health.utils.dataset.DictionaryDataset": [[172, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SslTensorDataset": [[172, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SyntheticDataset": [[172, 2, 1, "", "__init__"]], "fl4health.utils.dataset.TensorDataset": [[172, 2, 1, "", "__init__"]], "fl4health.utils.dataset_converter": [[173, 1, 1, "", "AutoEncoderDatasetConverter"], [173, 1, 1, "", "DatasetConverter"]], "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "convert_dataset"], [173, 2, 1, "", "get_condition_vector_size"], [173, 2, 1, "", "get_unpacking_function"], [173, 2, 1, "", "unpack_input_condition"]], "fl4health.utils.dataset_converter.DatasetConverter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "convert_dataset"]], "fl4health.utils.early_stopper": [[174, 1, 1, "", "EarlyStopper"]], "fl4health.utils.early_stopper.EarlyStopper": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "load_snapshot"], [174, 2, 1, "", "should_stop"]], "fl4health.utils.functions": [[175, 1, 1, "", "BernoulliSample"], [175, 4, 1, "", "decode_and_pseudo_sort_results"], [175, 4, 1, "", "pseudo_sort_scoring_function"], [175, 4, 1, "", "select_zeroeth_element"], [175, 4, 1, "", "sigmoid_inverse"]], "fl4health.utils.functions.BernoulliSample": [[175, 2, 1, "", "backward"], [175, 2, 1, "", "forward"], [175, 2, 1, "", "setup_context"]], "fl4health.utils.load_data": [[176, 1, 1, "", "ToNumpy"], [176, 4, 1, "", "get_cifar10_data_and_target_tensors"], [176, 4, 1, "", "get_mnist_data_and_target_tensors"], [176, 4, 1, "", "get_train_and_val_cifar10_datasets"], [176, 4, 1, "", "get_train_and_val_mnist_datasets"], [176, 4, 1, "", "load_cifar10_data"], [176, 4, 1, "", "load_cifar10_test_data"], [176, 4, 1, "", "load_mnist_data"], [176, 4, 1, "", "load_mnist_test_data"], [176, 4, 1, "", "load_msd_dataset"], [176, 4, 1, "", "split_data_and_targets"]], "fl4health.utils.logging": [[177, 1, 1, "", "LoggingMode"]], "fl4health.utils.logging.LoggingMode": [[177, 3, 1, "", "EARLY_STOP_VALIDATION"], [177, 3, 1, "", "TEST"], [177, 3, 1, "", "TRAIN"], [177, 3, 1, "", "VALIDATION"]], "fl4health.utils.losses": [[178, 1, 1, "", "EvaluationLosses"], [178, 1, 1, "", "LossMeter"], [178, 1, 1, "", "LossMeterType"], [178, 1, 1, "", "Losses"], [178, 1, 1, "", "TrainingLosses"]], "fl4health.utils.losses.EvaluationLosses": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "aggregate"], [178, 2, 1, "", "as_dict"]], "fl4health.utils.losses.LossMeter": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "aggregate_losses_dict"], [178, 2, 1, "", "clear"], [178, 2, 1, "", "compute"], [178, 2, 1, "", "update"]], "fl4health.utils.losses.LossMeterType": [[178, 3, 1, "", "ACCUMULATION"], [178, 3, 1, "", "AVERAGE"]], "fl4health.utils.losses.Losses": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "aggregate"], [178, 2, 1, "", "as_dict"]], "fl4health.utils.losses.TrainingLosses": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "aggregate"], [178, 2, 1, "", "as_dict"]], "fl4health.utils.msd_dataset_sources": [[180, 1, 1, "", "MsdDataset"], [180, 4, 1, "", "get_msd_dataset_enum"]], "fl4health.utils.msd_dataset_sources.MsdDataset": [[180, 3, 1, "", "TASK01_BRAINTUMOUR"], [180, 3, 1, "", "TASK02_HEART"], [180, 3, 1, "", "TASK03_LIVER"], [180, 3, 1, "", "TASK04_HIPPOCAMPUS"], [180, 3, 1, "", "TASK05_PROSTATE"], [180, 3, 1, "", "TASK06_LUNG"], [180, 3, 1, "", "TASK07_PANCREAS"], [180, 3, 1, "", "TASK08_HEPATICVESSEL"], [180, 3, 1, "", "TASK09_SPLEEN"], [180, 3, 1, "", "TASK10_COLON"]], "fl4health.utils.nnunet_utils": [[181, 1, 1, "", "Module2LossWrapper"], [181, 1, 1, "", "NnUNetDataLoaderWrapper"], [181, 1, 1, "", "NnunetConfig"], [181, 1, 1, "", "PolyLRSchedulerWrapper"], [181, 1, 1, "", "StreamToLogger"], [181, 4, 1, "", "collapse_one_hot_tensor"], [181, 4, 1, "", "convert_deep_supervision_dict_to_list"], [181, 4, 1, "", "convert_deep_supervision_list_to_dict"], [181, 4, 1, "", "get_dataset_n_voxels"], [181, 4, 1, "", "get_segs_from_probs"], [181, 4, 1, "", "prepare_loss_arg"], [181, 4, 1, "", "reload_modules"], [181, 4, 1, "", "set_nnunet_env"], [181, 4, 1, "", "use_default_signal_handlers"]], "fl4health.utils.nnunet_utils.Module2LossWrapper": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "forward"]], "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "reset"], [181, 2, 1, "", "shutdown"]], "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "get_lr"]], "fl4health.utils.nnunet_utils.StreamToLogger": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "flush"], [181, 2, 1, "", "write"]], "fl4health.utils.parameter_extraction": [[182, 4, 1, "", "check_shape_match"], [182, 4, 1, "", "get_all_model_parameters"]], "fl4health.utils.partitioners": [[183, 1, 1, "", "DirichletLabelBasedAllocation"]], "fl4health.utils.partitioners.DirichletLabelBasedAllocation": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "partition_dataset"], [183, 2, 1, "", "partition_label_indices"]], "fl4health.utils.peft_parameter_extraction": [[184, 4, 1, "", "get_all_peft_parameters_from_model"]], "fl4health.utils.privacy_utilities": [[185, 4, 1, "", "convert_model_to_opacus_model"], [185, 4, 1, "", "map_model_to_opacus_model"], [185, 4, 1, "", "privacy_validate_and_fix_modules"]], "fl4health.utils.random": [[186, 4, 1, "", "generate_hash"], [186, 4, 1, "", "restore_random_state"], [186, 4, 1, "", "save_random_state"], [186, 4, 1, "", "set_all_random_seeds"], [186, 4, 1, "", "unset_all_random_seeds"]], "fl4health.utils.sampler": [[187, 1, 1, "", "DirichletLabelBasedSampler"], [187, 1, 1, "", "LabelBasedSampler"], [187, 1, 1, "", "MinorityLabelBasedSampler"]], "fl4health.utils.sampler.DirichletLabelBasedSampler": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "subsample"]], "fl4health.utils.sampler.LabelBasedSampler": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "subsample"]], "fl4health.utils.sampler.MinorityLabelBasedSampler": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "subsample"]], "fl4health.utils.snapshotter": [[188, 1, 1, "", "AbstractSnapshotter"], [188, 1, 1, "", "BytesSnapshotter"], [188, 1, 1, "", "EnumSnapshotter"], [188, 1, 1, "", "HistorySnapshotter"], [188, 1, 1, "", "LRSchedulerSnapshotter"], [188, 1, 1, "", "OptimizerSnapshotter"], [188, 1, 1, "", "SerializableObjectSnapshotter"], [188, 1, 1, "", "SingletonSnapshotter"], [188, 1, 1, "", "StringSnapshotter"], [188, 1, 1, "", "TorchModuleSnapshotter"]], "fl4health.utils.snapshotter.AbstractSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.BytesSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.EnumSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.HistorySnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.LRSchedulerSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.OptimizerSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SerializableObjectSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SingletonSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.StringSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.TorchModuleSnapshotter": [[188, 2, 1, "", "load_attribute"], [188, 2, 1, "", "save_attribute"]], "fl4health.utils.typing": [[189, 1, 1, "", "LogLevel"]], "fl4health.utils.typing.LogLevel": [[189, 3, 1, "", "CRITICAL"], [189, 3, 1, "", "DEBUG"], [189, 3, 1, "", "ERROR"], [189, 3, 1, "", "INFO"], [189, 3, 1, "", "NOTSET"], [189, 3, 1, "", "WARNING"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [1, 10, 11, 13, 14, 17, 21, 22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 45, 46, 48, 49, 50, 52, 53, 81, 90, 91, 97, 101, 116, 120, 122, 132, 136, 142, 148, 154, 156, 157, 159, 161, 162, 163, 166, 167, 169, 171, 181, 183], "0": [7, 24, 27, 42, 45, 46, 47, 48, 50, 52, 57, 60, 70, 72, 73, 75, 77, 79, 80, 81, 84, 85, 86, 94, 95, 96, 103, 105, 106, 110, 122, 132, 136, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 175, 176, 181, 183, 187, 189], "000": 50, "000local": 50, "001": [7, 72], "00818": 34, "01": [42, 94], "03075": 61, "03871": 155, "05": [74, 106], "05206": 36, "05629": [154, 158], "05709": [70, 99], "06127": 171, "06378": [53, 150, 166], "06963": [155, 165], "07": [77, 84], "07078": [36, 98], "07623": 33, "07978313": [183, 187], "08857052": [183, 187], "09": 163, "09158": [70, 99], "09278": [53, 150], "1": [16, 24, 27, 45, 46, 48, 50, 52, 53, 64, 70, 71, 72, 74, 77, 79, 80, 81, 84, 85, 86, 94, 96, 101, 103, 105, 106, 110, 112, 122, 132, 136, 142, 143, 144, 145, 146, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 174, 175, 176, 181, 183, 187], "10": [1, 27, 45, 46, 72, 86, 110, 171, 176, 181, 183, 187, 189], "100": 187, "1000": [171, 183, 187], "10000": 183, "10020518": 75, "10279": [42, 101], "12": 50, "1308": 175, "13461": 22, "15": 60, "15328": [35, 145, 162], "1602": [154, 158], "16825": 37, "1710": [155, 165], "1812": 171, "19": 74, "1905": 155, "1910": [53, 150, 166], "1912": 34, "19619462": [183, 187], "19644968": [183, 187], "19992536": [183, 187], "1d": [85, 103, 171, 183], "1e": [74, 77, 84, 106, 163], "2": [7, 23, 27, 28, 31, 38, 45, 46, 49, 50, 53, 70, 74, 77, 80, 81, 84, 85, 86, 101, 110, 120, 131, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 171, 175, 176, 181, 183, 187], "20": [7, 27, 45, 46, 61, 189], "2002": [70, 99], "2003": 22, "20080513": [183, 187], "2016": [70, 131], "2019": 61, "2023": [159, 160], "2066252": [183, 187], "2102": [33, 36, 98], "2111": [53, 150], "2207": [61, 70, 99], "2209": [35, 145, 162], "2303": 36, "2308": [42, 101], "2309": 37, "23645891": [183, 187], "250": [50, 181], "29519184": [183, 187], "2999956": [183, 187], "2d": [33, 50, 80, 97, 103, 106, 110, 171], "2i": 74, "2n": 70, "3": [1, 7, 50, 64, 77, 80, 81, 84, 86, 183], "30": 189, "32": [131, 149, 186], "333": 79, "3432": 175, "3837": 181, "3d": [77, 84, 103, 106], "3d_fullr": 50, "4": [50, 53, 74, 77, 80, 81, 84, 86, 175], "40": 189, "4096": 186, "42": 186, "4d": 106, "5": [48, 50, 52, 70, 72, 73, 75, 77, 79, 80, 84, 94, 95, 106, 110, 155, 158, 160, 171, 174, 181, 183, 187], "50": [72, 187, 189], "5d": 106, "6": 110, "60": 171, "64": [7, 86, 181], "667": 79, "6b180037abbebea991d8b1232f8a8ca9": 70, "7": [60, 86], "8": [31, 57, 60, 80, 81, 186, 187], "80": 1, "8080": 7, "8222": 80, "9": [1, 7, 79, 86, 155, 163, 181], "99": 163, "A": [1, 4, 10, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 94, 96, 97, 99, 100, 101, 106, 107, 108, 110, 120, 122, 132, 133, 134, 136, 139, 141, 143, 144, 145, 146, 147, 148, 150, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 172, 173, 176, 178, 181, 186, 188], "AND": [10, 36, 38, 80, 148, 166, 172], "AS": 52, "AT": [80, 81, 172], "As": [1, 10, 11, 13, 28, 41, 77, 84, 86, 90, 91, 110, 171, 175], "At": [1, 23, 30, 38, 47, 174], "BE": 172, "By": [13, 21, 23, 27, 41, 45, 46, 50, 72, 87, 88, 108, 142, 166], "For": [1, 11, 13, 14, 17, 22, 23, 25, 27, 28, 32, 33, 36, 38, 45, 46, 47, 48, 49, 50, 52, 67, 77, 79, 80, 81, 84, 86, 90, 91, 94, 95, 101, 103, 106, 110, 112, 116, 119, 122, 128, 131, 132, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 155, 156, 157, 158, 159, 160, 161, 165, 171, 172, 175, 181, 185, 186, 187], "If": [1, 7, 10, 11, 12, 13, 14, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 68, 73, 74, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 99, 103, 105, 106, 110, 125, 128, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 158, 159, 160, 161, 166, 169, 170, 171, 174, 175, 181, 183, 186], "In": [1, 4, 10, 21, 22, 23, 27, 28, 30, 36, 38, 42, 45, 49, 50, 51, 52, 74, 80, 81, 86, 87, 88, 90, 91, 101, 103, 105, 106, 110, 120, 122, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 161, 162, 164, 171, 178, 183, 187], "It": [1, 12, 13, 14, 32, 42, 49, 50, 70, 75, 81, 95, 97, 98, 101, 116, 120, 126, 131, 132, 133, 136, 142, 154, 155, 159, 160, 166, 171, 175, 183, 185, 186], "NOT": [10, 38, 100, 111, 158, 160], "No": [18, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 130], "Not": [47, 49, 50, 64, 115, 144, 147, 164], "OR": 148, "On": [49, 81], "One": [4, 22, 81, 111, 146, 150, 176], "Or": 169, "TO": [52, 172], "That": [1, 11, 30, 36, 80, 81, 94, 95, 107, 155, 166, 171, 183], "The": [1, 4, 7, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 64, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 115, 116, 119, 122, 126, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 178, 181, 183, 185, 186, 187, 188], "Their": 81, "Then": [23, 24, 27, 28, 29, 33, 38, 45, 46, 49, 50, 53, 90, 91, 101, 162, 166, 171], "There": [38, 81, 101, 175, 183], "These": [1, 4, 23, 28, 30, 31, 38, 42, 47, 51, 74, 80, 81, 90, 91, 94, 98, 101, 107, 108, 111, 112, 116, 143, 144, 146, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 171, 172, 182, 184], "To": [1, 7, 23, 29, 31, 38, 47, 50, 53, 77, 78, 79, 84, 87, 88, 95, 147, 178], "Will": [10, 14, 159, 172], "With": 7, "_": [7, 10, 12, 53, 75], "_1": 53, "_2": 53, "__call__": [77, 81, 84], "__get_item__": 172, "__init__": [1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 171, 172, 173, 174, 178, 181, 183, 187], "_config": 50, "_f": 110, "_hydrate_model_for_checkpoint": [13, 147], "_i": [42, 101], "_loss": [7, 23, 50, 89, 91, 126, 181], "_lrschedul": [50, 181], "_maskedbatchnorm": 106, "_modul": 103, "_p": 75, "_post_process_count_tensor": 80, "_state": 14, "_train_step_with_model_and_optim": 41, "_val_step_with_model": 41, "ab": [22, 33, 34, 36, 42, 53, 61, 101, 150, 154, 155, 158, 171], "ab8068dbc96804a5c1a8b898fd115175cfebfe75": 94, "abadi": 131, "abc": [1, 10, 14, 77, 78, 81, 84, 95, 108, 109, 118, 119, 130, 131, 142, 167, 171, 172, 178, 187, 188], "abil": [38, 41, 87, 88], "abl": [1, 48], "ablat": [4, 37], "about": [21, 23, 24, 28, 30, 38, 47, 49, 53, 58, 87, 88, 90, 91, 131], "abov": [1, 4, 27, 38, 45, 46, 74, 77, 80, 81, 84, 85, 110, 122, 130, 131, 132, 136, 155, 157, 161, 171], "absenc": 4, "absolut": [71, 181], "abstract": [10, 14, 47, 70, 77, 78, 81, 84, 95, 108, 109, 118, 119, 121, 125, 130, 131, 167, 171, 172, 178, 187, 188], "abstracta": [8, 93, 95], "abstractsnapshott": [8, 14, 168, 188], "accept": [79, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 175], "accept_failur": [139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "access": [132, 136], "accessor": [90, 91], "accomplish": [80, 142, 187], "accord": [24, 50, 53, 86, 110, 122, 154, 157, 158, 164, 166, 178, 183], "accordingli": 95, "account": [43, 86, 130, 131, 132, 136, 143, 146, 150, 155, 161], "accumul": [27, 45, 46, 77, 78, 79, 81, 83, 84, 97, 168, 178], "accumulate_featur": 97, "accuraci": [7, 8, 77, 79, 84, 152, 159, 164, 166], "achiev": [23, 41], "across": [38, 47, 49, 50, 71, 75, 80, 81, 82, 97, 130, 132, 133, 136, 156, 157, 161, 162, 165, 166, 171, 175, 181, 183], "act": [42, 96, 106, 108, 112, 169], "activ": [1, 7, 23, 25, 27, 28, 38, 41, 45, 46, 48, 52, 101], "actual": [11, 49, 110], "ad": [1, 4, 10, 14, 21, 23, 24, 27, 28, 30, 38, 41, 45, 46, 47, 49, 53, 64, 87, 88, 90, 91, 97, 103, 106, 108, 110, 131, 132, 136, 143, 146, 148, 150, 165, 173], "adap": 181, "adapt": [4, 13, 21, 28, 39, 41, 49, 61, 87, 88, 94, 155, 158, 160, 163], "adapt_loss_weight": [158, 160], "adaptive_alpha": 94, "adaptive_clip": [24, 155], "adaptive_constraint_serv": [8, 137], "adaptive_drift_constrain": [8, 87], "adaptive_drift_constraint_cli": [8, 20], "adaptiveconstraintservercheckpointandstatemodul": [8, 9, 13, 139, 140, 141], "adaptivedriftconstrainedmixin": [8, 87, 88, 90, 91], "adaptivedriftconstrainedprotocol": [8, 87, 88, 90, 91], "adaptivedriftconstraintcli": [8, 20, 21, 28, 32, 49, 87, 88], "add": [4, 10, 14, 21, 27, 28, 35, 38, 45, 46, 49, 77, 84, 87, 88, 90, 91, 103, 110, 126, 132, 133, 136, 142, 145, 155, 165, 175], "add_items_to_config_fn": [8, 137, 148], "add_mean": 110, "add_noise_to_arrai": [8, 152, 165], "add_noise_to_ndarrai": [8, 152, 165], "add_to_snapshot_attr": [9, 14], "addit": [1, 4, 13, 21, 22, 23, 25, 27, 28, 29, 38, 39, 42, 45, 46, 48, 49, 50, 52, 80, 81, 90, 91, 97, 103, 105, 106, 142, 148, 158, 171, 173, 178, 186], "addition": [28, 50], "additional_dim": 181, "additional_loss": 178, "additional_paramet": [117, 119, 121], "adher": 1, "adjust": [4, 158, 159, 160], "adjustment_weight": 159, "adjustment_weight_step_s": [159, 160], "advanc": [22, 23], "aeprocessor": [123, 124, 125], "affect": [80, 148, 186], "affin": [42, 101, 106, 171], "aforement": 175, "after": [4, 7, 10, 11, 13, 14, 21, 22, 23, 25, 27, 32, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 81, 87, 88, 94, 95, 101, 106, 110, 120, 127, 132, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 155, 161, 162, 164, 171, 172, 173, 176, 181], "again": 17, "against": [21, 22, 23, 25, 27, 28, 29, 38, 42, 45, 46, 48, 49, 52, 77, 78, 79, 84, 90, 91, 159, 160], "agglom": 161, "aggreg": [4, 11, 13, 21, 22, 23, 25, 28, 30, 31, 32, 33, 38, 46, 47, 48, 49, 50, 51, 52, 53, 75, 80, 81, 82, 87, 88, 90, 91, 94, 96, 98, 100, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 175, 178], "aggregate_bayesian": [152, 162], "aggregate_evalu": [137, 144, 152, 154, 159, 164], "aggregate_fit": [152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166], "aggregate_loss": [8, 152, 153], "aggregate_losses_dict": [168, 178], "aggregate_result": [8, 152, 153], "aggregate_util": [8, 152], "aggregated_metr": 82, "aggregation_mod": 96, "ai": [57, 132, 136], "aim": [4, 33, 52, 70, 74, 75, 95, 139, 140, 141, 142, 143, 145, 146, 148, 150], "akin": [11, 28, 49], "al": [61, 131, 159, 160], "algorithm": [4, 22, 23, 28, 30, 32, 35, 38, 48, 49, 90, 91, 110, 120, 139, 141, 145, 150, 155, 159, 160, 161, 163, 186], "alia": [25, 28, 29, 36, 48, 52, 64, 81, 90, 91], "align": [72, 80, 81, 154, 156, 157, 161, 162, 166], "align_pred_and_target_shap": [8, 77, 86], "all": [1, 4, 11, 14, 16, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 38, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 58, 64, 67, 73, 80, 81, 82, 83, 85, 87, 88, 90, 91, 95, 97, 103, 110, 115, 116, 120, 122, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 171, 173, 174, 175, 178, 181, 182, 184], "all_client_metr": 82, "all_h_u_per_sampl": 74, "all_h_u_per_v_i": 74, "alloc": [176, 183], "allow": [4, 10, 11, 13, 14, 21, 23, 24, 28, 30, 31, 36, 38, 39, 41, 43, 47, 49, 53, 64, 74, 79, 87, 88, 90, 91, 97, 107, 110, 128, 132, 136, 142, 145, 148, 154, 156, 157, 159, 161, 162, 172, 174, 175, 186], "almost": 165, "along": [1, 4, 13, 22, 23, 29, 30, 31, 36, 38, 41, 42, 47, 50, 53, 80, 81, 82, 83, 86, 97, 100, 111, 144, 155, 156, 157, 158, 161, 162, 178], "alongsid": [42, 117], "alpha": [23, 27, 45, 46, 94, 162, 171], "alpha_lr": 94, "alpha_new": 162, "alreadi": [1, 7, 10, 11, 12, 22, 23, 29, 41, 42, 47, 50, 110, 116, 132, 136, 161, 176], "also": [1, 4, 13, 21, 23, 24, 25, 27, 28, 29, 35, 38, 42, 45, 46, 48, 49, 50, 51, 52, 53, 74, 81, 87, 88, 90, 91, 98, 100, 101, 107, 119, 120, 122, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 156, 157, 158, 159, 160, 161, 162, 166, 171, 173, 175, 181, 186], "alter": 1, "altern": [110, 171], "alwai": [10, 12, 21, 24, 30, 47, 49, 50, 80, 81, 87, 88, 107, 120, 132, 133, 136, 164, 181], "always_preprocess": 50, "ambigu": 86, "among": 157, "amount": [142, 143, 146, 150, 158, 160], "an": [1, 4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 64, 68, 78, 79, 80, 81, 85, 87, 88, 90, 91, 95, 96, 99, 101, 103, 105, 106, 107, 108, 110, 119, 120, 122, 132, 133, 134, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 169, 171, 172, 175, 177, 178, 180, 181, 183, 185, 187, 189], "analysi": [1, 110, 161], "analyt": 126, "analyz": 57, "ani": [1, 10, 11, 13, 14, 22, 23, 24, 25, 27, 29, 31, 33, 36, 41, 42, 45, 46, 48, 50, 52, 58, 60, 61, 81, 89, 92, 94, 97, 98, 108, 116, 117, 118, 119, 120, 121, 122, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 157, 159, 160, 161, 167, 170, 171, 172, 173, 175, 181, 182, 185, 186, 187, 188], "announc": [23, 50], "anoth": [4, 7, 103, 105, 106, 122, 166, 171, 183, 185], "anticip": 4, "anyth": [4, 23, 27, 28, 29, 42, 90, 91, 103, 142], "apfl": [4, 22, 23, 27, 45, 46, 50, 94], "apfl_bas": [8, 93], "apfl_client": [8, 20], "apflclient": [8, 20, 22], "apflmodul": [8, 93, 94], "api": 4, "app": 144, "appear": [1, 81], "append": [23, 50, 64, 77, 78, 79, 84, 178], "appendix": 171, "appli": [1, 4, 16, 17, 18, 21, 23, 25, 27, 29, 41, 45, 46, 50, 53, 57, 60, 64, 70, 79, 87, 88, 90, 91, 94, 101, 103, 105, 106, 110, 127, 130, 131, 148, 162, 165, 172, 173, 175, 176, 181], "applic": [4, 10, 64, 92, 104, 127, 131, 158, 160, 181], "apply_adaptive_drift_to_cli": [8, 87, 88], "apply_layer_filt": [113, 116], "approach": [11, 33, 35, 37, 42, 51, 52, 72, 94, 98, 111, 154, 155, 158, 161, 162, 185], "appropri": [21, 23, 30, 33, 36, 48, 52, 80, 87, 88, 90, 91, 95, 153, 171], "approv": 1, "approx": 155, "approxim": [27, 45, 46, 74, 110, 130, 161], "ar": [1, 4, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 70, 71, 72, 74, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 115, 116, 119, 120, 122, 128, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 187], "arbitrari": [23, 119, 122, 133, 134, 156, 157, 175], "architectur": [4, 13, 28, 38, 90, 91, 94, 95, 98, 148, 154, 166], "area": [77, 84, 156, 157], "aren": 39, "arg": [87, 88, 89, 90, 91, 92, 109, 175, 185, 187], "argmax": 171, "argument": [7, 10, 12, 23, 27, 41, 45, 46, 79, 80, 81, 85, 110, 132, 133, 134, 136, 148, 169, 172, 175, 181], "around": [1, 101, 140], "arrai": [21, 87, 88, 115, 119, 147, 153, 162, 165, 166, 175, 182, 183, 184, 187], "arrang": 161, "art": 4, "articl": [52, 75], "artifact": [139, 140, 141, 142, 143, 145, 146, 148, 150], "arxiv": [22, 33, 34, 35, 36, 37, 42, 53, 61, 70, 98, 99, 101, 145, 150, 154, 155, 158, 162, 165, 166, 171, 175], "as_dict": [168, 178], "ask": [38, 139, 140, 141, 142, 143, 145, 146, 148, 150], "assert": 14, "assertionerror": [47, 77, 84, 86], "assess": 72, "assign": [183, 187], "assist": 14, "associ": [1, 10, 12, 14, 17, 23, 24, 30, 31, 37, 39, 42, 48, 52, 57, 67, 73, 75, 77, 78, 79, 80, 81, 83, 84, 92, 94, 95, 111, 112, 119, 122, 132, 136, 144, 149, 150, 154, 155, 166, 171, 172, 182, 183, 184, 185], "assum": [13, 21, 22, 23, 24, 27, 28, 29, 30, 38, 41, 42, 45, 46, 47, 50, 51, 53, 71, 74, 77, 80, 81, 84, 86, 87, 88, 90, 91, 95, 99, 103, 105, 106, 110, 111, 115, 116, 130, 131, 144, 155, 159, 161, 162, 164, 166, 169, 171, 172, 175, 181, 183], "assumpt": [86, 95, 97], "astral": 1, "attach": 42, "attempt": [4, 10, 12, 30, 39, 52, 80, 81, 86, 183, 185], "attent": 172, "attribut": [10, 11, 14, 22, 23, 24, 25, 27, 28, 29, 30, 33, 38, 45, 46, 47, 49, 50, 53, 77, 78, 79, 81, 84, 90, 91, 97, 143, 146, 159, 170, 174, 175, 188], "attribute_nam": 170, "attribute_snapshot": 188, "auc": [77, 84], "aucroc": [77, 84], "augment": [32, 50, 172, 181], "auto": 95, "autocast": 50, "autodocstr": 1, "autoencod": [8, 95, 123, 173], "autoencoderdatasetconvert": [8, 168, 173], "autoencoderprocess": [123, 124, 125], "autoencoders_bas": [8, 93], "autograd": 175, "autom": 1, "automat": [1, 7, 11, 41, 99, 175], "auxiliari": [21, 87, 88, 117, 160], "avail": [1, 4, 11, 13, 16, 18, 142, 150, 154, 164, 166, 173], "available_cli": [154, 164], "averag": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 77, 79, 80, 81, 84, 93, 96, 143, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 178, 181], "avoid": [14, 77, 84, 132, 136, 181, 186], "awai": [27, 45, 46, 110, 120], "awar": 39, "axi": [80, 81, 96], "b": [23, 50, 161, 171], "b_1": 171, "b_2": 171, "b_i": 171, "b_k": [131, 171], "back": [10, 12, 23, 30, 31, 47, 51, 103, 105, 106, 110, 155, 166, 181], "background": [80, 81, 90, 91, 181], "backprop": [22, 23, 41, 42, 50], "backpropag": 29, "backward": [21, 23, 27, 28, 29, 38, 41, 42, 45, 46, 48, 49, 53, 168, 175, 178], "balanc": [77, 84], "balanced_accuraci": [77, 84], "balanced_accuracy_scor": [77, 84], "balancedaccuraci": [8, 77, 84], "bar": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 169], "base": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 189], "base_loss": 126, "base_metr": [8, 77], "base_model": 112, "base_modul": [98, 101, 107, 112], "base_report": [8, 132], "base_sampling_manag": [8, 15], "base_serv": [7, 8, 137], "basecli": [87, 88], "basedataset": [8, 127, 168, 172, 187], "baseestim": 64, "baseexcept": [144, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166], "basefractionsamplingmanag": [8, 15, 16, 18, 19, 155, 166], "basereport": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150], "baseservercheckpointandstatemodul": [8, 9, 13, 142, 143], "basi": [74, 81, 130], "basic": [10, 13, 23, 50, 51, 53, 88, 90, 125, 135, 139, 141, 148, 159, 172], "basic_cli": [7, 8, 20], "basic_exampl": 7, "basic_fedavg": [8, 152], "basica": [8, 93, 95], "basiccli": [7, 8, 10, 11, 14, 20, 21, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 89, 132, 136, 174], "basicfedavg": [8, 146, 152, 154, 155, 156, 157, 158, 161, 163, 166], "batch": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 70, 71, 79, 80, 81, 95, 96, 97, 106, 119, 130, 131, 146, 150, 155, 169, 176, 181], "batch_dim": [80, 81], "batch_siz": [7, 50, 57, 60, 70, 71, 75, 77, 81, 84, 97, 100, 107, 111, 112, 146, 150, 176, 181], "batchnorm": 185, "batchnorm2d": 33, "bayesian": [145, 162], "bayesian_aggreg": 162, "becaus": [11, 36, 50, 80, 110, 115, 147, 155, 172, 181], "becom": 16, "been": [1, 4, 7, 11, 13, 21, 23, 25, 30, 31, 35, 47, 53, 81, 82, 85, 87, 88, 90, 91, 95, 97, 103, 108, 110, 116, 119, 142, 147, 148, 155, 169, 171, 173, 175, 183], "befor": [1, 7, 11, 13, 16, 23, 25, 27, 28, 32, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 74, 79, 90, 91, 107, 108, 130, 132, 136, 139, 140, 141, 142, 143, 145, 147, 149, 150, 156, 157, 158, 160, 161, 172, 173, 174, 181], "begin": [23, 38, 50, 51, 101, 142, 145, 162], "behavior": [21, 30, 31, 43, 50, 79, 80, 87, 88, 139, 140, 141, 142, 143, 145, 146, 150, 159, 181], "behind": 161, "being": [4, 12, 13, 14, 21, 23, 24, 25, 28, 30, 34, 37, 38, 39, 47, 48, 49, 51, 52, 53, 76, 79, 80, 81, 86, 87, 88, 90, 91, 112, 121, 130, 142, 143, 146, 148, 150, 154, 166, 181], "believ": 110, "belong": [92, 112, 119, 122, 157, 161], "below": [1, 24, 77, 79, 80, 81, 84, 85, 115, 171], "benchmark": 186, "bernoulli": [103, 105, 106, 162, 175], "bernoulli_prob": 175, "bernoullisampl": [8, 168, 175], "best": [4, 174], "bestlossopacuscheckpoint": [8, 9, 12], "bestlosstorchmodulecheckpoint": [8, 9, 10], "bestmetrictorchmodulecheckpoint": [8, 9, 10], "beta": [23, 27, 45, 46, 74, 101, 145, 155, 162, 171, 183, 187], "beta_1": 163, "beta_2": 163, "beta_global_update_interv": [45, 46], "beta_new": 162, "beta_with_extreme_kernel_base_valu": [69, 74], "better": [1, 4, 10], "between": [4, 22, 23, 24, 25, 27, 28, 32, 34, 36, 37, 38, 42, 45, 46, 48, 49, 51, 53, 70, 71, 72, 73, 74, 75, 76, 79, 80, 86, 101, 103, 105, 106, 114, 117, 120, 122, 126, 162, 176], "bia": [103, 105, 106, 171], "bias": [106, 132, 136], "bias_scor": 120, "bin": 1, "binar": [80, 81], "binari": [50, 62, 68, 77, 80, 81, 84, 86, 103, 105, 106, 120, 155, 162, 181], "binaryclassificationmetr": [8, 77, 80, 81], "binarydic": [8, 77, 80], "binarysoftdicecoeffici": [8, 77, 84], "bit": [13, 24, 142, 145, 155, 165, 181], "blank": [139, 140, 141, 142, 143, 145, 146, 150], "blob": [50, 94, 101, 131], "block": [79, 103, 161, 181], "blur": 172, "bool": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 64, 67, 72, 73, 74, 87, 88, 89, 90, 91, 94, 97, 99, 100, 101, 103, 104, 105, 106, 110, 112, 116, 120, 125, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 173, 174, 181, 185, 186, 188], "boolean": [21, 23, 24, 28, 30, 38, 49, 51, 87, 88, 90, 91, 97, 106, 175, 185, 188], "both": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 79, 80, 81, 86, 90, 91, 94, 95, 96, 100, 103, 106, 111, 139, 140, 141, 142, 143, 145, 146, 148, 150, 166, 170, 172], "bound": [24, 103, 105, 106, 130, 131, 155, 165, 187], "branch": 1, "break": [1, 4, 36, 183], "buf": 181, "buffer": [27, 45, 46, 97, 181], "bug": 171, "built": [1, 4, 155, 166], "byte": [30, 67, 89, 160, 163, 188], "bytessnapshott": [8, 168, 188], "c": [1, 24, 53, 106, 166, 171], "c_": 166, "c_i": 53, "c_t": 155, "c_updat": 166, "cach": 50, "calcul": [4, 22, 23, 25, 30, 38, 42, 48, 52, 53, 77, 79, 80, 81, 84, 101, 107, 120, 126, 155, 159, 166, 169, 181], "calculate_class_sample_proport": [20, 42], "calculate_parameters_norm": [20, 24], "calculate_update_with_momentum": [152, 155], "call": [1, 7, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 32, 36, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 87, 88, 90, 91, 95, 97, 122, 132, 133, 134, 135, 136, 142, 145, 156, 157, 162, 175, 185, 187], "callabl": [1, 57, 60, 61, 79, 92, 95, 97, 120, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 172, 173, 176, 181], "can": [1, 7, 14, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 41, 42, 45, 46, 47, 49, 50, 53, 70, 72, 74, 80, 81, 87, 88, 95, 97, 99, 110, 119, 121, 125, 128, 130, 132, 136, 142, 147, 148, 155, 156, 157, 159, 160, 161, 162, 164, 166, 167, 169, 173, 175, 181, 186], "cancer": 60, "cannot": [86, 132, 136], "capabl": 95, "carri": 143, "case": [21, 22, 23, 27, 28, 31, 45, 47, 52, 80, 81, 87, 88, 90, 91, 122, 132, 133, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 161, 162, 164, 165, 169, 178, 181], "categor": [67, 85], "categori": [42, 67], "caus": [139, 140, 141, 142, 143, 145, 146, 148, 150], "cc": 70, "cdot": [24, 53, 79, 80, 85, 94, 95, 101, 110, 166, 171], "cell": 58, "cell_typ": 58, "center": [110, 165, 171], "center_data": [93, 110], "central": [130, 154, 155, 156, 157, 158, 161, 162, 164, 166], "certain": [12, 112, 157, 186], "cfg_fn": 148, "chang": [1, 7, 14, 35, 64, 121, 132, 136, 158, 159, 160], "channel": [77, 80, 81, 84, 103, 106, 148], "charact": 181, "check": [14, 23, 29, 30, 39, 50, 97, 104, 132, 134, 136, 159, 169, 170, 181, 182], "check_config": [8, 168, 170], "check_if_batch_is_empty_and_verify_input": [8, 168, 169], "check_shape_match": [8, 168, 182], "check_target_prediction_keys_equ": [77, 83], "checker": 1, "checkpoint": [1, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 90, 91, 97, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 159, 174, 178], "checkpoint_and_state_modul": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 139, 140, 141, 142, 143, 145, 146, 148, 150], "checkpoint_dict": 14, "checkpoint_dir": [10, 11, 12, 14], "checkpoint_exist": [9, 14], "checkpoint_nam": [10, 11, 12, 14], "checkpoint_path": [10, 12, 13, 14], "checkpoint_score_funct": [10, 12], "checkpoint_score_nam": [10, 12], "checkpointing_path": [125, 127], "checkpointmod": [8, 9, 11], "checkpointscorefunctiontyp": 10, "child": [13, 23, 29, 31, 38, 47, 50, 108, 142, 178, 181], "choic": 1, "choos": 110, "chosen": [110, 142, 145, 173], "cid": [16, 159, 175], "cifar10": 176, "cifarcli": 7, "circular": 103, "clarifi": 1, "class": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 189], "classif": [37, 38, 42, 77, 81, 84, 86, 100, 107, 111, 112], "classifi": [4, 34, 36, 77, 84, 112], "classificationmetr": [8, 77, 81], "classificationoutcom": [8, 77, 81], "classmethod": [103, 105, 106, 159], "clear": [8, 77, 78, 79, 81, 83, 84, 97, 168, 178], "clear_buff": [93, 97], "client": [4, 8, 10, 11, 13, 14, 16, 17, 18, 19, 57, 58, 61, 75, 82, 87, 88, 90, 91, 95, 100, 101, 111, 114, 116, 117, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 173, 174, 175, 181, 183, 186], "client_": 14, "client_base_typ": [88, 90], "client_batch_s": 130, "client_dataset_s": 130, "client_dp_fedavgm": [8, 152], "client_instruct": 149, "client_level_dp_fed_avg_serv": [8, 137], "client_manag": [7, 8, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 159, 164, 166, 167], "client_model_upd": 165, "client_modul": [8, 9], "client_nam": [14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61], "client_num": [57, 58], "client_result": 175, "client_sampling_r": 130, "client_singular_valu": 161, "client_singular_vector": 161, "clientcheckpointandstatemodul": [8, 9, 11, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53], "clientlevelaccount": [8, 129, 130], "clientleveldpfedavgm": [8, 143, 152, 155], "clientleveldpfedavgserv": [8, 137, 143], "clientmanag": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 159, 164, 166], "clientproxi": [16, 17, 18, 19, 144, 149, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 175], "clientstatecheckpoint": [8, 9, 11, 14], "clip": [4, 13, 23, 24, 41, 50, 130, 131, 155, 165], "clip_paramet": [20, 24], "clipping_bit": 155, "clipping_bound": [24, 43, 165], "clipping_cli": [8, 20], "clipping_learning_r": 155, "clipping_noise_multipli": 155, "clipping_quantil": 155, "clippingbitservercheckpointandstatemodul": [8, 9, 13], "clone": [48, 169], "clone_and_freeze_model": [8, 168, 169], "close": [4, 37], "cnn_model": 7, "code": [4, 61, 72, 79, 171, 175], "codebas": 1, "codecov": 1, "codestyl": 1, "coeffici": [4, 21, 74, 77, 80, 84, 158, 166], "coincid": 74, "collabor": 7, "collaps": 181, "collapse_one_hot_tensor": [8, 168, 181], "collat": 31, "collect": [1, 159, 160, 178], "column": [61, 64, 110, 161], "com": [28, 50, 52, 61, 70, 72, 75, 90, 91, 94, 101, 131, 171, 181, 186], "combin": [4, 22, 38, 42, 75, 94, 108, 155, 160, 175], "come": [1, 81, 175], "comm": 94, "command": 1, "commenc": 7, "comment": 1, "commit": 1, "common": 7, "commun": [13, 35, 47, 51, 142, 155], "compar": [1, 51, 73, 81, 110, 120, 122], "comparison": [73, 120], "compat": [35, 38, 43, 77, 79, 84, 94, 95, 107, 108, 112, 132, 136, 172, 175, 181, 185], "compil": 50, "complement": 80, "complet": [4, 22, 23, 27, 45, 46, 48, 97, 128, 130], "complex": 13, "compliant": 185, "complic": 121, "compon": [4, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 75, 80, 99, 101, 107, 110, 127, 128, 142, 145, 148, 161, 171], "compos": [81, 126], "composit": 108, "compound_metr": [8, 77], "compress": [4, 35], "comput": [8, 10, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 99, 101, 103, 105, 106, 110, 126, 127, 130, 142, 143, 146, 153, 155, 161, 164, 165, 166, 168, 175, 178, 181], "compute_all_h_u_all_sampl": [69, 74], "compute_all_h_u_from_inner_product": [69, 74], "compute_all_h_u_from_inner_products_linear": [69, 74], "compute_all_h_u_linear": [69, 74], "compute_conditional_input": [20, 42], "compute_contrastive_loss": [69, 73], "compute_cosine_similarity_loss": [69, 73], "compute_cumulative_explained_vari": [93, 110], "compute_dice_on_count_tensor": [8, 77, 85], "compute_euclidean_inner_product": [69, 74], "compute_euclidean_inner_products_linear": [69, 74], "compute_evaluation_loss": [20, 23, 25, 26, 27, 28, 29, 48, 52, 87, 89, 90, 91], "compute_explained_variance_ratio": [93, 110], "compute_from_count": [77, 80, 81], "compute_h_u_from_inner_product": [69, 74], "compute_h_u_from_inner_products_linear": [69, 74], "compute_hat_d_per_kernel": [69, 74], "compute_hat_q_k": [69, 74], "compute_hat_q_k_linear": [69, 74], "compute_kernel": [69, 72], "compute_loss_and_additional_loss": [20, 22, 23, 25, 26, 27, 28, 44, 45, 46, 48, 50, 52, 87, 89], "compute_magnitude_level_loss": [20, 42], "compute_mkmmd": [69, 74], "compute_negative_similar": [69, 70], "compute_parameter_delta": [152, 166], "compute_parameters_delta": [20, 53], "compute_penalty_loss": [8, 20, 21, 87, 88], "compute_perfcl_loss": [69, 73], "compute_projection_vari": [93, 110], "compute_reconstruction_error": [93, 110], "compute_training_loss": [20, 21, 23, 26, 27, 28, 29, 38, 42, 44, 45, 46, 48, 49, 87, 89], "compute_updated_control_vari": [20, 53, 152, 166], "compute_updated_paramet": [152, 166], "compute_updated_weight": [152, 166], "compute_vertic": [69, 74], "compute_weight_update_and_clip": [20, 24], "concaten": [21, 28, 53, 64, 87, 88, 90, 91, 93, 95, 108], "concept": [13, 39, 163], "conclud": [25, 52], "concret": 81, "concurr": 149, "cond_vec_s": 173, "conda": 1, "condit": [42, 95, 101, 106, 125, 173, 175], "condition_vector_s": 173, "conditional_beta": 101, "conditional_gamma": 101, "conditionalva": [8, 93, 95], "config": [1, 7, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 87, 88, 89, 90, 91, 114, 115, 116, 118, 122, 132, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 181], "config_path": 170, "configur": [1, 21, 25, 31, 35, 39, 43, 47, 50, 51, 52, 73, 77, 81, 84, 87, 88, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170], "configure_evalu": [137, 144, 148, 152, 154, 155, 159, 164], "configure_fit": [148, 152, 154, 155, 159, 164], "configure_fit_al": [152, 166], "configure_pol": [142, 152, 154, 167], "conform": 1, "conjug": 162, "conjunct": [77, 78, 79, 81, 84], "connect": [4, 35, 103, 159], "consequ": 110, "consid": [1, 4, 13, 70, 79, 86, 169], "consist": [29, 38, 101, 122, 127, 156, 157, 166], "constant": [8, 21, 62, 130, 155, 158, 160, 181], "constitut": [157, 183], "constrain": [4, 27, 28, 38, 45, 48, 49, 52, 73, 76, 87, 88, 90, 91], "constrained_fenda_cli": [8, 20], "constrainedfendacli": [8, 20, 25], "constrainedfendalosscontain": [8, 25, 69, 73], "constraint": [13, 25, 28, 38, 49, 87, 88, 90, 91, 158, 160], "constraint_tensor": 76, "construct": [14, 57, 60, 61, 67, 74, 101, 116, 120, 157, 166, 183, 187], "construct_covariance_matrix": [168, 171], "construct_quadrupl": [69, 74], "construct_rxrx1_tensor_dataset": [55, 56, 57], "construct_skin_cancer_tensor_dataset": [55, 59, 60], "constructor": [50, 116], "contain": [4, 21, 23, 24, 25, 27, 28, 29, 30, 36, 38, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 57, 58, 60, 61, 73, 75, 80, 81, 83, 87, 88, 90, 91, 101, 115, 119, 122, 126, 127, 128, 133, 134, 142, 143, 144, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 181, 182, 184, 186, 187, 188], "content": [1, 86], "context": [10, 14, 90, 91, 101, 175], "continu": [1, 4, 77, 80, 81, 84, 85, 86], "contrast": [4, 23, 25, 41, 48, 52, 70, 73, 75, 99, 107, 112, 161], "contrastive_loss": [8, 25, 48, 69], "contrastive_loss_config": 73, "contrastive_loss_minim": 25, "contrastive_loss_weight": 73, "contrastive_weight": 48, "contribut": [4, 10, 81, 82, 156, 157, 162], "control": [1, 4, 23, 42, 51, 53, 119, 150, 163, 166, 181, 183, 187], "control_variates_upd": 166, "conv": 103, "conv1d": 103, "conv2d": 103, "conv3d": 103, "conv_modul": 103, "conveni": [90, 91], "convent": 1, "converg": 67, "convers": [173, 181, 185], "convert": [35, 60, 85, 86, 90, 103, 104, 106, 119, 157, 173, 175, 176, 181, 182, 183, 184, 185], "convert_dataset": [168, 173], "convert_deep_supervision_dict_to_list": [8, 168, 181], "convert_deep_supervision_list_to_dict": [8, 168, 181], "convert_model_to_opacus_model": [8, 168, 185], "convert_to_masked_model": [93, 102, 104], "converter_funct": 173, "convex": [4, 22], "convolut": 103, "convolv": 103, "convtranspose1d": 103, "convtranspose2d": 103, "convtranspose3d": 103, "coo": [13, 119, 122, 157], "coordin": [23, 30, 36, 47, 51, 157], "copi": [38, 50, 51, 104, 105, 106], "core": 1, "core_protocol": [8, 87], "correct": [1, 4, 53, 81, 86, 149, 155], "correctli": [11, 13, 36, 159], "correspond": [10, 13, 21, 22, 23, 28, 29, 41, 42, 49, 50, 51, 53, 67, 75, 76, 77, 80, 81, 84, 86, 87, 88, 90, 91, 94, 101, 110, 111, 116, 119, 120, 131, 155, 161, 162, 165, 170, 172, 175, 178, 183], "cos_sim_loss": 25, "cos_sim_loss_weight": 73, "cosin": [25, 70, 71, 73, 101], "cosine_similarity_loss": [8, 25, 69], "cosine_similarity_loss_config": 73, "cosinesimilarityloss": [8, 69, 71], "cosinesimilaritylosscontain": [8, 69, 73], "could": [81, 87, 88, 101, 173, 188], "count": [23, 47, 50, 57, 80, 81, 82, 85, 142, 143, 146, 153, 154, 155, 156, 157, 158, 161, 162, 166, 175, 176], "count_tp_fp_tn_fn": [77, 81], "cov": [8, 42, 93, 101], "covari": [74, 119, 171], "cover": 162, "cpu": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 125, 169], "creat": [1, 10, 12, 14, 50, 57, 83, 88, 94, 127, 132, 136, 169, 170, 172, 176, 187], "create_plan": [20, 50], "create_split": [55, 56, 57], "creation": [1, 13, 173], "criteria": [110, 116, 158, 160, 174], "criterion": [11, 16, 17, 18, 19, 21, 48, 51, 52, 87, 89, 90, 91, 121, 122], "critic": [168, 189], "cross": [49, 70], "crossentropyloss": 7, "csv": 58, "ctx": 175, "cubla": 186, "cublas_workspace_config": 186, "cuda": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 169, 186], "current": [1, 11, 13, 21, 23, 24, 25, 27, 28, 30, 32, 36, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 52, 75, 81, 87, 88, 90, 91, 108, 120, 122, 132, 133, 134, 136, 142, 144, 145, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 169, 175, 178, 181, 183], "current_epoch": [23, 50], "current_round": [22, 23, 27, 36, 39, 45, 46, 50], "current_server_round": [7, 23, 25, 27, 28, 32, 36, 38, 39, 42, 45, 46, 48, 49, 50, 52, 89, 90, 91], "curv": [77, 84], "custom": [21, 22, 23, 24, 25, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 47, 49, 50, 53, 87, 88, 90, 91, 142, 144, 145, 148, 150, 152, 154, 159, 160, 166, 173, 175, 185], "custom_converter_funct": 173, "customtemplatepath": 1, "cvae": [95, 125, 126], "cvaefixedconditionprocessor": [123, 124, 125], "cvaevariableconditionprocessor": [123, 124, 125], "cycl": [155, 158, 174], "d": [110, 161, 172, 183, 187], "data": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 67, 72, 74, 83, 90, 91, 95, 96, 101, 110, 125, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 161, 162, 169, 171, 172, 173, 175, 176, 181, 183, 187], "data_dir": [60, 176], "data_gener": [8, 168], "data_identifi": 50, "data_load": 31, "data_path": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 61, 176], "data_shap": 173, "datafram": [57, 58, 61, 64, 67], "dataload": [7, 23, 24, 27, 28, 29, 30, 31, 33, 38, 42, 43, 45, 46, 47, 49, 50, 53, 57, 60, 89, 90, 91, 127, 173, 176, 181], "datapoint": [57, 131, 172, 183, 187], "dataset": [7, 8, 23, 27, 28, 30, 31, 36, 42, 47, 49, 50, 77, 80, 82, 84, 90, 91, 127, 130, 131, 148, 154, 155, 156, 157, 158, 161, 162, 164, 166, 168, 171, 173, 176, 181, 183, 187], "dataset_convert": [8, 60, 168, 176], "dataset_dir": 58, "dataset_fingerprint": 50, "dataset_id": 50, "dataset_json": 50, "dataset_nam": [50, 60, 180], "dataset_path": 7, "dataset_typ": 57, "datasetconvert": [8, 60, 168, 173, 176], "ddp": 4, "deal": [85, 172], "debug": [1, 50, 132, 136, 168, 189], "decai": [42, 181], "decathelon": 176, "decid": [10, 11, 13, 95], "decis": [10, 12], "decod": [93, 95], "decode_and_pseudo_sort_result": [8, 168, 175], "decomposit": [110, 161], "decor": 181, "decreas": [158, 160, 181], "deep": [27, 50, 72, 131, 148, 175, 181], "deep_mmd_client": [8, 20], "deep_mmd_loss": [8, 69], "deep_mmd_loss_weight": 27, "deepmmdloss": [8, 69, 72], "def": [7, 175], "default": [10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 57, 60, 64, 67, 68, 71, 72, 73, 74, 75, 77, 79, 80, 81, 84, 86, 87, 88, 94, 95, 99, 100, 101, 103, 105, 106, 107, 108, 110, 112, 115, 120, 125, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 174, 176, 181, 183, 185, 186, 187], "defaultdict": 82, "defin": [1, 7, 10, 11, 12, 13, 14, 22, 23, 25, 29, 30, 31, 36, 38, 39, 42, 47, 50, 74, 77, 78, 79, 80, 81, 84, 94, 95, 101, 108, 110, 126, 132, 136, 146, 147, 148, 150, 159, 161, 173, 174, 175, 176, 181, 185], "define_metr": [8, 132, 136], "definit": [10, 13, 164], "degre": [72, 163], "deleg": 41, "delet": [14, 132, 136], "delete_from_snapshot_attr": [9, 14], "delta": [24, 130, 131, 143, 146, 150, 166], "delta_control_vari": 53, "delta_model_weight": 53, "denomin": [77, 84, 106, 165], "denot": [75, 161], "dens": [119, 157], "depend": [1, 7, 23, 30, 36, 51, 80, 81, 95, 99, 108, 112, 132, 136, 154, 185], "depth": 97, "deriv": [14, 23, 24, 27, 28, 29, 33, 38, 45, 46, 49, 50, 52, 53, 90, 91, 139, 141, 172], "derm7pt": 61, "derm7pt_image_path_func": [55, 59, 61], "derm7pt_label_map_func": [55, 59, 61], "descent": 181, "describ": [1, 37, 39, 42, 74, 101, 132, 136, 155, 171], "descript": [131, 171], "design": [4, 39, 172, 173], "desir": [1, 21, 23, 24, 28, 30, 38, 47, 49, 53, 81, 87, 88, 90, 91, 97, 100, 103, 122, 131, 153, 170], "despit": 49, "detach": [28, 38, 90, 91], "detail": [1, 110, 116, 122, 157, 162, 171, 175, 186], "determin": [10, 11, 12, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 85, 87, 88, 90, 91, 99, 101, 108, 122, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 174, 175, 181, 185, 186, 187], "determinist": [175, 186], "dev": [1, 130, 165], "develop": 4, "deviat": [120, 131, 165, 171], "devic": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 70, 71, 72, 73, 74, 75, 76, 87, 89, 90, 91, 103, 105, 106, 125, 169], "diagon": [161, 171], "dice": [77, 80, 84, 85], "dict": [1, 10, 11, 12, 13, 14, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 67, 87, 88, 89, 90, 91, 94, 96, 97, 100, 101, 108, 111, 112, 120, 122, 128, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 176, 178, 181, 183, 186, 188], "dictionari": [10, 12, 14, 21, 22, 23, 25, 27, 28, 29, 30, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 57, 60, 61, 77, 78, 79, 81, 83, 84, 87, 88, 90, 91, 94, 96, 97, 101, 108, 111, 112, 119, 122, 128, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 169, 170, 172, 176, 178, 181, 188], "dictionary_kei": 170, "dictionarydataset": [8, 168, 172, 187], "differ": [4, 13, 23, 29, 30, 32, 36, 38, 39, 47, 49, 50, 53, 73, 80, 81, 86, 119, 120, 121, 131, 144, 156, 157, 162, 166, 171, 181, 183], "differenti": [4, 12, 24, 43, 53, 76, 95, 131, 143, 146, 150, 155, 175], "dilat": 103, "dim": [71, 181], "dim_reduct": [123, 124], "dimens": [42, 71, 72, 74, 77, 80, 81, 84, 85, 86, 95, 96, 97, 101, 103, 106, 127, 171, 172, 175, 181], "dimension": [31, 95, 110, 126, 127], "dir": [14, 31], "direct": [4, 166], "directli": [1, 161, 175], "directori": [1, 10, 11, 12, 13, 14, 57, 58, 60, 174, 176], "dirichlet": [183, 187], "dirichletlabelbasedalloc": [8, 168, 183], "dirichletlabelbasedsampl": [8, 168, 187], "disabl": [28, 49, 97, 186], "disable_accumulating_featur": [93, 97], "disable_torch_benchmark": 186, "discard": [81, 157, 187], "disconnect": 142, "discrep": [72, 74], "discuss": [38, 155], "disk": [14, 31, 50], "displai": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 132, 136, 169, 182], "display_progress_bar": 169, "distanc": [27, 45, 46, 72, 74], "distinct": [11, 36, 38, 111, 139, 140, 141, 142, 143, 145, 146, 148, 150], "distribut": [4, 7, 27, 45, 46, 72, 95, 126, 148, 161, 162, 171, 183, 187], "ditto": [4, 11, 23, 27, 28, 38, 45, 46, 49, 87, 90, 139], "ditto_cli": [8, 20], "ditto_deep_mmd_cli": [20, 26], "ditto_mkmmd_cli": [20, 44], "ditto_serv": [137, 138], "dittocli": [8, 20, 27, 28, 38, 45], "dittodeepmmdcli": [20, 26, 27], "dittomkmmdcli": [20, 44, 45], "dittopersonalizedmixin": [8, 87, 90, 91], "dittopersonalizedprotocol": [8, 87, 90, 91], "dittoserv": [137, 138, 139], "diverg": 126, "divid": [77, 82, 84, 120, 163], "divis": [74, 80, 85], "dk": 72, "dkfz": [50, 181], "dl_name": 50, "do": [1, 4, 7, 12, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 81, 103, 105, 106, 121, 132, 136, 142, 147, 148, 159, 161, 167, 182, 187], "do_one_hot_encod": 173, "doc": [1, 103, 110, 119, 122, 131, 132, 136, 157, 186], "docstr": [1, 116], "docstringformat": 1, "document": [4, 50, 73, 75, 80, 81, 110, 132, 136, 160, 186], "doe": [1, 10, 12, 14, 47, 50, 87, 88, 90, 91, 94, 106, 132, 136, 148, 157, 161, 164, 176, 183], "doesn": [11, 86], "domain": [4, 74, 80, 159, 160], "don": [28, 31, 38, 80, 90, 91, 172, 181], "done": [1, 4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 81, 90, 91, 110, 130, 131, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 154, 155, 156, 157, 161, 171], "down": [23, 50, 135, 165], "download": [7, 176], "downsampl": 187, "downsampling_ratio": 187, "downstream": 31, "dp": [4, 13, 43, 130, 131, 143, 146, 150, 155, 185], "dpevent": 131, "dpscaffoldcli": [8, 20, 53], "dpscaffoldserv": [8, 137, 150], "dpscaffoldservercheckpointandstatemodul": [8, 9, 13, 150], "draw": 171, "drawn": [72, 171, 183], "drift": [4, 21, 27, 28, 32, 38, 39, 45, 46, 49, 53, 87, 88, 120, 158, 163], "drift_penalty_tensor": [87, 88, 90, 91], "drift_penalty_weight": [32, 87, 88, 90, 91], "drop": [80, 85], "dtype": [24, 80, 81, 89, 103, 105, 106, 116, 117, 118, 119, 120, 121, 122, 161], "due": [4, 50, 155, 162], "dummi": [10, 144], "dump": [8, 132, 134], "dure": [4, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 75, 79, 80, 81, 87, 88, 90, 91, 94, 95, 97, 101, 103, 105, 106, 119, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 173, 175], "dynam": [51, 52, 88, 121, 156, 169], "dynamiclayerexchang": [8, 113, 114, 116, 120], "e": [10, 13, 14, 21, 22, 23, 24, 29, 41, 42, 48, 50, 53, 64, 80, 81, 83, 86, 100, 103, 105, 110, 131, 132, 133, 134, 136, 150, 155, 164, 166, 173, 175], "each": [1, 4, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 60, 64, 70, 72, 79, 80, 81, 82, 83, 85, 90, 91, 95, 97, 100, 101, 103, 105, 110, 111, 116, 121, 122, 125, 130, 131, 134, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 171, 174, 175, 178, 181, 183, 187], "earli": [14, 39, 174], "early_stop_valid": [168, 177], "early_stopp": [8, 168], "earlystopp": [8, 168, 174], "easi": 4, "easiest": [1, 7], "effect": [1, 4, 35, 64, 162, 186], "effici": [4, 35, 81, 110, 161, 185], "efficient_metr": [8, 77], "efficient_metrics_bas": [8, 77], "eg": [81, 181], "eigenvector": 110, "either": [10, 11, 12, 42, 50, 68, 80, 81, 86, 99, 110, 112, 131, 132, 136, 148, 154, 166, 175, 181, 183, 188], "elaps": [142, 143, 144, 146, 147, 150], "element": [23, 25, 27, 28, 38, 41, 45, 46, 48, 50, 52, 53, 80, 81, 85, 101, 103, 106, 120, 142, 143, 144, 146, 147, 150, 165, 166, 171, 175], "elementwis": 85, "elementwise_affin": 106, "elig": 1, "ell": [27, 28, 38, 45, 46, 49, 120, 158], "ema": 79, "ema_": 79, "emametr": [8, 77, 79], "embed": [42, 101], "empti": [28, 38, 47, 50, 77, 81, 84, 86, 108, 164, 169, 170, 178], "empty_cach": [20, 50], "enabl": [29, 50, 64, 97, 101, 103, 104, 105, 106, 155, 158, 178], "enable_accumulating_featur": [93, 97], "enable_metadata_rout": 64, "encod": [13, 42, 50, 80, 81, 86, 93, 95, 99, 125, 171, 173, 181], "encourag": 1, "end": [23, 27, 30, 45, 46, 50, 75, 81, 116, 132, 133, 134, 136, 155, 171, 187], "enforc": [1, 48, 132, 136, 140, 175], "engin": [4, 43], "enhanc": [70, 75], "ensembl": [29, 96], "ensemble_averag": [93, 96], "ensemble_bas": [8, 93], "ensemble_cli": [8, 20], "ensemble_model": [96, 178], "ensemble_vot": [93, 96], "ensembleaggregationmod": [8, 93, 96], "ensemblecli": [8, 20, 29], "ensemblemodel": [8, 29, 93, 96], "ensur": [1, 4, 13, 23, 28, 29, 33, 35, 36, 39, 42, 52, 72, 81, 86, 90, 91, 92, 139, 141, 146, 150, 154, 155, 157, 159, 166, 167, 181, 183, 185], "ensure_protocol_compli": [87, 90, 92], "entir": [13, 23, 27, 28, 30, 49, 58, 90, 91, 94, 117, 157, 181, 187], "entiti": [132, 136], "entri": [23, 24, 50, 80, 81, 85, 144, 155, 166, 171], "entropi": 70, "enum": [11, 36, 68, 78, 81, 90, 96, 108, 132, 136, 159, 176, 177, 178, 180, 181, 188, 189], "enumer": [11, 36, 68, 78, 81, 90, 96, 108, 132, 136, 177, 178, 180, 189], "enumsnapshott": [8, 168, 188], "env_path": 1, "environ": [1, 7, 50, 181, 186], "ep": 106, "epoch": [8, 23, 36, 39, 50, 130, 131, 132, 133, 134, 135, 136, 146, 150, 170, 181], "epochs_per_round": 130, "epsilon": [72, 77, 84, 95, 130, 131, 143, 146, 150], "equal": [122, 127, 174, 181], "equat": [53, 162], "equival": [4, 131, 175], "error": [1, 10, 11, 13, 14, 64, 74, 90, 91, 92, 110, 132, 136, 155, 159, 166, 168, 172, 181, 182, 183, 186, 189], "error_messag": 182, "especi": 50, "essenti": [10, 37, 75, 89, 100, 144, 148], "establish": 86, "estim": [64, 72, 74, 126, 131, 150, 155, 175, 181], "et": [61, 131, 159, 160], "eta": [101, 163], "eta_i": 101, "eta_l": 163, "etc": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 166, 169, 172], "eval": [7, 13, 23, 41, 144, 154, 155, 164], "evalu": [13, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 38, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 77, 78, 79, 82, 83, 84, 87, 88, 89, 90, 91, 101, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 174, 178], "evaluate_after_fit": [23, 36, 39, 159], "evaluate_cli": [8, 20], "evaluate_config": 144, "evaluate_fn": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "evaluate_fn_typ": [161, 163], "evaluate_metrics_aggregation_fn": [7, 8, 77, 82, 144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "evaluate_round": [137, 142], "evaluate_serv": [8, 137], "evaluatecli": [8, 20, 30], "evaluatein": [144, 154, 155, 159, 164], "evaluater": [144, 154, 164], "evaluateresultsandfailur": [142, 144], "evaluateserv": [8, 137, 144], "evaluationloss": [8, 23, 25, 27, 28, 29, 30, 41, 42, 48, 52, 89, 90, 91, 168, 178], "even": [4, 49, 50, 133, 134, 155, 158, 160, 166], "evenli": 187, "event": [11, 131], "everi": [10, 42, 50, 70, 94, 104, 122, 131, 132, 134, 136, 157, 162, 169], "everyth": 154, "ex": [95, 131], "exactli": [39, 50, 86, 116, 128, 169], "exampl": [1, 4, 7, 10, 12, 17, 21, 23, 27, 32, 33, 45, 46, 47, 49, 50, 60, 67, 79, 80, 81, 82, 85, 86, 112, 119, 120, 121, 128, 131, 132, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 157, 158, 172, 175, 183, 185, 187], "exce": 120, "exceed": 183, "except": [4, 10, 11, 13, 14, 34, 35, 50, 103, 110, 116, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 161, 164, 166, 169, 170, 181], "exchang": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 42, 45, 46, 47, 49, 50, 51, 52, 53, 87, 88, 90, 91, 94, 98, 100, 101, 111, 112, 114, 116, 117, 119, 120, 121, 122, 147, 156, 157, 159], "exchange_percentag": 120, "exchangertyp": [13, 147], "exclud": [33, 80, 116, 132, 136], "exclus": [37, 116, 128, 183], "execut": [1, 27, 28, 31, 45, 48, 90, 91, 181], "executor": 149, "exhaust": 183, "exist": [4, 7, 10, 11, 12, 13, 14, 22, 23, 29, 30, 41, 42, 50, 64, 73, 81, 99, 132, 136, 170, 172, 173, 176, 178, 183], "exp": 95, "expand": 86, "expect": [14, 21, 30, 50, 80, 81, 96, 100, 106, 107, 110, 111, 112, 132, 136, 155, 167, 170, 173, 181], "experi": [58, 132, 136], "experienc": [154, 155, 156, 157, 158, 161, 164], "experiment": [4, 74, 132, 136], "explicitli": [10, 14, 28, 90, 91, 132, 136, 186, 187], "explor": 4, "expon": 181, "exponenti": 79, "ext": [42, 101], "extend": [4, 23, 25, 42, 53, 77, 78, 79, 84, 154, 175, 187], "extens": [1, 4, 21, 154, 166], "extent": 19, "extra": [42, 50, 116], "extra_adaptive_vari": 119, "extract": [13, 23, 25, 27, 34, 36, 38, 45, 46, 51, 52, 53, 74, 97, 99, 100, 101, 108, 111, 112, 116, 119, 122, 149, 170, 172, 176, 182, 184], "extract_coo_info_from_dens": [113, 119], "extracted_features_buff": 97, "extractor": [4, 25, 34, 36, 37, 38, 42, 52, 75, 97, 100, 101, 107, 108, 111, 112], "extrem": [139, 140, 141, 142, 143, 145, 146, 148, 149, 150], "f": [14, 101, 172], "f1": [8, 77, 84], "f1_score": [77, 84], "f_g": 42, "f_p": 42, "facilit": [1, 4, 7, 11, 13, 14, 17, 31, 35, 51, 121, 122, 142, 144, 147, 155, 159], "fact": 31, "factor": [79, 80, 181], "factori": 90, "fail": [1, 132, 136, 159, 166], "failur": [139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "fair": [28, 38, 90, 91, 159], "fairli": [32, 98, 171], "fairness_metr": [159, 160], "fairness_metric_typ": 159, "fairnessmetr": [8, 152, 159, 160], "fairnessmetrictyp": [8, 152, 159, 160], "fall": [10, 12, 120], "fals": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 64, 74, 80, 81, 85, 89, 90, 91, 94, 97, 98, 99, 100, 101, 104, 105, 106, 110, 112, 125, 139, 140, 141, 142, 143, 145, 146, 148, 150, 155, 158, 160, 163, 169, 173, 174, 181, 186], "false_neg": [77, 80, 81, 85], "false_posit": [77, 80, 81, 85], "faq": 1, "far": [21, 23, 87, 88, 110, 120, 174], "feasibl": 183, "featur": [1, 4, 21, 22, 23, 25, 27, 28, 29, 34, 36, 37, 38, 41, 42, 45, 46, 48, 49, 50, 52, 64, 67, 68, 70, 71, 72, 73, 74, 75, 89, 90, 91, 97, 99, 100, 101, 106, 107, 108, 111, 112, 171], "feature_align": 8, "feature_dim": 101, "feature_dimens": 70, "feature_extraction_lay": [45, 46], "feature_extraction_layers_with_s": 27, "feature_extractor_buff": [8, 93], "feature_l2_norm_weight": [45, 46], "feature_nam": 67, "feature_s": 97, "feature_tensor": [42, 101], "feature_typ": 67, "featureextractorbuff": [8, 93, 97], "features_forward": [93, 112], "features_org": 72, "fed": [22, 23, 25, 27, 28, 29, 38, 41, 42, 45, 46, 48, 50, 52, 70, 101, 173], "fed_pca_cli": [8, 20], "fed_prox_cli": [8, 20], "fedadagrad": 4, "fedadam": 4, "fedavg": [4, 7, 34, 36, 37, 52, 98, 142, 148, 154, 155, 156, 157, 158, 159, 161, 162, 166], "fedavg_dynamic_lay": [8, 152], "fedavg_sparse_coo_tensor": [8, 152], "fedavg_with_adaptive_constraint": [8, 152], "fedavgdynamiclay": [8, 152, 156, 157, 162], "fedavgm": 155, "fedavgsparsecootensor": [8, 152, 157], "fedavgwithadaptiveconstraint": [8, 21, 87, 88, 139, 140, 141, 152, 158, 160], "fedbn": [4, 33], "fedbn_client": [8, 20], "fedbnclient": [8, 20, 33], "feddg": [4, 17, 159, 160], "feddg_ga": [8, 152], "feddg_ga_with_adaptive_constraint": [8, 152], "feddgga": [8, 152, 159, 160], "feddggaadaptiveconstraint": [8, 152, 160], "feder": [4, 7, 11, 13, 14, 21, 23, 24, 28, 29, 30, 31, 32, 35, 37, 38, 39, 43, 47, 48, 49, 51, 53, 87, 88, 90, 91, 96, 99, 101, 131, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 175], "federated_evalu": [137, 144], "federated_learning_with_differential_privaci": 131, "fedopt": 4, "fedpca": [8, 31, 152], "fedpcacli": [8, 20, 31], "fedper": [4, 34, 36], "fedper_cli": [8, 20], "fedpercli": [8, 20, 34], "fedpm": [4, 8, 35, 103, 104, 105, 106, 114, 120, 145, 152], "fedpm_client": [8, 20], "fedpm_exchang": [8, 113], "fedpm_serv": [8, 137], "fedpmclient": [8, 20, 35], "fedpmexchang": [8, 35, 113, 114], "fedpmserv": [8, 137, 145], "fedprox": [4, 21, 23, 28, 32, 49, 90, 91, 140, 158, 160, 171], "fedprox_serv": [137, 138], "fedproxcli": [8, 20, 32], "fedproxserv": [137, 138, 140], "fedrep": [4, 36, 98], "fedrep_bas": [8, 93], "fedrep_cli": [8, 20], "fedrepcli": [8, 20, 36], "fedrepmodel": [8, 93, 98], "fedreptrainmod": [8, 20, 36], "fedsimclr": [23, 70], "fedsimclr_bas": [8, 93], "fedsimclrmodel": [8, 93, 99], "fedtorch": 94, "fedyogi": 4, "fenda": [4, 23, 25, 27, 32, 37, 38, 45, 46, 49, 50, 52, 73, 98, 100], "fenda_bas": [8, 93], "fenda_cli": [8, 20], "fenda_ditto_cli": [8, 20], "fenda_loss_config": [8, 69], "fendacli": [8, 20, 25, 37], "fendaditto": 38, "fendadittocli": [8, 20, 38], "fendamodel": [8, 38, 93, 100], "fendamodelwithfeaturest": [8, 93, 100], "fengliu90": 72, "fetch": [143, 146, 147], "few": [4, 42], "fhook": 97, "field": 50, "file": [1, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 58, 60, 61, 128, 132, 133, 134, 136, 148, 181], "filereport": [8, 132, 134], "fill": [1, 67], "fill_valu": 67, "filter": [16, 17, 18, 58, 97, 103, 116, 120], "filter_and_save_data": [55, 56, 58], "filtrat": 16, "final": [11, 31, 48, 50, 75, 80, 81, 94, 99, 101, 103, 105, 106, 108, 122, 157, 181, 186], "find": [1, 10], "find_last_common_prefix": [93, 97], "fine": [11, 99], "finetun": 99, "first": [4, 7, 11, 17, 21, 23, 24, 25, 27, 28, 30, 36, 38, 41, 45, 46, 48, 49, 50, 51, 52, 53, 64, 71, 72, 73, 74, 75, 79, 80, 81, 87, 88, 90, 91, 95, 97, 98, 101, 108, 112, 120, 122, 142, 143, 144, 145, 146, 147, 150, 154, 155, 157, 166, 169, 171, 172, 175, 181, 182], "first_featur": 73, "first_feature_extractor": 108, "first_tensor": 108, "fit": [1, 7, 13, 20, 21, 23, 24, 28, 30, 31, 36, 38, 47, 49, 51, 53, 62, 64, 82, 87, 88, 89, 90, 91, 137, 142, 143, 144, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173], "fit_config": 7, "fit_config_fn": 7, "fit_metrics_aggregation_fn": [7, 8, 77, 82, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "fit_round": [137, 142, 145], "fit_with_per_round_checkpoint": [137, 142], "fitin": [154, 155, 159, 164, 166], "fitr": [154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 175], "fitresultsandfailur": [142, 145], "fitting_round": [21, 23, 24, 28, 30, 38, 49, 51, 53, 87, 88, 89, 90, 91], "fix": [1, 4, 12, 16, 17, 18, 19, 34, 42, 43, 57, 94, 95, 98, 111, 120, 125, 130, 131, 150, 155, 171, 173, 181, 185], "fixed_sampling_client_manag": [8, 15], "fixed_without_replacement_manag": [8, 15], "fixedlayerexchang": [8, 42, 52, 101, 112, 113, 116, 121], "fixedsamplingbyfractionclientmanag": [8, 15, 18], "fixedsamplingclientmanag": [8, 15, 17, 159], "fixedsamplingwithoutreplac": [8, 129, 131], "fl": [4, 11, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 41, 45, 46, 47, 49, 50, 53, 87, 88, 90, 91, 100, 101, 116, 119, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 161, 166, 167, 170, 181], "fl4health": [0, 7], "fl_account": [8, 129], "fl_config": [139, 140, 141, 142, 143, 145, 146, 148, 150], "flag": [97, 186], "flake8": 1, "flash": [4, 8, 39, 152], "flash_client": [8, 20], "flashclient": [8, 20, 39], "flat": 24, "flatten": [45, 46, 85, 93, 95, 97, 99, 100, 101, 107, 110, 111, 112], "flatten_featur": [98, 100, 101, 112], "flatten_feature_extraction_lay": 97, "flattened_output": 95, "flclientlevelaccountantfixedsamplingnoreplac": [8, 129, 130], "flclientlevelaccountantpoissonsampl": [8, 129, 130], "flcore": 101, "flexibl": [4, 8, 10, 12, 20, 38, 154], "flexiblecli": [20, 40, 41, 87, 88, 90, 91, 92], "flexibleclientprotocol": [8, 87, 88, 89], "flexibleclientprotocolpresetup": [8, 87, 88, 89, 90, 91], "flinstancelevelaccount": [8, 129, 130], "float": [10, 11, 12, 13, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 36, 39, 42, 45, 46, 47, 48, 49, 50, 52, 53, 57, 60, 67, 70, 72, 73, 75, 76, 77, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 94, 106, 110, 119, 120, 122, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 175, 176, 178, 181, 183, 187, 188], "float32": [80, 81], "flow": [1, 13, 30, 33, 38, 39, 43, 51, 57, 95, 142, 145, 154, 155, 166], "flow_util": 94, "flower": [4, 16, 18, 19, 139, 140, 141, 142, 143, 145, 146, 150, 154, 175, 181, 182, 184], "flserver": [7, 8, 13, 14, 137, 139, 140, 141, 142, 143, 145, 146, 148, 150], "flush": [168, 181], "flwr": [7, 139, 140, 141, 142, 143, 145, 146, 148, 150, 181], "fn": [80, 81, 85, 148, 181], "focu": 4, "focus": 89, "fold": 50, "fold_loss_dict_into_metr": [8, 168, 169], "folder": [1, 134, 176], "follow": [1, 23, 24, 28, 30, 31, 36, 38, 39, 50, 61, 79, 90, 91, 94, 101, 110, 119, 122, 131, 154, 155, 157, 161, 162, 164, 166, 175, 181], "footprint": 81, "forc": [35, 154, 159, 166, 186], "foreground_intensity_properties_per_channel": 50, "form": [14, 28, 38, 49, 74, 80, 81, 90, 91, 99, 115, 131, 166, 172], "form_and_solve_qp": [69, 74], "form_h_u_delta_w_i": [69, 74], "form_kernel_samples_minus_expect": [69, 74], "format": [1, 13, 67, 96, 119, 122, 157, 173], "former": [80, 81, 139, 140, 141, 142, 143, 145, 146, 148, 150], "formula": [166, 175], "forward": [23, 27, 28, 38, 41, 45, 46, 69, 70, 71, 72, 74, 75, 76, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 124, 126, 168, 175, 181], "forward_hook": [93, 97], "found": [1, 74, 186], "foundat": 4, "four": [103, 157], "fp": [80, 81, 85], "frac": [24, 53, 80, 85, 166, 171], "fraction": [18, 19, 57, 144, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166], "fraction_evalu": [144, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166], "fraction_fit": [154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166], "framework": [27, 45, 46, 146], "free": 48, "freez": [38, 169], "freeze_base_modul": [93, 98], "freeze_global_feature_extractor": 38, "freeze_head_modul": [93, 98], "frequenc": [57, 58, 145, 174], "frequent": [133, 134], "from": [1, 4, 7, 10, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 64, 67, 72, 73, 74, 75, 79, 80, 81, 83, 87, 88, 90, 91, 94, 95, 97, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 119, 120, 121, 127, 128, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 174, 175, 182, 183, 184, 187], "from_json": [62, 67], "from_pretrain": [102, 103, 105, 106], "frozen": [4, 36, 38, 42, 76, 119, 169], "full": [1, 13, 21, 22, 23, 24, 25, 30, 34, 36, 37, 38, 47, 51, 53, 57, 87, 88, 94, 95, 97, 110, 130, 142, 143, 146, 150, 187], "full_exchang": [8, 113], "full_svd": 110, "fullparameterexchang": [8, 21, 23, 24, 28, 30, 38, 47, 51, 53, 87, 88, 90, 91, 113, 115, 117], "fullparameterexchangerwithpack": [8, 13, 88, 91, 113, 117], "func": [92, 170], "function": [1, 4, 7, 8, 10, 11, 12, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 61, 67, 68, 70, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 103, 105, 106, 107, 108, 112, 116, 119, 120, 122, 126, 128, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 184, 185, 186], "functiontorchcheckpoint": 12, "functiontorchmodulecheckpoint": [8, 9, 10, 12], "functool": [7, 120], "further": [11, 37, 81, 120, 130], "furthermor": 1, "futur": 120, "g": [42, 50, 64, 132, 133, 134, 136, 155, 164, 172, 175], "ga": [4, 17, 159, 160], "gamma": [39, 52, 74, 101], "gamma_i": 101, "gather": 73, "gaussian": [72, 131, 146, 150, 165], "gaussian_degre": 72, "gaussian_noisy_aggregate_clipping_bit": [8, 152, 165], "gaussian_noisy_unweighted_aggreg": [8, 152, 165], "gaussian_noisy_weighted_aggreg": [8, 152, 165], "gce": [8, 42, 93, 101], "gce_softmax_loss": 42, "gener": [1, 4, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 72, 77, 79, 84, 86, 95, 97, 101, 110, 117, 119, 121, 122, 126, 132, 135, 136, 142, 145, 148, 156, 157, 158, 159, 160, 168, 171, 172, 178, 181, 183, 186, 187, 188], "generate_client_tensor": [168, 171], "generate_hash": [8, 20, 31, 168, 186], "generate_parameter_scor": [113, 122], "generatedocstringonent": 1, "get": [1, 4, 14, 47, 79, 80, 97, 128, 132, 136, 149, 171, 181], "get_all_model_paramet": [7, 8, 168, 182], "get_all_peft_parameters_from_model": [8, 168, 184], "get_attribut": [9, 14], "get_best_vertex_for_objective_funct": [69, 74], "get_cifar10_data_and_target_tensor": [8, 168, 176], "get_client_specific_log": [20, 23, 50], "get_client_specific_report": [20, 23, 50], "get_condition_vector_s": [168, 173], "get_criterion": [7, 20, 23, 41, 50, 87, 89], "get_current_weight_step_s": [152, 159], "get_data_load": [7, 20, 23, 30, 31, 41, 50, 87, 89], "get_data_tensor": [20, 31], "get_dataset_n_voxel": [8, 168, 181], "get_default_fill_valu": [62, 68], "get_delta": [129, 130, 131], "get_dp_ev": [129, 131], "get_epsilon": [129, 130, 131], "get_extracted_featur": [93, 97], "get_feature_nam": [62, 67], "get_feature_typ": [62, 67], "get_fill_valu": [62, 67], "get_global_model": [20, 28, 38, 87, 90, 91], "get_hierarchical_attr": [93, 97], "get_input_output_tensor": [168, 171], "get_layers_to_transf": [113, 116], "get_local_model": [20, 30], "get_lr": [168, 181], "get_lr_schedul": [20, 23, 50], "get_matching_compon": [123, 128], "get_metadata": [62, 67], "get_metadata_dimens": [62, 67], "get_mnist_data_and_target_tensor": [8, 168, 176], "get_model": [7, 20, 23, 28, 31, 38, 41, 47, 50, 87, 89, 90, 91], "get_msd_dataset_enum": [8, 168, 176, 180], "get_optim": [7, 20, 22, 23, 28, 29, 36, 41, 42, 50, 87, 89, 90, 91], "get_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 47, 51, 53, 87, 88, 89, 90, 91], "get_parameter_exchang": [8, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 42, 47, 51, 52, 53, 87, 88], "get_properti": [20, 23, 50, 148], "get_segs_from_prob": [8, 168, 181], "get_test_data_load": [20, 23, 47], "get_train_and_val_cifar10_dataset": [8, 168, 176], "get_train_and_val_mnist_dataset": [8, 168, 176], "get_unpacking_funct": [168, 173], "getpropertiesin": [149, 154, 167], "getpropertiesr": 149, "git": [1, 61], "github": [1, 4, 28, 50, 61, 70, 72, 90, 91, 94, 101, 131, 171, 181], "give": 183, "given": [10, 14, 21, 22, 23, 24, 25, 27, 28, 29, 36, 38, 41, 42, 45, 46, 48, 49, 50, 52, 58, 60, 64, 70, 77, 79, 80, 81, 83, 84, 85, 86, 90, 91, 95, 96, 97, 99, 101, 104, 108, 130, 131, 142, 155, 159, 165, 166, 170, 172, 173, 175, 178, 181, 183], "global": [4, 11, 13, 22, 23, 25, 27, 28, 30, 32, 34, 36, 37, 38, 42, 45, 46, 48, 49, 50, 52, 73, 75, 81, 90, 91, 94, 98, 100, 101, 108, 111, 139, 142, 144, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "global_conditional_input": [42, 101], "global_deep_supervis": 148, "global_featur": [42, 73, 75, 100, 101, 111], "global_feature_contrastive_loss": 52, "global_feature_contrastive_loss_weight": [52, 73], "global_feature_loss_temperatur": [52, 73, 75], "global_forward": [93, 94], "global_logit": 94, "global_loss": [22, 27, 28, 38, 45, 46], "global_metr": 30, "global_model": [48, 87, 90, 91, 94, 128], "global_modul": [100, 111], "global_tensor": 108, "go": [13, 132, 136, 181, 185], "goal": 101, "good": [4, 35, 110], "googl": 1, "gpfl": [42, 101], "gpfl_base": [8, 93], "gpfl_client": [8, 20], "gpflbaseandheadmodul": [8, 93, 101], "gpflclient": [8, 20, 42], "gpflmodel": [8, 42, 93, 101], "grab": [154, 155, 166], "gracefulli": [50, 135, 181], "grad": 175, "grad_output": 175, "grad_sample_mod": 185, "gradient": [4, 23, 28, 38, 41, 50, 53, 90, 91, 103, 105, 106, 146, 150, 155, 175], "gradsamplemodul": [154, 166, 185], "gradsamplingmodul": 166, "greater": 122, "ground": [21, 22, 23, 25, 27, 28, 29, 38, 42, 45, 46, 48, 49, 50, 52, 77, 78, 79, 83, 84, 90, 91], "group": [103, 132, 136, 181], "groupnorm": 185, "guarante": [18, 100, 110, 183], "guess": 155, "guesstyp": 1, "guid": [1, 4, 64], "h1_mean_var_gram": [69, 72], "ha": [1, 4, 7, 11, 13, 21, 23, 25, 29, 30, 33, 35, 36, 38, 42, 47, 48, 50, 64, 70, 83, 86, 87, 88, 90, 91, 95, 100, 103, 105, 106, 108, 110, 114, 116, 132, 136, 147, 154, 155, 157, 159, 160, 161, 164, 166, 169, 170, 171, 173, 175, 181, 187], "ham10000": 61, "ham_image_path_func": [55, 59, 61], "ham_label_map_func": [55, 59, 61], "handl": [10, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 81, 87, 88, 97, 108, 114, 119, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 162, 166, 173, 175, 181], "handler": 181, "happen": [21, 47, 87, 88, 101, 139, 140, 141, 142, 143, 145, 146, 148, 150, 155, 175], "hard": 85, "hardcod": 134, "has_contrastive_loss": [69, 73], "has_cosine_similarity_loss": [69, 73], "has_perfcl_loss": [69, 73], "has_region": 181, "hash": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 70, 176, 186], "hash_kei": [176, 187], "hat": [75, 155, 171], "hat_d_per_kernel": 74, "hat_q_k": 74, "have": [1, 4, 7, 13, 21, 23, 24, 25, 28, 29, 30, 31, 35, 36, 38, 42, 47, 49, 50, 52, 53, 64, 70, 74, 77, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 95, 97, 100, 103, 105, 106, 111, 119, 120, 125, 131, 132, 136, 142, 144, 148, 155, 156, 157, 162, 165, 166, 169, 171, 172, 175, 183], "he": 160, "head": [1, 20, 36, 37, 38, 42, 99, 100, 101, 107, 108, 111, 112, 144], "head_epoch": 36, "head_forward": [93, 108], "head_modul": [98, 101, 107, 112], "head_step": 36, "header": [23, 50], "health": 4, "healthcar": 4, "heavili": [79, 142], "held": [13, 47, 81, 142, 156, 157, 162], "help": [1, 13, 17, 18, 21, 23, 24, 28, 30, 38, 51, 87, 88, 90, 91, 149, 181], "helper": [41, 166, 175], "henc": [31, 161], "here": [1, 4, 28, 31, 36, 48, 49, 80, 90, 91, 127, 132, 136, 161, 162, 171, 172, 183, 186], "heterogen": [4, 32, 39, 171, 183, 187], "heterogeneous_partition": 183, "heurist": [28, 49], "hidden": [72, 171], "hidden_dim": [72, 171], "hidden_s": 72, "hierarch": 97, "hierarchi": 181, "high": [133, 134, 183], "higher": [171, 181], "highest": [80, 81, 85], "hinder": 74, "hint": 1, "histori": [142, 143, 144, 146, 147, 150, 188], "historysnapshott": [8, 168, 188], "hold": [11, 13, 57, 73, 86, 101, 131, 142, 145, 149, 159], "hood": [50, 185], "hook": [1, 23, 27, 32, 41, 45, 46, 49, 50, 53, 97, 142, 148, 185], "hope": 10, "hot": [42, 50, 80, 81, 86, 101, 171, 173, 181], "hous": [1, 171], "how": [1, 10, 11, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 77, 80, 81, 82, 84, 85, 95, 108, 132, 136, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 162, 171, 173, 181, 185], "howev": [1, 4, 21, 28, 30, 36, 41, 47, 49, 50, 80, 87, 88, 90, 91, 103, 105, 139, 141], "html": [70, 77, 84, 103, 110, 119, 122, 157, 186], "http": [1, 22, 28, 33, 34, 35, 36, 37, 39, 42, 50, 52, 53, 57, 61, 70, 72, 75, 77, 84, 90, 91, 94, 98, 99, 101, 103, 110, 119, 122, 131, 132, 136, 145, 150, 154, 155, 157, 158, 162, 163, 165, 166, 171, 175, 181, 186], "huge": 110, "hydrat": [13, 30, 147], "hyperparamet": [42, 132, 136], "hypothesi": [4, 35], "i": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 119, 120, 121, 122, 125, 127, 128, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 183, 185, 186, 187], "id": [1, 31, 50, 132, 134, 136, 142, 144, 159, 172, 186], "idea": [4, 28, 32, 38, 48, 49, 90, 91], "idempot": [28, 90, 91], "ident": [11, 23, 28, 34, 38, 49, 90, 91, 99], "identifi": [21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 83, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 161, 164, 166], "ie": 181, "ieee": 75, "ieeexplor": 75, "ignor": [31, 50, 64, 110, 134, 144, 183], "ignore_background": [80, 81], "ignore_label": 50, "ii": 74, "iid": [48, 171, 187], "imag": [23, 57, 58, 60, 61, 77, 80, 81, 84, 103, 181], "image_path_func": 61, "imbalanc": [77, 84], "immedi": [23, 32, 46, 48, 49, 50], "implement": [1, 10, 12, 13, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 45, 46, 48, 49, 51, 53, 70, 72, 75, 81, 87, 88, 90, 91, 94, 95, 98, 100, 101, 103, 105, 106, 108, 110, 116, 120, 131, 142, 154, 155, 158, 161, 162, 163, 165, 166, 167, 171, 175, 178, 181, 188], "impli": [80, 85, 131, 171], "implicit": 80, "import": [1, 7, 79, 121, 131, 164, 181], "importantli": 47, "impos": 1, "imput": 68, "in_channel": 103, "in_featur": 105, "includ": [1, 4, 14, 21, 23, 25, 27, 28, 30, 38, 41, 42, 45, 46, 48, 49, 50, 52, 87, 88, 90, 91, 94, 130, 139, 140, 141, 142, 143, 145, 146, 148, 150, 166, 171, 173, 182], "include_loss_in_metr": 30, "include_losses_in_metr": [23, 27, 28, 30, 49, 89, 90, 91], "includeextendedsummari": 1, "includenam": 1, "incompat": 185, "incorpor": [1, 4], "increas": 79, "increment": 161, "indefinit": [142, 144, 145, 147, 148, 183], "independ": [1, 81, 156, 157, 171], "index": [21, 22, 23, 25, 27, 28, 29, 38, 41, 42, 45, 46, 48, 49, 50, 52, 80, 81, 85, 86, 90, 91, 96, 101, 175, 181, 186], "indic": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 80, 81, 86, 87, 88, 90, 91, 97, 101, 110, 119, 120, 122, 125, 132, 133, 134, 136, 142, 145, 148, 154, 155, 156, 157, 158, 161, 162, 164, 166, 169, 172, 183, 185], "individu": [27, 29, 45, 46, 48, 80, 81, 96, 132, 136, 142, 145], "infer": [86, 97, 132, 136, 148], "infer_label_dim": [8, 77, 86], "infimum": 131, "infinit": 181, "info": [1, 50, 168, 189], "inform": [4, 13, 21, 23, 24, 28, 30, 35, 38, 47, 49, 50, 53, 58, 67, 77, 84, 87, 88, 90, 91, 95, 101, 103, 114, 117, 119, 121, 122, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 155, 157, 159, 160, 186], "infti": [183, 187], "inherit": [23, 50, 81, 87, 88, 90, 91, 95, 142, 172, 181], "ini": 1, "init": [132, 136, 166], "initi": [8, 13, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 36, 38, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 81, 83, 87, 88, 89, 90, 91, 94, 106, 122, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 178, 181], "initial_clipping_bound": 155, "initial_control_vari": 166, "initial_global_featur": [73, 75], "initial_global_model": [27, 45, 46], "initial_loss_weight": [158, 160], "initial_lr": 181, "initial_model": [115, 116, 118, 120, 121, 122], "initial_paramet": [7, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166], "initialize_all_model_weight": [20, 23, 28, 87, 89, 90, 91], "initialize_control_vari": [152, 166], "initialize_global_model": [20, 30], "initialize_paramet": [152, 154, 164, 166], "initialize_server_model": [137, 148], "inject": [13, 23, 25, 28, 38, 41, 48, 52, 85, 90, 91, 95, 104, 107, 115, 155], "inner": [27, 28, 38, 45, 46, 49, 76], "inner_product": 74, "inner_product_all_sampl": 74, "inner_product_quadrupl": 74, "input": [22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 45, 46, 48, 50, 52, 58, 70, 72, 73, 77, 78, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 119, 122, 126, 128, 132, 136, 148, 159, 161, 169, 171, 172, 173, 175, 176, 181, 183], "input_dim": 171, "input_dir": 58, "input_s": 72, "input_tensor": 108, "input_typ": 14, "ins": 149, "insert": [105, 147, 156, 157], "insid": [64, 122, 175], "inspir": 72, "instal": 1, "instanc": [4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 29, 31, 38, 42, 43, 45, 46, 48, 49, 52, 53, 90, 91, 92, 103, 105, 106, 130, 131, 146, 150, 159, 178], "instance_level_dp_cli": [8, 20], "instance_level_dp_serv": [8, 137], "instanceleveldpcli": [8, 20, 43, 53, 154, 166], "instanceleveldpserv": [8, 137, 146, 150], "instanti": [30, 51, 148, 159], "instead": [10, 12, 23, 39, 41, 49, 64, 97, 103, 105, 106, 175], "instruct": [1, 144, 149, 154], "int": [1, 7, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 38, 39, 42, 45, 46, 47, 48, 49, 50, 52, 53, 57, 58, 60, 67, 71, 72, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 105, 110, 119, 126, 127, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 181, 183, 186, 187, 188], "integ": [22, 23, 27, 45, 46, 80, 81, 85, 106, 159, 175, 181], "integr": [1, 175], "intend": [148, 175], "interact": 12, "interest": 1, "interestingli": [4, 35], "interfac": [33, 77, 84], "intermedi": [23, 25, 27, 28, 38, 41, 45, 46, 48, 52, 97, 101], "intern": [10, 11, 12, 132, 136], "interrupt": [11, 13, 14, 139, 140, 141, 142, 143, 145, 146, 148, 150, 181], "interv": [27, 45, 46, 80, 81, 133, 134, 174], "interval_step": 174, "introduc": [1, 50, 75], "invalidconfigerror": [8, 168, 170], "invok": 1, "involv": [23, 50], "ipynb": 131, "is_glob": 30, "is_masked_modul": [93, 102, 104], "is_smooth": 72, "is_start_of_local_train": [20, 22], "is_unbias": 72, "is_var_comput": 72, "isic": 61, "isn": [1, 73, 139, 141, 183], "issu": [1, 4, 10, 12, 14, 154, 155, 156, 157, 158, 161, 164, 181], "item": [1, 23, 50, 60, 83, 148, 157], "iter": [1, 25, 31, 52, 127, 169, 182, 183], "its": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 70, 77, 78, 79, 80, 81, 84, 101, 104, 110, 119, 132, 136, 159, 161, 162, 169, 170, 173, 181, 183, 185], "itself": [1, 23, 100, 108, 119, 175, 176], "j": [86, 171], "jit": 50, "job": [50, 132, 136], "job_typ": [132, 136], "join": 108, "json": [1, 50, 61, 67, 128, 132, 134], "json_report": [8, 132], "json_str": 67, "jsonreport": [8, 132, 134], "just": [11, 12, 13, 21, 38, 50, 80, 81, 87, 88, 89, 121, 142, 148, 150, 155, 169, 172, 175, 181], "justif": 161, "jvp": 175, "k": [53, 86, 110, 162], "k_x": 72, "k_xy": 72, "k_y": 72, "keep": [17, 50, 133], "kei": [10, 14, 22, 23, 25, 27, 28, 29, 36, 41, 42, 45, 46, 48, 49, 50, 77, 78, 79, 81, 83, 84, 90, 91, 94, 97, 100, 108, 111, 115, 128, 132, 136, 159, 170, 176, 178, 181], "kept": 162, "kernel": [27, 72, 74, 103], "kernel_s": 103, "keyword": [23, 27, 41, 45, 46, 132, 133, 134, 136, 181], "kind": [25, 81, 104, 131, 172, 183], "kl": 126, "know": [13, 119], "known": [13, 74], "kwarg": [50, 87, 88, 89, 90, 91, 92, 109, 132, 133, 134, 135, 136, 175, 181, 185], "l": [42, 106, 110, 131, 187], "l2": [4, 24, 42, 45, 46], "l240": 94, "l_2": 76, "label": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 61, 80, 81, 83, 85, 86, 101, 169, 171, 172, 173, 176, 183, 187], "label_dim": [80, 81, 86], "label_frequ": [55, 56, 57], "label_index_tensor": 86, "label_indic": 183, "label_map_func": 61, "labelbasedsampl": [8, 60, 168, 176, 187], "lam": 42, "lambda": [28, 49, 131], "lambda_m": 74, "languag": 172, "laplacian": 131, "larg": [74, 110, 149, 161, 183], "larger": [27, 45, 46, 50, 120, 132, 136, 154, 164, 171, 183, 187], "largest_final_magnitude_scor": [8, 113, 120], "largest_increase_in_magnitude_scor": [8, 113, 120], "largest_magnitude_change_scor": [8, 113, 120], "last": [24, 43, 97, 98, 106, 132, 136, 155, 181], "latent": [27, 37, 45, 46, 52, 95, 99, 100, 111, 126, 161, 171], "latent_dim": 126, "latent_vector": 95, "later": [13, 14, 31, 81, 95, 110, 112, 148, 186], "latestopacuscheckpoint": [8, 9, 12], "latesttorchcheckpoint": 147, "latesttorchmodulecheckpoint": [8, 9, 10], "latter": [80, 81, 139, 140, 141, 142, 143, 145, 146, 148, 150, 169], "law": 171, "layer": [4, 12, 13, 27, 33, 34, 42, 45, 46, 52, 74, 94, 95, 97, 98, 101, 103, 104, 105, 106, 111, 112, 116, 119, 120, 121, 122, 155, 156, 157, 161, 162, 165, 171, 185, 186], "layer1": 128, "layer_exchang": [8, 113], "layer_hierarchi": 97, "layer_nam": [74, 97, 116], "layer_norm_modul": 106, "layer_selection_funct": 116, "layerexchangerwithexclus": [8, 33, 113, 116], "layernamesservercheckpointandstatemodul": [8, 9, 13, 145], "layernorm": 106, "layers_nam": 97, "layers_to_exchang": [93, 94, 100, 101, 109, 111, 112], "layers_to_transf": 116, "layerselectionfunct": 116, "layerselectionfunctionconstructor": [8, 113, 116, 120], "lazi": 127, "lead": [175, 181], "learn": [4, 7, 21, 23, 24, 28, 30, 35, 38, 39, 48, 49, 51, 53, 72, 77, 84, 87, 88, 90, 91, 94, 98, 101, 105, 106, 110, 131, 142, 144, 155, 163, 166, 172, 173, 181, 188], "learnabl": [103, 106], "learning_r": [53, 166], "least": [1, 16, 50, 80, 81, 120, 166], "leav": [33, 74, 80, 81, 132, 136], "left": [24, 50, 79, 80, 81, 86, 95, 108, 134, 161], "len": 183, "len_": 72, "len_old_models_buff": 48, "length": [23, 31, 47, 50, 72, 74, 86, 106, 166, 169, 181, 183, 186], "leq": 110, "less": [4, 120, 122], "let": 42, "level": [1, 4, 24, 42, 43, 50, 53, 122, 130, 131, 133, 134, 143, 146, 150, 155, 181, 187], "leverag": [1, 33, 120, 122, 127], "librari": [1, 4, 142, 172, 175], "light": [4, 173], "like": [1, 13, 23, 50, 80, 90, 91, 103, 105, 119, 132, 136, 142, 143, 146, 150, 160, 162, 169, 173, 181, 186], "limit": [175, 183], "line": [4, 166], "linear": [74, 105, 171], "linear_modul": 105, "linearli": [154, 155, 156, 157, 158, 161, 162, 163, 164, 166], "link": [1, 171], "list": [1, 14, 16, 17, 18, 19, 21, 23, 24, 45, 46, 48, 50, 51, 53, 57, 58, 60, 61, 67, 74, 76, 77, 78, 79, 82, 83, 84, 87, 88, 89, 90, 91, 94, 96, 97, 100, 101, 103, 106, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 136, 142, 143, 144, 146, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 174, 175, 178, 181, 183, 187], "litian96": [28, 90, 91, 171], "ll": [155, 183], "load": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 99, 128, 132, 136, 142, 144, 164, 170, 172, 173, 174, 176, 181, 188], "load_attribut": [168, 188], "load_autoencod": [124, 125], "load_best_checkpoint_into_model": [9, 12], "load_checkpoint": [9, 10, 12, 14], "load_cifar10_data": [7, 8, 168, 176], "load_cifar10_test_data": [8, 168, 176], "load_config": [8, 168, 170], "load_data": [7, 8, 55, 56, 59, 168], "load_from_pretrain": [123, 128], "load_imag": [55, 56, 58, 59, 60], "load_mnist_data": [8, 168, 176], "load_mnist_test_data": [8, 168, 176], "load_model_checkpoint_to_paramet": [137, 144], "load_msd_dataset": [8, 168, 176], "load_pca_modul": [123, 127], "load_pretrained_model": [93, 99], "load_rxrx1_data": [55, 56, 57], "load_rxrx1_test_data": [55, 56, 57], "load_skin_cancer_data": [55, 59, 60], "load_snapshot": [168, 174], "load_stat": [9, 14], "loader": [23, 31, 47, 50, 57, 176], "local": [1, 4, 7, 11, 21, 22, 23, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 73, 75, 87, 88, 90, 91, 94, 100, 101, 108, 111, 144, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 174, 176, 181], "local_epoch": [7, 23, 30, 36, 39, 146, 150, 170], "local_featur": [73, 75, 100, 101, 111], "local_feature_contrastive_loss": 52, "local_feature_contrastive_loss_weight": [52, 73], "local_feature_loss_temperatur": [52, 73, 75], "local_forward": [93, 94], "local_logit": 94, "local_loss": [22, 28], "local_metr": 30, "local_model": [27, 45, 46], "local_modul": [100, 111], "local_prediction_head": 98, "local_step": [21, 23, 25, 30, 36, 39, 48, 52, 53, 87, 88, 89, 146, 150, 170], "local_tensor": 108, "locat": [132, 136, 176], "lock": 1, "log": [7, 8, 10, 13, 23, 41, 50, 95, 101, 126, 132, 136, 142, 145, 168, 181, 183], "logger": 181, "logging_mod": [23, 50, 169], "loggingmod": [8, 23, 50, 168, 177], "logic": [23, 41], "logit": [70, 77, 84], "logits_threshold": [77, 84], "loglevel": [1, 8, 23, 50, 168, 181, 189], "logvar": [95, 126], "long": [50, 142, 149, 175], "longer": [14, 175, 181], "look": [1, 41, 86, 101, 132, 136], "lookup": [42, 93, 101], "loop": [14, 27, 28, 36, 45, 90, 91, 173], "loss": [4, 7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 87, 88, 89, 90, 91, 99, 101, 107, 110, 112, 123, 124, 132, 136, 142, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 174, 181], "loss_contain": 25, "loss_dict": [21, 23, 25, 48, 52, 53, 87, 88, 89, 169], "loss_for_adapt": [21, 87, 88, 90, 91], "loss_list": 178, "loss_met": [30, 178], "loss_meter_typ": [21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 178], "loss_weight_delta": [158, 160], "loss_weight_pati": [158, 160], "losses_list": 178, "losses_typ": 178, "lossestyp": 178, "lossmet": [8, 168, 178, 188], "lossmetertyp": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 168, 178], "lotteri": [4, 35], "low": [110, 183], "low_rank": 110, "lower": [50, 110], "lr": [7, 23, 50, 53, 72, 181], "lrschedul": [23, 188], "lrschedulersnapshott": [8, 168, 188], "m": [1, 7, 110, 162], "m_": 79, "m_t": [79, 155], "machineri": 142, "made": [4, 22, 134], "magnitud": [42, 143, 159, 160], "magnitude_level_loss": 42, "mai": [1, 13, 21, 23, 25, 30, 38, 47, 51, 81, 87, 88, 95, 107, 110, 112, 131, 139, 140, 141, 142, 143, 145, 146, 148, 150, 156, 157, 162, 172, 175, 185, 186], "main": [1, 7, 42, 55, 56, 58, 70, 101, 131], "main_modul": 101, "mainli": [31, 86, 101], "maintain": [4, 35, 80, 81, 103, 105, 106, 115, 162, 172], "major": 11, "make": [41, 43, 50, 77, 81, 84, 95, 96, 132, 136, 181, 183, 185], "make_dict_with_epochs_or_step": [8, 168, 170], "make_it_person": [8, 87, 90], "manag": [1, 10, 17, 23, 50, 83, 135, 144, 149, 154, 155, 159, 164, 166], "mandatori": 159, "manger": 154, "mani": [1, 21, 82, 171, 175], "manipul": [50, 52, 107], "manner": [29, 96, 99, 110, 162], "manual": 1, "map": [1, 13, 42, 50, 57, 61, 77, 80, 81, 84, 85, 86, 95, 99, 100, 101, 103, 105, 106, 108, 111, 122, 128, 156, 157, 162, 171], "map_label_index_tensor_to_one_hot": [8, 77, 86], "map_model_to_opacus_model": [8, 168, 185], "mark": 1, "mask": [35, 50, 103, 104, 105, 106, 120, 162, 172], "mask_data": [20, 50], "masked_conv": [93, 102], "masked_lay": [8, 93], "masked_layers_util": [93, 102], "masked_linear": [93, 102], "masked_normalization_lay": [93, 102], "maskedbatchnorm1d": [93, 102, 106], "maskedbatchnorm2d": [93, 102, 106], "maskedbatchnorm3d": [93, 102, 106], "maskedconv1d": [93, 102, 103], "maskedconv2d": [93, 102, 103], "maskedconv3d": [93, 102, 103], "maskedconvtranspose1d": [93, 102, 103], "maskedconvtranspose2d": [93, 102, 103], "maskedconvtranspose3d": [93, 102, 103], "maskedlayernorm": [93, 102, 106], "maskedlinear": [93, 102, 105], "master": [50, 171], "match": [13, 23, 27, 41, 45, 46, 50, 97, 116, 128, 148, 182, 183], "mathbf": [32, 95, 101], "mathcal": [42, 95, 171], "matric": [110, 161], "matrix": [24, 72, 74, 101, 110, 161, 171], "matter": [1, 115], "max": 50, "max_grad_norm": 50, "max_retri": 183, "max_step": 181, "max_work": 149, "maxim": [10, 12, 74], "maximum": [50, 72, 74, 149, 155, 165, 181, 186], "mayb": [13, 133, 134], "maybe_checkpoint": [9, 10, 11, 12, 13], "maybe_extract_fingerprint": [20, 50], "maybe_load_client_st": [9, 14], "maybe_load_server_st": [9, 14], "maybe_load_st": [9, 11, 13], "maybe_preprocess": [20, 50], "maybe_progress_bar": [8, 168, 169], "maybe_reshap": [93, 110], "maybe_set_default_checkpoint_nam": [9, 14], "md": 50, "mean": [1, 21, 49, 71, 72, 74, 80, 87, 88, 95, 110, 126, 171, 181], "meant": [4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 57, 108, 120, 121, 144], "measur": [24, 27, 45, 46, 74, 80, 130], "mechan": [11, 12, 28, 36, 43, 64, 90, 91, 108, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 174, 185], "median": 181, "median_image_size_in_voxel": 50, "medic": 176, "medical_feder": 61, "member": [1, 155, 165], "memori": 81, "mention": 1, "merg": [1, 4, 31, 47, 72, 108, 147, 161, 164], "merge_metr": [20, 30], "merge_subspaces_qr": [152, 161], "merge_subspaces_svd": [152, 161], "merge_two_subspaces_qr": [152, 161], "merger": 1, "messag": [23, 50, 182], "met": [166, 183], "meta": 64, "metadata": [57, 58, 64, 67], "metadata_rout": 64, "meter": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 178], "method": [1, 4, 10, 11, 13, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 64, 75, 77, 78, 79, 80, 81, 84, 86, 89, 90, 91, 92, 97, 108, 110, 119, 122, 132, 133, 134, 136, 140, 142, 148, 157, 161, 163, 166, 171, 178, 181, 186, 187, 188], "metric": [7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 90, 91, 132, 134, 136, 142, 143, 144, 145, 146, 147, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169], "metric_aggreg": [7, 8, 77], "metric_manag": [8, 23, 50, 77], "metric_manager_nam": 83, "metric_met": 30, "metric_nam": 159, "metric_typ": 159, "metric_valu": [23, 30, 31], "metricmanag": [8, 23, 50, 77, 83, 188], "metricoutcom": [8, 77, 81], "metricprefix": [8, 77, 78], "metrics_util": [8, 77], "metricsaggregationfn": [144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "mic": [50, 181], "middl": 95, "might": [1, 10, 11, 21, 50, 51, 80, 81, 86, 120, 133, 134, 144, 158], "mimic": 185, "min": [24, 110], "min_available_cli": [7, 144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "min_evaluate_cli": [7, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "min_fit_cli": [7, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "min_label_exampl": 183, "min_num_cli": [16, 17, 18, 19], "mini": 106, "minim": [10, 12, 72, 74, 89, 139, 140, 141, 142, 143, 145, 146, 148, 150], "minimize_type_two_error": 74, "minimum": [16, 17, 18, 19, 23, 30, 47, 144, 147, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 183], "minor": 187, "minority_label": 187, "minoritylabelbasedsampl": [8, 168, 187], "misalign": 86, "mismatch": [86, 185], "miss": 67, "mix": [50, 88, 90, 91, 94], "mixin": [8, 41], "mixtur": 94, "mk": [23, 27, 45, 46, 74], "mkmmd_client": [8, 20], "mkmmd_loss": [8, 69], "mkmmd_loss_weight": [45, 46], "mkmmdloss": [8, 69, 74], "mlg": 42, "mloptpsu": 94, "mlr": [39, 163], "mmd": [23, 27, 45, 46, 72, 74], "mmd_kernel_train_interv": 27, "mmdu": [69, 72], "mnist": [173, 176], "mode": [11, 22, 23, 29, 36, 38, 41, 42, 49, 50, 90, 96, 103, 108, 175], "model": [4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 73, 75, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 107, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 172, 173, 174, 178, 181, 182, 184, 185], "model_bas": 8, "model_checkpoint": 13, "model_checkpoint_path": [30, 144], "model_head": [100, 108, 111], "model_merge_cli": [8, 20], "model_merge_serv": [8, 137], "model_merge_strategi": [8, 152], "model_paramet": 119, "model_path": [47, 99], "model_save_dir": 31, "model_weight": [117, 119, 121], "modelcheckpoint": [11, 13], "modellatentf": [8, 69, 72], "modelmergecli": [8, 20, 47], "modelmergeserv": [8, 137, 147], "modelmergestrategi": [8, 147, 152, 164], "modern": 1, "modif": [4, 120, 158, 160, 185], "modifi": [4, 14, 23, 50, 53, 81, 86, 132, 136, 146, 155, 158, 160, 169, 181, 185, 187], "modify_grad": [20, 53], "modify_noise_multipli": [152, 155], "modul": [4, 7, 8, 9, 15, 20, 26, 40, 44, 55, 56, 59, 62, 69, 77, 87, 90, 93, 102, 113, 123, 124, 129, 132, 137, 138, 152, 168], "modular": 4, "module2losswrapp": [8, 168, 181], "module_exclus": 116, "modulelist": 97, "modulu": 74, "moment": [130, 131, 163], "moment_ord": [130, 131], "moments_account": [8, 129], "momentsaccount": [8, 129, 131], "momentum": [7, 106, 155, 163], "monitor": 174, "monolith": 31, "moon": [4, 23, 27, 32, 41, 45, 46, 48, 49, 50, 70, 73, 75, 98, 107, 112], "moon_bas": [8, 93], "moon_client": [8, 20], "moonclient": [8, 20, 48], "mooncontrastiveloss": [8, 69, 70], "mooncontrastivelosscontain": [8, 69, 73], "moonmodel": [8, 93, 107], "more": [4, 13, 22, 23, 29, 30, 32, 36, 39, 47, 50, 77, 79, 83, 84, 86, 103, 110, 116, 119, 121, 122, 133, 154, 157, 160, 161, 162, 171, 175, 181, 183, 185, 186, 187], "moreov": [80, 81], "most": [22, 23, 27, 45, 46, 80, 81, 120, 122, 139, 140, 141, 142, 143, 145, 146, 148, 150, 153, 170], "mostli": 51, "move": [1, 72, 74, 79, 149, 150, 166, 169], "move_data_to_devic": [8, 168, 169], "mp": 50, "mr": [4, 11, 46, 49, 139, 141], "mr_mtl_client": [8, 20], "mr_mtl_mkmmd_client": [20, 44], "mrmtl_server": [137, 138], "mrmtlclient": [8, 20, 46, 49], "mrmtlmkmmdclient": [20, 44, 46], "mrmtlserver": [137, 138, 141], "msd": 176, "msd_dataset_nam": 176, "msd_dataset_sourc": [8, 168], "msddataset": [8, 168, 176, 180], "mtl": [4, 11, 46, 49, 139, 141], "mu": [21, 32, 42, 48, 52, 95, 125, 126, 158, 160, 171], "much": [13, 161], "multi": [74, 80, 81], "multiclassdic": [8, 77, 80], "multiclassificationmetr": [8, 77, 80, 81], "multidimension": 171, "multinomi": [183, 187], "multipl": [13, 23, 29, 50, 64, 70, 80, 81, 97, 128, 153, 161, 181], "multipli": [130, 155, 165], "multiprocess": 50, "multithread": 181, "multithreadedaugment": 181, "multivari": 171, "must": [1, 10, 13, 22, 23, 50, 51, 77, 79, 80, 81, 84, 86, 108, 122, 131, 132, 136, 139, 141, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 166, 172, 175, 181, 183], "mutual": [71, 128, 183], "mypi": 1, "n": [23, 27, 45, 46, 53, 70, 95, 106, 110, 131, 161, 166, 171], "n_1": 161, "n_2": 161, "n_case": 181, "n_client": 165, "n_clients_sampl": 130, "n_dataload_process": 50, "n_featur": [70, 71, 74, 75], "n_i": 161, "n_k": 131, "n_n": 161, "n_pair": 70, "n_sampl": [74, 171], "n_server_round": 159, "n_total_cli": 130, "name": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 64, 67, 74, 77, 78, 79, 80, 81, 83, 84, 90, 91, 94, 97, 101, 112, 116, 119, 120, 122, 128, 132, 134, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 156, 157, 159, 162, 170, 173, 176, 181], "named_modul": 97, "nan": 80, "narrow": 170, "narrow_dict_typ": [8, 168, 170], "narrow_dict_type_and_set_attribut": [8, 168, 170], "narrow_type_to": 170, "navig": 1, "ndarrai": [21, 23, 24, 28, 30, 31, 36, 38, 47, 49, 51, 53, 87, 88, 89, 90, 91, 115, 116, 117, 118, 119, 120, 121, 122, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 175, 183], "nearli": [4, 34], "necessari": [13, 31, 39, 48, 51, 67, 86, 112, 148, 181, 185], "necessarili": [13, 86], "need": [1, 4, 7, 10, 12, 13, 14, 23, 28, 30, 31, 34, 36, 38, 41, 42, 47, 50, 77, 81, 84, 86, 90, 91, 95, 108, 110, 114, 116, 128, 142, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 171, 175, 181, 185, 186], "needs_input_grad": 175, "neg": [70, 73, 75, 80, 81, 85, 155], "negative_pair": [70, 73], "neighbor": 131, "neighbor_rel": 131, "neighborrel": 131, "neither": [81, 166], "net": 7, "network": [32, 38, 72, 97, 161, 181], "neural": 97, "neuron": 175, "never": [11, 49, 132, 136, 174], "new": [1, 14, 17, 24, 42, 57, 61, 79, 81, 86, 99, 104, 105, 106, 127, 132, 136, 148, 159, 161, 173, 178, 183, 185, 187], "new_dimens": 127, "new_tag": [132, 136], "newli": 166, "next": [7, 25, 36, 52, 81, 86, 122, 144, 159, 160, 181, 183], "nice": 175, "nip": 70, "nn": [7, 10, 11, 12, 13, 14, 23, 27, 28, 33, 41, 45, 46, 47, 50, 76, 90, 91, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 115, 116, 120, 122, 128, 147, 166, 169, 181, 182, 184, 185, 188], "nnunet": [13, 14, 50, 142, 148, 181], "nnunet_augment": 181, "nnunet_cli": [8, 20], "nnunet_config": [50, 181], "nnunet_plan": [50, 148], "nnunet_serv": [8, 137], "nnunet_trainer_class": [50, 148], "nnunet_trainer_class_kwarg": 50, "nnunet_util": [8, 168], "nnunetcli": [8, 20, 50, 148, 181], "nnunetconfig": [8, 168, 181], "nnunetdataloaderwrapp": [8, 168, 181], "nnunetserv": [8, 13, 50, 137, 142, 148], "nnunetservercheckpointandstatemodul": [8, 9, 13, 148], "nnunetserverstatecheckpoint": [8, 9, 13, 14], "nnunettrain": [50, 148], "nnunetv2": [50, 148, 181], "node": 7, "nois": [24, 130, 131, 143, 146, 150, 155, 165], "noise_ev": 131, "noise_multipli": [43, 130, 131, 146, 150, 165], "noise_std_dev": 165, "noisi": 165, "noisy_aggreg": [8, 152], "non": [1, 4, 21, 47, 48, 72, 77, 84, 86, 131, 142, 145, 169, 170, 171, 172, 173, 175, 178, 181, 187], "nondetmultithreadedaugment": 181, "none": [1, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 67, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 103, 105, 106, 107, 110, 114, 115, 116, 118, 120, 121, 122, 125, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 186, 187, 188], "nonneg": 120, "nonzero": [119, 157], "nor": [94, 166], "norm": [4, 24, 32, 42, 45, 46, 50, 74, 116, 120], "norm_threshold": 120, "normal": [4, 33, 69, 70, 74, 82, 95, 106, 119, 120, 126, 165, 171, 178], "normalize_featur": 74, "normalize_metr": [8, 77, 82], "normalized_shap": 106, "notabl": 70, "notat": 171, "note": [1, 4, 7, 11, 13, 23, 28, 32, 38, 41, 46, 47, 49, 50, 51, 64, 74, 79, 80, 81, 86, 87, 88, 92, 95, 99, 103, 105, 106, 110, 115, 116, 119, 120, 127, 130, 131, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 175, 183, 185, 186, 187], "notebook": 131, "noth": [7, 86, 94], "notimplementederror": [10, 23, 29, 31, 38, 47, 50, 77, 78, 79, 81, 84, 95, 108, 178], "notset": [168, 189], "now": [1, 7, 86, 110, 133, 169], "np": [175, 183, 187], "nt": 70, "ntxentloss": [8, 69, 70], "num": [50, 188], "num_accumulating_batch": [27, 45, 46], "num_class": 101, "num_client": [16, 17, 171], "num_featur": 106, "num_input_channel": 148, "num_label": [80, 81], "num_round": [7, 142, 143, 144, 146, 147, 148, 150], "num_sampl": [80, 81, 181], "num_segmentation_head": 148, "num_server_round": [143, 146, 150], "num_spatial_dim": 181, "num_validation_step": [23, 30], "num_work": [57, 60], "number": [1, 4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 39, 42, 45, 46, 47, 48, 49, 50, 52, 53, 57, 58, 60, 72, 74, 81, 82, 86, 87, 88, 90, 91, 100, 101, 103, 106, 110, 119, 120, 127, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 174, 175, 181, 183, 186, 187, 188], "number_of_partit": 183, "numer": [62, 68, 106, 175], "numpi": [21, 87, 88, 115, 119, 147, 153, 165, 166, 175, 182, 184, 186], "numpy_st": 186, "numpycli": [23, 31, 47, 89], "numpyclientminimalprotocol": [8, 87, 89], "numpyclippingcli": [8, 20, 24], "nutshel": 161, "nvidia": 186, "object": [11, 13, 14, 16, 18, 19, 21, 22, 23, 25, 29, 30, 36, 39, 41, 42, 47, 50, 51, 64, 67, 73, 81, 83, 87, 88, 90, 91, 97, 99, 116, 120, 125, 127, 128, 130, 131, 132, 133, 135, 136, 142, 143, 144, 146, 147, 149, 150, 156, 157, 159, 161, 162, 170, 174, 175, 176, 178, 181, 182, 184, 187, 188], "observ": 161, "obtain": [11, 13, 24, 31, 153, 161], "obviou": 1, "occur": [4, 23, 27, 28, 38, 41, 45, 46, 47, 90, 91, 142, 164, 171], "odot": 101, "off": [47, 74, 142, 144, 155, 158, 160], "offer": [154, 186], "offici": [61, 101, 110], "official_column": 61, "often": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 153, 169], "old": [24, 25, 48, 52, 75], "old_global_featur": [73, 75], "old_local_featur": [73, 75], "old_model": 48, "omit": 1, "on_evaluate_config_fn": [7, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "on_fit_config_fn": [7, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "on_init_parameters_config_fn": [139, 140, 141, 142, 143, 145, 146, 148, 150], "onc": [7, 47, 133, 134, 181], "one": [1, 11, 13, 23, 28, 29, 30, 31, 33, 35, 36, 39, 42, 50, 75, 80, 81, 83, 86, 90, 91, 97, 100, 101, 103, 104, 105, 106, 107, 108, 128, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 155, 159, 162, 164, 166, 169, 170, 171, 173, 176, 178, 181, 186], "one_layer_map_inputs_to_output": [168, 171], "ones": [85, 106, 132, 136, 162, 166], "onli": [1, 4, 10, 11, 12, 13, 23, 27, 28, 30, 31, 34, 36, 38, 39, 41, 45, 46, 47, 51, 52, 53, 64, 80, 81, 83, 92, 94, 100, 101, 106, 108, 110, 112, 116, 125, 132, 136, 142, 144, 147, 148, 154, 155, 157, 158, 160, 161, 164, 165, 166, 172, 181], "onlin": 1, "onto": [72, 74, 75, 110, 127], "op": [142, 186], "opacu": [12, 13, 43, 146, 154, 166, 185], "opacus_checkpoint": [8, 9], "opacusbasicfedavg": [8, 146, 152, 154], "opacuscheckpoint": [8, 9, 12], "opacusscaffold": [8, 152, 166], "opacusservercheckpointandstatemodul": [8, 9, 13, 146], "open": 4, "oper": [38, 77, 84, 122, 142, 170, 175, 185], "oppos": 175, "optim": [4, 7, 22, 23, 24, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 53, 72, 73, 74, 87, 89, 90, 91, 94, 101, 166, 178, 181, 185, 188], "optimization_step": 72, "optimize_beta": [69, 74], "optimizer_kei": [23, 50, 87, 90, 91], "optimizersnapshott": [8, 168, 188], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 64, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 94, 95, 99, 100, 101, 103, 105, 106, 107, 110, 112, 115, 120, 125, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 171, 172, 173, 174, 176, 178, 181, 183, 185, 186, 187], "orchestr": [51, 95, 135], "order": [1, 14, 36, 48, 79, 87, 88, 90, 91, 97, 115, 116, 119, 122, 130, 131, 144, 148, 150, 153, 155, 159, 160, 175, 181], "ordin": [62, 68], "ordinari": 35, "org": [22, 33, 34, 35, 36, 37, 42, 53, 61, 70, 75, 77, 84, 98, 99, 101, 103, 110, 119, 122, 145, 150, 154, 155, 157, 158, 162, 165, 166, 171, 175, 186], "organ": [132, 136], "origin": [4, 28, 48, 49, 50, 52, 57, 61, 64, 72, 75, 90, 91, 94, 104, 110, 112, 148, 162, 169, 171, 173, 183], "original_column": 61, "original_dataset": 183, "original_label_map": 57, "original_median_shape_after_transp": 50, "original_median_spacing_after_transp": 50, "original_model": 104, "original_param": 166, "orthonorm": 161, "other": [1, 4, 21, 22, 23, 24, 27, 28, 29, 30, 33, 38, 41, 45, 46, 49, 50, 51, 53, 64, 79, 80, 86, 87, 88, 90, 91, 100, 103, 107, 111, 112, 114, 122, 131, 139, 140, 141, 142, 143, 145, 146, 148, 150, 161, 165, 173, 175, 181, 185], "otherwis": [7, 11, 13, 14, 23, 30, 38, 39, 51, 64, 80, 81, 104, 128, 132, 134, 136, 174, 183], "our": [1, 4, 7, 34, 41, 77, 84, 172], "out": [1, 33, 120, 143, 155, 161], "out_channel": 103, "out_featur": 105, "outcom": [80, 81], "output": [23, 28, 36, 42, 50, 58, 72, 77, 80, 81, 84, 90, 91, 94, 95, 97, 99, 100, 101, 103, 105, 106, 108, 111, 112, 126, 148, 171, 175, 181], "output_dim": 171, "output_dir": 58, "output_fold": [132, 134], "output_pad": 103, "output_path": 58, "output_s": [72, 103], "outsid": [4, 132, 133, 134, 136, 186], "over": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 71, 72, 77, 78, 79, 80, 84, 87, 88, 106, 131, 132, 136, 139, 141, 154, 155, 166, 173, 181, 187], "overal": 1, "overestim": 110, "overfit": 174, "overflow": [80, 81], "overhead": 50, "overrid": [12, 16, 18, 19, 22, 23, 24, 25, 34, 36, 37, 41, 50, 51, 53, 81, 107, 144, 150, 159, 175, 181], "overridden": [21, 23, 30, 33, 41, 47, 50, 81, 87, 88, 142, 147, 159, 166, 175], "overwrit": [10, 12, 97, 132, 136], "own": [4, 50, 181, 185], "p": [1, 80, 81, 155], "p_i": 42, "pack": [1, 21, 27, 28, 38, 45, 46, 53, 87, 88, 95, 117, 119, 121, 122, 144, 155, 156, 157, 158, 160, 161, 162, 173], "pack_losses_with_val_metr": [23, 39, 159], "pack_paramet": [113, 117, 119, 121], "packag": [0, 1, 7, 21, 122, 154, 155, 164, 166, 181], "packed_data": 173, "packed_paramet": [117, 119, 121], "packer": [13, 117, 119, 121, 155], "packing_exchang": [8, 113], "packingservercheckpointandandstatemodul": [8, 9, 13], "pad": [61, 103], "pad_image_path_func": [55, 59, 61], "pad_label_map_func": [55, 59, 61], "padding_mod": 103, "page": [1, 119, 122, 157], "pair": [70, 72, 73, 75, 77, 78, 79, 80, 84, 132, 136, 171], "pairwise_distance_squar": [69, 72], "panchal23a": [39, 163], "panda": 64, "paper": [28, 36, 42, 48, 49, 52, 53, 61, 70, 72, 75, 101, 131, 154, 155, 158, 161, 166, 171, 175], "paper_fil": 70, "paradigm": 162, "parallel": [37, 52, 60, 98, 100, 108], "parallel_output_join": [93, 108], "parallel_split_model": [8, 93], "parallelfeaturejoinmod": [8, 93, 108], "parallelsplitheadmodul": [8, 93, 100, 108, 111], "parallelsplitmodel": [8, 93, 100, 108, 111], "param": [53, 119, 166], "paramet": [4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188], "parameter_exchang": [8, 13, 51, 87, 88, 90, 91, 147], "parameter_exchanger_bas": [8, 113], "parameter_extract": [7, 8, 168], "parameter_pack": [8, 113, 117, 121], "parameter_selection_criteria": [8, 113], "parameter_upd": 166, "parameterexchang": [8, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 42, 51, 52, 53, 87, 88, 113, 115, 116, 118, 121], "parameterpack": [8, 113, 117, 119, 121], "parameterpackeradaptiveconstraint": [8, 113, 119], "parameterpackerwithclippingbit": [8, 113, 119], "parameterpackerwithcontrolvari": [8, 113, 119], "parameterpackerwithlayernam": [8, 113, 119], "parametr": 72, "params1": 182, "params2": 182, "params_1": [53, 166], "params_2": [53, 166], "parent": [13, 29, 38, 50, 80, 107, 164], "part": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 79, 101, 108, 131, 139, 140, 141, 142, 143, 145, 146, 148, 150, 157, 181, 187], "parti": 48, "partial": [7, 30, 51, 79, 98, 120, 121, 128, 159, 166], "partial_layer_exchange_model": [8, 93], "partial_parameter_exchang": [8, 113], "partial_weight_exchange_cli": [8, 20], "partiallayerexchangemodel": [8, 93, 94, 100, 101, 109, 111, 112], "partialparameterexchang": [8, 51, 113, 116, 121, 122], "partialweightexchangecli": [8, 20, 51], "particip": [139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 156, 157, 159, 166], "particular": [11, 80, 162, 183, 187], "partit": 183, "partition": [8, 168], "partition_dataset": [168, 183], "partition_label_indic": [168, 183], "partitioned_dataset": 183, "pass": [1, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 72, 77, 78, 79, 80, 81, 84, 87, 88, 90, 91, 92, 95, 97, 99, 101, 103, 105, 106, 107, 108, 110, 112, 132, 133, 134, 136, 144, 148, 149, 150, 158, 160, 170, 173, 175, 181, 183, 187], "past": [10, 12, 30, 76], "patch": 181, "path": [7, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 61, 99, 125, 127, 128, 134, 144, 174, 176], "path_to_checkpoint": [10, 12], "pathlib": 7, "patienc": 174, "pc": 161, "pca": [8, 31, 93, 161], "pca_lowrank": 110, "pca_preprocessor": [8, 123], "pcamodul": [8, 31, 93, 110, 127, 161], "pcapreprocessor": [8, 123, 127], "pd": [58, 61, 64], "pdf": [35, 36, 37, 39, 53, 70, 98, 99, 145, 155, 162, 163, 165, 166, 175], "peft": 184, "peft_parameter_extract": [8, 168], "penal": [21, 27, 45, 46], "penalti": [4, 21, 27, 28, 32, 38, 45, 46, 49, 87, 88, 90, 91, 158, 160], "penalty_loss_funct": [87, 88, 90, 91], "per": [42, 50, 70, 80, 81, 82, 106, 110, 130, 131, 146, 150, 155, 165, 171, 181, 183], "per_client_example_cap": [155, 165], "per_round_checkpoint": [23, 30], "percentag": [57, 60, 116, 120, 187], "perfcl": [4, 25, 37, 52, 73, 75, 111], "perfcl_bas": [8, 93], "perfcl_client": [8, 20], "perfcl_loss": [8, 25, 69], "perfcl_loss_config": 73, "perfclclient": [8, 20, 52], "perfclloss": [8, 69, 75], "perfcllosscontain": [8, 69, 73], "perfclmodel": [8, 52, 93, 111], "perform": [4, 11, 16, 21, 23, 24, 25, 29, 30, 31, 32, 35, 36, 37, 39, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 77, 84, 87, 88, 101, 110, 122, 127, 130, 131, 142, 146, 147, 148, 150, 154, 155, 156, 157, 161, 162, 164, 166, 170, 172, 173, 178, 183, 185], "perform_linear_approxim": 74, "perhap": [13, 23, 31, 50, 95], "persist": 10, "person": [4, 8, 22, 28, 38, 41, 42, 49, 87, 94, 101, 141], "personalized_conditional_input": [42, 101], "personalizedmod": [8, 87, 90], "perspect": [80, 166], "phase": [4, 13, 36, 99, 156, 157, 166], "pickl": [50, 58], "piec": [52, 67, 73, 95], "pii": [52, 75], "pinnabl": 175, "pip": [1, 7], "pipelin": [64, 95], "pixel": 81, "place": [13, 48, 64, 81, 156, 157, 181, 183], "placehold": 12, "plan": [50, 142, 148, 181], "plans_identifi": 50, "plans_nam": 50, "plansnam": 50, "plate": 58, "pleas": [1, 64, 103, 116, 119, 122, 157, 175], "plu": [48, 178], "plugin": 174, "poetri": 1, "point": [1, 47, 57, 110, 130, 131, 144, 161, 183, 187], "poisson": [19, 130, 131], "poisson_sampling_manag": [8, 15], "poissonsampl": [8, 129, 131], "poissonsamplingclientmanag": [8, 15, 19], "poll": [8, 47, 137, 142, 143, 146, 148, 154, 167], "poll_client": [8, 137, 149], "poll_clients_for_sample_count": [137, 142], "pollresultsandfailur": 149, "polylrschedulerwrapp": [8, 168, 181], "polynomi": 181, "pool": [142, 149], "popul": [131, 132, 136], "population_s": 131, "pos_label": [80, 81], "posit": [70, 73, 75, 80, 81, 85, 86], "positive_pair": [70, 73], "posixpath": [132, 134], "possibl": [1, 35, 73, 80, 81, 181, 185], "possibli": [39, 49, 185], "post": [11, 13, 81, 142, 145], "post_aggreg": [9, 11], "posterior": 162, "potenti": [4, 10, 11, 12, 13, 14, 23, 27, 28, 29, 30, 43, 49, 90, 91, 95, 112, 117, 139, 140, 141, 142, 143, 145, 146, 148, 150, 158, 173, 183, 185], "power": [74, 171], "pr": 1, "pre": [1, 11, 13, 99, 116, 125, 127, 173], "pre_aggreg": [9, 11], "preced": [108, 166], "precis": [50, 110, 157, 161, 162], "pred": [21, 22, 23, 25, 27, 28, 29, 38, 42, 45, 46, 48, 49, 50, 52, 79, 80, 81, 83, 86, 89, 90, 91, 126, 181], "pred_1": 79, "pred_2": 79, "pred_transform": 79, "predict": [4, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 94, 96, 99, 100, 101, 107, 108, 111, 112, 126, 159, 181], "predict_with_model": [40, 41, 87, 89], "prediction_head": 99, "prediction_loss": 42, "preds_1": 79, "preds_2": 79, "preds_list": 96, "preemption": 142, "prefix": [1, 10, 50, 97, 128], "preform": 101, "prepar": 110, "prepare_data_forward": [93, 110], "prepare_loss_arg": [8, 168, 181], "prepend": 10, "preprocess": [8, 50, 55, 56, 61, 81], "preprocess_derm7pt": [55, 59, 61], "preprocess_ham10000": [55, 59, 61], "preprocess_isic_2019": [55, 59, 61], "preprocess_pad_ufes_20": [55, 59, 61], "preprocess_skin": [55, 59], "prescrib": 1, "present": [4, 11, 23, 30, 36, 80, 81, 86, 99, 159, 170, 183], "preserv": [11, 13, 48, 112, 139, 140, 141, 142, 143, 145, 146, 148, 150, 169], "press": [39, 163], "pretrain": [99, 128], "pretrained_model": 128, "pretrained_model_path": 128, "prevent": [1, 80, 81, 97], "previou": [4, 10, 48, 75, 76, 79, 132, 136, 155], "previous": [79, 186], "primari": 110, "princip": [4, 31, 110, 127, 161], "principal_compon": 110, "print": [50, 57, 169], "prior": [23, 25, 47, 52, 53, 79, 80, 81, 97, 110, 142, 145, 146, 148, 165, 170, 181, 183], "prior_distribut": 183, "priorit": [4, 170], "prioriti": [132, 136], "privaci": [8, 12, 24, 43, 49, 143, 146, 150, 155, 185], "privacy_util": [8, 168], "privacy_validate_and_fix_modul": [8, 168, 185], "privat": [4, 34, 36, 43, 53, 150, 155], "probabilist": 162, "probabl": [19, 103, 105, 106, 130, 131, 162, 171, 175, 181, 183, 187], "problem": [80, 86], "proce": [139, 140, 141, 142, 143, 145, 146, 148, 150], "procedur": [4, 27, 28, 45, 90, 91, 108, 131, 161], "proceed": [13, 27, 28, 39, 45, 90, 91, 150, 163], "process": [11, 13, 19, 23, 30, 36, 37, 39, 43, 50, 57, 58, 60, 61, 81, 101, 103, 120, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 173, 174, 175, 181, 186], "process_and_check_validation_step": [8, 168, 169], "process_client_data": [55, 59, 61], "process_config": [20, 23, 39], "process_data": [55, 56, 58], "process_fed_rep_config": [20, 36], "processor": 125, "produc": [1, 10, 17, 18, 22, 23, 29, 36, 41, 42, 48, 50, 75, 80, 94, 95, 96, 100, 101, 103, 105, 106, 107, 108, 111, 122, 139, 140, 141, 142, 143, 145, 146, 148, 150, 154, 155, 161, 166, 171, 172, 178], "product": [27, 28, 38, 45, 46, 49, 76], "progress": [1, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 169], "progress_bar": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 169], "project": [1, 4, 99, 107, 110, 127, 132, 136], "project_back": [93, 110], "project_lower_dim": [93, 110], "projection_head": 99, "projection_modul": 107, "propag": [103, 105, 106, 175], "proper": [10, 11, 12, 13, 28, 36, 42, 90, 91, 99, 116, 131, 146, 156, 157, 181], "properli": [1, 11, 13, 33, 35, 51, 121], "properti": [23, 50, 51, 90, 91, 116, 148, 149, 154], "proport": [42, 166, 176], "propos": [70, 72], "protocol": [88, 89, 90, 91], "provid": [4, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 67, 68, 70, 71, 73, 74, 80, 81, 82, 86, 94, 95, 99, 101, 104, 105, 106, 115, 116, 128, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 169, 172, 175, 181, 183, 185], "proxi": [149, 175], "proxim": [158, 160], "prune": 162, "pseudo": 175, "pseudo_sort_scoring_funct": [8, 168, 175], "pt": 14, "pull": [21, 23, 24, 28, 30, 38, 51, 87, 88, 90, 91], "pull_paramet": [113, 114, 115, 116, 118, 122], "purpos": [10, 50, 64, 110, 139, 141], "push": [1, 181], "push_paramet": [113, 115, 116, 118, 122], "put": 57, "py": [1, 61, 94, 101], "pypi": [1, 4], "pyproject": 1, "pytest": 1, "pytestarg": 1, "pytesten": 1, "python": [1, 4, 7, 132, 136, 181, 186], "python3": 1, "pytorch": [10, 12, 23, 28, 30, 31, 43, 47, 50, 81, 90, 91, 103, 110, 116, 119, 122, 127, 157, 172, 181, 182, 184, 185, 186], "q": [110, 131], "q_1": 131, "q_2": 131, "qinbinli": 70, "qr": 161, "quadrupl": 74, "quantil": 155, "quantiti": 166, "queri": 150, "quickli": 181, "quickstart": 4, "quintessenti": 158, "quotat": 1, "quotestyl": 1, "r": 175, "rais": [10, 11, 13, 14, 23, 28, 29, 30, 31, 36, 38, 39, 41, 45, 46, 47, 50, 64, 68, 77, 78, 79, 81, 84, 86, 87, 88, 90, 91, 92, 95, 103, 108, 144, 155, 159, 166, 169, 170, 172, 178, 181, 183], "rand": 183, "randint": 183, "random": [8, 50, 57, 60, 74, 110, 132, 136, 148, 168, 181, 183, 187], "random_st": 186, "randomli": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53], "rang": [4, 79, 183, 187], "rank": 110, "rank_estim": 110, "rapid": 181, "rate": [4, 23, 53, 72, 94, 131, 155, 163, 166, 181, 188], "rather": [1, 13, 19, 38, 87, 88, 98, 155, 172, 181, 183], "ratio": [130, 131, 181], "raw": [144, 155, 166], "rbf": 74, "rdp": 130, "re": [1, 10, 21, 23, 28, 36, 38, 53, 74, 87, 88, 90, 91, 99, 132, 136, 142, 154, 155, 156, 157, 158, 161, 164, 166, 173, 178], "read": 181, "readi": [142, 181], "real": [13, 120, 127], "realiti": 127, "reason": [10, 12, 110, 148, 166], "recal": [13, 81], "receiv": [17, 21, 23, 25, 32, 46, 49, 50, 52, 77, 84, 103, 105, 106, 149, 156, 157, 158, 166, 171], "recent": [4, 22, 23, 27, 35, 45, 46, 142], "recogn": 11, "recommend": [1, 7, 50, 158, 166], "recomput": 42, "reconstitut": 115, "reconstruct": [67, 95, 110, 126], "record": [43, 142], "recov": 110, "redirect": 181, "redistribut": [147, 164], "reduc": [50, 70, 72, 75, 80, 81, 110, 127, 158, 160], "reduce_dimens": [123, 127], "reduct": [31, 81, 110, 127], "ref": [132, 136], "ref_image_shap": 181, "refer": [4, 23, 42, 48, 52, 76, 86, 162, 171], "reflect": [103, 166], "reformat": 50, "regardless": [10, 80, 81, 154, 173], "regist": 97, "regular": [42, 49, 103, 105, 157], "regularized_q_k": 74, "reiniti": 185, "rel": [70, 80, 81, 110, 187], "relat": [4, 37, 52, 86, 131, 155, 162], "releas": [1, 181], "relev": [21, 23, 24, 28, 30, 38, 47, 49, 52, 53, 64, 87, 88, 90, 91, 106, 153], "reli": [13, 34, 115, 116, 173], "reload": [31, 181], "reload_modul": [8, 168, 181], "relu": 101, "remain": [11, 14, 70, 81, 100, 111, 155, 158, 160], "remaind": [57, 80, 107], "rememb": [1, 7], "remot": 1, "remov": [4, 14, 80, 81, 97], "removablehandl": 97, "remove_hook": [93, 97], "rep_epoch": 36, "rep_step": 36, "repack": 166, "reparameter": 95, "repeat": 183, "repeatedli": 175, "replac": [16, 18, 19, 49, 85, 130, 131, 181, 185], "replic": 103, "report": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 80, 81, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150], "report_centralized_ev": [137, 142], "reports_manag": [8, 132], "reportsmanag": [8, 132, 135, 188], "repositori": [1, 61], "repres": [13, 14, 16, 18, 19, 22, 23, 25, 27, 30, 31, 36, 39, 42, 45, 46, 47, 52, 67, 77, 78, 79, 81, 84, 85, 95, 96, 98, 101, 110, 112, 119, 122, 126, 149, 153, 157, 165, 166, 171, 172, 175, 178, 181], "represent": [4, 20, 36, 48, 72, 95, 99, 110, 171, 178], "reproduc": [176, 186], "request": [21, 64, 87, 88, 103, 139, 140, 141, 142, 143, 145, 146, 148, 150, 153, 154, 169, 183], "requir": [11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 28, 29, 34, 35, 36, 37, 48, 50, 51, 52, 53, 72, 81, 87, 88, 90, 91, 100, 101, 110, 112, 119, 122, 131, 140, 148, 149, 154, 155, 156, 157, 159, 161, 164, 172, 175, 183, 185], "requires_grad": 98, "resampl": [17, 183], "research": [1, 4], "resembl": 98, "reserv": 57, "reset": [17, 23, 27, 45, 46, 77, 78, 79, 81, 83, 84, 145, 162, 168, 178, 181], "reset_beta_prior": [152, 162], "reset_frequ": 145, "reset_sampl": [15, 17], "reshap": 110, "resili": 142, "resolut": 181, "respect": [7, 22, 25, 27, 28, 36, 38, 42, 77, 78, 79, 80, 81, 84, 86, 90, 91, 100, 101, 103, 105, 106, 111, 130, 176], "respond": [144, 147], "respons": [13, 23, 41, 108, 116, 119, 122, 142, 144, 145, 149, 161], "rest": 70, "restart": [11, 13, 14, 139, 140, 141, 142, 143, 145, 146, 148, 150], "restor": [95, 174, 186], "restore_random_st": [8, 168, 186], "restrict": [14, 101, 155, 166], "result": [31, 79, 80, 81, 110, 119, 132, 136, 142, 143, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 175, 185, 186, 187], "resum": [132, 136], "retain": [64, 122, 157], "retri": 183, "retriev": [13, 143, 146, 149, 175], "return": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188], "return_mu_onli": 125, "reus": [28, 36, 90, 91, 95, 132, 136], "right": [4, 13, 24, 36, 95, 110, 140, 161], "robust": [28, 38, 90, 91], "roc_auc": [77, 84], "rocauc": [8, 77, 84], "root": [57, 58], "round": [7, 8, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 32, 36, 38, 39, 42, 45, 46, 48, 49, 50, 51, 52, 53, 75, 81, 87, 88, 90, 91, 94, 101, 116, 121, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 181], "rout": [13, 28, 38, 49, 64, 90, 91, 99], "row": [58, 61, 110, 161], "rpc": 148, "rtype": 175, "ruff": 1, "rule": 1, "run": [1, 13, 17, 28, 31, 36, 50, 90, 91, 94, 107, 112, 131, 132, 134, 136, 142, 143, 144, 146, 149, 150, 159, 166, 175, 185, 186], "run_id": [132, 134], "runtim": 50, "runtimeerror": [87, 88, 90, 91], "rxrx": 57, "rxrx1": [8, 55], "s0031320323002078": [52, 75], "s_1": 161, "s_2": 161, "s_i": 161, "s_n": 161, "safe_global_model": [87, 90, 91], "said": 1, "same": [7, 17, 28, 35, 38, 39, 43, 50, 72, 74, 80, 81, 83, 86, 90, 91, 95, 103, 104, 105, 106, 107, 116, 128, 131, 132, 136, 142, 145, 148, 157, 158, 162, 165, 169, 171, 172, 175, 181, 183], "sampl": [15, 16, 17, 18, 19, 23, 30, 31, 36, 42, 47, 50, 57, 72, 80, 81, 82, 93, 95, 96, 99, 103, 105, 106, 120, 125, 130, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 162, 164, 165, 166, 171, 173, 175, 176, 181, 183, 187], "sample_al": [15, 16], "sample_count": [143, 146], "sample_fract": [15, 16, 18, 19, 155], "sample_percentag": 187, "sample_s": 131, "sampler": [8, 60, 168, 176], "samples_per_cli": 171, "sampling_ratio": 131, "sampling_strategi": 131, "samplingstrategi": [8, 129, 131], "satisfi": [87, 88, 90, 91, 183], "save": [10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 58, 61, 75, 81, 90, 91, 99, 125, 127, 132, 134, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 173, 174, 175, 186, 188], "save_attribut": [168, 188], "save_checkpoint": [9, 14], "save_client_st": [9, 14], "save_for_backward": 175, "save_for_forward": 175, "save_model": [20, 31], "save_random_st": [8, 168, 186], "save_server_st": [9, 14], "save_st": [9, 11, 13, 14], "save_to_json": [55, 59, 61], "save_to_pkl": [55, 56, 58], "scaffold": [4, 8, 13, 23, 53, 119, 150, 152], "scaffold_cli": [8, 20], "scaffold_serv": [8, 137], "scaffoldcli": [8, 20, 53], "scaffoldserv": [8, 137, 150], "scaffoldservercheckpointandstatemodul": [8, 9, 13, 150], "scalar": [10, 11, 12, 13, 23, 27, 28, 30, 31, 36, 39, 47, 49, 50, 67, 68, 77, 78, 79, 81, 84, 90, 91, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166], "scale": [50, 70, 74, 76, 165, 166, 181], "scaling_coeffici": 166, "scenario": [23, 38, 97], "schedul": [23, 50, 181, 188], "scheme": [156, 157, 161, 162, 173], "scienc": [52, 75], "sciencedirect": [52, 75], "scikit": [77, 84], "scope": [132, 133, 134, 136, 181], "score": [10, 12, 13, 77, 79, 80, 81, 84, 85, 103, 105, 106, 120, 122, 162, 175], "score_gen_funct": 122, "scoregenfunct": 122, "script": [7, 57, 61], "second": [11, 23, 25, 27, 28, 35, 38, 41, 45, 46, 48, 50, 52, 53, 71, 73, 74, 75, 80, 101, 108, 112, 142, 143, 144, 145, 146, 147, 150, 154, 155, 162, 163, 171, 182], "second_featur": 73, "second_feature_extractor": [108, 111], "second_tensor": 108, "section": [1, 171, 175], "secur": 4, "see": [1, 50, 64, 73, 77, 80, 81, 84, 103, 110, 116, 119, 122, 131, 132, 136, 142, 147, 157, 158, 160, 161, 171, 175, 181, 186], "seed": [57, 60, 175, 186, 187], "seem": [10, 14, 50], "seen": [10, 79, 158, 160, 174], "segment": [50, 81, 176, 181], "select": [16, 17, 18, 19, 51, 57, 116, 119, 120, 121, 122, 131, 142, 143, 144, 146, 149, 172, 175, 187], "select_by_indic": [8, 168, 172], "select_by_percentag": [113, 120], "select_by_threshold": [113, 120], "select_drift_mor": 120, "select_layers_by_percentag": [8, 113, 120], "select_layers_by_threshold": [8, 113, 120], "select_paramet": [113, 116, 121, 122], "select_scores_and_sample_mask": [8, 113, 120], "select_zeroeth_el": [8, 168, 175], "selected_indic": 172, "self": [7, 10, 12, 14, 17, 21, 22, 23, 24, 27, 29, 33, 38, 41, 42, 43, 45, 46, 47, 50, 51, 64, 80, 81, 108, 110, 112, 120, 132, 136, 159, 166, 169, 170, 171, 172, 173, 183], "semant": 161, "send": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 90, 91, 115, 117, 120, 125, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 156, 157, 161, 169, 174], "sens": [31, 81], "sensibl": 14, "sent": [21, 23, 24, 28, 29, 30, 31, 38, 43, 47, 49, 50, 51, 53, 73, 87, 88, 90, 91, 103, 105, 106, 115, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 158, 159, 160, 162, 164, 166], "sentri": 1, "seongjun": 61, "separ": [4, 7, 23, 27, 41, 45, 46, 49, 75, 80, 81, 119, 133, 156, 175, 181], "sequenc": [1, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 79, 83, 106, 130, 131, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 181], "sequenti": [38, 42, 97, 101, 107, 112], "sequential_forward": [93, 107, 112], "sequential_split_model": [8, 93], "sequentiallysplitexchangebasemodel": [8, 34, 93, 98, 101, 112], "sequentiallysplitmodel": [8, 38, 93, 107, 112], "seri": 61, "serial": [50, 67], "serializ": 188, "serializableobjectsnapshott": [8, 168, 188], "serv": [21, 28, 33, 90, 91], "server": [4, 8, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 87, 88, 90, 91, 94, 98, 100, 101, 111, 112, 114, 116, 117, 120, 130, 131, 132, 133, 134, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 174, 175], "server_": 14, "server_address": 7, "server_control_vari": 166, "server_learning_r": 155, "server_model": 147, "server_model_weight": 166, "server_modul": [8, 9], "server_nam": [14, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150], "server_noise_multipli": 143, "server_paramet": 13, "server_round": [142, 145, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167], "server_upd": [130, 131], "serverconfig": 7, "servergp": 101, "serverstatecheckpoint": [8, 9, 13, 14], "set": [1, 4, 7, 10, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 70, 71, 73, 74, 76, 79, 80, 81, 83, 85, 86, 87, 88, 90, 91, 94, 97, 98, 99, 105, 106, 108, 110, 111, 114, 115, 116, 117, 119, 121, 122, 127, 131, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 170, 171, 172, 175, 176, 181, 183, 186, 187], "set_all_random_se": [8, 168, 186], "set_attribut": [9, 14], "set_checkpoint_path": [9, 14], "set_config": 64, "set_data_mean": [93, 110], "set_fit_request": [62, 64], "set_initial_global_tensor": [20, 28, 38, 87, 90, 91], "set_len": 181, "set_nnunet_env": [8, 168, 181], "set_optim": [20, 22, 23, 28, 29, 36, 42, 87, 90, 91], "set_pack_losses_with_val_metr": [8, 168, 169], "set_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 47, 49, 51, 53, 87, 88, 89, 90, 91], "set_principal_compon": [93, 110], "set_transform_request": [62, 64], "setup": [1, 7, 28, 31, 35, 36, 42, 43, 49, 51, 90, 91, 139, 140, 141, 142, 143, 145, 146, 148, 150, 171], "setup_cli": [20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 87, 89, 90, 91], "setup_context": [168, 175], "setup_opacus_object": [20, 43, 185], "setup_privacy_account": [137, 143, 146], "sever": [4, 81], "sgd": [7, 131, 146, 150, 185], "sh": 1, "shape": [50, 70, 71, 74, 75, 77, 80, 81, 84, 86, 95, 97, 100, 103, 106, 107, 111, 112, 119, 122, 157, 162, 171, 173, 181, 182], "share": [4, 22, 32, 34, 36, 42, 128, 139, 161, 171], "shift": 4, "short": [120, 132, 136], "should": [1, 7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 64, 71, 72, 74, 75, 76, 80, 81, 86, 87, 88, 90, 91, 92, 95, 97, 100, 101, 103, 105, 106, 110, 112, 116, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 158, 159, 160, 165, 167, 171, 172, 173, 174, 175, 178, 181, 183, 188], "should_layer_be_exclud": [113, 116], "should_module_be_exclud": [113, 116], "should_stop": [168, 174], "shouldn": [132, 136], "show": 1, "shown": [4, 35], "shuffl": 60, "shut": [23, 50, 135], "shutdown": [7, 8, 20, 23, 50, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 150, 168, 181], "shutdown_dataload": [20, 50], "side": [1, 4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 87, 88, 90, 91, 94, 103, 117, 131, 140, 142, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166], "sigint": 181, "sigma": [131, 165, 171], "sigma_phi": 72, "sigma_q": 72, "sigmoid": [103, 105, 106, 162], "sigmoid_invers": [8, 168, 175], "signal": [17, 159, 181], "signal_for_typ": [152, 159], "signalfortypeerror": [8, 152, 159], "signalfortypeexcept": 159, "signatur": 175, "signific": 4, "significantli": [4, 50], "sigterm": 181, "silo": 49, "sim": [71, 95, 171], "simclr": [70, 99], "similar": [4, 25, 36, 41, 48, 50, 70, 71, 73, 75, 95, 99, 101, 161, 183], "similarli": 161, "simpl": [4, 21, 42, 133, 147, 154, 166, 171], "simpleclientmanag": [7, 16, 17], "simplemetr": [8, 77, 84], "simplest": [22, 23], "simpli": [7, 11, 13, 25, 27, 28, 29, 33, 36, 38, 39, 42, 45, 47, 48, 52, 85, 90, 91, 95, 100, 111, 115, 142, 145, 155, 158, 160, 162, 166, 172, 175], "simultan": [28, 38, 42, 90, 91, 101], "sinc": [29, 31, 47, 51, 128, 144, 156, 161, 162, 174, 181], "singl": [13, 21, 22, 23, 29, 31, 41, 42, 50, 53, 64, 80, 81, 87, 88, 95, 106, 108, 130, 149, 165, 178, 181, 188], "singlethreadedaugment": 181, "singleton": [106, 188], "singletonsnapshott": [8, 168, 188], "singular": [110, 161], "singular_valu": 110, "sirna_id": 58, "sit": [142, 145], "site": 58, "six": 103, "size": [27, 57, 60, 71, 72, 74, 80, 81, 86, 101, 103, 105, 106, 119, 130, 131, 146, 150, 155, 159, 160, 161, 165, 169, 171, 173, 176, 181, 183, 187], "size_of_model_param": 119, "skew": [171, 183, 187], "skin": 60, "skin_canc": [8, 55], "skin_cancer_feder": 61, "sklearn": [64, 77, 84], "slice": 172, "slight": 110, "slightli": 36, "small": [77, 84, 110, 183], "smaller": [79, 161, 183, 187], "smallest_final_magnitude_scor": [8, 113, 120], "smallest_increase_in_magnitude_scor": [8, 113, 120], "smallest_magnitude_change_scor": [8, 113, 120], "smoke": 1, "smoke_test": 1, "smooth": [72, 79], "smoothing_factor": 79, "snapshot": [14, 174, 188], "snapshot_attr": [11, 13, 14], "snapshott": [8, 14, 168], "so": [1, 10, 12, 13, 14, 17, 21, 23, 28, 31, 33, 38, 39, 47, 50, 51, 87, 88, 90, 91, 110, 116, 127, 132, 136, 142, 148, 156, 157, 162, 169, 170, 174, 175, 181, 183, 187], "soft": [77, 81, 84, 85, 86], "softmax": [101, 171], "solver": 49, "some": [1, 11, 19, 29, 31, 43, 50, 64, 86, 95, 108, 122, 131, 132, 136, 142, 148, 155, 156, 157, 161, 165, 166, 181, 183], "someth": [1, 23, 28, 38, 41, 45, 46, 103, 186], "sometim": [133, 134], "soon": 4, "sophist": 162, "sort": [97, 175], "sourc": [1, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "source_plan": 181, "source_plans_nam": 50, "space": [37, 52, 95, 100, 103, 110, 126], "spars": [4, 13, 33, 35, 110, 119, 122, 157], "sparse_coo_parameter_exchang": [8, 113], "sparse_coo_tensor": [119, 122, 157], "sparsecooparameterexchang": [8, 113, 122], "sparsecooparameterpack": [8, 113, 119], "sparsecooservercheckpointandstatemodul": [8, 9, 13], "sparsiti": 122, "sparsity_level": 122, "spatial": [77, 84, 181], "spatial_dimens": [77, 84], "spawn": [50, 181], "special": [13, 41, 114, 156, 157], "specif": [1, 4, 10, 12, 13, 14, 22, 23, 25, 33, 42, 48, 50, 52, 61, 81, 97, 106, 107, 112, 114, 115, 116, 122, 125, 131, 161, 164, 166, 172, 173, 181], "specifi": [7, 10, 12, 14, 23, 30, 35, 36, 50, 53, 57, 58, 68, 80, 81, 85, 94, 95, 97, 107, 108, 110, 112, 116, 131, 132, 136, 145, 148, 150, 159, 160, 169, 174, 176, 181, 187], "split": [37, 42, 52, 57, 60, 100, 107, 108, 112, 119, 128, 155, 176], "split_data_and_target": [8, 168, 176], "split_model_weights_and_clipping_bit": [152, 155], "split_perc": 60, "sqrt": 155, "squar": 24, "ssltensordataset": [8, 168, 172], "stabil": 106, "stabl": [77, 84, 103, 110, 119, 122, 157, 186], "stack": [31, 38], "stage": [30, 99, 112, 171], "stai": [4, 28, 38, 90, 91, 107], "standalon": 92, "standard": [1, 4, 47, 50, 52, 95, 112, 126, 131, 148, 154, 155, 165, 166, 171, 185], "standard_normal_kl_divergence_loss": [124, 126], "start": [1, 4, 25, 42, 48, 50, 51, 52, 75, 97, 120, 132, 136, 142, 161, 171, 174, 181], "start_client": 7, "start_run": [8, 132, 136], "start_serv": 7, "startonnewlin": 1, "state": [1, 4, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 83, 84, 87, 88, 90, 91, 94, 111, 119, 128, 131, 139, 140, 141, 142, 143, 145, 146, 148, 150, 153, 169, 174, 182, 184, 186, 188], "state_checkpoint": [8, 9, 11, 13, 174], "state_dict": [12, 115, 116, 120], "statecheckpoint": [8, 9, 14], "static": [1, 30, 67, 68, 99, 116, 119, 173, 175, 178], "staticmethod": 175, "statist": [13, 39, 74, 131], "std": [72, 130, 165], "stdout": [50, 181], "step": [7, 8, 13, 21, 22, 23, 25, 27, 28, 29, 36, 39, 41, 42, 43, 45, 46, 48, 50, 52, 53, 72, 79, 87, 88, 90, 91, 132, 133, 134, 135, 136, 146, 150, 157, 159, 160, 166, 170, 173, 174, 181], "steps_per_lr": 181, "steptyp": [132, 136], "still": [139, 141, 154, 162, 164, 174], "stochast": 175, "stop": [14, 39, 174], "stopiter": 181, "stopper": 174, "storag": [51, 100], "store": [13, 14, 21, 23, 24, 27, 28, 29, 32, 38, 42, 45, 46, 48, 51, 79, 80, 81, 87, 88, 90, 91, 94, 97, 100, 101, 107, 108, 110, 111, 112, 131, 175, 178], "store_initial_model": 51, "str": [1, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 67, 68, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 96, 97, 100, 101, 103, 108, 109, 111, 112, 116, 119, 120, 122, 128, 132, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 173, 174, 176, 177, 178, 181, 182, 183, 185, 186, 188], "straight": 175, "straightforward": [32, 98], "strap": [38, 39, 43, 142], "strategi": [4, 7, 8, 12, 21, 28, 33, 49, 51, 53, 87, 88, 131, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150], "strategy_with_pol": [8, 152], "strategywithpol": [8, 142, 152, 154, 167], "stream": 181, "streamtologg": [8, 168, 181], "strict": 1, "strictli": [1, 4, 22, 171, 172], "stride": 103, "string": [1, 14, 22, 23, 28, 36, 42, 50, 62, 64, 67, 68, 77, 78, 79, 81, 83, 84, 90, 91, 132, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 170, 181, 183, 188], "string_columns_transform": [8, 62], "stringio": 181, "stringsnapshott": [8, 168, 188], "strongli": 1, "structur": [14, 80, 95, 98], "stuff": 181, "style": [1, 171], "sub": [42, 64, 101], "subclass": [22, 23, 24, 25, 34, 36, 37, 41, 50, 51, 53, 81, 87, 88, 171, 175, 178, 181], "subfold": 176, "subject": 187, "submit": [1, 4], "submodul": [8, 38, 55], "subpackag": 181, "subprocess": 181, "subsampl": [168, 172, 176, 183, 187], "subsequ": [17, 31, 47, 48, 79, 148, 181], "subset": [1, 13, 23, 30, 51, 52, 57, 116, 120, 121, 122, 131, 156, 157, 172], "subspac": [110, 161], "subspace1": 161, "subspace2": 161, "subtract": [53, 110, 166], "success": [142, 144, 145, 166], "successfulli": 14, "suffici": [110, 131], "suggest": [28, 49, 161], "suit": 1, "sum": [24, 75, 81, 93, 108, 159, 160, 162, 165, 175], "summari": [132, 133, 134, 136], "summat": 108, "super": [133, 159], "supervis": [23, 50, 148, 172, 173, 181], "support": [4, 47, 64, 96, 104, 120, 164, 171, 172, 173, 183], "suppos": 162, "sure": [132, 136, 183], "surfac": [10, 14], "svd": [110, 161], "svd_lowrank": 110, "svd_merg": 161, "swallow": [10, 14], "switch": 36, "sync": [38, 49], "synthet": [171, 172], "synthetic_1_1": 171, "syntheticdataset": [8, 168, 172, 183], "syntheticfedproxdataset": [8, 168, 171], "syntheticiidfedproxdataset": [8, 168, 171], "syntheticnoniidfedproxdataset": [8, 168, 171], "system": [4, 7, 101, 144, 154, 158, 159, 160, 163, 164, 166], "t": [1, 11, 14, 28, 31, 32, 38, 39, 79, 80, 81, 86, 90, 91, 110, 117, 119, 121, 132, 136, 139, 141, 161, 169, 170, 171, 172, 175, 181, 183, 187, 188], "t_1": 131, "t_2": 131, "tab_features_info_encod": [8, 62], "tab_features_preprocessor": [8, 62], "tabl": [1, 42, 101], "tabular": [67, 68], "tabular_data_cli": [8, 20], "tabular_featur": [8, 62], "tabular_feature_alignment_serv": [8, 137], "tabular_typ": [8, 62], "tabularfeatur": [8, 62, 67], "tabulartyp": [8, 62, 67, 68], "tag": [132, 136], "tailor": 114, "take": [10, 42, 97, 100, 101, 108, 110, 111, 115, 116, 119, 122, 132, 136, 156, 157, 161, 164, 166, 171], "taken": [53, 101, 131], "tandem": [28, 90, 91], "target": [1, 11, 12, 14, 21, 22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 45, 46, 48, 49, 50, 52, 60, 72, 74, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 101, 103, 105, 106, 126, 128, 139, 141, 149, 169, 172, 176, 181, 182, 184], "target_is_grad_sample_modul": 12, "target_model": [12, 76], "target_shap": 86, "target_transform": [79, 172, 176], "targets_1": 79, "targets_2": 79, "task": [4, 31, 77, 84, 164, 173, 175], "task01_braintumour": [168, 180], "task02_heart": [168, 180], "task03_liv": [168, 180], "task04_hippocampu": [168, 180], "task05_prost": [168, 180], "task06_lung": [168, 180], "task07_pancrea": [168, 180], "task08_hepaticvessel": [168, 180], "task09_spleen": [168, 180], "task10_colon": [168, 180], "tau": 163, "team": [1, 132, 136], "temperatur": [48, 52, 70, 73, 75, 171], "templat": 1, "tensor": [21, 22, 23, 24, 25, 27, 28, 29, 31, 36, 38, 41, 42, 45, 46, 48, 49, 50, 52, 58, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 119, 120, 122, 125, 126, 157, 162, 169, 171, 172, 173, 175, 176, 178, 181, 182, 183, 186], "tensor1": 86, "tensor2": 86, "tensor_dict": 181, "tensor_list": 181, "tensordataset": [8, 57, 60, 168, 171, 172, 173, 176, 187], "tensorflow": 131, "term": [4, 28, 38, 49, 90, 91, 174], "termin": [7, 50, 142, 181], "test": [23, 30, 31, 47, 50, 57, 58, 60, 72, 78, 83, 110, 147, 164, 168, 172, 176, 177, 181, 183], "test_": 1, "test_best_checkpoint": 1, "test_load": [47, 87, 89, 90, 91], "test_prefix": [77, 78], "test_transform": 60, "text": [24, 53, 64, 79, 94, 95, 166, 171], "textcolumntransform": [8, 62, 64], "textfeaturetransform": 64, "textmulticolumntransform": [8, 62, 64], "than": [1, 10, 13, 19, 23, 27, 28, 29, 30, 38, 41, 45, 46, 47, 83, 87, 88, 98, 103, 121, 122, 148, 154, 155, 161, 164, 172, 181, 183], "thank": 1, "thei": [1, 4, 11, 13, 21, 22, 23, 24, 28, 29, 30, 31, 41, 42, 47, 50, 53, 80, 81, 87, 88, 90, 91, 95, 107, 112, 119, 122, 130, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 157, 158, 160, 166, 169, 171, 172, 173, 175, 178, 181], "them": [4, 14, 16, 22, 27, 28, 38, 43, 45, 46, 52, 90, 91, 97, 108, 115, 119, 122, 155, 157, 159, 160, 162, 173, 175, 181, 188], "themselv": [162, 172, 175, 181], "theorem": 131, "theoret": 161, "thereaft": [24, 166], "therebi": [154, 166], "therefor": [1, 50, 132, 134, 136, 166, 175, 181], "therein": 80, "thereof": [23, 30], "theta": 162, "theta_cli": 155, "theta_serv": 155, "thi": [1, 4, 7, 10, 11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 101, 103, 105, 106, 108, 110, 112, 114, 116, 119, 120, 121, 122, 126, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 183, 185, 186, 187, 188], "thin": [77, 79, 84], "thing": [1, 23, 50, 119, 142, 143, 146, 148, 150], "third": [142, 144, 145], "thorough": 4, "those": [1, 4, 16, 28, 38, 49, 77, 84, 86, 90, 91, 103, 105, 106, 108, 112, 116, 119, 120, 154, 166, 171, 181], "though": [1, 175], "thought": 166, "thread": 57, "three": [11, 42, 101, 157, 173], "threshold": [39, 77, 80, 81, 84, 85, 116, 120, 122, 155, 166, 181, 183], "threshold_tensor": [8, 77, 85], "through": [1, 4, 10, 24, 28, 31, 32, 33, 34, 36, 38, 39, 41, 42, 48, 90, 91, 94, 95, 99, 100, 101, 103, 108, 111, 121, 127, 132, 136, 148, 155, 166, 175, 181, 183, 187], "throughout": [1, 23, 30, 31, 36, 130], "throw": [10, 11, 13, 14, 39, 103, 132, 136, 139, 140, 141, 142, 143, 145, 146, 148, 150, 172, 183], "thrown": [11, 14, 50, 68, 103, 110, 159, 170], "thu": [47, 159, 161], "ticket": [4, 35], "time": [1, 14, 17, 23, 28, 50, 51, 53, 79, 90, 91, 127, 131, 142, 143, 144, 145, 146, 147, 150, 169, 172, 181, 183, 186], "timeout": [142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 161, 164, 166], "tmetric": [77, 84], "tn": [80, 81], "to_client": 7, "to_json": [62, 67], "togeth": [21, 28, 31, 51, 53, 81, 87, 88, 90, 91, 95, 108, 153, 166], "token": 172, "toml": 1, "ton": 175, "tonumpi": [8, 168, 176], "too": [29, 110], "tool": 1, "top": [1, 58, 81, 110], "top_sirna_id": 58, "torch": [7, 10, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 116, 119, 122, 125, 126, 128, 157, 169, 171, 172, 173, 175, 178, 181, 182, 183, 186], "torch_stat": 186, "torchcheckpoint": 10, "torchfeaturetyp": [21, 23, 27, 28, 38, 41, 42, 45, 46, 49, 90, 91], "torchinputtyp": [22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 45, 46, 48, 50, 52, 90, 91, 169], "torchmetr": [8, 77, 84], "torchmodul": 116, "torchmodulecheckpoint": [8, 9, 10], "torchmodulesnapshott": [8, 168, 188], "torchpredtyp": [21, 22, 23, 27, 28, 38, 41, 42, 45, 46, 49, 50, 83, 90, 91], "torchshap": 106, "torchtargettyp": [21, 22, 23, 27, 28, 41, 42, 45, 46, 49, 50, 83, 90, 91, 169], "torchtransformfunct": 79, "total": [25, 48, 49, 50, 52, 82, 126, 130, 131, 132, 133, 134, 136, 143, 144, 146, 154, 158, 159, 160, 163, 164, 165, 166, 181, 183, 187], "total_client_count_by_metr": 82, "total_client_weight": 165, "total_exampl": 82, "total_loss": [25, 48, 52], "total_sampl": [143, 146, 150], "total_step": 23, "toward": 1, "tp": [80, 81, 85], "tqdm": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53], "track": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 161], "track_running_stat": 106, "tradit": 11, "train": [4, 7, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 72, 75, 80, 81, 83, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 103, 105, 106, 110, 111, 116, 120, 125, 126, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 181, 183, 186], "train_by_epoch": [20, 23, 39], "train_by_step": [20, 23], "train_data_tensor": 31, "train_fedrep_by_epoch": [20, 36], "train_fedrep_by_step": [20, 36], "train_fract": 57, "train_kernel": [69, 72], "train_load": [7, 87, 89, 90, 91], "train_loop_checkpoint_dir": 174, "train_step": [8, 20, 22, 23, 28, 29, 36, 40, 41, 42, 50, 87, 88, 90, 91], "train_transform": 60, "train_val_split": 57, "trainer": 50, "trainingloss": [8, 21, 22, 23, 27, 28, 29, 36, 38, 41, 42, 45, 46, 48, 49, 50, 53, 87, 88, 89, 90, 91, 168, 178], "trajectori": [21, 158], "transfer": [23, 28, 30, 31, 38, 47, 51, 75, 90, 91, 116, 130], "transform": [23, 41, 42, 50, 53, 57, 60, 62, 64, 70, 79, 86, 99, 101, 103, 105, 106, 125, 127, 171, 172, 176], "transform_gradi": [20, 23, 40, 41, 50, 53, 87, 89], "transform_input": [20, 42], "transform_target": [20, 23, 87, 89], "transformed_featur": 70, "transformermixin": 64, "transformsmetr": [8, 77, 79], "transpar": 183, "transpos": [81, 103, 161], "travers": 97, "treat": [80, 106, 130, 133, 134, 181], "treatment": [13, 146, 156, 157], "tree": [171, 181], "trick": 95, "tripl": 1, "trivial": [1, 172], "true": [1, 10, 11, 14, 23, 24, 27, 28, 29, 33, 38, 45, 46, 47, 49, 50, 53, 64, 72, 74, 80, 81, 85, 90, 91, 94, 97, 98, 99, 101, 103, 104, 105, 106, 110, 120, 125, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 174, 175, 181, 186], "true_neg": [77, 80, 81], "true_posit": [77, 80, 81, 85], "truth": [21, 22, 23, 25, 27, 28, 29, 38, 42, 45, 46, 48, 49, 50, 52, 77, 78, 79, 83, 84, 90, 91, 139, 140, 141, 142, 143, 145, 146, 148, 150], "try": [1, 10, 14, 39, 74, 131, 132, 136, 155], "tsingz0": 101, "tst": 72, "tune": [11, 99], "tupl": [1, 7, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 52, 57, 60, 72, 73, 75, 77, 81, 82, 84, 86, 87, 88, 89, 90, 91, 95, 100, 101, 103, 107, 108, 110, 111, 112, 116, 117, 119, 120, 121, 122, 126, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 175, 176, 183, 185, 186], "turn": [155, 158, 160, 161, 166], "tutori": 131, "twin": [4, 22, 94], "two": [4, 7, 11, 23, 28, 35, 36, 38, 42, 43, 50, 53, 71, 72, 75, 80, 81, 86, 90, 91, 100, 101, 103, 105, 106, 108, 112, 116, 119, 122, 132, 136, 144, 148, 154, 157, 161, 166, 170, 171, 175, 182], "two_layer_map_inputs_to_output": [168, 171], "type": [1, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188], "type_data": 58, "typeerror": [23, 41, 45, 46, 92, 169, 172], "typevar": [117, 119, 121, 187], "typic": [23, 50, 97], "typing1": 1, "typing2": 1, "typing_stuff": 1, "u": [110, 161], "u_1": 161, "u_2": 161, "u_i": 161, "u_k": 171, "u_n": 161, "uf": 61, "ui": [132, 136], "un": 95, "unaffect": 186, "unbias": 72, "uncategor": [132, 136], "unchang": [64, 80, 81], "undefin": [80, 85], "under": [1, 14, 27, 28, 38, 45, 46, 50, 77, 84, 94, 100, 106, 108, 110, 111, 132, 136, 185], "underli": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 77, 79, 84, 94, 175], "underpin": 176, "undo": 186, "unfreeze_base_modul": [93, 98], "unfreeze_head_modul": [93, 98], "unfrozen": 98, "unifi": 173, "uniform": [153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 181, 183], "uniform_evaluate_metrics_aggregation_fn": [8, 77, 82], "uniform_metric_aggreg": [8, 77, 82], "uniform_normalize_metr": [8, 77, 82], "uniformli": [82, 165, 166], "unintend": 1, "unintention": 1, "union": [1, 25, 28, 29, 30, 36, 48, 52, 67, 89, 90, 91, 160, 163], "uniqu": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 132, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 181, 186], "unique_label": [183, 187], "unit": [1, 74], "unitari": 161, "unittestarg": 1, "unittesten": 1, "unknown": 68, "unless": [30, 50, 147], "unlik": [4, 12, 13, 38, 41, 49, 183], "unpack": [13, 21, 24, 28, 53, 87, 88, 90, 91, 95, 117, 119, 126, 173], "unpack_input_condit": [95, 168, 173], "unpack_model_output": [124, 126], "unpack_paramet": [113, 117, 119, 121], "unrespons": 150, "unseen": 4, "unset_all_random_se": [8, 168, 186], "unspecifi": [81, 132, 136], "unstructur": 13, "unsuccess": [142, 145], "until": [1, 17, 53, 183], "unus": [50, 80, 164], "unweight": [4, 48, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166], "unweighted_aggreg": [152, 156, 157], "unwound": 51, "up": [1, 4, 11, 21, 27, 28, 36, 39, 42, 43, 45, 47, 51, 81, 87, 88, 90, 91, 96, 101, 133, 142, 143, 146, 155, 161, 171, 175, 183, 187], "updat": [1, 4, 8, 14, 21, 22, 23, 24, 27, 28, 29, 38, 41, 42, 45, 46, 49, 50, 53, 64, 77, 78, 79, 80, 81, 83, 84, 90, 91, 94, 103, 105, 106, 130, 131, 132, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 155, 158, 159, 160, 162, 165, 166, 168, 169, 178], "update_after_step": [20, 22, 23, 26, 27, 44, 45, 46], "update_after_train": [8, 20, 21, 23, 25, 48, 52, 53, 87, 88, 89], "update_alpha": [93, 94], "update_before_epoch": [20, 23], "update_before_fit": [137, 142, 148], "update_before_step": [20, 23], "update_before_train": [20, 23, 25, 26, 27, 28, 32, 38, 42, 44, 45, 46, 48, 49, 50, 52, 87, 89, 90, 91], "update_buff": [26, 27, 44, 45, 46], "update_clipping_bound": [152, 155], "update_control_vari": [20, 53], "update_current_weight": [152, 155], "update_lr_schedul": [20, 23], "update_metric_manag": [20, 23, 50], "update_target_transform": [168, 172], "update_transform": [168, 172], "update_weights_by_ga": [152, 159], "updated_param": 166, "upgrad": 1, "upload": [132, 136, 147], "upon": [13, 115], "us": [1, 4, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 64, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 125, 126, 128, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 175, 176, 178, 181, 183, 185, 186, 187, 188], "usag": [50, 101, 175, 183], "use_default_signal_handl": [8, 168, 181], "use_deterministic_algorithm": 186, "use_deterministic_torch_algo": 186, "user": [10, 12, 22, 23, 28, 29, 30, 31, 33, 36, 38, 39, 41, 42, 47, 50, 51, 52, 64, 77, 81, 84, 90, 91, 95, 97, 100, 108, 110, 126, 127, 128, 154, 159, 172, 173, 183], "usernam": [132, 136], "usual": [10, 49, 131, 181], "util": [7, 8, 10, 23, 50, 64, 77, 87, 90, 94, 110], "uuid": [134, 175], "v": [1, 36, 81, 101, 154, 161, 171], "v2": 181, "v202": [39, 163], "v_i": 74, "v_i_quadrupl": 74, "v_k": 171, "vae": [95, 125, 126], "vaeloss": [123, 124, 126], "vaeprocessor": [123, 124, 125], "val": [10, 23, 41, 42, 60, 78, 83, 159], "val_load": [7, 87, 89, 90, 91, 169], "val_prefix": [77, 78], "val_step": [20, 23, 40, 41, 42, 87, 90, 91], "val_transform": 60, "valid": [11, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 60, 87, 89, 90, 91, 110, 142, 144, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 174, 176, 177, 181, 185], "validate_on_model": [20, 30], "validation_proport": 176, "valu": [10, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 32, 36, 42, 45, 46, 48, 50, 52, 58, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 94, 95, 96, 97, 101, 103, 105, 106, 108, 110, 119, 120, 122, 126, 130, 131, 132, 136, 142, 143, 144, 146, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189], "valueerror": [11, 13, 23, 28, 30, 36, 38, 39, 41, 45, 46, 50, 68, 90, 91, 103, 155, 166, 169, 170, 183], "vanilla": [12, 27, 28, 38, 45, 46, 49, 90, 91], "vari": [1, 80], "variabl": [43, 50, 80, 125, 170, 173, 181, 186], "varianc": [72, 95, 110, 126, 171], "variat": [4, 23, 53, 95, 119, 150, 166], "variationala": [8, 93, 95], "varieti": 23, "variou": [1, 4, 11, 25, 51, 52, 81], "vector": [71, 80, 86, 95, 99, 101, 110, 161, 173], "venv": 1, "verbos": [50, 181], "veri": [1, 4, 21, 23, 24, 28, 30, 38, 51, 79, 87, 88, 90, 91, 139, 141, 175, 183], "verifi": [169, 170, 171], "version": [4, 23, 28, 49, 50, 64, 72, 76, 90, 91, 94, 155, 181], "vert": [24, 155, 166], "vert_2": 24, "vertic": 98, "via": [7, 10, 13, 21, 33, 42, 87, 88, 96, 103, 105, 106, 110, 122, 130, 183, 185], "view": [161, 162], "violat": 183, "virtual": 1, "virtualenv": 1, "vjp": 175, "vote": [93, 96], "voxel": 181, "vram": 50, "vscode": 1, "w": [23, 32, 50, 131, 155, 171, 175], "w_1": 171, "w_2": 171, "w_i": 171, "wa": [10, 22, 23, 24, 27, 45, 46, 81, 90, 91, 95, 99, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 155, 156, 157, 162, 181], "wai": [1, 7, 31, 47, 76, 86, 106, 108, 154, 171, 175, 181, 187, 188], "wait": [7, 16, 142, 143, 144, 145, 146, 147, 149, 150, 166, 174], "wait_and_filt": [15, 16], "wandb": [132, 136], "wandb_init_kwarg": [132, 136], "wandb_report": [8, 23, 50, 132], "wandb_step": [132, 136], "wandb_step_typ": [132, 136], "wandbreport": [8, 132, 136], "wandbsteptyp": [8, 132, 136], "want": [1, 11, 21, 23, 28, 33, 38, 49, 50, 57, 80, 86, 87, 88, 90, 91, 97, 132, 136, 139, 141, 142, 158, 159, 166, 167, 169, 181, 183], "warm": [4, 150], "warm_start": 150, "warmed_up_modul": [8, 123], "warmedupmodul": [8, 123, 128], "warn": [168, 189], "we": [1, 4, 7, 10, 11, 12, 13, 14, 21, 23, 24, 27, 28, 29, 30, 31, 35, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 72, 74, 79, 80, 86, 87, 88, 90, 91, 92, 95, 97, 99, 107, 112, 116, 120, 131, 132, 133, 136, 142, 144, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 169, 171, 172, 175, 181, 183, 187], "weigh": [159, 160], "weight": [4, 13, 21, 23, 24, 25, 27, 28, 30, 32, 38, 41, 42, 45, 46, 48, 49, 51, 52, 53, 73, 75, 76, 77, 79, 82, 84, 87, 88, 90, 91, 98, 99, 103, 105, 106, 115, 117, 122, 128, 130, 131, 132, 136, 143, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 175], "weight_and_aggregate_result": [152, 159], "weight_drift_loss": [8, 69], "weight_noise_multipli": 155, "weight_scor": 120, "weightdriftloss": [8, 69, 76, 88, 91], "weighted_aggreg": [152, 154, 155, 156, 157, 158, 161, 162, 163, 164], "weighted_eval_loss": [154, 155, 156, 157, 158, 161, 162, 163, 166], "weighted_train_loss": [158, 160], "weights_mapping_path": 128, "weights_nam": 119, "weights_upd": 155, "well": [1, 4, 7, 12, 58, 96, 110, 117, 147, 155, 159, 162, 171, 175], "were": [53, 79, 81, 95, 131, 156, 157, 166, 175], "what": [1, 23, 36, 50, 80, 132, 133, 136, 166], "whatev": [1, 10, 12, 33], "when": [1, 10, 12, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 67, 80, 86, 87, 88, 94, 100, 106, 108, 110, 112, 117, 119, 120, 121, 130, 132, 133, 136, 142, 148, 154, 155, 159, 160, 166, 167, 172, 173, 175, 181, 185], "whenev": 10, "where": [11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 71, 72, 77, 80, 81, 84, 86, 95, 96, 97, 100, 106, 107, 110, 112, 121, 125, 130, 132, 136, 142, 145, 153, 154, 155, 156, 157, 161, 162, 166, 169, 171, 172, 178, 181, 187], "wherein": 4, "whether": [7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 72, 74, 77, 81, 84, 87, 88, 90, 91, 94, 97, 99, 100, 101, 104, 110, 112, 120, 131, 132, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 175, 181, 185, 186], "which": [1, 4, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 64, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 95, 96, 97, 101, 103, 105, 106, 110, 111, 114, 119, 120, 122, 127, 130, 131, 132, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 181, 183, 185, 186, 187, 188], "while": [4, 35, 42, 70, 75, 86, 94, 100, 110, 111, 122], "who": 156, "whole": [27, 45, 46, 96], "whose": [37, 103, 105, 106, 110, 116, 120, 122, 127, 161, 166, 182, 184], "wide": 4, "window": 181, "wise": [13, 39, 53, 165, 166], "wish": 110, "within": [12, 13, 77, 81, 84, 92, 116, 119, 122, 132, 133, 134, 136, 157, 169, 172, 181], "without": [1, 16, 18, 19, 21, 70, 79, 86, 131, 132, 136, 150, 155, 169, 175], "wns823": 61, "word": [42, 132, 136, 181], "work": [1, 31, 39, 50, 64, 116, 125, 133, 134, 142, 159, 162, 175], "worker": [57, 60, 149], "workflow": [1, 12], "would": [1, 23, 67, 80, 85, 110, 175, 186], "woven": 51, "wrap": [12, 92, 148, 169, 181, 185], "wrap_model": 185, "wrapper": [77, 79, 84, 92, 96, 101, 139, 140, 141], "write": [168, 181], "written": 181, "wrong": [23, 36, 170], "www": [52, 57, 75], "wx": 171, "x": [50, 53, 64, 70, 72, 74, 110, 119, 171, 175, 181], "x1": 71, "x2": 71, "x_": [72, 74, 171], "x_in_dim": 72, "x_lower_dim": 110, "x_out_dim": 72, "x_t": [72, 74], "xent": 70, "xxyxz": 181, "y": [50, 64, 72, 74, 171, 181], "y_": 74, "y_i": 53, "yaml": [1, 132, 136], "yang": 61, "yet": [90, 91], "yield": [4, 185], "you": [1, 10, 12, 57, 64, 80, 81, 97, 132, 136, 142, 175, 183, 186], "your": [1, 4, 7, 50, 81, 132, 136, 142, 185], "z": [50, 75, 131, 181], "z_": 75, "z_1": 131, "z_2": 131, "z_g": 75, "z_p": 75, "zero": [80, 85, 103, 106, 120, 122, 157, 166, 169], "zero_divis": [80, 85], "zeroeth": 175, "zhang": [159, 160]}, "titles": ["API Reference", "Contributing to FL4Health", "Basic Example", "Examples", "Welcome to FL4Health \u2728", "Checkpointing", "Module Guides", "Quickstart", "fl4health package", "fl4health.checkpointing package", "fl4health.checkpointing.checkpointer module", "fl4health.checkpointing.client_module module", "fl4health.checkpointing.opacus_checkpointer module", "fl4health.checkpointing.server_module module", "fl4health.checkpointing.state_checkpointer module", "fl4health.client_managers package", "fl4health.client_managers.base_sampling_manager module", "fl4health.client_managers.fixed_sampling_client_manager module", "fl4health.client_managers.fixed_without_replacement_manager module", "fl4health.client_managers.poisson_sampling_manager module", "fl4health.clients package", "fl4health.clients.adaptive_drift_constraint_client module", "fl4health.clients.apfl_client module", "fl4health.clients.basic_client module", "fl4health.clients.clipping_client module", "fl4health.clients.constrained_fenda_client module", "fl4health.clients.deep_mmd_clients package", "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module", "fl4health.clients.ditto_client module", "fl4health.clients.ensemble_client module", "fl4health.clients.evaluate_client module", "fl4health.clients.fed_pca_client module", "fl4health.clients.fed_prox_client module", "fl4health.clients.fedbn_client module", "fl4health.clients.fedper_client module", "fl4health.clients.fedpm_client module", "fl4health.clients.fedrep_client module", "fl4health.clients.fenda_client module", "fl4health.clients.fenda_ditto_client module", "fl4health.clients.flash_client module", "fl4health.clients.flexible package", "fl4health.clients.flexible.base module", "fl4health.clients.gpfl_client module", "fl4health.clients.instance_level_dp_client module", "fl4health.clients.mkmmd_clients package", "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module", "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module", "fl4health.clients.model_merge_client module", "fl4health.clients.moon_client module", "fl4health.clients.mr_mtl_client module", "fl4health.clients.nnunet_client module", "fl4health.clients.partial_weight_exchange_client module", "fl4health.clients.perfcl_client module", "fl4health.clients.scaffold_client module", "fl4health.clients.tabular_data_client module", "fl4health.datasets package", "fl4health.datasets.rxrx1 package", "fl4health.datasets.rxrx1.load_data module", "fl4health.datasets.rxrx1.preprocess module", "fl4health.datasets.skin_cancer package", "fl4health.datasets.skin_cancer.load_data module", "fl4health.datasets.skin_cancer.preprocess_skin module", "fl4health.feature_alignment package", "fl4health.feature_alignment.constants module", "fl4health.feature_alignment.string_columns_transformer module", "fl4health.feature_alignment.tab_features_info_encoder module", "fl4health.feature_alignment.tab_features_preprocessor module", "fl4health.feature_alignment.tabular_feature module", "fl4health.feature_alignment.tabular_type module", "fl4health.losses package", "fl4health.losses.contrastive_loss module", "fl4health.losses.cosine_similarity_loss module", "fl4health.losses.deep_mmd_loss module", "fl4health.losses.fenda_loss_config module", "fl4health.losses.mkmmd_loss module", "fl4health.losses.perfcl_loss module", "fl4health.losses.weight_drift_loss module", "fl4health.metrics package", "fl4health.metrics.base_metrics module", "fl4health.metrics.compound_metrics module", "fl4health.metrics.efficient_metrics module", "fl4health.metrics.efficient_metrics_base module", "fl4health.metrics.metric_aggregation module", "fl4health.metrics.metric_managers module", "fl4health.metrics.metrics module", "fl4health.metrics.metrics_utils module", "fl4health.metrics.utils module", "fl4health.mixins package", "fl4health.mixins.adaptive_drift_constrained module", "fl4health.mixins.core_protocols module", "fl4health.mixins.personalized package", "fl4health.mixins.personalized.ditto module", "fl4health.mixins.personalized.utils module", "fl4health.model_bases package", "fl4health.model_bases.apfl_base module", "fl4health.model_bases.autoencoders_base module", "fl4health.model_bases.ensemble_base module", "fl4health.model_bases.feature_extractor_buffer module", "fl4health.model_bases.fedrep_base module", "fl4health.model_bases.fedsimclr_base module", "fl4health.model_bases.fenda_base module", "fl4health.model_bases.gpfl_base module", "fl4health.model_bases.masked_layers package", "fl4health.model_bases.masked_layers.masked_conv module", "fl4health.model_bases.masked_layers.masked_layers_utils module", "fl4health.model_bases.masked_layers.masked_linear module", "fl4health.model_bases.masked_layers.masked_normalization_layers module", "fl4health.model_bases.moon_base module", "fl4health.model_bases.parallel_split_models module", "fl4health.model_bases.partial_layer_exchange_model module", "fl4health.model_bases.pca module", "fl4health.model_bases.perfcl_base module", "fl4health.model_bases.sequential_split_models module", "fl4health.parameter_exchange package", "fl4health.parameter_exchange.fedpm_exchanger module", "fl4health.parameter_exchange.full_exchanger module", "fl4health.parameter_exchange.layer_exchanger module", "fl4health.parameter_exchange.packing_exchanger module", "fl4health.parameter_exchange.parameter_exchanger_base module", "fl4health.parameter_exchange.parameter_packer module", "fl4health.parameter_exchange.parameter_selection_criteria module", "fl4health.parameter_exchange.partial_parameter_exchanger module", "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module", "fl4health.preprocessing package", "fl4health.preprocessing.autoencoders package", "fl4health.preprocessing.autoencoders.dim_reduction module", "fl4health.preprocessing.autoencoders.loss module", "fl4health.preprocessing.pca_preprocessor module", "fl4health.preprocessing.warmed_up_module module", "fl4health.privacy package", "fl4health.privacy.fl_accountants module", "fl4health.privacy.moments_accountant module", "fl4health.reporting package", "fl4health.reporting.base_reporter module", "fl4health.reporting.json_reporter module", "fl4health.reporting.reports_manager module", "fl4health.reporting.wandb_reporter module", "fl4health.servers package", "fl4health.servers.adaptive_constraint_servers package", "fl4health.servers.adaptive_constraint_servers.ditto_server module", "fl4health.servers.adaptive_constraint_servers.fedprox_server module", "fl4health.servers.adaptive_constraint_servers.mrmtl_server module", "fl4health.servers.base_server module", "fl4health.servers.client_level_dp_fed_avg_server module", "fl4health.servers.evaluate_server module", "fl4health.servers.fedpm_server module", "fl4health.servers.instance_level_dp_server module", "fl4health.servers.model_merge_server module", "fl4health.servers.nnunet_server module", "fl4health.servers.polling module", "fl4health.servers.scaffold_server module", "fl4health.servers.tabular_feature_alignment_server module", "fl4health.strategies package", "fl4health.strategies.aggregate_utils module", "fl4health.strategies.basic_fedavg module", "fl4health.strategies.client_dp_fedavgm module", "fl4health.strategies.fedavg_dynamic_layer module", "fl4health.strategies.fedavg_sparse_coo_tensor module", "fl4health.strategies.fedavg_with_adaptive_constraint module", "fl4health.strategies.feddg_ga module", "fl4health.strategies.feddg_ga_with_adaptive_constraint module", "fl4health.strategies.fedpca module", "fl4health.strategies.fedpm module", "fl4health.strategies.flash module", "fl4health.strategies.model_merge_strategy module", "fl4health.strategies.noisy_aggregate module", "fl4health.strategies.scaffold module", "fl4health.strategies.strategy_with_poll module", "fl4health.utils package", "fl4health.utils.client module", "fl4health.utils.config module", "fl4health.utils.data_generation module", "fl4health.utils.dataset module", "fl4health.utils.dataset_converter module", "fl4health.utils.early_stopper module", "fl4health.utils.functions module", "fl4health.utils.load_data module", "fl4health.utils.logging module", "fl4health.utils.losses module", "fl4health.utils.metrics module", "fl4health.utils.msd_dataset_sources module", "fl4health.utils.nnunet_utils module", "fl4health.utils.parameter_extraction module", "fl4health.utils.partitioners module", "fl4health.utils.peft_parameter_extraction module", "fl4health.utils.privacy_utilities module", "fl4health.utils.random module", "fl4health.utils.sampler module", "fl4health.utils.snapshotter module", "fl4health.utils.typing module"], "titleterms": {"": 4, "A": 7, "adaptive_constraint_serv": [138, 139, 140, 141], "adaptive_drift_constrain": 88, "adaptive_drift_constraint_cli": 21, "aggregate_util": 153, "apfl_bas": 94, "apfl_client": 22, "api": 0, "approach": 4, "autoencod": [124, 125, 126], "autoencoders_bas": 95, "base": 41, "base_metr": 78, "base_report": 133, "base_sampling_manag": 16, "base_serv": 142, "basic": 2, "basic_cli": 23, "basic_fedavg": 154, "capabl": 4, "check": 1, "checkpoint": [5, 9, 10, 11, 12, 13, 14], "client": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 169], "client_dp_fedavgm": 155, "client_level_dp_fed_avg_serv": 143, "client_manag": [15, 16, 17, 18, 19], "client_modul": 11, "clipping_cli": 24, "code": 1, "commun": 4, "compound_metr": 79, "config": 170, "constant": 63, "constrained_fenda_cli": 25, "contrastive_loss": 70, "contribut": 1, "core_protocol": 89, "cosine_similarity_loss": 71, "coverag": 1, "current": 4, "data_gener": 171, "dataset": [55, 56, 57, 58, 59, 60, 61, 172], "dataset_convert": 173, "deep_mmd_client": [26, 27], "deep_mmd_loss": 72, "develop": 1, "dim_reduct": 125, "ditto": 91, "ditto_cli": 28, "ditto_deep_mmd_cli": 27, "ditto_mkmmd_cli": 45, "ditto_serv": 139, "document": 1, "early_stopp": 174, "efficient_metr": 80, "efficient_metrics_bas": 81, "ensemble_bas": 96, "ensemble_cli": 29, "evaluate_cli": 30, "evaluate_serv": 144, "exampl": [2, 3], "feature_align": [62, 63, 64, 65, 66, 67, 68], "feature_extractor_buff": 97, "fed_pca_cli": 31, "fed_prox_cli": 32, "fedavg_dynamic_lay": 156, "fedavg_sparse_coo_tensor": 157, "fedavg_with_adaptive_constraint": 158, "fedbn_client": 33, "feddg_ga": 159, "feddg_ga_with_adaptive_constraint": 160, "fedpca": 161, "fedper_cli": 34, "fedpm": 162, "fedpm_client": 35, "fedpm_exchang": 114, "fedpm_serv": 145, "fedprox_serv": 140, "fedrep_bas": 98, "fedrep_cli": 36, "fedsimclr_bas": 99, "fenda_bas": 100, "fenda_cli": 37, "fenda_ditto_cli": 38, "fenda_loss_config": 73, "fixed_sampling_client_manag": 17, "fixed_without_replacement_manag": 18, "fl": 7, "fl4health": [1, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "fl_account": 130, "flash": 163, "flash_client": 39, "flexibl": [40, 41], "formatt": 1, "full_exchang": 115, "function": 175, "gpfl_base": 101, "gpfl_client": 42, "guid": 6, "guidelin": 1, "implement": 4, "instal": 7, "instance_level_dp_cli": 43, "instance_level_dp_serv": 146, "introduct": 4, "json_report": 134, "layer_exchang": 116, "load_data": [57, 60, 176], "log": 177, "loss": [69, 70, 71, 72, 73, 74, 75, 76, 126, 178], "masked_conv": 103, "masked_lay": [102, 103, 104, 105, 106], "masked_layers_util": 104, "masked_linear": 105, "masked_normalization_lay": 106, "metric": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 179], "metric_aggreg": 82, "metric_manag": 83, "metrics_util": 85, "mixin": [87, 88, 89, 90, 91, 92], "mkmmd_client": [44, 45, 46], "mkmmd_loss": 74, "model_bas": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "model_merge_cli": 47, "model_merge_serv": 147, "model_merge_strategi": 164, "modul": [6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "moments_account": 131, "moon_bas": 107, "moon_client": 48, "mr_mtl_client": 49, "mr_mtl_mkmmd_client": 46, "mrmtl_server": 141, "msd_dataset_sourc": 180, "next": 4, "nnunet_cli": 50, "nnunet_serv": 148, "nnunet_util": 181, "noisy_aggreg": 165, "opacus_checkpoint": 12, "packag": [8, 9, 15, 20, 26, 40, 44, 55, 56, 59, 62, 69, 77, 87, 90, 93, 102, 113, 123, 124, 129, 132, 137, 138, 152, 168], "packing_exchang": 117, "parallel_split_model": 108, "parameter_exchang": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "parameter_exchanger_bas": 118, "parameter_extract": 182, "parameter_pack": 119, "parameter_selection_criteria": 120, "partial_layer_exchange_model": 109, "partial_parameter_exchang": 121, "partial_weight_exchange_cli": 51, "partition": 183, "pca": 110, "pca_preprocessor": 127, "peft_parameter_extract": 184, "perfcl_bas": 111, "perfcl_client": 52, "perfcl_loss": 75, "person": [90, 91, 92], "poisson_sampling_manag": 19, "poll": 149, "practic": 1, "preprocess": [58, 123, 124, 125, 126, 127, 128], "preprocess_skin": 61, "privaci": [4, 129, 130, 131], "privacy_util": 185, "py": 7, "quickstart": 7, "random": 186, "refer": 0, "report": [132, 133, 134, 135, 136], "reports_manag": 135, "requir": 1, "run": 7, "rxrx1": [56, 57, 58], "sampler": 187, "scaffold": 166, "scaffold_cli": 53, "scaffold_serv": 150, "sequential_split_model": 112, "server": [7, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "server_modul": 13, "simpl": 7, "skin_canc": [59, 60, 61], "snapshott": 188, "sparse_coo_parameter_exchang": 122, "start": 7, "state_checkpoint": 14, "strategi": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "strategy_with_pol": 167, "string_columns_transform": 64, "submodul": [9, 15, 20, 26, 40, 44, 56, 59, 62, 69, 77, 87, 90, 93, 102, 113, 123, 124, 129, 132, 137, 138, 152, 168], "subpackag": [8, 20, 55, 87, 93, 123, 137], "summari": 4, "tab_features_info_encod": 65, "tab_features_preprocessor": 66, "tabular_data_cli": 54, "tabular_featur": 67, "tabular_feature_alignment_serv": 151, "tabular_typ": 68, "task": 7, "test": 1, "type": 189, "util": [86, 92, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "wandb_report": 136, "warmed_up_modul": 128, "weight_drift_loss": 76, "welcom": 4, "what": 4}})