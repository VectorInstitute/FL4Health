Search.setIndex({"alltitles": {"A simple FL task": [[7, "a-simple-fl-task"]], "API Reference": [[0, null]], "Basic Example": [[2, null]], "Checkpointing": [[5, null]], "Code Coverage": [[1, "code-coverage"]], "Code Documentation": [[1, "code-documentation"]], "Coding Guidelines, Formatters, and Checks": [[1, "coding-guidelines-formatters-and-checks"]], "Community": [[4, "community"]], "Contributing": [[1, null]], "Development Practices": [[1, "development-practices"]], "Development Requirements": [[1, "development-requirements"]], "Examples": [[3, null]], "Installation": [[7, "installation"]], "Introduction": [[4, "introduction"]], "Module Guides": [[6, null]], "Privacy Capabilities": [[4, "privacy-capabilities"]], "Quickstart": [[7, null]], "Running the FL task": [[7, "running-the-fl-task"]], "Starting Clients": [[7, "starting-clients"]], "Starting Server": [[7, "starting-server"]], "Submodules": [[9, "submodules"], [14, "submodules"], [19, "submodules"], [25, "submodules"], [39, "submodules"], [51, "submodules"], [54, "submodules"], [57, "submodules"], [64, "submodules"], [72, "submodules"], [78, "submodules"], [81, "submodules"], [89, "submodules"], [100, "submodules"], [110, "submodules"], [111, "submodules"], [116, "submodules"], [119, "submodules"], [124, "submodules"], [125, "submodules"], [139, "submodules"], [155, "submodules"]], "Subpackages": [[8, "subpackages"], [19, "subpackages"], [50, "subpackages"], [81, "subpackages"], [110, "subpackages"], [124, "subpackages"]], "Summary of Currently Implemented Approaches": [[4, "summary-of-currently-implemented-approaches"]], "Tests": [[1, "tests"]], "Welcome to FL4Health \u2728": [[4, null]], "What\u2019s Next?": [[4, "what-s-next"]], "client.py": [[7, "client-py"]], "fl4health package": [[8, null]], "fl4health.checkpointing package": [[9, null]], "fl4health.checkpointing.checkpointer module": [[10, null]], "fl4health.checkpointing.client_module module": [[11, null]], "fl4health.checkpointing.opacus_checkpointer module": [[12, null]], "fl4health.checkpointing.server_module module": [[13, null]], "fl4health.client_managers package": [[14, null]], "fl4health.client_managers.base_sampling_manager module": [[15, null]], "fl4health.client_managers.fixed_sampling_client_manager module": [[16, null]], "fl4health.client_managers.fixed_without_replacement_manager module": [[17, null]], "fl4health.client_managers.poisson_sampling_manager module": [[18, null]], "fl4health.clients package": [[19, null]], "fl4health.clients.adaptive_drift_constraint_client module": [[20, null]], "fl4health.clients.apfl_client module": [[21, null]], "fl4health.clients.basic_client module": [[22, null]], "fl4health.clients.clipping_client module": [[23, null]], "fl4health.clients.constrained_fenda_client module": [[24, null]], "fl4health.clients.deep_mmd_clients package": [[25, null]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module": [[26, null]], "fl4health.clients.ditto_client module": [[27, null]], "fl4health.clients.ensemble_client module": [[28, null]], "fl4health.clients.evaluate_client module": [[29, null]], "fl4health.clients.fed_pca_client module": [[30, null]], "fl4health.clients.fed_prox_client module": [[31, null]], "fl4health.clients.fedper_client module": [[32, null]], "fl4health.clients.fedpm_client module": [[33, null]], "fl4health.clients.fedrep_client module": [[34, null]], "fl4health.clients.fenda_client module": [[35, null]], "fl4health.clients.fenda_ditto_client module": [[36, null]], "fl4health.clients.flash_client module": [[37, null]], "fl4health.clients.instance_level_dp_client module": [[38, null]], "fl4health.clients.mkmmd_clients package": [[39, null]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module": [[40, null]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module": [[41, null]], "fl4health.clients.model_merge_client module": [[42, null]], "fl4health.clients.moon_client module": [[43, null]], "fl4health.clients.mr_mtl_client module": [[44, null]], "fl4health.clients.nnunet_client module": [[45, null]], "fl4health.clients.partial_weight_exchange_client module": [[46, null]], "fl4health.clients.perfcl_client module": [[47, null]], "fl4health.clients.scaffold_client module": [[48, null]], "fl4health.clients.tabular_data_client module": [[49, null]], "fl4health.datasets package": [[50, null]], "fl4health.datasets.rxrx1 package": [[51, null]], "fl4health.datasets.rxrx1.load_data module": [[52, null]], "fl4health.datasets.rxrx1.preprocess module": [[53, null]], "fl4health.datasets.skin_cancer package": [[54, null]], "fl4health.datasets.skin_cancer.load_data module": [[55, null]], "fl4health.datasets.skin_cancer.preprocess_skin module": [[56, null]], "fl4health.feature_alignment package": [[57, null]], "fl4health.feature_alignment.constants module": [[58, null]], "fl4health.feature_alignment.string_columns_transformer module": [[59, null]], "fl4health.feature_alignment.tab_features_info_encoder module": [[60, null]], "fl4health.feature_alignment.tab_features_preprocessor module": [[61, null]], "fl4health.feature_alignment.tabular_feature module": [[62, null]], "fl4health.feature_alignment.tabular_type module": [[63, null]], "fl4health.losses package": [[64, null]], "fl4health.losses.contrastive_loss module": [[65, null]], "fl4health.losses.cosine_similarity_loss module": [[66, null]], "fl4health.losses.deep_mmd_loss module": [[67, null]], "fl4health.losses.fenda_loss_config module": [[68, null]], "fl4health.losses.mkmmd_loss module": [[69, null]], "fl4health.losses.perfcl_loss module": [[70, null]], "fl4health.losses.weight_drift_loss module": [[71, null]], "fl4health.metrics package": [[72, null]], "fl4health.metrics.base_metrics module": [[73, null]], "fl4health.metrics.compound_metrics module": [[74, null]], "fl4health.metrics.metric_aggregation module": [[75, null]], "fl4health.metrics.metric_managers module": [[76, null]], "fl4health.metrics.metrics module": [[77, null]], "fl4health.mixins package": [[78, null]], "fl4health.mixins.adaptive_drift_constrained module": [[79, null]], "fl4health.mixins.core_protocols module": [[80, null]], "fl4health.model_bases package": [[81, null]], "fl4health.model_bases.apfl_base module": [[82, null]], "fl4health.model_bases.autoencoders_base module": [[83, null]], "fl4health.model_bases.ensemble_base module": [[84, null]], "fl4health.model_bases.feature_extractor_buffer module": [[85, null]], "fl4health.model_bases.fedrep_base module": [[86, null]], "fl4health.model_bases.fedsimclr_base module": [[87, null]], "fl4health.model_bases.fenda_base module": [[88, null]], "fl4health.model_bases.masked_layers package": [[89, null]], "fl4health.model_bases.masked_layers.masked_conv module": [[90, null]], "fl4health.model_bases.masked_layers.masked_layers_utils module": [[91, null]], "fl4health.model_bases.masked_layers.masked_linear module": [[92, null]], "fl4health.model_bases.masked_layers.masked_normalization_layers module": [[93, null]], "fl4health.model_bases.moon_base module": [[94, null]], "fl4health.model_bases.parallel_split_models module": [[95, null]], "fl4health.model_bases.partial_layer_exchange_model module": [[96, null]], "fl4health.model_bases.pca module": [[97, null]], "fl4health.model_bases.perfcl_base module": [[98, null]], "fl4health.model_bases.sequential_split_models module": [[99, null]], "fl4health.parameter_exchange package": [[100, null]], "fl4health.parameter_exchange.fedpm_exchanger module": [[101, null]], "fl4health.parameter_exchange.full_exchanger module": [[102, null]], "fl4health.parameter_exchange.layer_exchanger module": [[103, null]], "fl4health.parameter_exchange.packing_exchanger module": [[104, null]], "fl4health.parameter_exchange.parameter_exchanger_base module": [[105, null]], "fl4health.parameter_exchange.parameter_packer module": [[106, null]], "fl4health.parameter_exchange.parameter_selection_criteria module": [[107, null]], "fl4health.parameter_exchange.partial_parameter_exchanger module": [[108, null]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module": [[109, null]], "fl4health.preprocessing package": [[110, null]], "fl4health.preprocessing.autoencoders package": [[111, null]], "fl4health.preprocessing.autoencoders.dim_reduction module": [[112, null]], "fl4health.preprocessing.autoencoders.loss module": [[113, null]], "fl4health.preprocessing.pca_preprocessor module": [[114, null]], "fl4health.preprocessing.warmed_up_module module": [[115, null]], "fl4health.privacy package": [[116, null]], "fl4health.privacy.fl_accountants module": [[117, null]], "fl4health.privacy.moments_accountant module": [[118, null]], "fl4health.reporting package": [[119, null]], "fl4health.reporting.base_reporter module": [[120, null]], "fl4health.reporting.json_reporter module": [[121, null]], "fl4health.reporting.reports_manager module": [[122, null]], "fl4health.reporting.wandb_reporter module": [[123, null]], "fl4health.servers package": [[124, null]], "fl4health.servers.adaptive_constraint_servers package": [[125, null]], "fl4health.servers.adaptive_constraint_servers.ditto_server module": [[126, null]], "fl4health.servers.adaptive_constraint_servers.fedprox_server module": [[127, null]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server module": [[128, null]], "fl4health.servers.base_server module": [[129, null]], "fl4health.servers.client_level_dp_fed_avg_server module": [[130, null]], "fl4health.servers.evaluate_server module": [[131, null]], "fl4health.servers.fedpm_server module": [[132, null]], "fl4health.servers.instance_level_dp_server module": [[133, null]], "fl4health.servers.model_merge_server module": [[134, null]], "fl4health.servers.nnunet_server module": [[135, null]], "fl4health.servers.polling module": [[136, null]], "fl4health.servers.scaffold_server module": [[137, null]], "fl4health.servers.tabular_feature_alignment_server module": [[138, null]], "fl4health.strategies package": [[139, null]], "fl4health.strategies.aggregate_utils module": [[140, null]], "fl4health.strategies.basic_fedavg module": [[141, null]], "fl4health.strategies.client_dp_fedavgm module": [[142, null]], "fl4health.strategies.fedavg_dynamic_layer module": [[143, null]], "fl4health.strategies.fedavg_sparse_coo_tensor module": [[144, null]], "fl4health.strategies.fedavg_with_adaptive_constraint module": [[145, null]], "fl4health.strategies.feddg_ga module": [[146, null]], "fl4health.strategies.feddg_ga_with_adaptive_constraint module": [[147, null]], "fl4health.strategies.fedpca module": [[148, null]], "fl4health.strategies.fedpm module": [[149, null]], "fl4health.strategies.flash module": [[150, null]], "fl4health.strategies.model_merge_strategy module": [[151, null]], "fl4health.strategies.noisy_aggregate module": [[152, null]], "fl4health.strategies.scaffold module": [[153, null]], "fl4health.strategies.strategy_with_poll module": [[154, null]], "fl4health.utils package": [[155, null]], "fl4health.utils.client module": [[156, null]], "fl4health.utils.config module": [[157, null]], "fl4health.utils.data_generation module": [[158, null]], "fl4health.utils.dataset module": [[159, null]], "fl4health.utils.dataset_converter module": [[160, null]], "fl4health.utils.early_stopper module": [[161, null]], "fl4health.utils.functions module": [[162, null]], "fl4health.utils.load_data module": [[163, null]], "fl4health.utils.logging module": [[164, null]], "fl4health.utils.losses module": [[165, null]], "fl4health.utils.metric_aggregation module": [[166, null]], "fl4health.utils.metrics module": [[167, null]], "fl4health.utils.msd_dataset_sources module": [[168, null]], "fl4health.utils.nnunet_utils module": [[169, null]], "fl4health.utils.parameter_extraction module": [[170, null]], "fl4health.utils.partitioners module": [[171, null]], "fl4health.utils.peft_parameter_extraction module": [[172, null]], "fl4health.utils.privacy_utilities module": [[173, null]], "fl4health.utils.random module": [[174, null]], "fl4health.utils.sampler module": [[175, null]], "fl4health.utils.snapshotter module": [[176, null]], "fl4health.utils.typing module": [[177, null]], "server.py": [[7, "server-py"]]}, "docnames": ["api", "contributing", "examples/basic/index", "examples/index", "index", "module_guides/checkpointing/index", "module_guides/index", "quickstart", "reference/api/fl4health", "reference/api/fl4health.checkpointing", "reference/api/fl4health.checkpointing.checkpointer", "reference/api/fl4health.checkpointing.client_module", "reference/api/fl4health.checkpointing.opacus_checkpointer", "reference/api/fl4health.checkpointing.server_module", "reference/api/fl4health.client_managers", "reference/api/fl4health.client_managers.base_sampling_manager", "reference/api/fl4health.client_managers.fixed_sampling_client_manager", "reference/api/fl4health.client_managers.fixed_without_replacement_manager", "reference/api/fl4health.client_managers.poisson_sampling_manager", "reference/api/fl4health.clients", "reference/api/fl4health.clients.adaptive_drift_constraint_client", "reference/api/fl4health.clients.apfl_client", "reference/api/fl4health.clients.basic_client", "reference/api/fl4health.clients.clipping_client", "reference/api/fl4health.clients.constrained_fenda_client", "reference/api/fl4health.clients.deep_mmd_clients", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", "reference/api/fl4health.clients.ditto_client", "reference/api/fl4health.clients.ensemble_client", "reference/api/fl4health.clients.evaluate_client", "reference/api/fl4health.clients.fed_pca_client", "reference/api/fl4health.clients.fed_prox_client", "reference/api/fl4health.clients.fedper_client", "reference/api/fl4health.clients.fedpm_client", "reference/api/fl4health.clients.fedrep_client", "reference/api/fl4health.clients.fenda_client", "reference/api/fl4health.clients.fenda_ditto_client", "reference/api/fl4health.clients.flash_client", "reference/api/fl4health.clients.instance_level_dp_client", "reference/api/fl4health.clients.mkmmd_clients", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", "reference/api/fl4health.clients.model_merge_client", "reference/api/fl4health.clients.moon_client", "reference/api/fl4health.clients.mr_mtl_client", "reference/api/fl4health.clients.nnunet_client", "reference/api/fl4health.clients.partial_weight_exchange_client", "reference/api/fl4health.clients.perfcl_client", "reference/api/fl4health.clients.scaffold_client", "reference/api/fl4health.clients.tabular_data_client", "reference/api/fl4health.datasets", "reference/api/fl4health.datasets.rxrx1", "reference/api/fl4health.datasets.rxrx1.load_data", "reference/api/fl4health.datasets.rxrx1.preprocess", "reference/api/fl4health.datasets.skin_cancer", "reference/api/fl4health.datasets.skin_cancer.load_data", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin", "reference/api/fl4health.feature_alignment", "reference/api/fl4health.feature_alignment.constants", "reference/api/fl4health.feature_alignment.string_columns_transformer", "reference/api/fl4health.feature_alignment.tab_features_info_encoder", "reference/api/fl4health.feature_alignment.tab_features_preprocessor", "reference/api/fl4health.feature_alignment.tabular_feature", "reference/api/fl4health.feature_alignment.tabular_type", "reference/api/fl4health.losses", "reference/api/fl4health.losses.contrastive_loss", "reference/api/fl4health.losses.cosine_similarity_loss", "reference/api/fl4health.losses.deep_mmd_loss", "reference/api/fl4health.losses.fenda_loss_config", "reference/api/fl4health.losses.mkmmd_loss", "reference/api/fl4health.losses.perfcl_loss", "reference/api/fl4health.losses.weight_drift_loss", "reference/api/fl4health.metrics", "reference/api/fl4health.metrics.base_metrics", "reference/api/fl4health.metrics.compound_metrics", "reference/api/fl4health.metrics.metric_aggregation", "reference/api/fl4health.metrics.metric_managers", "reference/api/fl4health.metrics.metrics", "reference/api/fl4health.mixins", "reference/api/fl4health.mixins.adaptive_drift_constrained", "reference/api/fl4health.mixins.core_protocols", "reference/api/fl4health.model_bases", "reference/api/fl4health.model_bases.apfl_base", "reference/api/fl4health.model_bases.autoencoders_base", "reference/api/fl4health.model_bases.ensemble_base", "reference/api/fl4health.model_bases.feature_extractor_buffer", "reference/api/fl4health.model_bases.fedrep_base", "reference/api/fl4health.model_bases.fedsimclr_base", "reference/api/fl4health.model_bases.fenda_base", "reference/api/fl4health.model_bases.masked_layers", "reference/api/fl4health.model_bases.masked_layers.masked_conv", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils", "reference/api/fl4health.model_bases.masked_layers.masked_linear", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers", "reference/api/fl4health.model_bases.moon_base", "reference/api/fl4health.model_bases.parallel_split_models", "reference/api/fl4health.model_bases.partial_layer_exchange_model", "reference/api/fl4health.model_bases.pca", "reference/api/fl4health.model_bases.perfcl_base", "reference/api/fl4health.model_bases.sequential_split_models", "reference/api/fl4health.parameter_exchange", "reference/api/fl4health.parameter_exchange.fedpm_exchanger", "reference/api/fl4health.parameter_exchange.full_exchanger", "reference/api/fl4health.parameter_exchange.layer_exchanger", "reference/api/fl4health.parameter_exchange.packing_exchanger", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base", "reference/api/fl4health.parameter_exchange.parameter_packer", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger", "reference/api/fl4health.preprocessing", "reference/api/fl4health.preprocessing.autoencoders", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction", "reference/api/fl4health.preprocessing.autoencoders.loss", "reference/api/fl4health.preprocessing.pca_preprocessor", "reference/api/fl4health.preprocessing.warmed_up_module", "reference/api/fl4health.privacy", "reference/api/fl4health.privacy.fl_accountants", "reference/api/fl4health.privacy.moments_accountant", "reference/api/fl4health.reporting", "reference/api/fl4health.reporting.base_reporter", "reference/api/fl4health.reporting.json_reporter", "reference/api/fl4health.reporting.reports_manager", "reference/api/fl4health.reporting.wandb_reporter", "reference/api/fl4health.servers", "reference/api/fl4health.servers.adaptive_constraint_servers", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server", "reference/api/fl4health.servers.base_server", "reference/api/fl4health.servers.client_level_dp_fed_avg_server", "reference/api/fl4health.servers.evaluate_server", "reference/api/fl4health.servers.fedpm_server", "reference/api/fl4health.servers.instance_level_dp_server", "reference/api/fl4health.servers.model_merge_server", "reference/api/fl4health.servers.nnunet_server", "reference/api/fl4health.servers.polling", "reference/api/fl4health.servers.scaffold_server", "reference/api/fl4health.servers.tabular_feature_alignment_server", "reference/api/fl4health.strategies", "reference/api/fl4health.strategies.aggregate_utils", "reference/api/fl4health.strategies.basic_fedavg", "reference/api/fl4health.strategies.client_dp_fedavgm", "reference/api/fl4health.strategies.fedavg_dynamic_layer", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint", "reference/api/fl4health.strategies.feddg_ga", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint", "reference/api/fl4health.strategies.fedpca", "reference/api/fl4health.strategies.fedpm", "reference/api/fl4health.strategies.flash", "reference/api/fl4health.strategies.model_merge_strategy", "reference/api/fl4health.strategies.noisy_aggregate", "reference/api/fl4health.strategies.scaffold", "reference/api/fl4health.strategies.strategy_with_poll", "reference/api/fl4health.utils", "reference/api/fl4health.utils.client", "reference/api/fl4health.utils.config", "reference/api/fl4health.utils.data_generation", "reference/api/fl4health.utils.dataset", "reference/api/fl4health.utils.dataset_converter", "reference/api/fl4health.utils.early_stopper", "reference/api/fl4health.utils.functions", "reference/api/fl4health.utils.load_data", "reference/api/fl4health.utils.logging", "reference/api/fl4health.utils.losses", "reference/api/fl4health.utils.metric_aggregation", "reference/api/fl4health.utils.metrics", "reference/api/fl4health.utils.msd_dataset_sources", "reference/api/fl4health.utils.nnunet_utils", "reference/api/fl4health.utils.parameter_extraction", "reference/api/fl4health.utils.partitioners", "reference/api/fl4health.utils.peft_parameter_extraction", "reference/api/fl4health.utils.privacy_utilities", "reference/api/fl4health.utils.random", "reference/api/fl4health.utils.sampler", "reference/api/fl4health.utils.snapshotter", "reference/api/fl4health.utils.typing"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "contributing.md", "examples/basic/index.md", "examples/index.md", "index.md", "module_guides/checkpointing/index.md", "module_guides/index.md", "quickstart.md", "reference/api/fl4health.rst", "reference/api/fl4health.checkpointing.rst", "reference/api/fl4health.checkpointing.checkpointer.rst", "reference/api/fl4health.checkpointing.client_module.rst", "reference/api/fl4health.checkpointing.opacus_checkpointer.rst", "reference/api/fl4health.checkpointing.server_module.rst", "reference/api/fl4health.client_managers.rst", "reference/api/fl4health.client_managers.base_sampling_manager.rst", "reference/api/fl4health.client_managers.fixed_sampling_client_manager.rst", "reference/api/fl4health.client_managers.fixed_without_replacement_manager.rst", "reference/api/fl4health.client_managers.poisson_sampling_manager.rst", "reference/api/fl4health.clients.rst", "reference/api/fl4health.clients.adaptive_drift_constraint_client.rst", "reference/api/fl4health.clients.apfl_client.rst", "reference/api/fl4health.clients.basic_client.rst", "reference/api/fl4health.clients.clipping_client.rst", "reference/api/fl4health.clients.constrained_fenda_client.rst", "reference/api/fl4health.clients.deep_mmd_clients.rst", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.rst", "reference/api/fl4health.clients.ditto_client.rst", "reference/api/fl4health.clients.ensemble_client.rst", "reference/api/fl4health.clients.evaluate_client.rst", "reference/api/fl4health.clients.fed_pca_client.rst", "reference/api/fl4health.clients.fed_prox_client.rst", "reference/api/fl4health.clients.fedper_client.rst", "reference/api/fl4health.clients.fedpm_client.rst", "reference/api/fl4health.clients.fedrep_client.rst", "reference/api/fl4health.clients.fenda_client.rst", "reference/api/fl4health.clients.fenda_ditto_client.rst", "reference/api/fl4health.clients.flash_client.rst", "reference/api/fl4health.clients.instance_level_dp_client.rst", "reference/api/fl4health.clients.mkmmd_clients.rst", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client.rst", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.rst", "reference/api/fl4health.clients.model_merge_client.rst", "reference/api/fl4health.clients.moon_client.rst", "reference/api/fl4health.clients.mr_mtl_client.rst", "reference/api/fl4health.clients.nnunet_client.rst", "reference/api/fl4health.clients.partial_weight_exchange_client.rst", "reference/api/fl4health.clients.perfcl_client.rst", "reference/api/fl4health.clients.scaffold_client.rst", "reference/api/fl4health.clients.tabular_data_client.rst", "reference/api/fl4health.datasets.rst", "reference/api/fl4health.datasets.rxrx1.rst", "reference/api/fl4health.datasets.rxrx1.load_data.rst", "reference/api/fl4health.datasets.rxrx1.preprocess.rst", "reference/api/fl4health.datasets.skin_cancer.rst", "reference/api/fl4health.datasets.skin_cancer.load_data.rst", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin.rst", "reference/api/fl4health.feature_alignment.rst", "reference/api/fl4health.feature_alignment.constants.rst", "reference/api/fl4health.feature_alignment.string_columns_transformer.rst", "reference/api/fl4health.feature_alignment.tab_features_info_encoder.rst", "reference/api/fl4health.feature_alignment.tab_features_preprocessor.rst", "reference/api/fl4health.feature_alignment.tabular_feature.rst", "reference/api/fl4health.feature_alignment.tabular_type.rst", "reference/api/fl4health.losses.rst", "reference/api/fl4health.losses.contrastive_loss.rst", "reference/api/fl4health.losses.cosine_similarity_loss.rst", "reference/api/fl4health.losses.deep_mmd_loss.rst", "reference/api/fl4health.losses.fenda_loss_config.rst", "reference/api/fl4health.losses.mkmmd_loss.rst", "reference/api/fl4health.losses.perfcl_loss.rst", "reference/api/fl4health.losses.weight_drift_loss.rst", "reference/api/fl4health.metrics.rst", "reference/api/fl4health.metrics.base_metrics.rst", "reference/api/fl4health.metrics.compound_metrics.rst", "reference/api/fl4health.metrics.metric_aggregation.rst", "reference/api/fl4health.metrics.metric_managers.rst", "reference/api/fl4health.metrics.metrics.rst", "reference/api/fl4health.mixins.rst", "reference/api/fl4health.mixins.adaptive_drift_constrained.rst", "reference/api/fl4health.mixins.core_protocols.rst", "reference/api/fl4health.model_bases.rst", "reference/api/fl4health.model_bases.apfl_base.rst", "reference/api/fl4health.model_bases.autoencoders_base.rst", "reference/api/fl4health.model_bases.ensemble_base.rst", "reference/api/fl4health.model_bases.feature_extractor_buffer.rst", "reference/api/fl4health.model_bases.fedrep_base.rst", "reference/api/fl4health.model_bases.fedsimclr_base.rst", "reference/api/fl4health.model_bases.fenda_base.rst", "reference/api/fl4health.model_bases.masked_layers.rst", "reference/api/fl4health.model_bases.masked_layers.masked_conv.rst", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils.rst", "reference/api/fl4health.model_bases.masked_layers.masked_linear.rst", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers.rst", "reference/api/fl4health.model_bases.moon_base.rst", "reference/api/fl4health.model_bases.parallel_split_models.rst", "reference/api/fl4health.model_bases.partial_layer_exchange_model.rst", "reference/api/fl4health.model_bases.pca.rst", "reference/api/fl4health.model_bases.perfcl_base.rst", "reference/api/fl4health.model_bases.sequential_split_models.rst", "reference/api/fl4health.parameter_exchange.rst", "reference/api/fl4health.parameter_exchange.fedpm_exchanger.rst", "reference/api/fl4health.parameter_exchange.full_exchanger.rst", "reference/api/fl4health.parameter_exchange.layer_exchanger.rst", "reference/api/fl4health.parameter_exchange.packing_exchanger.rst", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base.rst", "reference/api/fl4health.parameter_exchange.parameter_packer.rst", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria.rst", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger.rst", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger.rst", "reference/api/fl4health.preprocessing.rst", "reference/api/fl4health.preprocessing.autoencoders.rst", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction.rst", "reference/api/fl4health.preprocessing.autoencoders.loss.rst", "reference/api/fl4health.preprocessing.pca_preprocessor.rst", "reference/api/fl4health.preprocessing.warmed_up_module.rst", "reference/api/fl4health.privacy.rst", "reference/api/fl4health.privacy.fl_accountants.rst", "reference/api/fl4health.privacy.moments_accountant.rst", "reference/api/fl4health.reporting.rst", "reference/api/fl4health.reporting.base_reporter.rst", "reference/api/fl4health.reporting.json_reporter.rst", "reference/api/fl4health.reporting.reports_manager.rst", "reference/api/fl4health.reporting.wandb_reporter.rst", "reference/api/fl4health.servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server.rst", "reference/api/fl4health.servers.base_server.rst", "reference/api/fl4health.servers.client_level_dp_fed_avg_server.rst", "reference/api/fl4health.servers.evaluate_server.rst", "reference/api/fl4health.servers.fedpm_server.rst", "reference/api/fl4health.servers.instance_level_dp_server.rst", "reference/api/fl4health.servers.model_merge_server.rst", "reference/api/fl4health.servers.nnunet_server.rst", "reference/api/fl4health.servers.polling.rst", "reference/api/fl4health.servers.scaffold_server.rst", "reference/api/fl4health.servers.tabular_feature_alignment_server.rst", "reference/api/fl4health.strategies.rst", "reference/api/fl4health.strategies.aggregate_utils.rst", "reference/api/fl4health.strategies.basic_fedavg.rst", "reference/api/fl4health.strategies.client_dp_fedavgm.rst", "reference/api/fl4health.strategies.fedavg_dynamic_layer.rst", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor.rst", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.feddg_ga.rst", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.fedpca.rst", "reference/api/fl4health.strategies.fedpm.rst", "reference/api/fl4health.strategies.flash.rst", "reference/api/fl4health.strategies.model_merge_strategy.rst", "reference/api/fl4health.strategies.noisy_aggregate.rst", "reference/api/fl4health.strategies.scaffold.rst", "reference/api/fl4health.strategies.strategy_with_poll.rst", "reference/api/fl4health.utils.rst", "reference/api/fl4health.utils.client.rst", "reference/api/fl4health.utils.config.rst", "reference/api/fl4health.utils.data_generation.rst", "reference/api/fl4health.utils.dataset.rst", "reference/api/fl4health.utils.dataset_converter.rst", "reference/api/fl4health.utils.early_stopper.rst", "reference/api/fl4health.utils.functions.rst", "reference/api/fl4health.utils.load_data.rst", "reference/api/fl4health.utils.logging.rst", "reference/api/fl4health.utils.losses.rst", "reference/api/fl4health.utils.metric_aggregation.rst", "reference/api/fl4health.utils.metrics.rst", "reference/api/fl4health.utils.msd_dataset_sources.rst", "reference/api/fl4health.utils.nnunet_utils.rst", "reference/api/fl4health.utils.parameter_extraction.rst", "reference/api/fl4health.utils.partitioners.rst", "reference/api/fl4health.utils.peft_parameter_extraction.rst", "reference/api/fl4health.utils.privacy_utilities.rst", "reference/api/fl4health.utils.random.rst", "reference/api/fl4health.utils.sampler.rst", "reference/api/fl4health.utils.snapshotter.rst", "reference/api/fl4health.utils.typing.rst"], "indexentries": {"__init__() (abstractae method)": [[83, "fl4health.model_bases.autoencoders_base.AbstractAe.__init__", false]], "__init__() (abstractsnapshotter method)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter.__init__", false]], "__init__() (accuracy method)": [[72, "fl4health.metrics.Accuracy.__init__", false], [77, "fl4health.metrics.metrics.Accuracy.__init__", false]], "__init__() (adaptiveconstraintservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule.__init__", false]], "__init__() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.__init__", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.__init__", false]], "__init__() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.__init__", false]], "__init__() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.__init__", false]], "__init__() (apflmodule method)": [[82, "fl4health.model_bases.apfl_base.ApflModule.__init__", false]], "__init__() (autoencoderdatasetconverter method)": [[160, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.__init__", false]], "__init__() (autoencoderprocessing method)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.__init__", false]], "__init__() (balancedaccuracy method)": [[72, "fl4health.metrics.BalancedAccuracy.__init__", false], [77, "fl4health.metrics.metrics.BalancedAccuracy.__init__", false]], "__init__() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.__init__", false]], "__init__() (basicae method)": [[83, "fl4health.model_bases.autoencoders_base.BasicAe.__init__", false]], "__init__() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.__init__", false]], "__init__() (basicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg.__init__", false]], "__init__() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.__init__", false]], "__init__() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.__init__", false]], "__init__() (bestmetrictorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer.__init__", false]], "__init__() (binarysoftdicecoefficient method)": [[72, "fl4health.metrics.BinarySoftDiceCoefficient.__init__", false], [77, "fl4health.metrics.metrics.BinarySoftDiceCoefficient.__init__", false]], "__init__() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.__init__", false]], "__init__() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.__init__", false]], "__init__() (clientleveldpfedavgserver method)": [[130, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.__init__", false]], "__init__() (clippingbitservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule.__init__", false]], "__init__() (conditionalvae method)": [[83, "fl4health.model_bases.autoencoders_base.ConditionalVae.__init__", false]], "__init__() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.__init__", false]], "__init__() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.__init__", false]], "__init__() (cosinesimilarityloss method)": [[66, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.__init__", false]], "__init__() (cosinesimilaritylosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer.__init__", false]], "__init__() (cvaefixedconditionprocessor method)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor.__init__", false]], "__init__() (cvaevariableconditionprocessor method)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor.__init__", false]], "__init__() (datasetconverter method)": [[160, "fl4health.utils.dataset_converter.DatasetConverter.__init__", false]], "__init__() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.__init__", false]], "__init__() (dictionarydataset method)": [[159, "fl4health.utils.dataset.DictionaryDataset.__init__", false]], "__init__() (dirichletlabelbasedallocation method)": [[171, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.__init__", false]], "__init__() (dirichletlabelbasedsampler method)": [[175, "fl4health.utils.sampler.DirichletLabelBasedSampler.__init__", false]], "__init__() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.__init__", false]], "__init__() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.__init__", false]], "__init__() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.__init__", false]], "__init__() (dittoserver method)": [[126, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer.__init__", false]], "__init__() (dpscaffoldserver method)": [[137, "fl4health.servers.scaffold_server.DPScaffoldServer.__init__", false]], "__init__() (dpscaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (dynamiclayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.__init__", false]], "__init__() (earlystopper method)": [[161, "fl4health.utils.early_stopper.EarlyStopper.__init__", false]], "__init__() (emametric method)": [[74, "fl4health.metrics.compound_metrics.EmaMetric.__init__", false]], "__init__() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.__init__", false]], "__init__() (ensemblemodel method)": [[84, "fl4health.model_bases.ensemble_base.EnsembleModel.__init__", false]], "__init__() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.__init__", false]], "__init__() (evaluateserver method)": [[131, "fl4health.servers.evaluate_server.EvaluateServer.__init__", false]], "__init__() (evaluationlosses method)": [[165, "fl4health.utils.losses.EvaluationLosses.__init__", false]], "__init__() (f1 method)": [[72, "fl4health.metrics.F1.__init__", false], [77, "fl4health.metrics.metrics.F1.__init__", false]], "__init__() (fairnessmetric method)": [[146, "fl4health.strategies.feddg_ga.FairnessMetric.__init__", false]], "__init__() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.__init__", false]], "__init__() (fedavgdynamiclayer method)": [[143, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.__init__", false]], "__init__() (fedavgsparsecootensor method)": [[144, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.__init__", false]], "__init__() (fedavgwithadaptiveconstraint method)": [[145, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.__init__", false]], "__init__() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.__init__", false]], "__init__() (feddggaadaptiveconstraint method)": [[147, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.__init__", false]], "__init__() (fedpca method)": [[148, "fl4health.strategies.fedpca.FedPCA.__init__", false]], "__init__() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.__init__", false]], "__init__() (fedpm method)": [[149, "fl4health.strategies.fedpm.FedPm.__init__", false]], "__init__() (fedpmclient method)": [[33, "fl4health.clients.fedpm_client.FedPmClient.__init__", false]], "__init__() (fedpmserver method)": [[132, "fl4health.servers.fedpm_server.FedPmServer.__init__", false]], "__init__() (fedproxserver method)": [[127, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer.__init__", false]], "__init__() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.__init__", false]], "__init__() (fedsimclrmodel method)": [[87, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.__init__", false]], "__init__() (fendaclient method)": [[35, "fl4health.clients.fenda_client.FendaClient.__init__", false]], "__init__() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.__init__", false]], "__init__() (fendamodel method)": [[88, "fl4health.model_bases.fenda_base.FendaModel.__init__", false]], "__init__() (fendamodelwithfeaturestate method)": [[88, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.__init__", false]], "__init__() (filereporter method)": [[121, "fl4health.reporting.json_reporter.FileReporter.__init__", false]], "__init__() (fixedlayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.__init__", false]], "__init__() (fixedsamplingclientmanager method)": [[16, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.__init__", false]], "__init__() (flash method)": [[150, "fl4health.strategies.flash.Flash.__init__", false]], "__init__() (flashclient method)": [[37, "fl4health.clients.flash_client.FlashClient.__init__", false]], "__init__() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.__init__", false]], "__init__() (flclientlevelaccountantpoissonsampling method)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.__init__", false]], "__init__() (flinstancelevelaccountant method)": [[117, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.__init__", false]], "__init__() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.__init__", false]], "__init__() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.__init__", false]], "__init__() (instanceleveldpclient method)": [[38, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.__init__", false]], "__init__() (instanceleveldpserver method)": [[133, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.__init__", false]], "__init__() (labelbasedsampler method)": [[175, "fl4health.utils.sampler.LabelBasedSampler.__init__", false]], "__init__() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.__init__", false]], "__init__() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.__init__", false]], "__init__() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.__init__", false]], "__init__() (layernamesservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule.__init__", false]], "__init__() (layerselectionfunctionconstructor method)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.__init__", false]], "__init__() (losses method)": [[165, "fl4health.utils.losses.Losses.__init__", false]], "__init__() (lossmeter method)": [[165, "fl4health.utils.losses.LossMeter.__init__", false]], "__init__() (maskedconv1d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.__init__", false]], "__init__() (maskedconv2d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.__init__", false]], "__init__() (maskedconv3d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.__init__", false]], "__init__() (maskedconvtranspose1d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.__init__", false]], "__init__() (maskedconvtranspose2d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.__init__", false]], "__init__() (maskedconvtranspose3d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.__init__", false]], "__init__() (maskedlayernorm method)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.__init__", false]], "__init__() (maskedlinear method)": [[92, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.__init__", false]], "__init__() (metric method)": [[73, "fl4health.metrics.base_metrics.Metric.__init__", false]], "__init__() (metricmanager method)": [[76, "fl4health.metrics.metric_managers.MetricManager.__init__", false]], "__init__() (minoritylabelbasedsampler method)": [[175, "fl4health.utils.sampler.MinorityLabelBasedSampler.__init__", false]], "__init__() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.__init__", false]], "__init__() (modellatentf method)": [[67, "fl4health.losses.deep_mmd_loss.ModelLatentF.__init__", false]], "__init__() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.__init__", false]], "__init__() (modelmergeserver method)": [[134, "fl4health.servers.model_merge_server.ModelMergeServer.__init__", false]], "__init__() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.__init__", false]], "__init__() (momentsaccountant method)": [[118, "fl4health.privacy.moments_accountant.MomentsAccountant.__init__", false]], "__init__() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.__init__", false]], "__init__() (mooncontrastiveloss method)": [[65, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.__init__", false]], "__init__() (mooncontrastivelosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer.__init__", false]], "__init__() (moonmodel method)": [[94, "fl4health.model_bases.moon_base.MoonModel.__init__", false]], "__init__() (mrmtlclient method)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient.__init__", false]], "__init__() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.__init__", false]], "__init__() (mrmtlserver method)": [[128, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer.__init__", false]], "__init__() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.__init__", false]], "__init__() (nnunetdataloaderwrapper method)": [[169, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper.__init__", false]], "__init__() (nnunetserver method)": [[135, "fl4health.servers.nnunet_server.NnunetServer.__init__", false]], "__init__() (nnunetservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule.__init__", false]], "__init__() (ntxentloss method)": [[65, "fl4health.losses.contrastive_loss.NtXentLoss.__init__", false]], "__init__() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.__init__", false]], "__init__() (opacusbasicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg.__init__", false]], "__init__() (opacusscaffold method)": [[153, "fl4health.strategies.scaffold.OpacusScaffold.__init__", false]], "__init__() (opacusservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule.__init__", false]], "__init__() (packingservercheckpointandandstatemodule method)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule.__init__", false]], "__init__() (parallelsplitheadmodule method)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.__init__", false]], "__init__() (parallelsplitmodel method)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.__init__", false]], "__init__() (parameterpackerwithcontrolvariates method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.__init__", false]], "__init__() (partialweightexchangeclient method)": [[46, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.__init__", false]], "__init__() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.__init__", false]], "__init__() (pcapreprocessor method)": [[114, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.__init__", false]], "__init__() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.__init__", false]], "__init__() (perfcllosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.PerFclLossContainer.__init__", false]], "__init__() (perfclmodel method)": [[98, "fl4health.model_bases.perfcl_base.PerFclModel.__init__", false]], "__init__() (perroundstatecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.__init__", false]], "__init__() (polylrschedulerwrapper method)": [[169, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.__init__", false]], "__init__() (roc_auc method)": [[72, "fl4health.metrics.ROC_AUC.__init__", false], [77, "fl4health.metrics.metrics.ROC_AUC.__init__", false]], "__init__() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.__init__", false]], "__init__() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.__init__", false]], "__init__() (scaffoldserver method)": [[137, "fl4health.servers.scaffold_server.ScaffoldServer.__init__", false]], "__init__() (scaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (sequentiallysplitmodel method)": [[99, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.__init__", false]], "__init__() (simplemetric method)": [[72, "fl4health.metrics.SimpleMetric.__init__", false], [77, "fl4health.metrics.metrics.SimpleMetric.__init__", false]], "__init__() (sparsecooparameterexchanger method)": [[109, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.__init__", false]], "__init__() (sparsecooservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule.__init__", false]], "__init__() (streamtologger method)": [[169, "fl4health.utils.nnunet_utils.StreamToLogger.__init__", false]], "__init__() (syntheticdataset method)": [[159, "fl4health.utils.dataset.SyntheticDataset.__init__", false]], "__init__() (syntheticfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset.__init__", false]], "__init__() (syntheticiidfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.__init__", false]], "__init__() (syntheticnoniidfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.__init__", false]], "__init__() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.__init__", false]], "__init__() (textcolumntransformer method)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.__init__", false]], "__init__() (textmulticolumntransformer method)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.__init__", false]], "__init__() (torchmetric method)": [[72, "fl4health.metrics.TorchMetric.__init__", false], [77, "fl4health.metrics.metrics.TorchMetric.__init__", false]], "__init__() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.__init__", false]], "__init__() (traininglosses method)": [[165, "fl4health.utils.losses.TrainingLosses.__init__", false]], "__init__() (transformsmetric method)": [[74, "fl4health.metrics.compound_metrics.TransformsMetric.__init__", false]], "__init__() (vaeloss method)": [[113, "fl4health.preprocessing.autoencoders.loss.VaeLoss.__init__", false]], "__init__() (vaeprocessor method)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor.__init__", false]], "__init__() (variationalae method)": [[83, "fl4health.model_bases.autoencoders_base.VariationalAe.__init__", false]], "__init__() (wandbreporter method)": [[119, "fl4health.reporting.WandBReporter.__init__", false], [123, "fl4health.reporting.wandb_reporter.WandBReporter.__init__", false]], "__init__() (warmedupmodule method)": [[115, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.__init__", false]], "__init__() (weightdriftloss method)": [[71, "fl4health.losses.weight_drift_loss.WeightDriftLoss.__init__", false]], "abstractae (class in fl4health.model_bases.autoencoders_base)": [[83, "fl4health.model_bases.autoencoders_base.AbstractAe", false]], "abstractsnapshotter (class in fl4health.utils.snapshotter)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter", false]], "accumulation (lossmetertype attribute)": [[165, "fl4health.utils.losses.LossMeterType.ACCUMULATION", false]], "accuracy (class in fl4health.metrics)": [[72, "fl4health.metrics.Accuracy", false]], "accuracy (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.Accuracy", false]], "accuracy (fairnessmetrictype attribute)": [[146, "fl4health.strategies.feddg_ga.FairnessMetricType.ACCURACY", false]], "adaptiveconstraintservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins.adaptive_drift_constrained)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedprotocol (class in fl4health.mixins.adaptive_drift_constrained)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol", false]], "adaptivedriftconstraintclient (class in fl4health.clients.adaptive_drift_constraint_client)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient", false]], "add_default_snapshot_attr() (earlystopper method)": [[161, "fl4health.utils.early_stopper.EarlyStopper.add_default_snapshot_attr", false]], "add_items_to_config_fn() (in module fl4health.servers.nnunet_server)": [[135, "fl4health.servers.nnunet_server.add_items_to_config_fn", false]], "add_noise_to_array() (in module fl4health.strategies.noisy_aggregate)": [[152, "fl4health.strategies.noisy_aggregate.add_noise_to_array", false]], "add_noise_to_ndarrays() (in module fl4health.strategies.noisy_aggregate)": [[152, "fl4health.strategies.noisy_aggregate.add_noise_to_ndarrays", false]], "aeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.AeProcessor", false]], "aggregate() (evaluationlosses static method)": [[165, "fl4health.utils.losses.EvaluationLosses.aggregate", false]], "aggregate() (fedavgdynamiclayer method)": [[143, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate", false]], "aggregate() (fedavgsparsecootensor method)": [[144, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate", false]], "aggregate() (fedpm method)": [[149, "fl4health.strategies.fedpm.FedPm.aggregate", false]], "aggregate() (losses static method)": [[165, "fl4health.utils.losses.Losses.aggregate", false]], "aggregate() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.aggregate", false]], "aggregate() (traininglosses static method)": [[165, "fl4health.utils.losses.TrainingLosses.aggregate", false]], "aggregate_bayesian() (fedpm method)": [[149, "fl4health.strategies.fedpm.FedPm.aggregate_bayesian", false]], "aggregate_evaluate() (basicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_evaluate", false]], "aggregate_evaluate() (evaluateserver method)": [[131, "fl4health.servers.evaluate_server.EvaluateServer.aggregate_evaluate", false]], "aggregate_evaluate() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_evaluate", false]], "aggregate_evaluate() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_evaluate", false]], "aggregate_fit() (basicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_fit", false]], "aggregate_fit() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.aggregate_fit", false]], "aggregate_fit() (fedavgdynamiclayer method)": [[143, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate_fit", false]], "aggregate_fit() (fedavgsparsecootensor method)": [[144, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate_fit", false]], "aggregate_fit() (fedavgwithadaptiveconstraint method)": [[145, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_fit", false]], "aggregate_fit() (feddggaadaptiveconstraint method)": [[147, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (fedpca method)": [[148, "fl4health.strategies.fedpca.FedPCA.aggregate_fit", false]], "aggregate_fit() (flash method)": [[150, "fl4health.strategies.flash.Flash.aggregate_fit", false]], "aggregate_fit() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_fit", false]], "aggregate_fit() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.aggregate_fit", false]], "aggregate_losses() (in module fl4health.strategies.aggregate_utils)": [[140, "fl4health.strategies.aggregate_utils.aggregate_losses", false]], "aggregate_losses_dict() (lossmeter static method)": [[165, "fl4health.utils.losses.LossMeter.aggregate_losses_dict", false]], "aggregate_results() (in module fl4health.strategies.aggregate_utils)": [[140, "fl4health.strategies.aggregate_utils.aggregate_results", false]], "apflclient (class in fl4health.clients.apfl_client)": [[21, "fl4health.clients.apfl_client.ApflClient", false]], "apflmodule (class in fl4health.model_bases.apfl_base)": [[82, "fl4health.model_bases.apfl_base.ApflModule", false]], "apply_adaptive_drift_to_client() (in module fl4health.mixins.adaptive_drift_constrained)": [[79, "fl4health.mixins.adaptive_drift_constrained.apply_adaptive_drift_to_client", false]], "apply_layer_filter() (fixedlayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.apply_layer_filter", false]], "apply_layer_filter() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.apply_layer_filter", false]], "as_dict() (evaluationlosses method)": [[165, "fl4health.utils.losses.EvaluationLosses.as_dict", false]], "as_dict() (losses method)": [[165, "fl4health.utils.losses.Losses.as_dict", false]], "as_dict() (traininglosses method)": [[165, "fl4health.utils.losses.TrainingLosses.as_dict", false]], "autoencoderdatasetconverter (class in fl4health.utils.dataset_converter)": [[160, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter", false]], "autoencoderprocessing (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing", false]], "average (ensembleaggregationmode attribute)": [[84, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.AVERAGE", false]], "average (lossmetertype attribute)": [[165, "fl4health.utils.losses.LossMeterType.AVERAGE", false]], "backward() (bernoullisample static method)": [[162, "fl4health.utils.functions.BernoulliSample.backward", false]], "balancedaccuracy (class in fl4health.metrics)": [[72, "fl4health.metrics.BalancedAccuracy", false]], "balancedaccuracy (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.BalancedAccuracy", false]], "basedataset (class in fl4health.utils.dataset)": [[159, "fl4health.utils.dataset.BaseDataset", false]], "basefractionsamplingmanager (class in fl4health.client_managers.base_sampling_manager)": [[15, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager", false]], "basereporter (class in fl4health.reporting.base_reporter)": [[120, "fl4health.reporting.base_reporter.BaseReporter", false]], "baseservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule", false]], "basicae (class in fl4health.model_bases.autoencoders_base)": [[83, "fl4health.model_bases.autoencoders_base.BasicAe", false]], "basicclient (class in fl4health.clients.basic_client)": [[22, "fl4health.clients.basic_client.BasicClient", false]], "basicclientprotocol (class in fl4health.mixins.core_protocols)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocol", false]], "basicclientprotocolpresetup (class in fl4health.mixins.core_protocols)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup", false]], "basicfedavg (class in fl4health.strategies.basic_fedavg)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg", false]], "bernoullisample (class in fl4health.utils.functions)": [[162, "fl4health.utils.functions.BernoulliSample", false]], "bestlossopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer", false]], "bestlosstorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer", false]], "bestmetrictorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer", false]], "beta_with_extreme_kernel_base_values() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.beta_with_extreme_kernel_base_values", false]], "binary (tabulartype attribute)": [[63, "fl4health.feature_alignment.tabular_type.TabularType.BINARY", false]], "binarysoftdicecoefficient (class in fl4health.metrics)": [[72, "fl4health.metrics.BinarySoftDiceCoefficient", false]], "binarysoftdicecoefficient (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.BinarySoftDiceCoefficient", false]], "calculate_parameters_norm() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.calculate_parameters_norm", false]], "calculate_update_with_momentum() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.calculate_update_with_momentum", false]], "center_data() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.center_data", false]], "check_config() (in module fl4health.utils.config)": [[157, "fl4health.utils.config.check_config", false]], "check_if_batch_is_empty_and_verify_input() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.check_if_batch_is_empty_and_verify_input", false]], "check_shape_match() (in module fl4health.utils.parameter_extraction)": [[170, "fl4health.utils.parameter_extraction.check_shape_match", false]], "check_target_prediction_keys_equal() (metricmanager method)": [[76, "fl4health.metrics.metric_managers.MetricManager.check_target_prediction_keys_equal", false]], "checkpoint_exists() (perroundstatecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.checkpoint_exists", false]], "checkpointmode (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.CheckpointMode", false]], "clear() (emametric method)": [[74, "fl4health.metrics.compound_metrics.EmaMetric.clear", false]], "clear() (lossmeter method)": [[165, "fl4health.utils.losses.LossMeter.clear", false]], "clear() (metric method)": [[73, "fl4health.metrics.base_metrics.Metric.clear", false]], "clear() (metricmanager method)": [[76, "fl4health.metrics.metric_managers.MetricManager.clear", false]], "clear() (simplemetric method)": [[72, "fl4health.metrics.SimpleMetric.clear", false], [77, "fl4health.metrics.metrics.SimpleMetric.clear", false]], "clear() (torchmetric method)": [[72, "fl4health.metrics.TorchMetric.clear", false], [77, "fl4health.metrics.metrics.TorchMetric.clear", false]], "clear() (transformsmetric method)": [[74, "fl4health.metrics.compound_metrics.TransformsMetric.clear", false]], "clear_buffers() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.clear_buffers", false]], "clientcheckpointandstatemodule (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule", false]], "clientlevelaccountant (class in fl4health.privacy.fl_accountants)": [[117, "fl4health.privacy.fl_accountants.ClientLevelAccountant", false]], "clientleveldpfedavgm (class in fl4health.strategies.client_dp_fedavgm)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM", false]], "clientleveldpfedavgserver (class in fl4health.servers.client_level_dp_fed_avg_server)": [[130, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer", false]], "clip_parameters() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.clip_parameters", false]], "clippingbitservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule", false]], "clone_and_freeze_model() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.clone_and_freeze_model", false]], "collapse_one_hot_tensor() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.collapse_one_hot_tensor", false]], "compute() (emametric method)": [[74, "fl4health.metrics.compound_metrics.EmaMetric.compute", false]], "compute() (lossmeter method)": [[165, "fl4health.utils.losses.LossMeter.compute", false]], "compute() (metric method)": [[73, "fl4health.metrics.base_metrics.Metric.compute", false]], "compute() (metricmanager method)": [[76, "fl4health.metrics.metric_managers.MetricManager.compute", false]], "compute() (simplemetric method)": [[72, "fl4health.metrics.SimpleMetric.compute", false], [77, "fl4health.metrics.metrics.SimpleMetric.compute", false]], "compute() (torchmetric method)": [[72, "fl4health.metrics.TorchMetric.compute", false], [77, "fl4health.metrics.metrics.TorchMetric.compute", false]], "compute() (transformsmetric method)": [[74, "fl4health.metrics.compound_metrics.TransformsMetric.compute", false]], "compute_all_h_u_all_samples() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_all_samples", false]], "compute_all_h_u_from_inner_products() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products", false]], "compute_all_h_u_from_inner_products_linear() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products_linear", false]], "compute_all_h_u_linear() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_linear", false]], "compute_contrastive_loss() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_contrastive_loss", false]], "compute_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_cosine_similarity_loss", false]], "compute_cumulative_explained_variance() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.compute_cumulative_explained_variance", false]], "compute_euclidean_inner_products() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products", false]], "compute_euclidean_inner_products_linear() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products_linear", false]], "compute_evaluation_loss() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.compute_evaluation_loss", false]], "compute_explained_variance_ratios() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.compute_explained_variance_ratios", false]], "compute_h_u_from_inner_products() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products", false]], "compute_h_u_from_inner_products_linear() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products_linear", false]], "compute_hat_d_per_kernel() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_d_per_kernel", false]], "compute_hat_q_k() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_Q_k", false]], "compute_hat_q_k_linear() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_Q_k_linear", false]], "compute_kernel() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.compute_kernel", false]], "compute_loss_and_additional_losses() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclientprotocolpresetup method)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.compute_loss_and_additional_losses", false]], "compute_mkmmd() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_mkmmd", false]], "compute_negative_similarities() (mooncontrastiveloss method)": [[65, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.compute_negative_similarities", false]], "compute_parameter_delta() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.compute_parameter_delta", false]], "compute_parameters_delta() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.compute_parameters_delta", false]], "compute_penalty_loss() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstrainedprotocol method)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_penalty_loss", false]], "compute_perfcl_loss() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_perfcl_loss", false]], "compute_projection_variance() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.compute_projection_variance", false]], "compute_reconstruction_error() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.compute_reconstruction_error", false]], "compute_training_loss() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.compute_training_loss", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.compute_training_loss", false]], "compute_training_loss() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_training_loss", false]], "compute_training_loss() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.compute_training_loss", false]], "compute_training_loss() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.compute_training_loss", false]], "compute_training_loss() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_training_loss", false]], "compute_training_loss() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_training_loss", false]], "compute_training_loss() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.compute_training_loss", false]], "compute_training_loss() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.compute_training_loss", false]], "compute_training_loss() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.compute_training_loss", false]], "compute_training_loss() (mrmtlclient method)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient.compute_training_loss", false]], "compute_training_loss() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_training_loss", false]], "compute_updated_control_variates() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.compute_updated_control_variates", false]], "compute_updated_control_variates() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.compute_updated_control_variates", false]], "compute_updated_parameters() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.compute_updated_parameters", false]], "compute_updated_weights() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.compute_updated_weights", false]], "compute_vertices() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_vertices", false]], "compute_weight_update_and_clip() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.compute_weight_update_and_clip", false]], "concatenate (parallelfeaturejoinmode attribute)": [[95, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.CONCATENATE", false]], "conditionalvae (class in fl4health.model_bases.autoencoders_base)": [[83, "fl4health.model_bases.autoencoders_base.ConditionalVae", false]], "configure_evaluate() (basicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_evaluate", false]], "configure_evaluate() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_evaluate", false]], "configure_evaluate() (evaluateserver method)": [[131, "fl4health.servers.evaluate_server.EvaluateServer.configure_evaluate", false]], "configure_evaluate() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.configure_evaluate", false]], "configure_evaluate() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_evaluate", false]], "configure_fit() (basicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_fit", false]], "configure_fit() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_fit", false]], "configure_fit() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.configure_fit", false]], "configure_fit() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_fit", false]], "configure_fit_all() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.configure_fit_all", false]], "configure_poll() (basicfedavg method)": [[141, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_poll", false]], "configure_poll() (strategywithpolling method)": [[154, "fl4health.strategies.strategy_with_poll.StrategyWithPolling.configure_poll", false]], "constrainedfendaclient (class in fl4health.clients.constrained_fenda_client)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient", false]], "constrainedfendalosscontainer (class in fl4health.losses.fenda_loss_config)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer", false]], "construct_covariance_matrix() (syntheticfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset.construct_covariance_matrix", false]], "construct_quadruples() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.construct_quadruples", false]], "construct_rxrx1_tensor_dataset() (in module fl4health.datasets.rxrx1.load_data)": [[52, "fl4health.datasets.rxrx1.load_data.construct_rxrx1_tensor_dataset", false]], "construct_skin_cancer_tensor_dataset() (in module fl4health.datasets.skin_cancer.load_data)": [[55, "fl4health.datasets.skin_cancer.load_data.construct_skin_cancer_tensor_dataset", false]], "convert_dataset() (autoencoderdatasetconverter method)": [[160, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.convert_dataset", false]], "convert_dataset() (datasetconverter method)": [[160, "fl4health.utils.dataset_converter.DatasetConverter.convert_dataset", false]], "convert_deep_supervision_dict_to_list() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.convert_deep_supervision_dict_to_list", false]], "convert_deep_supervision_list_to_dict() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.convert_deep_supervision_list_to_dict", false]], "convert_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[173, "fl4health.utils.privacy_utilities.convert_model_to_opacus_model", false]], "convert_to_masked_model() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[91, "fl4health.model_bases.masked_layers.masked_layers_utils.convert_to_masked_model", false]], "cosinesimilarityloss (class in fl4health.losses.cosine_similarity_loss)": [[66, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss", false]], "cosinesimilaritylosscontainer (class in fl4health.losses.fenda_loss_config)": [[68, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer", false]], "create_plans() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.create_plans", false]], "create_splits() (in module fl4health.datasets.rxrx1.load_data)": [[52, "fl4health.datasets.rxrx1.load_data.create_splits", false]], "critical (loglevel attribute)": [[177, "fl4health.utils.typing.LogLevel.CRITICAL", false]], "custom (fairnessmetrictype attribute)": [[146, "fl4health.strategies.feddg_ga.FairnessMetricType.CUSTOM", false]], "cvaefixedconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor", false]], "cvaevariableconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor", false]], "datasetconverter (class in fl4health.utils.dataset_converter)": [[160, "fl4health.utils.dataset_converter.DatasetConverter", false]], "debug (loglevel attribute)": [[177, "fl4health.utils.typing.LogLevel.DEBUG", false]], "decode() (basicae method)": [[83, "fl4health.model_bases.autoencoders_base.BasicAe.decode", false]], "decode() (conditionalvae method)": [[83, "fl4health.model_bases.autoencoders_base.ConditionalVae.decode", false]], "decode() (variationalae method)": [[83, "fl4health.model_bases.autoencoders_base.VariationalAe.decode", false]], "decode_and_pseudo_sort_results() (in module fl4health.utils.functions)": [[162, "fl4health.utils.functions.decode_and_pseudo_sort_results", false]], "deepmmdloss (class in fl4health.losses.deep_mmd_loss)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss", false]], "define_metrics() (wandbreporter method)": [[119, "fl4health.reporting.WandBReporter.define_metrics", false], [123, "fl4health.reporting.wandb_reporter.WandBReporter.define_metrics", false]], "delete_default_snapshot_attr() (earlystopper method)": [[161, "fl4health.utils.early_stopper.EarlyStopper.delete_default_snapshot_attr", false]], "derm7pt_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_image_path_func", false]], "derm7pt_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_label_map_func", false]], "device (basicclientprotocolpresetup attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.device", false]], "dict_wrap_attr() (abstractsnapshotter method)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter.dict_wrap_attr", false]], "dictionarydataset (class in fl4health.utils.dataset)": [[159, "fl4health.utils.dataset.DictionaryDataset", false]], "dirichletlabelbasedallocation (class in fl4health.utils.partitioners)": [[171, "fl4health.utils.partitioners.DirichletLabelBasedAllocation", false]], "dirichletlabelbasedsampler (class in fl4health.utils.sampler)": [[175, "fl4health.utils.sampler.DirichletLabelBasedSampler", false]], "disable_accumulating_features() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.disable_accumulating_features", false]], "dittoclient (class in fl4health.clients.ditto_client)": [[27, "fl4health.clients.ditto_client.DittoClient", false]], "dittodeepmmdclient (class in fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient", false]], "dittomkmmdclient (class in fl4health.clients.mkmmd_clients.ditto_mkmmd_client)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient", false]], "dittoserver (class in fl4health.servers.adaptive_constraint_servers.ditto_server)": [[126, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer", false]], "dpscaffoldclient (class in fl4health.clients.scaffold_client)": [[48, "fl4health.clients.scaffold_client.DPScaffoldClient", false]], "dpscaffoldserver (class in fl4health.servers.scaffold_server)": [[137, "fl4health.servers.scaffold_server.DPScaffoldServer", false]], "dpscaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule", false]], "drift_penalty_tensors (adaptivedriftconstrainedprotocol attribute)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_tensors", false]], "drift_penalty_weight (adaptivedriftconstrainedprotocol attribute)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_weight", false]], "dump() (filereporter method)": [[121, "fl4health.reporting.json_reporter.FileReporter.dump", false]], "dump() (jsonreporter method)": [[119, "fl4health.reporting.JsonReporter.dump", false], [121, "fl4health.reporting.json_reporter.JsonReporter.dump", false]], "dynamiclayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[103, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger", false]], "early_stop_validation (loggingmode attribute)": [[164, "fl4health.utils.logging.LoggingMode.EARLY_STOP_VALIDATION", false]], "earlystopper (class in fl4health.utils.early_stopper)": [[161, "fl4health.utils.early_stopper.EarlyStopper", false]], "emametric (class in fl4health.metrics.compound_metrics)": [[74, "fl4health.metrics.compound_metrics.EmaMetric", false]], "empty_cache() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.empty_cache", false]], "enable_accumulating_features() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.enable_accumulating_features", false]], "encode() (basicae method)": [[83, "fl4health.model_bases.autoencoders_base.BasicAe.encode", false]], "encode() (conditionalvae method)": [[83, "fl4health.model_bases.autoencoders_base.ConditionalVae.encode", false]], "encode() (variationalae method)": [[83, "fl4health.model_bases.autoencoders_base.VariationalAe.encode", false]], "ensemble_average() (ensemblemodel method)": [[84, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_average", false]], "ensemble_vote() (ensemblemodel method)": [[84, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_vote", false]], "ensembleaggregationmode (class in fl4health.model_bases.ensemble_base)": [[84, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode", false]], "ensembleclient (class in fl4health.clients.ensemble_client)": [[28, "fl4health.clients.ensemble_client.EnsembleClient", false]], "ensemblemodel (class in fl4health.model_bases.ensemble_base)": [[84, "fl4health.model_bases.ensemble_base.EnsembleModel", false]], "epoch (wandbsteptype attribute)": [[119, "fl4health.reporting.WandBStepType.EPOCH", false], [123, "fl4health.reporting.wandb_reporter.WandBStepType.EPOCH", false]], "error (loglevel attribute)": [[177, "fl4health.utils.typing.LogLevel.ERROR", false]], "evaluate() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.evaluate", false]], "evaluate() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.evaluate", false]], "evaluate() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.evaluate", false]], "evaluate() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.evaluate", false]], "evaluate() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.evaluate", false]], "evaluate() (numpyclientminimalprotocol method)": [[80, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.evaluate", false]], "evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.evaluate_metrics_aggregation_fn", false]], "evaluate_round() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.evaluate_round", false]], "evaluateclient (class in fl4health.clients.evaluate_client)": [[29, "fl4health.clients.evaluate_client.EvaluateClient", false]], "evaluateserver (class in fl4health.servers.evaluate_server)": [[131, "fl4health.servers.evaluate_server.EvaluateServer", false]], "evaluationlosses (class in fl4health.utils.losses)": [[165, "fl4health.utils.losses.EvaluationLosses", false]], "extract_coo_info_from_dense() (sparsecooparameterpacker static method)": [[106, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.extract_coo_info_from_dense", false]], "f1 (class in fl4health.metrics)": [[72, "fl4health.metrics.F1", false]], "f1 (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.F1", false]], "fairnessmetric (class in fl4health.strategies.feddg_ga)": [[146, "fl4health.strategies.feddg_ga.FairnessMetric", false]], "fairnessmetrictype (class in fl4health.strategies.feddg_ga)": [[146, "fl4health.strategies.feddg_ga.FairnessMetricType", false]], "featureextractorbuffer (class in fl4health.model_bases.feature_extractor_buffer)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer", false]], "fedavgdynamiclayer (class in fl4health.strategies.fedavg_dynamic_layer)": [[143, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer", false]], "fedavgsparsecootensor (class in fl4health.strategies.fedavg_sparse_coo_tensor)": [[144, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor", false]], "fedavgwithadaptiveconstraint (class in fl4health.strategies.fedavg_with_adaptive_constraint)": [[145, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint", false]], "feddgga (class in fl4health.strategies.feddg_ga)": [[146, "fl4health.strategies.feddg_ga.FedDgGa", false]], "feddggaadaptiveconstraint (class in fl4health.strategies.feddg_ga_with_adaptive_constraint)": [[147, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint", false]], "federated_evaluate() (evaluateserver method)": [[131, "fl4health.servers.evaluate_server.EvaluateServer.federated_evaluate", false]], "fedpca (class in fl4health.strategies.fedpca)": [[148, "fl4health.strategies.fedpca.FedPCA", false]], "fedpcaclient (class in fl4health.clients.fed_pca_client)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient", false]], "fedperclient (class in fl4health.clients.fedper_client)": [[32, "fl4health.clients.fedper_client.FedPerClient", false]], "fedpm (class in fl4health.strategies.fedpm)": [[149, "fl4health.strategies.fedpm.FedPm", false]], "fedpmclient (class in fl4health.clients.fedpm_client)": [[33, "fl4health.clients.fedpm_client.FedPmClient", false]], "fedpmexchanger (class in fl4health.parameter_exchange.fedpm_exchanger)": [[101, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger", false]], "fedpmserver (class in fl4health.servers.fedpm_server)": [[132, "fl4health.servers.fedpm_server.FedPmServer", false]], "fedproxclient (class in fl4health.clients.fed_prox_client)": [[31, "fl4health.clients.fed_prox_client.FedProxClient", false]], "fedproxserver (class in fl4health.servers.adaptive_constraint_servers.fedprox_server)": [[127, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer", false]], "fedrepclient (class in fl4health.clients.fedrep_client)": [[34, "fl4health.clients.fedrep_client.FedRepClient", false]], "fedrepmodel (class in fl4health.model_bases.fedrep_base)": [[86, "fl4health.model_bases.fedrep_base.FedRepModel", false]], "fedreptrainmode (class in fl4health.clients.fedrep_client)": [[34, "fl4health.clients.fedrep_client.FedRepTrainMode", false]], "fedsimclrmodel (class in fl4health.model_bases.fedsimclr_base)": [[87, "fl4health.model_bases.fedsimclr_base.FedSimClrModel", false]], "fendaclient (class in fl4health.clients.fenda_client)": [[35, "fl4health.clients.fenda_client.FendaClient", false]], "fendadittoclient (class in fl4health.clients.fenda_ditto_client)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient", false]], "fendamodel (class in fl4health.model_bases.fenda_base)": [[88, "fl4health.model_bases.fenda_base.FendaModel", false]], "fendamodelwithfeaturestate (class in fl4health.model_bases.fenda_base)": [[88, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState", false]], "filereporter (class in fl4health.reporting.json_reporter)": [[121, "fl4health.reporting.json_reporter.FileReporter", false]], "filter_and_save_data() (in module fl4health.datasets.rxrx1.preprocess)": [[53, "fl4health.datasets.rxrx1.preprocess.filter_and_save_data", false]], "find_last_common_prefix() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.find_last_common_prefix", false]], "fit() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.fit", false]], "fit() (clientleveldpfedavgserver method)": [[130, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.fit", false]], "fit() (dpscaffoldserver method)": [[137, "fl4health.servers.scaffold_server.DPScaffoldServer.fit", false]], "fit() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.fit", false]], "fit() (evaluateserver method)": [[131, "fl4health.servers.evaluate_server.EvaluateServer.fit", false]], "fit() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.fit", false]], "fit() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.fit", false]], "fit() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.fit", false]], "fit() (instanceleveldpserver method)": [[133, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.fit", false]], "fit() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.fit", false]], "fit() (modelmergeserver method)": [[134, "fl4health.servers.model_merge_server.ModelMergeServer.fit", false]], "fit() (numpyclientminimalprotocol method)": [[80, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.fit", false]], "fit() (scaffoldserver method)": [[137, "fl4health.servers.scaffold_server.ScaffoldServer.fit", false]], "fit() (textcolumntransformer method)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.fit", false]], "fit() (textmulticolumntransformer method)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.fit", false]], "fit_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.fit_metrics_aggregation_fn", false]], "fit_round() (fedpmserver method)": [[132, "fl4health.servers.fedpm_server.FedPmServer.fit_round", false]], "fit_round() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.fit_round", false]], "fit_with_per_round_checkpointing() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.fit_with_per_round_checkpointing", false]], "fixedlayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[103, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger", false]], "fixedsamplingbyfractionclientmanager (class in fl4health.client_managers.fixed_without_replacement_manager)": [[17, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager", false]], "fixedsamplingclientmanager (class in fl4health.client_managers.fixed_sampling_client_manager)": [[16, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager", false]], "fixedsamplingwithoutreplacement (class in fl4health.privacy.moments_accountant)": [[118, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement", false]], "fl4health": [[8, "module-fl4health", false]], "fl4health.checkpointing": [[9, "module-fl4health.checkpointing", false]], "fl4health.checkpointing.checkpointer": [[10, "module-fl4health.checkpointing.checkpointer", false]], "fl4health.checkpointing.client_module": [[11, "module-fl4health.checkpointing.client_module", false]], "fl4health.checkpointing.opacus_checkpointer": [[12, "module-fl4health.checkpointing.opacus_checkpointer", false]], "fl4health.checkpointing.server_module": [[13, "module-fl4health.checkpointing.server_module", false]], "fl4health.client_managers": [[14, "module-fl4health.client_managers", false]], "fl4health.client_managers.base_sampling_manager": [[15, "module-fl4health.client_managers.base_sampling_manager", false]], "fl4health.client_managers.fixed_sampling_client_manager": [[16, "module-fl4health.client_managers.fixed_sampling_client_manager", false]], "fl4health.client_managers.fixed_without_replacement_manager": [[17, "module-fl4health.client_managers.fixed_without_replacement_manager", false]], "fl4health.client_managers.poisson_sampling_manager": [[18, "module-fl4health.client_managers.poisson_sampling_manager", false]], "fl4health.clients": [[19, "module-fl4health.clients", false]], "fl4health.clients.adaptive_drift_constraint_client": [[20, "module-fl4health.clients.adaptive_drift_constraint_client", false]], "fl4health.clients.apfl_client": [[21, "module-fl4health.clients.apfl_client", false]], "fl4health.clients.basic_client": [[22, "module-fl4health.clients.basic_client", false]], "fl4health.clients.clipping_client": [[23, "module-fl4health.clients.clipping_client", false]], "fl4health.clients.constrained_fenda_client": [[24, "module-fl4health.clients.constrained_fenda_client", false]], "fl4health.clients.deep_mmd_clients": [[25, "module-fl4health.clients.deep_mmd_clients", false]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[26, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false]], "fl4health.clients.ditto_client": [[27, "module-fl4health.clients.ditto_client", false]], "fl4health.clients.ensemble_client": [[28, "module-fl4health.clients.ensemble_client", false]], "fl4health.clients.evaluate_client": [[29, "module-fl4health.clients.evaluate_client", false]], "fl4health.clients.fed_pca_client": [[30, "module-fl4health.clients.fed_pca_client", false]], "fl4health.clients.fed_prox_client": [[31, "module-fl4health.clients.fed_prox_client", false]], "fl4health.clients.fedper_client": [[32, "module-fl4health.clients.fedper_client", false]], "fl4health.clients.fedpm_client": [[33, "module-fl4health.clients.fedpm_client", false]], "fl4health.clients.fedrep_client": [[34, "module-fl4health.clients.fedrep_client", false]], "fl4health.clients.fenda_client": [[35, "module-fl4health.clients.fenda_client", false]], "fl4health.clients.fenda_ditto_client": [[36, "module-fl4health.clients.fenda_ditto_client", false]], "fl4health.clients.flash_client": [[37, "module-fl4health.clients.flash_client", false]], "fl4health.clients.instance_level_dp_client": [[38, "module-fl4health.clients.instance_level_dp_client", false]], "fl4health.clients.mkmmd_clients": [[39, "module-fl4health.clients.mkmmd_clients", false]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[40, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[41, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false]], "fl4health.clients.model_merge_client": [[42, "module-fl4health.clients.model_merge_client", false]], "fl4health.clients.moon_client": [[43, "module-fl4health.clients.moon_client", false]], "fl4health.clients.mr_mtl_client": [[44, "module-fl4health.clients.mr_mtl_client", false]], "fl4health.clients.nnunet_client": [[45, "module-fl4health.clients.nnunet_client", false]], "fl4health.clients.partial_weight_exchange_client": [[46, "module-fl4health.clients.partial_weight_exchange_client", false]], "fl4health.clients.perfcl_client": [[47, "module-fl4health.clients.perfcl_client", false]], "fl4health.clients.scaffold_client": [[48, "module-fl4health.clients.scaffold_client", false]], "fl4health.datasets": [[50, "module-fl4health.datasets", false]], "fl4health.datasets.rxrx1": [[51, "module-fl4health.datasets.rxrx1", false]], "fl4health.datasets.rxrx1.load_data": [[52, "module-fl4health.datasets.rxrx1.load_data", false]], "fl4health.datasets.rxrx1.preprocess": [[53, "module-fl4health.datasets.rxrx1.preprocess", false]], "fl4health.datasets.skin_cancer": [[54, "module-fl4health.datasets.skin_cancer", false]], "fl4health.datasets.skin_cancer.load_data": [[55, "module-fl4health.datasets.skin_cancer.load_data", false]], "fl4health.datasets.skin_cancer.preprocess_skin": [[56, "module-fl4health.datasets.skin_cancer.preprocess_skin", false]], "fl4health.feature_alignment": [[57, "module-fl4health.feature_alignment", false]], "fl4health.feature_alignment.constants": [[58, "module-fl4health.feature_alignment.constants", false]], "fl4health.feature_alignment.string_columns_transformer": [[59, "module-fl4health.feature_alignment.string_columns_transformer", false]], "fl4health.feature_alignment.tabular_feature": [[62, "module-fl4health.feature_alignment.tabular_feature", false]], "fl4health.feature_alignment.tabular_type": [[63, "module-fl4health.feature_alignment.tabular_type", false]], "fl4health.losses": [[64, "module-fl4health.losses", false]], "fl4health.losses.contrastive_loss": [[65, "module-fl4health.losses.contrastive_loss", false]], "fl4health.losses.cosine_similarity_loss": [[66, "module-fl4health.losses.cosine_similarity_loss", false]], "fl4health.losses.deep_mmd_loss": [[67, "module-fl4health.losses.deep_mmd_loss", false]], "fl4health.losses.fenda_loss_config": [[68, "module-fl4health.losses.fenda_loss_config", false]], "fl4health.losses.mkmmd_loss": [[69, "module-fl4health.losses.mkmmd_loss", false]], "fl4health.losses.perfcl_loss": [[70, "module-fl4health.losses.perfcl_loss", false]], "fl4health.losses.weight_drift_loss": [[71, "module-fl4health.losses.weight_drift_loss", false]], "fl4health.metrics": [[72, "module-fl4health.metrics", false]], "fl4health.metrics.base_metrics": [[73, "module-fl4health.metrics.base_metrics", false]], "fl4health.metrics.compound_metrics": [[74, "module-fl4health.metrics.compound_metrics", false]], "fl4health.metrics.metric_aggregation": [[75, "module-fl4health.metrics.metric_aggregation", false]], "fl4health.metrics.metric_managers": [[76, "module-fl4health.metrics.metric_managers", false]], "fl4health.metrics.metrics": [[77, "module-fl4health.metrics.metrics", false]], "fl4health.mixins": [[78, "module-fl4health.mixins", false]], "fl4health.mixins.adaptive_drift_constrained": [[79, "module-fl4health.mixins.adaptive_drift_constrained", false]], "fl4health.mixins.core_protocols": [[80, "module-fl4health.mixins.core_protocols", false]], "fl4health.model_bases": [[81, "module-fl4health.model_bases", false]], "fl4health.model_bases.apfl_base": [[82, "module-fl4health.model_bases.apfl_base", false]], "fl4health.model_bases.autoencoders_base": [[83, "module-fl4health.model_bases.autoencoders_base", false]], "fl4health.model_bases.ensemble_base": [[84, "module-fl4health.model_bases.ensemble_base", false]], "fl4health.model_bases.feature_extractor_buffer": [[85, "module-fl4health.model_bases.feature_extractor_buffer", false]], "fl4health.model_bases.fedrep_base": [[86, "module-fl4health.model_bases.fedrep_base", false]], "fl4health.model_bases.fedsimclr_base": [[87, "module-fl4health.model_bases.fedsimclr_base", false]], "fl4health.model_bases.fenda_base": [[88, "module-fl4health.model_bases.fenda_base", false]], "fl4health.model_bases.masked_layers": [[89, "module-fl4health.model_bases.masked_layers", false]], "fl4health.model_bases.masked_layers.masked_conv": [[90, "module-fl4health.model_bases.masked_layers.masked_conv", false]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[91, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false]], "fl4health.model_bases.masked_layers.masked_linear": [[92, "module-fl4health.model_bases.masked_layers.masked_linear", false]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[93, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false]], "fl4health.model_bases.moon_base": [[94, "module-fl4health.model_bases.moon_base", false]], "fl4health.model_bases.parallel_split_models": [[95, "module-fl4health.model_bases.parallel_split_models", false]], "fl4health.model_bases.partial_layer_exchange_model": [[96, "module-fl4health.model_bases.partial_layer_exchange_model", false]], "fl4health.model_bases.pca": [[97, "module-fl4health.model_bases.pca", false]], "fl4health.model_bases.perfcl_base": [[98, "module-fl4health.model_bases.perfcl_base", false]], "fl4health.model_bases.sequential_split_models": [[99, "module-fl4health.model_bases.sequential_split_models", false]], "fl4health.parameter_exchange": [[100, "module-fl4health.parameter_exchange", false]], "fl4health.parameter_exchange.fedpm_exchanger": [[101, "module-fl4health.parameter_exchange.fedpm_exchanger", false]], "fl4health.parameter_exchange.full_exchanger": [[102, "module-fl4health.parameter_exchange.full_exchanger", false]], "fl4health.parameter_exchange.layer_exchanger": [[103, "module-fl4health.parameter_exchange.layer_exchanger", false]], "fl4health.parameter_exchange.packing_exchanger": [[104, "module-fl4health.parameter_exchange.packing_exchanger", false]], "fl4health.parameter_exchange.parameter_exchanger_base": [[105, "module-fl4health.parameter_exchange.parameter_exchanger_base", false]], "fl4health.parameter_exchange.parameter_packer": [[106, "module-fl4health.parameter_exchange.parameter_packer", false]], "fl4health.parameter_exchange.parameter_selection_criteria": [[107, "module-fl4health.parameter_exchange.parameter_selection_criteria", false]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[108, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[109, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false]], "fl4health.preprocessing": [[110, "module-fl4health.preprocessing", false]], "fl4health.preprocessing.autoencoders": [[111, "module-fl4health.preprocessing.autoencoders", false]], "fl4health.preprocessing.autoencoders.dim_reduction": [[112, "module-fl4health.preprocessing.autoencoders.dim_reduction", false]], "fl4health.preprocessing.autoencoders.loss": [[113, "module-fl4health.preprocessing.autoencoders.loss", false]], "fl4health.preprocessing.pca_preprocessor": [[114, "module-fl4health.preprocessing.pca_preprocessor", false]], "fl4health.preprocessing.warmed_up_module": [[115, "module-fl4health.preprocessing.warmed_up_module", false]], "fl4health.privacy": [[116, "module-fl4health.privacy", false]], "fl4health.privacy.fl_accountants": [[117, "module-fl4health.privacy.fl_accountants", false]], "fl4health.privacy.moments_accountant": [[118, "module-fl4health.privacy.moments_accountant", false]], "fl4health.reporting": [[119, "module-fl4health.reporting", false]], "fl4health.reporting.base_reporter": [[120, "module-fl4health.reporting.base_reporter", false]], "fl4health.reporting.json_reporter": [[121, "module-fl4health.reporting.json_reporter", false]], "fl4health.reporting.reports_manager": [[122, "module-fl4health.reporting.reports_manager", false]], "fl4health.reporting.wandb_reporter": [[123, "module-fl4health.reporting.wandb_reporter", false]], "fl4health.servers": [[124, "module-fl4health.servers", false]], "fl4health.servers.adaptive_constraint_servers": [[125, "module-fl4health.servers.adaptive_constraint_servers", false]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[126, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[127, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[128, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false]], "fl4health.servers.base_server": [[129, "module-fl4health.servers.base_server", false]], "fl4health.servers.client_level_dp_fed_avg_server": [[130, "module-fl4health.servers.client_level_dp_fed_avg_server", false]], "fl4health.servers.evaluate_server": [[131, "module-fl4health.servers.evaluate_server", false]], "fl4health.servers.fedpm_server": [[132, "module-fl4health.servers.fedpm_server", false]], "fl4health.servers.instance_level_dp_server": [[133, "module-fl4health.servers.instance_level_dp_server", false]], "fl4health.servers.model_merge_server": [[134, "module-fl4health.servers.model_merge_server", false]], "fl4health.servers.nnunet_server": [[135, "module-fl4health.servers.nnunet_server", false]], "fl4health.servers.polling": [[136, "module-fl4health.servers.polling", false]], "fl4health.servers.scaffold_server": [[137, "module-fl4health.servers.scaffold_server", false]], "fl4health.strategies": [[139, "module-fl4health.strategies", false]], "fl4health.strategies.aggregate_utils": [[140, "module-fl4health.strategies.aggregate_utils", false]], "fl4health.strategies.basic_fedavg": [[141, "module-fl4health.strategies.basic_fedavg", false]], "fl4health.strategies.client_dp_fedavgm": [[142, "module-fl4health.strategies.client_dp_fedavgm", false]], "fl4health.strategies.fedavg_dynamic_layer": [[143, "module-fl4health.strategies.fedavg_dynamic_layer", false]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[144, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[145, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false]], "fl4health.strategies.feddg_ga": [[146, "module-fl4health.strategies.feddg_ga", false]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[147, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false]], "fl4health.strategies.fedpca": [[148, "module-fl4health.strategies.fedpca", false]], "fl4health.strategies.fedpm": [[149, "module-fl4health.strategies.fedpm", false]], "fl4health.strategies.flash": [[150, "module-fl4health.strategies.flash", false]], "fl4health.strategies.model_merge_strategy": [[151, "module-fl4health.strategies.model_merge_strategy", false]], "fl4health.strategies.noisy_aggregate": [[152, "module-fl4health.strategies.noisy_aggregate", false]], "fl4health.strategies.scaffold": [[153, "module-fl4health.strategies.scaffold", false]], "fl4health.strategies.strategy_with_poll": [[154, "module-fl4health.strategies.strategy_with_poll", false]], "fl4health.utils": [[155, "module-fl4health.utils", false]], "fl4health.utils.client": [[156, "module-fl4health.utils.client", false]], "fl4health.utils.config": [[157, "module-fl4health.utils.config", false]], "fl4health.utils.data_generation": [[158, "module-fl4health.utils.data_generation", false]], "fl4health.utils.dataset": [[159, "module-fl4health.utils.dataset", false]], "fl4health.utils.dataset_converter": [[160, "module-fl4health.utils.dataset_converter", false]], "fl4health.utils.early_stopper": [[161, "module-fl4health.utils.early_stopper", false]], "fl4health.utils.functions": [[162, "module-fl4health.utils.functions", false]], "fl4health.utils.load_data": [[163, "module-fl4health.utils.load_data", false]], "fl4health.utils.logging": [[164, "module-fl4health.utils.logging", false]], "fl4health.utils.losses": [[165, "module-fl4health.utils.losses", false]], "fl4health.utils.metrics": [[167, "module-fl4health.utils.metrics", false]], "fl4health.utils.msd_dataset_sources": [[168, "module-fl4health.utils.msd_dataset_sources", false]], "fl4health.utils.nnunet_utils": [[169, "module-fl4health.utils.nnunet_utils", false]], "fl4health.utils.parameter_extraction": [[170, "module-fl4health.utils.parameter_extraction", false]], "fl4health.utils.partitioners": [[171, "module-fl4health.utils.partitioners", false]], "fl4health.utils.peft_parameter_extraction": [[172, "module-fl4health.utils.peft_parameter_extraction", false]], "fl4health.utils.privacy_utilities": [[173, "module-fl4health.utils.privacy_utilities", false]], "fl4health.utils.random": [[174, "module-fl4health.utils.random", false]], "fl4health.utils.sampler": [[175, "module-fl4health.utils.sampler", false]], "fl4health.utils.snapshotter": [[176, "module-fl4health.utils.snapshotter", false]], "fl4health.utils.typing": [[177, "module-fl4health.utils.typing", false]], "flash (class in fl4health.strategies.flash)": [[150, "fl4health.strategies.flash.Flash", false]], "flashclient (class in fl4health.clients.flash_client)": [[37, "fl4health.clients.flash_client.FlashClient", false]], "flatten() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten", false]], "flclientlevelaccountantfixedsamplingnoreplacement (class in fl4health.privacy.fl_accountants)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement", false]], "flclientlevelaccountantpoissonsampling (class in fl4health.privacy.fl_accountants)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling", false]], "flinstancelevelaccountant (class in fl4health.privacy.fl_accountants)": [[117, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant", false]], "flserver (class in fl4health.servers.base_server)": [[129, "fl4health.servers.base_server.FlServer", false]], "flush() (streamtologger method)": [[169, "fl4health.utils.nnunet_utils.StreamToLogger.flush", false]], "fold_loss_dict_into_metrics() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.fold_loss_dict_into_metrics", false]], "form_and_solve_qp() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_and_solve_qp", false]], "form_h_u_delta_w_i() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_h_u_delta_w_i", false]], "form_kernel_samples_minus_expectation() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_kernel_samples_minus_expectation", false]], "forward() (abstractae method)": [[83, "fl4health.model_bases.autoencoders_base.AbstractAe.forward", false]], "forward() (apflmodule method)": [[82, "fl4health.model_bases.apfl_base.ApflModule.forward", false]], "forward() (basicae method)": [[83, "fl4health.model_bases.autoencoders_base.BasicAe.forward", false]], "forward() (bernoullisample static method)": [[162, "fl4health.utils.functions.BernoulliSample.forward", false]], "forward() (conditionalvae method)": [[83, "fl4health.model_bases.autoencoders_base.ConditionalVae.forward", false]], "forward() (cosinesimilarityloss method)": [[66, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.forward", false]], "forward() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.forward", false]], "forward() (ensemblemodel method)": [[84, "fl4health.model_bases.ensemble_base.EnsembleModel.forward", false]], "forward() (fedsimclrmodel method)": [[87, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.forward", false]], "forward() (fendamodelwithfeaturestate method)": [[88, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.forward", false]], "forward() (maskedconv1d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.forward", false]], "forward() (maskedconv2d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.forward", false]], "forward() (maskedconv3d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.forward", false]], "forward() (maskedconvtranspose1d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.forward", false]], "forward() (maskedconvtranspose2d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.forward", false]], "forward() (maskedconvtranspose3d method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.forward", false]], "forward() (maskedlayernorm method)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.forward", false]], "forward() (maskedlinear method)": [[92, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.forward", false]], "forward() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.forward", false]], "forward() (modellatentf method)": [[67, "fl4health.losses.deep_mmd_loss.ModelLatentF.forward", false]], "forward() (module2losswrapper method)": [[169, "fl4health.utils.nnunet_utils.Module2LossWrapper.forward", false]], "forward() (mooncontrastiveloss method)": [[65, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.forward", false]], "forward() (ntxentloss method)": [[65, "fl4health.losses.contrastive_loss.NtXentLoss.forward", false]], "forward() (parallelsplitheadmodule method)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.forward", false]], "forward() (parallelsplitmodel method)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.forward", false]], "forward() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.forward", false]], "forward() (perfclloss method)": [[70, "fl4health.losses.perfcl_loss.PerFclLoss.forward", false]], "forward() (perfclmodel method)": [[98, "fl4health.model_bases.perfcl_base.PerFclModel.forward", false]], "forward() (sequentiallysplitmodel method)": [[99, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.forward", false]], "forward() (vaeloss method)": [[113, "fl4health.preprocessing.autoencoders.loss.VaeLoss.forward", false]], "forward() (variationalae method)": [[83, "fl4health.model_bases.autoencoders_base.VariationalAe.forward", false]], "forward() (weightdriftloss method)": [[71, "fl4health.losses.weight_drift_loss.WeightDriftLoss.forward", false]], "forward_hook() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.forward_hook", false]], "freeze_base_module() (fedrepmodel method)": [[86, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_base_module", false]], "freeze_head_module() (fedrepmodel method)": [[86, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_head_module", false]], "from_json() (tabularfeature static method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.from_json", false]], "from_pretrained() (maskedconv1d class method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.from_pretrained", false]], "from_pretrained() (maskedconv2d class method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.from_pretrained", false]], "from_pretrained() (maskedconv3d class method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose1d class method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose2d class method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose3d class method)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.from_pretrained", false]], "from_pretrained() (maskedlayernorm class method)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.from_pretrained", false]], "from_pretrained() (maskedlinear class method)": [[92, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.from_pretrained", false]], "fullparameterexchanger (class in fl4health.parameter_exchange.full_exchanger)": [[102, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger", false]], "fullparameterexchangerwithpacking (class in fl4health.parameter_exchange.packing_exchanger)": [[104, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking", false]], "functiontorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer", false]], "gaussian_noisy_aggregate_clipping_bits() (in module fl4health.strategies.noisy_aggregate)": [[152, "fl4health.strategies.noisy_aggregate.gaussian_noisy_aggregate_clipping_bits", false]], "gaussian_noisy_unweighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[152, "fl4health.strategies.noisy_aggregate.gaussian_noisy_unweighted_aggregate", false]], "gaussian_noisy_weighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[152, "fl4health.strategies.noisy_aggregate.gaussian_noisy_weighted_aggregate", false]], "generate() (syntheticfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate", false]], "generate_client_tensors() (syntheticfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticiidfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticnoniidfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.generate_client_tensors", false]], "generate_hash() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.generate_hash", false]], "generate_hash() (in module fl4health.utils.random)": [[174, "fl4health.utils.random.generate_hash", false]], "generate_parameter_scores() (sparsecooparameterexchanger method)": [[109, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.generate_parameter_scores", false]], "get_all_model_parameters() (in module fl4health.utils.parameter_extraction)": [[170, "fl4health.utils.parameter_extraction.get_all_model_parameters", false]], "get_all_peft_parameters_from_model() (in module fl4health.utils.peft_parameter_extraction)": [[172, "fl4health.utils.peft_parameter_extraction.get_all_peft_parameters_from_model", false]], "get_best_vertex_for_objective_function() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.get_best_vertex_for_objective_function", false]], "get_cifar10_data_and_target_tensors() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.get_cifar10_data_and_target_tensors", false]], "get_client_specific_logs() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_client_specific_logs", false]], "get_client_specific_logs() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_logs", false]], "get_client_specific_reports() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_client_specific_reports", false]], "get_client_specific_reports() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_reports", false]], "get_condition_vector_size() (autoencoderdatasetconverter method)": [[160, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_condition_vector_size", false]], "get_criterion() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_criterion", false]], "get_criterion() (basicclientprotocolpresetup method)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.get_criterion", false]], "get_criterion() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_criterion", false]], "get_current_weight_step_size() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.get_current_weight_step_size", false]], "get_data_loader() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.get_data_loader", false]], "get_data_loaders() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_data_loaders", false]], "get_data_loaders() (basicclientprotocolpresetup method)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.get_data_loaders", false]], "get_data_loaders() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_loaders", false]], "get_data_loaders() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_data_loaders", false]], "get_data_tensor() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_tensor", false]], "get_dataset_n_voxels() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.get_dataset_n_voxels", false]], "get_default_fill_value() (tabulartype static method)": [[63, "fl4health.feature_alignment.tabular_type.TabularType.get_default_fill_value", false]], "get_delta() (clientlevelaccountant method)": [[117, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_delta", false]], "get_delta() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_delta", false]], "get_delta() (flclientlevelaccountantpoissonsampling method)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_delta", false]], "get_delta() (flinstancelevelaccountant method)": [[117, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_delta", false]], "get_delta() (momentsaccountant method)": [[118, "fl4health.privacy.moments_accountant.MomentsAccountant.get_delta", false]], "get_dp_event() (fixedsamplingwithoutreplacement method)": [[118, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.get_dp_event", false]], "get_dp_event() (poissonsampling method)": [[118, "fl4health.privacy.moments_accountant.PoissonSampling.get_dp_event", false]], "get_dp_event() (samplingstrategy method)": [[118, "fl4health.privacy.moments_accountant.SamplingStrategy.get_dp_event", false]], "get_epsilon() (clientlevelaccountant method)": [[117, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantpoissonsampling method)": [[117, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_epsilon", false]], "get_epsilon() (flinstancelevelaccountant method)": [[117, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_epsilon", false]], "get_epsilon() (momentsaccountant method)": [[118, "fl4health.privacy.moments_accountant.MomentsAccountant.get_epsilon", false]], "get_extracted_features() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_extracted_features", false]], "get_feature_name() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_name", false]], "get_feature_type() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_type", false]], "get_fill_value() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_fill_value", false]], "get_global_model() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.get_global_model", false]], "get_global_model() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_global_model", false]], "get_hierarchical_attr() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_hierarchical_attr", false]], "get_input_output_tensors() (syntheticiidfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.get_input_output_tensors", false]], "get_input_output_tensors() (syntheticnoniidfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.get_input_output_tensors", false]], "get_layers_to_transfer() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.get_layers_to_transfer", false]], "get_local_model() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.get_local_model", false]], "get_lr() (polylrschedulerwrapper method)": [[169, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.get_lr", false]], "get_lr_scheduler() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_lr_scheduler", false]], "get_lr_scheduler() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_lr_scheduler", false]], "get_matching_component() (warmedupmodule method)": [[115, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.get_matching_component", false]], "get_metadata() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata", false]], "get_metadata_dimension() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata_dimension", false]], "get_mnist_data_and_target_tensors() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.get_mnist_data_and_target_tensors", false]], "get_model() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_model", false]], "get_model() (basicclientprotocolpresetup method)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.get_model", false]], "get_model() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.get_model", false]], "get_model() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_model", false]], "get_model() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.get_model", false]], "get_model() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_model", false]], "get_msd_dataset_enum() (in module fl4health.utils.msd_dataset_sources)": [[168, "fl4health.utils.msd_dataset_sources.get_msd_dataset_enum", false]], "get_optimizer() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.get_optimizer", false]], "get_optimizer() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_optimizer", false]], "get_optimizer() (basicclientprotocolpresetup method)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.get_optimizer", false]], "get_optimizer() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.get_optimizer", false]], "get_optimizer() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.get_optimizer", false]], "get_optimizer() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.get_optimizer", false]], "get_optimizer() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_optimizer", false]], "get_parameter_exchanger() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false]], "get_parameter_exchanger() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedperclient method)": [[32, "fl4health.clients.fedper_client.FedPerClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedpmclient method)": [[33, "fl4health.clients.fedpm_client.FedPmClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fendaclient method)": [[35, "fl4health.clients.fenda_client.FendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (partialweightexchangeclient method)": [[46, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameter_exchanger", false]], "get_parameters() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameters", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameters", false]], "get_parameters() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameters", false]], "get_parameters() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_parameters", false]], "get_parameters() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.get_parameters", false]], "get_parameters() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.get_parameters", false]], "get_parameters() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.get_parameters", false]], "get_parameters() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_parameters", false]], "get_parameters() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameters", false]], "get_parameters() (numpyclientminimalprotocol method)": [[80, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.get_parameters", false]], "get_parameters() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameters", false]], "get_parameters() (partialweightexchangeclient method)": [[46, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameters", false]], "get_parameters() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameters", false]], "get_properties() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_properties", false]], "get_properties() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.get_properties", false]], "get_segs_from_probs() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.get_segs_from_probs", false]], "get_test_data_loader() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.get_test_data_loader", false]], "get_test_data_loader() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.get_test_data_loader", false]], "get_train_and_val_cifar10_datasets() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.get_train_and_val_cifar10_datasets", false]], "get_train_and_val_mnist_datasets() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.get_train_and_val_mnist_datasets", false]], "get_unpacking_function() (autoencoderdatasetconverter method)": [[160, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_unpacking_function", false]], "global_forward() (apflmodule method)": [[82, "fl4health.model_bases.apfl_base.ApflModule.global_forward", false]], "h1_mean_var_gram() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.h1_mean_var_gram", false]], "ham_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.ham_image_path_func", false]], "ham_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.ham_label_map_func", false]], "has_contrastive_loss() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_contrastive_loss", false]], "has_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_cosine_similarity_loss", false]], "has_perfcl_loss() (constrainedfendalosscontainer method)": [[68, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_perfcl_loss", false]], "head (fedreptrainmode attribute)": [[34, "fl4health.clients.fedrep_client.FedRepTrainMode.HEAD", false]], "head_forward() (parallelsplitheadmodule method)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.head_forward", false]], "info (loglevel attribute)": [[177, "fl4health.utils.typing.LogLevel.INFO", false]], "initialize() (basereporter method)": [[120, "fl4health.reporting.base_reporter.BaseReporter.initialize", false]], "initialize() (filereporter method)": [[121, "fl4health.reporting.json_reporter.FileReporter.initialize", false]], "initialize() (reportsmanager method)": [[122, "fl4health.reporting.reports_manager.ReportsManager.initialize", false]], "initialize() (wandbreporter method)": [[119, "fl4health.reporting.WandBReporter.initialize", false], [123, "fl4health.reporting.wandb_reporter.WandBReporter.initialize", false]], "initialize_all_model_weights() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.initialize_all_model_weights", false]], "initialize_control_variates() (scaffold method)": [[153, "fl4health.strategies.scaffold.Scaffold.initialize_control_variates", false]], "initialize_global_model() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.initialize_global_model", false]], "initialize_parameters() (modelmergestrategy method)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.initialize_parameters", false]], "initialize_server_model() (nnunetserver method)": [[135, "fl4health.servers.nnunet_server.NnunetServer.initialize_server_model", false]], "initialized (basicclientprotocolpresetup attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.initialized", false]], "instanceleveldpclient (class in fl4health.clients.instance_level_dp_client)": [[38, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient", false]], "instanceleveldpserver (class in fl4health.servers.instance_level_dp_server)": [[133, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer", false]], "invalidconfigerror": [[157, "fl4health.utils.config.InvalidConfigError", false]], "is_masked_module() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[91, "fl4health.model_bases.masked_layers.masked_layers_utils.is_masked_module", false]], "is_start_of_local_training() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.is_start_of_local_training", false]], "jsonreporter (class in fl4health.reporting)": [[119, "fl4health.reporting.JsonReporter", false]], "jsonreporter (class in fl4health.reporting.json_reporter)": [[121, "fl4health.reporting.json_reporter.JsonReporter", false]], "label_frequency() (in module fl4health.datasets.rxrx1.load_data)": [[52, "fl4health.datasets.rxrx1.load_data.label_frequency", false]], "labelbasedsampler (class in fl4health.utils.sampler)": [[175, "fl4health.utils.sampler.LabelBasedSampler", false]], "largest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.largest_final_magnitude_scores", false]], "largest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.largest_increase_in_magnitude_scores", false]], "largest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.largest_magnitude_change_scores", false]], "latestopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer", false]], "latesttorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer", false]], "layerexchangerwithexclusions (class in fl4health.parameter_exchange.layer_exchanger)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions", false]], "layernamesservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule", false]], "layers_to_exchange() (apflmodule method)": [[82, "fl4health.model_bases.apfl_base.ApflModule.layers_to_exchange", false]], "layers_to_exchange() (fendamodel method)": [[88, "fl4health.model_bases.fenda_base.FendaModel.layers_to_exchange", false]], "layers_to_exchange() (partiallayerexchangemodel method)": [[96, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel.layers_to_exchange", false]], "layers_to_exchange() (perfclmodel method)": [[98, "fl4health.model_bases.perfcl_base.PerFclModel.layers_to_exchange", false]], "layers_to_exchange() (sequentiallysplitexchangebasemodel method)": [[99, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel.layers_to_exchange", false]], "layerselectionfunctionconstructor (class in fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor", false]], "load() (abstractsnapshotter method)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter.load", false]], "load_attribute() (abstractsnapshotter method)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter.load_attribute", false]], "load_attribute() (lrschedulersnapshotter method)": [[176, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.load_attribute", false]], "load_attribute() (numbersnapshotter method)": [[176, "fl4health.utils.snapshotter.NumberSnapshotter.load_attribute", false]], "load_attribute() (optimizersnapshotter method)": [[176, "fl4health.utils.snapshotter.OptimizerSnapshotter.load_attribute", false]], "load_attribute() (serializableobjectsnapshotter method)": [[176, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.load_attribute", false]], "load_attribute() (torchmodulesnapshotter method)": [[176, "fl4health.utils.snapshotter.TorchModuleSnapshotter.load_attribute", false]], "load_autoencoder() (autoencoderprocessing method)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.load_autoencoder", false]], "load_best_checkpoint_into_model() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_best_checkpoint_into_model", false]], "load_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_checkpoint", false]], "load_checkpoint() (perroundstatecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.load_checkpoint", false]], "load_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.load_checkpoint", false]], "load_cifar10_data() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.load_cifar10_data", false]], "load_cifar10_test_data() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.load_cifar10_test_data", false]], "load_config() (in module fl4health.utils.config)": [[157, "fl4health.utils.config.load_config", false]], "load_from_pretrained() (warmedupmodule method)": [[115, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.load_from_pretrained", false]], "load_image() (in module fl4health.datasets.rxrx1.preprocess)": [[53, "fl4health.datasets.rxrx1.preprocess.load_image", false]], "load_image() (in module fl4health.datasets.skin_cancer.load_data)": [[55, "fl4health.datasets.skin_cancer.load_data.load_image", false]], "load_mnist_data() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.load_mnist_data", false]], "load_mnist_test_data() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.load_mnist_test_data", false]], "load_model_checkpoint_to_parameters() (evaluateserver method)": [[131, "fl4health.servers.evaluate_server.EvaluateServer.load_model_checkpoint_to_parameters", false]], "load_msd_dataset() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.load_msd_dataset", false]], "load_pca_module() (pcapreprocessor method)": [[114, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.load_pca_module", false]], "load_pretrained_model() (fedsimclrmodel static method)": [[87, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.load_pretrained_model", false]], "load_rxrx1_data() (in module fl4health.datasets.rxrx1.load_data)": [[52, "fl4health.datasets.rxrx1.load_data.load_rxrx1_data", false]], "load_rxrx1_test_data() (in module fl4health.datasets.rxrx1.load_data)": [[52, "fl4health.datasets.rxrx1.load_data.load_rxrx1_test_data", false]], "load_skin_cancer_data() (in module fl4health.datasets.skin_cancer.load_data)": [[55, "fl4health.datasets.skin_cancer.load_data.load_skin_cancer_data", false]], "load_snapshot() (earlystopper method)": [[161, "fl4health.utils.early_stopper.EarlyStopper.load_snapshot", false]], "local_forward() (apflmodule method)": [[82, "fl4health.model_bases.apfl_base.ApflModule.local_forward", false]], "loggingmode (class in fl4health.utils.logging)": [[164, "fl4health.utils.logging.LoggingMode", false]], "loglevel (class in fl4health.utils.typing)": [[177, "fl4health.utils.typing.LogLevel", false]], "loss (fairnessmetrictype attribute)": [[146, "fl4health.strategies.feddg_ga.FairnessMetricType.LOSS", false]], "loss_for_adaptation (adaptivedriftconstrainedprotocol attribute)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.loss_for_adaptation", false]], "losses (class in fl4health.utils.losses)": [[165, "fl4health.utils.losses.Losses", false]], "lossmeter (class in fl4health.utils.losses)": [[165, "fl4health.utils.losses.LossMeter", false]], "lossmetertype (class in fl4health.utils.losses)": [[165, "fl4health.utils.losses.LossMeterType", false]], "lrschedulersnapshotter (class in fl4health.utils.snapshotter)": [[176, "fl4health.utils.snapshotter.LRSchedulerSnapshotter", false]], "main() (in module fl4health.datasets.rxrx1.preprocess)": [[53, "fl4health.datasets.rxrx1.preprocess.main", false]], "make_dict_with_epochs_or_steps() (in module fl4health.utils.config)": [[157, "fl4health.utils.config.make_dict_with_epochs_or_steps", false]], "map_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[173, "fl4health.utils.privacy_utilities.map_model_to_opacus_model", false]], "mask_data() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.mask_data", false]], "maskedbatchnorm1d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm1d", false]], "maskedbatchnorm2d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm2d", false]], "maskedbatchnorm3d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm3d", false]], "maskedconv1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d", false]], "maskedconv2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d", false]], "maskedconv3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d", false]], "maskedconvtranspose1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d", false]], "maskedconvtranspose2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d", false]], "maskedconvtranspose3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[90, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d", false]], "maskedlayernorm (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[93, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm", false]], "maskedlinear (class in fl4health.model_bases.masked_layers.masked_linear)": [[92, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear", false]], "maybe_checkpoint() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_extract_fingerprint() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.maybe_extract_fingerprint", false]], "maybe_load_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_load_state", false]], "maybe_load_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_load_state", false]], "maybe_preprocess() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.maybe_preprocess", false]], "maybe_progress_bar() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.maybe_progress_bar", false]], "maybe_reshape() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.maybe_reshape", false]], "merge_metrics() (evaluateclient static method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.merge_metrics", false]], "merge_subspaces_qr() (fedpca method)": [[148, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_qr", false]], "merge_subspaces_svd() (fedpca method)": [[148, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_svd", false]], "merge_two_subspaces_qr() (fedpca method)": [[148, "fl4health.strategies.fedpca.FedPCA.merge_two_subspaces_qr", false]], "metric (class in fl4health.metrics.base_metrics)": [[73, "fl4health.metrics.base_metrics.Metric", false]], "metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.metric_aggregation", false]], "metricmanager (class in fl4health.metrics.metric_managers)": [[76, "fl4health.metrics.metric_managers.MetricManager", false]], "metricprefix (class in fl4health.metrics.base_metrics)": [[73, "fl4health.metrics.base_metrics.MetricPrefix", false]], "minoritylabelbasedsampler (class in fl4health.utils.sampler)": [[175, "fl4health.utils.sampler.MinorityLabelBasedSampler", false]], "mkmmdloss (class in fl4health.losses.mkmmd_loss)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss", false]], "mmdu() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.MMDu", false]], "model (basicclientprotocol attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocol.model", false]], "modellatentf (class in fl4health.losses.deep_mmd_loss)": [[67, "fl4health.losses.deep_mmd_loss.ModelLatentF", false]], "modelmergeclient (class in fl4health.clients.model_merge_client)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient", false]], "modelmergeserver (class in fl4health.servers.model_merge_server)": [[134, "fl4health.servers.model_merge_server.ModelMergeServer", false]], "modelmergestrategy (class in fl4health.strategies.model_merge_strategy)": [[151, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy", false]], "modify_grad() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.modify_grad", false]], "modify_noise_multiplier() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.modify_noise_multiplier", false]], "module": [[8, "module-fl4health", false], [9, "module-fl4health.checkpointing", false], [10, "module-fl4health.checkpointing.checkpointer", false], [11, "module-fl4health.checkpointing.client_module", false], [12, "module-fl4health.checkpointing.opacus_checkpointer", false], [13, "module-fl4health.checkpointing.server_module", false], [14, "module-fl4health.client_managers", false], [15, "module-fl4health.client_managers.base_sampling_manager", false], [16, "module-fl4health.client_managers.fixed_sampling_client_manager", false], [17, "module-fl4health.client_managers.fixed_without_replacement_manager", false], [18, "module-fl4health.client_managers.poisson_sampling_manager", false], [19, "module-fl4health.clients", false], [20, "module-fl4health.clients.adaptive_drift_constraint_client", false], [21, "module-fl4health.clients.apfl_client", false], [22, "module-fl4health.clients.basic_client", false], [23, "module-fl4health.clients.clipping_client", false], [24, "module-fl4health.clients.constrained_fenda_client", false], [25, "module-fl4health.clients.deep_mmd_clients", false], [26, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false], [27, "module-fl4health.clients.ditto_client", false], [28, "module-fl4health.clients.ensemble_client", false], [29, "module-fl4health.clients.evaluate_client", false], [30, "module-fl4health.clients.fed_pca_client", false], [31, "module-fl4health.clients.fed_prox_client", false], [32, "module-fl4health.clients.fedper_client", false], [33, "module-fl4health.clients.fedpm_client", false], [34, "module-fl4health.clients.fedrep_client", false], [35, "module-fl4health.clients.fenda_client", false], [36, "module-fl4health.clients.fenda_ditto_client", false], [37, "module-fl4health.clients.flash_client", false], [38, "module-fl4health.clients.instance_level_dp_client", false], [39, "module-fl4health.clients.mkmmd_clients", false], [40, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false], [41, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false], [42, "module-fl4health.clients.model_merge_client", false], [43, "module-fl4health.clients.moon_client", false], [44, "module-fl4health.clients.mr_mtl_client", false], [45, "module-fl4health.clients.nnunet_client", false], [46, "module-fl4health.clients.partial_weight_exchange_client", false], [47, "module-fl4health.clients.perfcl_client", false], [48, "module-fl4health.clients.scaffold_client", false], [50, "module-fl4health.datasets", false], [51, "module-fl4health.datasets.rxrx1", false], [52, "module-fl4health.datasets.rxrx1.load_data", false], [53, "module-fl4health.datasets.rxrx1.preprocess", false], [54, "module-fl4health.datasets.skin_cancer", false], [55, "module-fl4health.datasets.skin_cancer.load_data", false], [56, "module-fl4health.datasets.skin_cancer.preprocess_skin", false], [57, "module-fl4health.feature_alignment", false], [58, "module-fl4health.feature_alignment.constants", false], [59, "module-fl4health.feature_alignment.string_columns_transformer", false], [62, "module-fl4health.feature_alignment.tabular_feature", false], [63, "module-fl4health.feature_alignment.tabular_type", false], [64, "module-fl4health.losses", false], [65, "module-fl4health.losses.contrastive_loss", false], [66, "module-fl4health.losses.cosine_similarity_loss", false], [67, "module-fl4health.losses.deep_mmd_loss", false], [68, "module-fl4health.losses.fenda_loss_config", false], [69, "module-fl4health.losses.mkmmd_loss", false], [70, "module-fl4health.losses.perfcl_loss", false], [71, "module-fl4health.losses.weight_drift_loss", false], [72, "module-fl4health.metrics", false], [73, "module-fl4health.metrics.base_metrics", false], [74, "module-fl4health.metrics.compound_metrics", false], [75, "module-fl4health.metrics.metric_aggregation", false], [76, "module-fl4health.metrics.metric_managers", false], [77, "module-fl4health.metrics.metrics", false], [78, "module-fl4health.mixins", false], [79, "module-fl4health.mixins.adaptive_drift_constrained", false], [80, "module-fl4health.mixins.core_protocols", false], [81, "module-fl4health.model_bases", false], [82, "module-fl4health.model_bases.apfl_base", false], [83, "module-fl4health.model_bases.autoencoders_base", false], [84, "module-fl4health.model_bases.ensemble_base", false], [85, "module-fl4health.model_bases.feature_extractor_buffer", false], [86, "module-fl4health.model_bases.fedrep_base", false], [87, "module-fl4health.model_bases.fedsimclr_base", false], [88, "module-fl4health.model_bases.fenda_base", false], [89, "module-fl4health.model_bases.masked_layers", false], [90, "module-fl4health.model_bases.masked_layers.masked_conv", false], [91, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false], [92, "module-fl4health.model_bases.masked_layers.masked_linear", false], [93, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false], [94, "module-fl4health.model_bases.moon_base", false], [95, "module-fl4health.model_bases.parallel_split_models", false], [96, "module-fl4health.model_bases.partial_layer_exchange_model", false], [97, "module-fl4health.model_bases.pca", false], [98, "module-fl4health.model_bases.perfcl_base", false], [99, "module-fl4health.model_bases.sequential_split_models", false], [100, "module-fl4health.parameter_exchange", false], [101, "module-fl4health.parameter_exchange.fedpm_exchanger", false], [102, "module-fl4health.parameter_exchange.full_exchanger", false], [103, "module-fl4health.parameter_exchange.layer_exchanger", false], [104, "module-fl4health.parameter_exchange.packing_exchanger", false], [105, "module-fl4health.parameter_exchange.parameter_exchanger_base", false], [106, "module-fl4health.parameter_exchange.parameter_packer", false], [107, "module-fl4health.parameter_exchange.parameter_selection_criteria", false], [108, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false], [109, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false], [110, "module-fl4health.preprocessing", false], [111, "module-fl4health.preprocessing.autoencoders", false], [112, "module-fl4health.preprocessing.autoencoders.dim_reduction", false], [113, "module-fl4health.preprocessing.autoencoders.loss", false], [114, "module-fl4health.preprocessing.pca_preprocessor", false], [115, "module-fl4health.preprocessing.warmed_up_module", false], [116, "module-fl4health.privacy", false], [117, "module-fl4health.privacy.fl_accountants", false], [118, "module-fl4health.privacy.moments_accountant", false], [119, "module-fl4health.reporting", false], [120, "module-fl4health.reporting.base_reporter", false], [121, "module-fl4health.reporting.json_reporter", false], [122, "module-fl4health.reporting.reports_manager", false], [123, "module-fl4health.reporting.wandb_reporter", false], [124, "module-fl4health.servers", false], [125, "module-fl4health.servers.adaptive_constraint_servers", false], [126, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false], [127, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false], [128, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false], [129, "module-fl4health.servers.base_server", false], [130, "module-fl4health.servers.client_level_dp_fed_avg_server", false], [131, "module-fl4health.servers.evaluate_server", false], [132, "module-fl4health.servers.fedpm_server", false], [133, "module-fl4health.servers.instance_level_dp_server", false], [134, "module-fl4health.servers.model_merge_server", false], [135, "module-fl4health.servers.nnunet_server", false], [136, "module-fl4health.servers.polling", false], [137, "module-fl4health.servers.scaffold_server", false], [139, "module-fl4health.strategies", false], [140, "module-fl4health.strategies.aggregate_utils", false], [141, "module-fl4health.strategies.basic_fedavg", false], [142, "module-fl4health.strategies.client_dp_fedavgm", false], [143, "module-fl4health.strategies.fedavg_dynamic_layer", false], [144, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false], [145, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false], [146, "module-fl4health.strategies.feddg_ga", false], [147, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false], [148, "module-fl4health.strategies.fedpca", false], [149, "module-fl4health.strategies.fedpm", false], [150, "module-fl4health.strategies.flash", false], [151, "module-fl4health.strategies.model_merge_strategy", false], [152, "module-fl4health.strategies.noisy_aggregate", false], [153, "module-fl4health.strategies.scaffold", false], [154, "module-fl4health.strategies.strategy_with_poll", false], [155, "module-fl4health.utils", false], [156, "module-fl4health.utils.client", false], [157, "module-fl4health.utils.config", false], [158, "module-fl4health.utils.data_generation", false], [159, "module-fl4health.utils.dataset", false], [160, "module-fl4health.utils.dataset_converter", false], [161, "module-fl4health.utils.early_stopper", false], [162, "module-fl4health.utils.functions", false], [163, "module-fl4health.utils.load_data", false], [164, "module-fl4health.utils.logging", false], [165, "module-fl4health.utils.losses", false], [167, "module-fl4health.utils.metrics", false], [168, "module-fl4health.utils.msd_dataset_sources", false], [169, "module-fl4health.utils.nnunet_utils", false], [170, "module-fl4health.utils.parameter_extraction", false], [171, "module-fl4health.utils.partitioners", false], [172, "module-fl4health.utils.peft_parameter_extraction", false], [173, "module-fl4health.utils.privacy_utilities", false], [174, "module-fl4health.utils.random", false], [175, "module-fl4health.utils.sampler", false], [176, "module-fl4health.utils.snapshotter", false], [177, "module-fl4health.utils.typing", false]], "module2losswrapper (class in fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.Module2LossWrapper", false]], "momentsaccountant (class in fl4health.privacy.moments_accountant)": [[118, "fl4health.privacy.moments_accountant.MomentsAccountant", false]], "moonclient (class in fl4health.clients.moon_client)": [[43, "fl4health.clients.moon_client.MoonClient", false]], "mooncontrastiveloss (class in fl4health.losses.contrastive_loss)": [[65, "fl4health.losses.contrastive_loss.MoonContrastiveLoss", false]], "mooncontrastivelosscontainer (class in fl4health.losses.fenda_loss_config)": [[68, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer", false]], "moonmodel (class in fl4health.model_bases.moon_base)": [[94, "fl4health.model_bases.moon_base.MoonModel", false]], "move_data_to_device() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.move_data_to_device", false]], "mrmtlclient (class in fl4health.clients.mr_mtl_client)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient", false]], "mrmtlmkmmdclient (class in fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient", false]], "mrmtlserver (class in fl4health.servers.adaptive_constraint_servers.mrmtl_server)": [[128, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer", false]], "msddataset (class in fl4health.utils.msd_dataset_sources)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset", false]], "narrow_dict_type() (in module fl4health.utils.config)": [[157, "fl4health.utils.config.narrow_dict_type", false]], "narrow_dict_type_and_set_attribute() (in module fl4health.utils.config)": [[157, "fl4health.utils.config.narrow_dict_type_and_set_attribute", false]], "nnunetclient (class in fl4health.clients.nnunet_client)": [[45, "fl4health.clients.nnunet_client.NnunetClient", false]], "nnunetconfig (class in fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.NnunetConfig", false]], "nnunetdataloaderwrapper (class in fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper", false]], "nnunetserver (class in fl4health.servers.nnunet_server)": [[135, "fl4health.servers.nnunet_server.NnunetServer", false]], "nnunetservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule", false]], "normalize() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.normalize", false]], "normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.normalize_metrics", false]], "notset (loglevel attribute)": [[177, "fl4health.utils.typing.LogLevel.NOTSET", false]], "ntxentloss (class in fl4health.losses.contrastive_loss)": [[65, "fl4health.losses.contrastive_loss.NtXentLoss", false]], "numbersnapshotter (class in fl4health.utils.snapshotter)": [[176, "fl4health.utils.snapshotter.NumberSnapshotter", false]], "numeric (tabulartype attribute)": [[63, "fl4health.feature_alignment.tabular_type.TabularType.NUMERIC", false]], "numpyclientminimalprotocol (class in fl4health.mixins.core_protocols)": [[80, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol", false]], "numpyclippingclient (class in fl4health.clients.clipping_client)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient", false]], "one_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset.one_layer_map_inputs_to_outputs", false]], "opacusbasicfedavg (class in fl4health.strategies.basic_fedavg)": [[141, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg", false]], "opacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer", false]], "opacusscaffold (class in fl4health.strategies.scaffold)": [[153, "fl4health.strategies.scaffold.OpacusScaffold", false]], "opacusservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule", false]], "optimize_betas() (mkmmdloss method)": [[69, "fl4health.losses.mkmmd_loss.MkMmdLoss.optimize_betas", false]], "optimizers (basicclientprotocol attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocol.optimizers", false]], "optimizersnapshotter (class in fl4health.utils.snapshotter)": [[176, "fl4health.utils.snapshotter.OptimizerSnapshotter", false]], "ordinal (tabulartype attribute)": [[63, "fl4health.feature_alignment.tabular_type.TabularType.ORDINAL", false]], "pack_parameters() (fullparameterexchangerwithpacking method)": [[104, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.pack_parameters", false]], "pack_parameters() (parameterpacker method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.pack_parameters", false]], "pack_parameters() (parameterpackeradaptiveconstraint method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.pack_parameters", false]], "pack_parameters() (parameterpackerwithclippingbit method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.pack_parameters", false]], "pack_parameters() (parameterpackerwithcontrolvariates method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.pack_parameters", false]], "pack_parameters() (parameterpackerwithlayernames method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.pack_parameters", false]], "pack_parameters() (partialparameterexchanger method)": [[108, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.pack_parameters", false]], "pack_parameters() (sparsecooparameterpacker method)": [[106, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.pack_parameters", false]], "packingservercheckpointandandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule", false]], "pad_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.pad_image_path_func", false]], "pad_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.pad_label_map_func", false]], "pairwise_distance_squared() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.pairwise_distance_squared", false]], "parallel_output_join() (parallelsplitheadmodule method)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.parallel_output_join", false]], "parallelfeaturejoinmode (class in fl4health.model_bases.parallel_split_models)": [[95, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode", false]], "parallelsplitheadmodule (class in fl4health.model_bases.parallel_split_models)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule", false]], "parallelsplitmodel (class in fl4health.model_bases.parallel_split_models)": [[95, "fl4health.model_bases.parallel_split_models.ParallelSplitModel", false]], "parameter_exchanger (adaptivedriftconstrainedprotocol attribute)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.parameter_exchanger", false]], "parameterexchanger (class in fl4health.parameter_exchange.parameter_exchanger_base)": [[105, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger", false]], "parameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPacker", false]], "parameterpackeradaptiveconstraint (class in fl4health.parameter_exchange.parameter_packer)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint", false]], "parameterpackerwithclippingbit (class in fl4health.parameter_exchange.parameter_packer)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit", false]], "parameterpackerwithcontrolvariates (class in fl4health.parameter_exchange.parameter_packer)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates", false]], "parameterpackerwithlayernames (class in fl4health.parameter_exchange.parameter_packer)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames", false]], "partiallayerexchangemodel (class in fl4health.model_bases.partial_layer_exchange_model)": [[96, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel", false]], "partialparameterexchanger (class in fl4health.parameter_exchange.partial_parameter_exchanger)": [[108, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger", false]], "partialweightexchangeclient (class in fl4health.clients.partial_weight_exchange_client)": [[46, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient", false]], "partition_dataset() (dirichletlabelbasedallocation method)": [[171, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_dataset", false]], "partition_label_indices() (dirichletlabelbasedallocation method)": [[171, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_label_indices", false]], "pcamodule (class in fl4health.model_bases.pca)": [[97, "fl4health.model_bases.pca.PcaModule", false]], "pcapreprocessor (class in fl4health.preprocessing.pca_preprocessor)": [[114, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor", false]], "penalty_loss_function (adaptivedriftconstrainedprotocol attribute)": [[79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.penalty_loss_function", false]], "perfclclient (class in fl4health.clients.perfcl_client)": [[47, "fl4health.clients.perfcl_client.PerFclClient", false]], "perfclloss (class in fl4health.losses.perfcl_loss)": [[70, "fl4health.losses.perfcl_loss.PerFclLoss", false]], "perfcllosscontainer (class in fl4health.losses.fenda_loss_config)": [[68, "fl4health.losses.fenda_loss_config.PerFclLossContainer", false]], "perfclmodel (class in fl4health.model_bases.perfcl_base)": [[98, "fl4health.model_bases.perfcl_base.PerFclModel", false]], "perroundstatecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer", false]], "poissonsampling (class in fl4health.privacy.moments_accountant)": [[118, "fl4health.privacy.moments_accountant.PoissonSampling", false]], "poissonsamplingclientmanager (class in fl4health.client_managers.poisson_sampling_manager)": [[18, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager", false]], "poll_client() (in module fl4health.servers.polling)": [[136, "fl4health.servers.polling.poll_client", false]], "poll_clients() (in module fl4health.servers.polling)": [[136, "fl4health.servers.polling.poll_clients", false]], "poll_clients_for_sample_counts() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.poll_clients_for_sample_counts", false]], "polylrschedulerwrapper (class in fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper", false]], "post_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.POST_AGGREGATION", false]], "pre_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.PRE_AGGREGATION", false]], "predict() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.predict", false]], "predict() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.predict", false]], "predict() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.predict", false]], "predict() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.predict", false]], "predict() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.predict", false]], "predict() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.predict", false]], "predict() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.predict", false]], "predict() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.predict", false]], "predict() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.predict", false]], "predict() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.predict", false]], "prepare_data_forward() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.prepare_data_forward", false]], "prepare_loss_arg() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.prepare_loss_arg", false]], "preprocess_derm7pt() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_derm7pt", false]], "preprocess_ham10000() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_ham10000", false]], "preprocess_isic_2019() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_isic_2019", false]], "preprocess_pad_ufes_20() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_pad_ufes_20", false]], "privacy_validate_and_fix_modules() (in module fl4health.utils.privacy_utilities)": [[173, "fl4health.utils.privacy_utilities.privacy_validate_and_fix_modules", false]], "process_and_check_validation_steps() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.process_and_check_validation_steps", false]], "process_client_data() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.process_client_data", false]], "process_config() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.process_config", false]], "process_config() (flashclient method)": [[37, "fl4health.clients.flash_client.FlashClient.process_config", false]], "process_data() (in module fl4health.datasets.rxrx1.preprocess)": [[53, "fl4health.datasets.rxrx1.preprocess.process_data", false]], "process_fed_rep_config() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.process_fed_rep_config", false]], "project_back() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.project_back", false]], "project_lower_dim() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.project_lower_dim", false]], "pseudo_sort_scoring_function() (in module fl4health.utils.functions)": [[162, "fl4health.utils.functions.pseudo_sort_scoring_function", false]], "pull_parameters() (dynamiclayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.pull_parameters", false]], "pull_parameters() (fedpmexchanger method)": [[101, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.pull_parameters", false]], "pull_parameters() (fixedlayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.pull_parameters", false]], "pull_parameters() (fullparameterexchanger method)": [[102, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.pull_parameters", false]], "pull_parameters() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.pull_parameters", false]], "pull_parameters() (parameterexchanger method)": [[105, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.pull_parameters", false]], "pull_parameters() (sparsecooparameterexchanger method)": [[109, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.pull_parameters", false]], "push_parameters() (dynamiclayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.push_parameters", false]], "push_parameters() (fixedlayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.push_parameters", false]], "push_parameters() (fullparameterexchanger method)": [[102, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.push_parameters", false]], "push_parameters() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.push_parameters", false]], "push_parameters() (parameterexchanger method)": [[105, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.push_parameters", false]], "push_parameters() (sparsecooparameterexchanger method)": [[109, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.push_parameters", false]], "reduce_dimension() (pcapreprocessor method)": [[114, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.reduce_dimension", false]], "reload_modules() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.reload_modules", false]], "remove_hooks() (featureextractorbuffer method)": [[85, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.remove_hooks", false]], "report() (basereporter method)": [[120, "fl4health.reporting.base_reporter.BaseReporter.report", false]], "report() (filereporter method)": [[121, "fl4health.reporting.json_reporter.FileReporter.report", false]], "report() (reportsmanager method)": [[122, "fl4health.reporting.reports_manager.ReportsManager.report", false]], "report() (wandbreporter method)": [[119, "fl4health.reporting.WandBReporter.report", false], [123, "fl4health.reporting.wandb_reporter.WandBReporter.report", false]], "report_centralized_eval() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.report_centralized_eval", false]], "reportsmanager (class in fl4health.reporting.reports_manager)": [[122, "fl4health.reporting.reports_manager.ReportsManager", false]], "representation (fedreptrainmode attribute)": [[34, "fl4health.clients.fedrep_client.FedRepTrainMode.REPRESENTATION", false]], "reset() (metricmanager method)": [[76, "fl4health.metrics.metric_managers.MetricManager.reset", false]], "reset() (nnunetdataloaderwrapper method)": [[169, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper.reset", false]], "reset_beta_priors() (fedpm method)": [[149, "fl4health.strategies.fedpm.FedPm.reset_beta_priors", false]], "reset_sample() (fixedsamplingclientmanager method)": [[16, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.reset_sample", false]], "restore_random_state() (in module fl4health.utils.random)": [[174, "fl4health.utils.random.restore_random_state", false]], "roc_auc (class in fl4health.metrics)": [[72, "fl4health.metrics.ROC_AUC", false]], "roc_auc (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.ROC_AUC", false]], "round (wandbsteptype attribute)": [[119, "fl4health.reporting.WandBStepType.ROUND", false], [123, "fl4health.reporting.wandb_reporter.WandBStepType.ROUND", false]], "sample() (basefractionsamplingmanager method)": [[15, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample", false]], "sample() (fixedsamplingclientmanager method)": [[16, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.sample", false]], "sample_all() (basefractionsamplingmanager method)": [[15, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_all", false]], "sample_fraction() (basefractionsamplingmanager method)": [[15, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_fraction", false]], "sample_fraction() (fixedsamplingbyfractionclientmanager method)": [[17, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager.sample_fraction", false]], "sample_fraction() (poissonsamplingclientmanager method)": [[18, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager.sample_fraction", false]], "sampling() (conditionalvae method)": [[83, "fl4health.model_bases.autoencoders_base.ConditionalVae.sampling", false]], "sampling() (variationalae method)": [[83, "fl4health.model_bases.autoencoders_base.VariationalAe.sampling", false]], "samplingstrategy (class in fl4health.privacy.moments_accountant)": [[118, "fl4health.privacy.moments_accountant.SamplingStrategy", false]], "save() (abstractsnapshotter method)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter.save", false]], "save_attribute() (abstractsnapshotter method)": [[176, "fl4health.utils.snapshotter.AbstractSnapshotter.save_attribute", false]], "save_attribute() (lrschedulersnapshotter method)": [[176, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.save_attribute", false]], "save_attribute() (numbersnapshotter method)": [[176, "fl4health.utils.snapshotter.NumberSnapshotter.save_attribute", false]], "save_attribute() (optimizersnapshotter method)": [[176, "fl4health.utils.snapshotter.OptimizerSnapshotter.save_attribute", false]], "save_attribute() (serializableobjectsnapshotter method)": [[176, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.save_attribute", false]], "save_attribute() (torchmodulesnapshotter method)": [[176, "fl4health.utils.snapshotter.TorchModuleSnapshotter.save_attribute", false]], "save_checkpoint() (perroundstatecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.save_checkpoint", false]], "save_model() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.save_model", false]], "save_random_state() (in module fl4health.utils.random)": [[174, "fl4health.utils.random.save_random_state", false]], "save_snapshot() (earlystopper method)": [[161, "fl4health.utils.early_stopper.EarlyStopper.save_snapshot", false]], "save_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.save_state", false]], "save_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.save_state", false]], "save_to_json() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[56, "fl4health.datasets.skin_cancer.preprocess_skin.save_to_json", false]], "save_to_pkl() (in module fl4health.datasets.rxrx1.preprocess)": [[53, "fl4health.datasets.rxrx1.preprocess.save_to_pkl", false]], "scaffold (class in fl4health.strategies.scaffold)": [[153, "fl4health.strategies.scaffold.Scaffold", false]], "scaffoldclient (class in fl4health.clients.scaffold_client)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient", false]], "scaffoldserver (class in fl4health.servers.scaffold_server)": [[137, "fl4health.servers.scaffold_server.ScaffoldServer", false]], "scaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule", false]], "select_by_indices() (in module fl4health.utils.dataset)": [[159, "fl4health.utils.dataset.select_by_indices", false]], "select_by_percentage() (layerselectionfunctionconstructor method)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_percentage", false]], "select_by_threshold() (layerselectionfunctionconstructor method)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_threshold", false]], "select_layers_by_percentage() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_percentage", false]], "select_layers_by_threshold() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_threshold", false]], "select_parameters() (dynamiclayerexchanger method)": [[103, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.select_parameters", false]], "select_parameters() (partialparameterexchanger method)": [[108, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.select_parameters", false]], "select_parameters() (sparsecooparameterexchanger method)": [[109, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.select_parameters", false]], "select_scores_and_sample_masks() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.select_scores_and_sample_masks", false]], "select_zeroeth_element() (in module fl4health.utils.functions)": [[162, "fl4health.utils.functions.select_zeroeth_element", false]], "sequential_forward() (moonmodel method)": [[94, "fl4health.model_bases.moon_base.MoonModel.sequential_forward", false]], "sequential_forward() (sequentiallysplitmodel method)": [[99, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.sequential_forward", false]], "sequentiallysplitexchangebasemodel (class in fl4health.model_bases.sequential_split_models)": [[99, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel", false]], "sequentiallysplitmodel (class in fl4health.model_bases.sequential_split_models)": [[99, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel", false]], "serializableobjectsnapshotter (class in fl4health.utils.snapshotter)": [[176, "fl4health.utils.snapshotter.SerializableObjectSnapshotter", false]], "set_all_random_seeds() (in module fl4health.utils.random)": [[174, "fl4health.utils.random.set_all_random_seeds", false]], "set_data_mean() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.set_data_mean", false]], "set_initial_global_tensors() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.set_initial_global_tensors", false]], "set_initial_global_tensors() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_initial_global_tensors", false]], "set_nnunet_env() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.set_nnunet_env", false]], "set_optimizer() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.set_optimizer", false]], "set_optimizer() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.set_optimizer", false]], "set_optimizer() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.set_optimizer", false]], "set_optimizer() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.set_optimizer", false]], "set_optimizer() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.set_optimizer", false]], "set_pack_losses_with_val_metrics() (in module fl4health.utils.client)": [[156, "fl4health.utils.client.set_pack_losses_with_val_metrics", false]], "set_parameters() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.set_parameters", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.set_parameters", false]], "set_parameters() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.set_parameters", false]], "set_parameters() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.set_parameters", false]], "set_parameters() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.set_parameters", false]], "set_parameters() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.set_parameters", false]], "set_parameters() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.set_parameters", false]], "set_parameters() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_parameters", false]], "set_parameters() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.set_parameters", false]], "set_parameters() (mrmtlclient method)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient.set_parameters", false]], "set_parameters() (numpyclientminimalprotocol method)": [[80, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.set_parameters", false]], "set_parameters() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.set_parameters", false]], "set_parameters() (partialweightexchangeclient method)": [[46, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.set_parameters", false]], "set_parameters() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.set_parameters", false]], "set_principal_components() (pcamodule method)": [[97, "fl4health.model_bases.pca.PcaModule.set_principal_components", false]], "setup_client() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.setup_client", false]], "setup_client() (basicclientprotocolpresetup method)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup.setup_client", false]], "setup_client() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.setup_client", false]], "setup_client() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.setup_client", false]], "setup_client() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.setup_client", false]], "setup_client() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.setup_client", false]], "setup_client() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.setup_client", false]], "setup_client() (fedpcaclient method)": [[30, "fl4health.clients.fed_pca_client.FedPCAClient.setup_client", false]], "setup_client() (fedpmclient method)": [[33, "fl4health.clients.fedpm_client.FedPmClient.setup_client", false]], "setup_client() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.setup_client", false]], "setup_client() (flashclient method)": [[37, "fl4health.clients.flash_client.FlashClient.setup_client", false]], "setup_client() (instanceleveldpclient method)": [[38, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_client", false]], "setup_client() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.setup_client", false]], "setup_client() (mrmtlclient method)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient.setup_client", false]], "setup_client() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.setup_client", false]], "setup_client() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.setup_client", false]], "setup_client() (numpyclippingclient method)": [[23, "fl4health.clients.clipping_client.NumpyClippingClient.setup_client", false]], "setup_client() (partialweightexchangeclient method)": [[46, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.setup_client", false]], "setup_client() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.setup_client", false]], "setup_context() (bernoullisample static method)": [[162, "fl4health.utils.functions.BernoulliSample.setup_context", false]], "setup_opacus_objects() (instanceleveldpclient method)": [[38, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_opacus_objects", false]], "setup_privacy_accountant() (clientleveldpfedavgserver method)": [[130, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.setup_privacy_accountant", false]], "setup_privacy_accountant() (instanceleveldpserver method)": [[133, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.setup_privacy_accountant", false]], "should_layer_be_excluded() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_layer_be_excluded", false]], "should_module_be_excluded() (layerexchangerwithexclusions method)": [[103, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_module_be_excluded", false]], "should_stop() (earlystopper method)": [[161, "fl4health.utils.early_stopper.EarlyStopper.should_stop", false]], "shutdown() (basereporter method)": [[120, "fl4health.reporting.base_reporter.BaseReporter.shutdown", false]], "shutdown() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.shutdown", false]], "shutdown() (filereporter method)": [[121, "fl4health.reporting.json_reporter.FileReporter.shutdown", false]], "shutdown() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.shutdown", false]], "shutdown() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.shutdown", false]], "shutdown() (nnunetdataloaderwrapper method)": [[169, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper.shutdown", false]], "shutdown() (reportsmanager method)": [[122, "fl4health.reporting.reports_manager.ReportsManager.shutdown", false]], "shutdown() (wandbreporter method)": [[119, "fl4health.reporting.WandBReporter.shutdown", false], [123, "fl4health.reporting.wandb_reporter.WandBReporter.shutdown", false]], "shutdown_dataloader() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.shutdown_dataloader", false]], "sigmoid_inverse() (in module fl4health.utils.functions)": [[162, "fl4health.utils.functions.sigmoid_inverse", false]], "signal_for_type() (fairnessmetrictype class method)": [[146, "fl4health.strategies.feddg_ga.FairnessMetricType.signal_for_type", false]], "signalfortypeexception": [[146, "fl4health.strategies.feddg_ga.SignalForTypeException", false]], "simplemetric (class in fl4health.metrics)": [[72, "fl4health.metrics.SimpleMetric", false]], "simplemetric (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.SimpleMetric", false]], "smallest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_final_magnitude_scores", false]], "smallest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_increase_in_magnitude_scores", false]], "smallest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[107, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_magnitude_change_scores", false]], "sparsecooparameterexchanger (class in fl4health.parameter_exchange.sparse_coo_parameter_exchanger)": [[109, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger", false]], "sparsecooparameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[106, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker", false]], "sparsecooservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule", false]], "split_data_and_targets() (in module fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.split_data_and_targets", false]], "split_model_weights_and_clipping_bits() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.split_model_weights_and_clipping_bits", false]], "ssltensordataset (class in fl4health.utils.dataset)": [[159, "fl4health.utils.dataset.SslTensorDataset", false]], "standard_normal_kl_divergence_loss() (vaeloss method)": [[113, "fl4health.preprocessing.autoencoders.loss.VaeLoss.standard_normal_kl_divergence_loss", false]], "start_run() (wandbreporter method)": [[119, "fl4health.reporting.WandBReporter.start_run", false], [123, "fl4health.reporting.wandb_reporter.WandBReporter.start_run", false]], "step (wandbsteptype attribute)": [[119, "fl4health.reporting.WandBStepType.STEP", false], [123, "fl4health.reporting.wandb_reporter.WandBStepType.STEP", false]], "strategywithpolling (class in fl4health.strategies.strategy_with_poll)": [[154, "fl4health.strategies.strategy_with_poll.StrategyWithPolling", false]], "streamtologger (class in fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.StreamToLogger", false]], "string (tabulartype attribute)": [[63, "fl4health.feature_alignment.tabular_type.TabularType.STRING", false]], "subsample() (dirichletlabelbasedsampler method)": [[175, "fl4health.utils.sampler.DirichletLabelBasedSampler.subsample", false]], "subsample() (labelbasedsampler method)": [[175, "fl4health.utils.sampler.LabelBasedSampler.subsample", false]], "subsample() (minoritylabelbasedsampler method)": [[175, "fl4health.utils.sampler.MinorityLabelBasedSampler.subsample", false]], "sum (parallelfeaturejoinmode attribute)": [[95, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.SUM", false]], "syntheticdataset (class in fl4health.utils.dataset)": [[159, "fl4health.utils.dataset.SyntheticDataset", false]], "syntheticfedproxdataset (class in fl4health.utils.data_generation)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset", false]], "syntheticiidfedproxdataset (class in fl4health.utils.data_generation)": [[158, "fl4health.utils.data_generation.SyntheticIidFedProxDataset", false]], "syntheticnoniidfedproxdataset (class in fl4health.utils.data_generation)": [[158, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset", false]], "tabularfeature (class in fl4health.feature_alignment.tabular_feature)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature", false]], "tabulartype (class in fl4health.feature_alignment.tabular_type)": [[63, "fl4health.feature_alignment.tabular_type.TabularType", false]], "task01_braintumour (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK01_BRAINTUMOUR", false]], "task02_heart (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK02_HEART", false]], "task03_liver (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK03_LIVER", false]], "task04_hippocampus (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK04_HIPPOCAMPUS", false]], "task05_prostate (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK05_PROSTATE", false]], "task06_lung (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK06_LUNG", false]], "task07_pancreas (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK07_PANCREAS", false]], "task08_hepaticvessel (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK08_HEPATICVESSEL", false]], "task09_spleen (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK09_SPLEEN", false]], "task10_colon (msddataset attribute)": [[168, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK10_COLON", false]], "tensordataset (class in fl4health.utils.dataset)": [[159, "fl4health.utils.dataset.TensorDataset", false]], "test (loggingmode attribute)": [[164, "fl4health.utils.logging.LoggingMode.TEST", false]], "test_loader (basicclientprotocol attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocol.test_loader", false]], "test_prefix (metricprefix attribute)": [[73, "fl4health.metrics.base_metrics.MetricPrefix.TEST_PREFIX", false]], "textcolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer", false]], "textmulticolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer", false]], "to_json() (tabularfeature method)": [[62, "fl4health.feature_alignment.tabular_feature.TabularFeature.to_json", false]], "tonumpy (class in fl4health.utils.load_data)": [[163, "fl4health.utils.load_data.ToNumpy", false]], "torchmetric (class in fl4health.metrics)": [[72, "fl4health.metrics.TorchMetric", false]], "torchmetric (class in fl4health.metrics.metrics)": [[77, "fl4health.metrics.metrics.TorchMetric", false]], "torchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer", false]], "torchmodulesnapshotter (class in fl4health.utils.snapshotter)": [[176, "fl4health.utils.snapshotter.TorchModuleSnapshotter", false]], "train (loggingmode attribute)": [[164, "fl4health.utils.logging.LoggingMode.TRAIN", false]], "train_by_epochs() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.train_by_epochs", false]], "train_by_epochs() (flashclient method)": [[37, "fl4health.clients.flash_client.FlashClient.train_by_epochs", false]], "train_by_steps() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.train_by_steps", false]], "train_fedrep_by_epochs() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_epochs", false]], "train_fedrep_by_steps() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_steps", false]], "train_kernel() (deepmmdloss method)": [[67, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.train_kernel", false]], "train_loader (basicclientprotocol attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocol.train_loader", false]], "train_step() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.train_step", false]], "train_step() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.train_step", false]], "train_step() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.train_step", false]], "train_step() (ensembleclient method)": [[28, "fl4health.clients.ensemble_client.EnsembleClient.train_step", false]], "train_step() (fedrepclient method)": [[34, "fl4health.clients.fedrep_client.FedRepClient.train_step", false]], "train_step() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.train_step", false]], "traininglosses (class in fl4health.utils.losses)": [[165, "fl4health.utils.losses.TrainingLosses", false]], "transform() (textcolumntransformer method)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.transform", false]], "transform() (textmulticolumntransformer method)": [[59, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.transform", false]], "transform_gradients() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.transform_gradients", false]], "transform_gradients() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.transform_gradients", false]], "transform_gradients() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.transform_gradients", false]], "transform_target() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.transform_target", false]], "transformsmetric (class in fl4health.metrics.compound_metrics)": [[74, "fl4health.metrics.compound_metrics.TransformsMetric", false]], "two_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[158, "fl4health.utils.data_generation.SyntheticFedProxDataset.two_layer_map_inputs_to_outputs", false]], "unfreeze_base_module() (fedrepmodel method)": [[86, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_base_module", false]], "unfreeze_head_module() (fedrepmodel method)": [[86, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_head_module", false]], "uniform_evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.uniform_evaluate_metrics_aggregation_fn", false]], "uniform_metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.uniform_metric_aggregation", false]], "uniform_normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[75, "fl4health.metrics.metric_aggregation.uniform_normalize_metrics", false]], "unpack_input_condition() (autoencoderdatasetconverter static method)": [[160, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.unpack_input_condition", false]], "unpack_model_output() (vaeloss method)": [[113, "fl4health.preprocessing.autoencoders.loss.VaeLoss.unpack_model_output", false]], "unpack_parameters() (fullparameterexchangerwithpacking method)": [[104, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.unpack_parameters", false]], "unpack_parameters() (parameterpacker method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.unpack_parameters", false]], "unpack_parameters() (parameterpackeradaptiveconstraint method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithclippingbit method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithcontrolvariates method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithlayernames method)": [[106, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.unpack_parameters", false]], "unpack_parameters() (partialparameterexchanger method)": [[108, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.unpack_parameters", false]], "unpack_parameters() (sparsecooparameterpacker method)": [[106, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.unpack_parameters", false]], "unset_all_random_seeds() (in module fl4health.utils.random)": [[174, "fl4health.utils.random.unset_all_random_seeds", false]], "unweighted_aggregate() (fedavgdynamiclayer method)": [[143, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.unweighted_aggregate", false]], "unweighted_aggregate() (fedavgsparsecootensor method)": [[144, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.unweighted_aggregate", false]], "update() (emametric method)": [[74, "fl4health.metrics.compound_metrics.EmaMetric.update", false]], "update() (lossmeter method)": [[165, "fl4health.utils.losses.LossMeter.update", false]], "update() (metric method)": [[73, "fl4health.metrics.base_metrics.Metric.update", false]], "update() (metricmanager method)": [[76, "fl4health.metrics.metric_managers.MetricManager.update", false]], "update() (simplemetric method)": [[72, "fl4health.metrics.SimpleMetric.update", false], [77, "fl4health.metrics.metrics.SimpleMetric.update", false]], "update() (torchmetric method)": [[72, "fl4health.metrics.TorchMetric.update", false], [77, "fl4health.metrics.metrics.TorchMetric.update", false]], "update() (transformsmetric method)": [[74, "fl4health.metrics.compound_metrics.TransformsMetric.update", false]], "update_after_step() (apflclient method)": [[21, "fl4health.clients.apfl_client.ApflClient.update_after_step", false]], "update_after_step() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_after_step", false]], "update_after_step() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_after_step", false]], "update_after_step() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_after_step", false]], "update_after_step() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_after_step", false]], "update_after_train() (adaptivedriftconstrainedmixin method)": [[78, "fl4health.mixins.AdaptiveDriftConstrainedMixin.update_after_train", false], [79, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.update_after_train", false]], "update_after_train() (adaptivedriftconstraintclient method)": [[20, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.update_after_train", false]], "update_after_train() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_after_train", false]], "update_after_train() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_after_train", false]], "update_after_train() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.update_after_train", false]], "update_after_train() (numpyclientminimalprotocol method)": [[80, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.update_after_train", false]], "update_after_train() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.update_after_train", false]], "update_after_train() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.update_after_train", false]], "update_alpha() (apflmodule method)": [[82, "fl4health.model_bases.apfl_base.ApflModule.update_alpha", false]], "update_before_epoch() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_before_epoch", false]], "update_before_fit() (flserver method)": [[129, "fl4health.servers.base_server.FlServer.update_before_fit", false]], "update_before_fit() (nnunetserver method)": [[135, "fl4health.servers.nnunet_server.NnunetServer.update_before_fit", false]], "update_before_step() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_before_step", false]], "update_before_train() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_before_train", false]], "update_before_train() (constrainedfendaclient method)": [[24, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_before_train", false]], "update_before_train() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.update_before_train", false]], "update_before_train() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_before_train", false]], "update_before_train() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_before_train", false]], "update_before_train() (fedproxclient method)": [[31, "fl4health.clients.fed_prox_client.FedProxClient.update_before_train", false]], "update_before_train() (fendadittoclient method)": [[36, "fl4health.clients.fenda_ditto_client.FendaDittoClient.update_before_train", false]], "update_before_train() (moonclient method)": [[43, "fl4health.clients.moon_client.MoonClient.update_before_train", false]], "update_before_train() (mrmtlclient method)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient.update_before_train", false]], "update_before_train() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_before_train", false]], "update_before_train() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.update_before_train", false]], "update_before_train() (perfclclient method)": [[47, "fl4health.clients.perfcl_client.PerFclClient.update_before_train", false]], "update_buffers() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_buffers", false]], "update_buffers() (dittomkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_buffers", false]], "update_buffers() (mrmtlmkmmdclient method)": [[41, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_buffers", false]], "update_clipping_bound() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_clipping_bound", false]], "update_control_variates() (scaffoldclient method)": [[48, "fl4health.clients.scaffold_client.ScaffoldClient.update_control_variates", false]], "update_current_weights() (clientleveldpfedavgm method)": [[142, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_current_weights", false]], "update_lr_schedulers() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_lr_schedulers", false]], "update_metric_manager() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.update_metric_manager", false]], "update_metric_manager() (nnunetclient method)": [[45, "fl4health.clients.nnunet_client.NnunetClient.update_metric_manager", false]], "update_target_transform() (basedataset method)": [[159, "fl4health.utils.dataset.BaseDataset.update_target_transform", false]], "update_transform() (basedataset method)": [[159, "fl4health.utils.dataset.BaseDataset.update_transform", false]], "update_weights_by_ga() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.update_weights_by_ga", false]], "use_default_signal_handlers() (in module fl4health.utils.nnunet_utils)": [[169, "fl4health.utils.nnunet_utils.use_default_signal_handlers", false]], "vaeloss (class in fl4health.preprocessing.autoencoders.loss)": [[113, "fl4health.preprocessing.autoencoders.loss.VaeLoss", false]], "vaeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[112, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor", false]], "val_loader (basicclientprotocol attribute)": [[80, "fl4health.mixins.core_protocols.BasicClientProtocol.val_loader", false]], "val_prefix (metricprefix attribute)": [[73, "fl4health.metrics.base_metrics.MetricPrefix.VAL_PREFIX", false]], "val_step() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.val_step", false]], "validate() (basicclient method)": [[22, "fl4health.clients.basic_client.BasicClient.validate", false]], "validate() (dittoclient method)": [[27, "fl4health.clients.ditto_client.DittoClient.validate", false]], "validate() (dittodeepmmdclient method)": [[26, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.validate", false]], "validate() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.validate", false]], "validate() (modelmergeclient method)": [[42, "fl4health.clients.model_merge_client.ModelMergeClient.validate", false]], "validate() (mrmtlclient method)": [[44, "fl4health.clients.mr_mtl_client.MrMtlClient.validate", false]], "validate_on_model() (evaluateclient method)": [[29, "fl4health.clients.evaluate_client.EvaluateClient.validate_on_model", false]], "validation (loggingmode attribute)": [[164, "fl4health.utils.logging.LoggingMode.VALIDATION", false]], "variationalae (class in fl4health.model_bases.autoencoders_base)": [[83, "fl4health.model_bases.autoencoders_base.VariationalAe", false]], "vote (ensembleaggregationmode attribute)": [[84, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.VOTE", false]], "wait_and_filter() (basefractionsamplingmanager method)": [[15, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.wait_and_filter", false]], "wandbreporter (class in fl4health.reporting)": [[119, "fl4health.reporting.WandBReporter", false]], "wandbreporter (class in fl4health.reporting.wandb_reporter)": [[123, "fl4health.reporting.wandb_reporter.WandBReporter", false]], "wandbsteptype (class in fl4health.reporting)": [[119, "fl4health.reporting.WandBStepType", false]], "wandbsteptype (class in fl4health.reporting.wandb_reporter)": [[123, "fl4health.reporting.wandb_reporter.WandBStepType", false]], "warmedupmodule (class in fl4health.preprocessing.warmed_up_module)": [[115, "fl4health.preprocessing.warmed_up_module.WarmedUpModule", false]], "warning (loglevel attribute)": [[177, "fl4health.utils.typing.LogLevel.WARNING", false]], "weight_and_aggregate_results() (feddgga method)": [[146, "fl4health.strategies.feddg_ga.FedDgGa.weight_and_aggregate_results", false]], "weightdriftloss (class in fl4health.losses.weight_drift_loss)": [[71, "fl4health.losses.weight_drift_loss.WeightDriftLoss", false]], "weighted_aggregate() (fedavgdynamiclayer method)": [[143, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.weighted_aggregate", false]], "weighted_aggregate() (fedavgsparsecootensor method)": [[144, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.weighted_aggregate", false]], "write() (streamtologger method)": [[169, "fl4health.utils.nnunet_utils.StreamToLogger.write", false]]}, "objects": {"": [[8, 0, 0, "-", "fl4health"]], "fl4health": [[9, 0, 0, "-", "checkpointing"], [14, 0, 0, "-", "client_managers"], [19, 0, 0, "-", "clients"], [50, 0, 0, "-", "datasets"], [57, 0, 0, "-", "feature_alignment"], [64, 0, 0, "-", "losses"], [72, 0, 0, "-", "metrics"], [78, 0, 0, "-", "mixins"], [81, 0, 0, "-", "model_bases"], [100, 0, 0, "-", "parameter_exchange"], [110, 0, 0, "-", "preprocessing"], [116, 0, 0, "-", "privacy"], [119, 0, 0, "-", "reporting"], [124, 0, 0, "-", "servers"], [139, 0, 0, "-", "strategies"], [155, 0, 0, "-", "utils"]], "fl4health.checkpointing": [[10, 0, 0, "-", "checkpointer"], [11, 0, 0, "-", "client_module"], [12, 0, 0, "-", "opacus_checkpointer"], [13, 0, 0, "-", "server_module"]], "fl4health.checkpointing.checkpointer": [[10, 1, 1, "", "BestLossTorchModuleCheckpointer"], [10, 1, 1, "", "BestMetricTorchModuleCheckpointer"], [10, 1, 1, "", "FunctionTorchModuleCheckpointer"], [10, 1, 1, "", "LatestTorchModuleCheckpointer"], [10, 1, 1, "", "PerRoundStateCheckpointer"], [10, 1, 1, "", "TorchModuleCheckpointer"]], "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"]], "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "checkpoint_exists"], [10, 2, 1, "", "load_checkpoint"], [10, 2, 1, "", "save_checkpoint"]], "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "load_checkpoint"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.client_module": [[11, 1, 1, "", "CheckpointMode"], [11, 1, 1, "", "ClientCheckpointAndStateModule"]], "fl4health.checkpointing.client_module.CheckpointMode": [[11, 3, 1, "", "POST_AGGREGATION"], [11, 3, 1, "", "PRE_AGGREGATION"]], "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"], [11, 2, 1, "", "maybe_load_state"], [11, 2, 1, "", "save_state"]], "fl4health.checkpointing.opacus_checkpointer": [[12, 1, 1, "", "BestLossOpacusCheckpointer"], [12, 1, 1, "", "LatestOpacusCheckpointer"], [12, 1, 1, "", "OpacusCheckpointer"]], "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer": [[12, 2, 1, "", "load_best_checkpoint_into_model"], [12, 2, 1, "", "load_checkpoint"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.server_module": [[13, 1, 1, "", "AdaptiveConstraintServerCheckpointAndStateModule"], [13, 1, 1, "", "BaseServerCheckpointAndStateModule"], [13, 1, 1, "", "ClippingBitServerCheckpointAndStateModule"], [13, 1, 1, "", "DpScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "LayerNamesServerCheckpointAndStateModule"], [13, 1, 1, "", "NnUnetServerCheckpointAndStateModule"], [13, 1, 1, "", "OpacusServerCheckpointAndStateModule"], [13, 1, 1, "", "PackingServerCheckpointAndAndStateModule"], [13, 1, 1, "", "ScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "SparseCooServerCheckpointAndStateModule"]], "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "maybe_checkpoint"], [13, 2, 1, "", "maybe_load_state"], [13, 2, 1, "", "save_state"]], "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.client_managers": [[15, 0, 0, "-", "base_sampling_manager"], [16, 0, 0, "-", "fixed_sampling_client_manager"], [17, 0, 0, "-", "fixed_without_replacement_manager"], [18, 0, 0, "-", "poisson_sampling_manager"]], "fl4health.client_managers.base_sampling_manager": [[15, 1, 1, "", "BaseFractionSamplingManager"]], "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager": [[15, 2, 1, "", "sample"], [15, 2, 1, "", "sample_all"], [15, 2, 1, "", "sample_fraction"], [15, 2, 1, "", "wait_and_filter"]], "fl4health.client_managers.fixed_sampling_client_manager": [[16, 1, 1, "", "FixedSamplingClientManager"]], "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "reset_sample"], [16, 2, 1, "", "sample"]], "fl4health.client_managers.fixed_without_replacement_manager": [[17, 1, 1, "", "FixedSamplingByFractionClientManager"]], "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager": [[17, 2, 1, "", "sample_fraction"]], "fl4health.client_managers.poisson_sampling_manager": [[18, 1, 1, "", "PoissonSamplingClientManager"]], "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager": [[18, 2, 1, "", "sample_fraction"]], "fl4health.clients": [[20, 0, 0, "-", "adaptive_drift_constraint_client"], [21, 0, 0, "-", "apfl_client"], [22, 0, 0, "-", "basic_client"], [23, 0, 0, "-", "clipping_client"], [24, 0, 0, "-", "constrained_fenda_client"], [25, 0, 0, "-", "deep_mmd_clients"], [27, 0, 0, "-", "ditto_client"], [28, 0, 0, "-", "ensemble_client"], [29, 0, 0, "-", "evaluate_client"], [30, 0, 0, "-", "fed_pca_client"], [31, 0, 0, "-", "fed_prox_client"], [32, 0, 0, "-", "fedper_client"], [33, 0, 0, "-", "fedpm_client"], [34, 0, 0, "-", "fedrep_client"], [35, 0, 0, "-", "fenda_client"], [36, 0, 0, "-", "fenda_ditto_client"], [37, 0, 0, "-", "flash_client"], [38, 0, 0, "-", "instance_level_dp_client"], [39, 0, 0, "-", "mkmmd_clients"], [42, 0, 0, "-", "model_merge_client"], [43, 0, 0, "-", "moon_client"], [44, 0, 0, "-", "mr_mtl_client"], [45, 0, 0, "-", "nnunet_client"], [46, 0, 0, "-", "partial_weight_exchange_client"], [47, 0, 0, "-", "perfcl_client"], [48, 0, 0, "-", "scaffold_client"]], "fl4health.clients.adaptive_drift_constraint_client": [[20, 1, 1, "", "AdaptiveDriftConstraintClient"]], "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "compute_penalty_loss"], [20, 2, 1, "", "compute_training_loss"], [20, 2, 1, "", "get_parameter_exchanger"], [20, 2, 1, "", "get_parameters"], [20, 2, 1, "", "set_parameters"], [20, 2, 1, "", "update_after_train"]], "fl4health.clients.apfl_client": [[21, 1, 1, "", "ApflClient"]], "fl4health.clients.apfl_client.ApflClient": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "compute_loss_and_additional_losses"], [21, 2, 1, "", "get_optimizer"], [21, 2, 1, "", "get_parameter_exchanger"], [21, 2, 1, "", "is_start_of_local_training"], [21, 2, 1, "", "set_optimizer"], [21, 2, 1, "", "train_step"], [21, 2, 1, "", "update_after_step"]], "fl4health.clients.basic_client": [[22, 1, 1, "", "BasicClient"]], "fl4health.clients.basic_client.BasicClient": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "compute_evaluation_loss"], [22, 2, 1, "", "compute_loss_and_additional_losses"], [22, 2, 1, "", "compute_training_loss"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "get_client_specific_logs"], [22, 2, 1, "", "get_client_specific_reports"], [22, 2, 1, "", "get_criterion"], [22, 2, 1, "", "get_data_loaders"], [22, 2, 1, "", "get_lr_scheduler"], [22, 2, 1, "", "get_model"], [22, 2, 1, "", "get_optimizer"], [22, 2, 1, "", "get_parameter_exchanger"], [22, 2, 1, "", "get_parameters"], [22, 2, 1, "", "get_properties"], [22, 2, 1, "", "get_test_data_loader"], [22, 2, 1, "", "initialize_all_model_weights"], [22, 2, 1, "", "predict"], [22, 2, 1, "", "process_config"], [22, 2, 1, "", "set_optimizer"], [22, 2, 1, "", "set_parameters"], [22, 2, 1, "", "setup_client"], [22, 2, 1, "", "shutdown"], [22, 2, 1, "", "train_by_epochs"], [22, 2, 1, "", "train_by_steps"], [22, 2, 1, "", "train_step"], [22, 2, 1, "", "transform_gradients"], [22, 2, 1, "", "transform_target"], [22, 2, 1, "", "update_after_step"], [22, 2, 1, "", "update_after_train"], [22, 2, 1, "", "update_before_epoch"], [22, 2, 1, "", "update_before_step"], [22, 2, 1, "", "update_before_train"], [22, 2, 1, "", "update_lr_schedulers"], [22, 2, 1, "", "update_metric_manager"], [22, 2, 1, "", "val_step"], [22, 2, 1, "", "validate"]], "fl4health.clients.clipping_client": [[23, 1, 1, "", "NumpyClippingClient"]], "fl4health.clients.clipping_client.NumpyClippingClient": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "calculate_parameters_norm"], [23, 2, 1, "", "clip_parameters"], [23, 2, 1, "", "compute_weight_update_and_clip"], [23, 2, 1, "", "get_parameter_exchanger"], [23, 2, 1, "", "get_parameters"], [23, 2, 1, "", "set_parameters"], [23, 2, 1, "", "setup_client"]], "fl4health.clients.constrained_fenda_client": [[24, 1, 1, "", "ConstrainedFendaClient"]], "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "compute_evaluation_loss"], [24, 2, 1, "", "compute_loss_and_additional_losses"], [24, 2, 1, "", "get_parameter_exchanger"], [24, 2, 1, "", "predict"], [24, 2, 1, "", "update_after_train"], [24, 2, 1, "", "update_before_train"]], "fl4health.clients.deep_mmd_clients": [[26, 0, 0, "-", "ditto_deep_mmd_client"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[26, 1, 1, "", "DittoDeepMmdClient"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "compute_evaluation_loss"], [26, 2, 1, "", "compute_loss_and_additional_losses"], [26, 2, 1, "", "compute_training_loss"], [26, 2, 1, "", "predict"], [26, 2, 1, "", "setup_client"], [26, 2, 1, "", "update_after_step"], [26, 2, 1, "", "update_before_train"], [26, 2, 1, "", "update_buffers"], [26, 2, 1, "", "validate"]], "fl4health.clients.ditto_client": [[27, 1, 1, "", "DittoClient"]], "fl4health.clients.ditto_client.DittoClient": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "compute_evaluation_loss"], [27, 2, 1, "", "compute_loss_and_additional_losses"], [27, 2, 1, "", "compute_training_loss"], [27, 2, 1, "", "get_global_model"], [27, 2, 1, "", "get_optimizer"], [27, 2, 1, "", "get_parameters"], [27, 2, 1, "", "initialize_all_model_weights"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "set_initial_global_tensors"], [27, 2, 1, "", "set_optimizer"], [27, 2, 1, "", "set_parameters"], [27, 2, 1, "", "setup_client"], [27, 2, 1, "", "train_step"], [27, 2, 1, "", "update_before_train"], [27, 2, 1, "", "validate"]], "fl4health.clients.ensemble_client": [[28, 1, 1, "", "EnsembleClient"]], "fl4health.clients.ensemble_client.EnsembleClient": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "compute_evaluation_loss"], [28, 2, 1, "", "compute_training_loss"], [28, 2, 1, "", "get_optimizer"], [28, 2, 1, "", "set_optimizer"], [28, 2, 1, "", "setup_client"], [28, 2, 1, "", "train_step"]], "fl4health.clients.evaluate_client": [[29, 1, 1, "", "EvaluateClient"]], "fl4health.clients.evaluate_client.EvaluateClient": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "evaluate"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "get_data_loader"], [29, 2, 1, "", "get_local_model"], [29, 2, 1, "", "get_parameter_exchanger"], [29, 2, 1, "", "get_parameters"], [29, 2, 1, "", "initialize_global_model"], [29, 2, 1, "", "merge_metrics"], [29, 2, 1, "", "set_parameters"], [29, 2, 1, "", "setup_client"], [29, 2, 1, "", "validate"], [29, 2, 1, "", "validate_on_model"]], "fl4health.clients.fed_pca_client": [[30, 1, 1, "", "FedPCAClient"]], "fl4health.clients.fed_pca_client.FedPCAClient": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "evaluate"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "generate_hash"], [30, 2, 1, "", "get_data_loaders"], [30, 2, 1, "", "get_data_tensor"], [30, 2, 1, "", "get_model"], [30, 2, 1, "", "get_parameters"], [30, 2, 1, "", "save_model"], [30, 2, 1, "", "set_parameters"], [30, 2, 1, "", "setup_client"]], "fl4health.clients.fed_prox_client": [[31, 1, 1, "", "FedProxClient"]], "fl4health.clients.fed_prox_client.FedProxClient": [[31, 2, 1, "", "update_before_train"]], "fl4health.clients.fedper_client": [[32, 1, 1, "", "FedPerClient"]], "fl4health.clients.fedper_client.FedPerClient": [[32, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fedpm_client": [[33, 1, 1, "", "FedPmClient"]], "fl4health.clients.fedpm_client.FedPmClient": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "get_parameter_exchanger"], [33, 2, 1, "", "setup_client"]], "fl4health.clients.fedrep_client": [[34, 1, 1, "", "FedRepClient"], [34, 1, 1, "", "FedRepTrainMode"]], "fl4health.clients.fedrep_client.FedRepClient": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "fit"], [34, 2, 1, "", "get_optimizer"], [34, 2, 1, "", "get_parameter_exchanger"], [34, 2, 1, "", "process_fed_rep_config"], [34, 2, 1, "", "set_optimizer"], [34, 2, 1, "", "train_fedrep_by_epochs"], [34, 2, 1, "", "train_fedrep_by_steps"], [34, 2, 1, "", "train_step"]], "fl4health.clients.fedrep_client.FedRepTrainMode": [[34, 3, 1, "", "HEAD"], [34, 3, 1, "", "REPRESENTATION"]], "fl4health.clients.fenda_client": [[35, 1, 1, "", "FendaClient"]], "fl4health.clients.fenda_client.FendaClient": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fenda_ditto_client": [[36, 1, 1, "", "FendaDittoClient"]], "fl4health.clients.fenda_ditto_client.FendaDittoClient": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "compute_training_loss"], [36, 2, 1, "", "get_global_model"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_parameters"], [36, 2, 1, "", "predict"], [36, 2, 1, "", "set_initial_global_tensors"], [36, 2, 1, "", "set_parameters"], [36, 2, 1, "", "setup_client"], [36, 2, 1, "", "update_before_train"]], "fl4health.clients.flash_client": [[37, 1, 1, "", "FlashClient"]], "fl4health.clients.flash_client.FlashClient": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "process_config"], [37, 2, 1, "", "setup_client"], [37, 2, 1, "", "train_by_epochs"]], "fl4health.clients.instance_level_dp_client": [[38, 1, 1, "", "InstanceLevelDpClient"]], "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "setup_client"], [38, 2, 1, "", "setup_opacus_objects"]], "fl4health.clients.mkmmd_clients": [[40, 0, 0, "-", "ditto_mkmmd_client"], [41, 0, 0, "-", "mr_mtl_mkmmd_client"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[40, 1, 1, "", "DittoMkMmdClient"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "compute_loss_and_additional_losses"], [40, 2, 1, "", "compute_training_loss"], [40, 2, 1, "", "predict"], [40, 2, 1, "", "setup_client"], [40, 2, 1, "", "update_after_step"], [40, 2, 1, "", "update_before_train"], [40, 2, 1, "", "update_buffers"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[41, 1, 1, "", "MrMtlMkMmdClient"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "compute_loss_and_additional_losses"], [41, 2, 1, "", "compute_training_loss"], [41, 2, 1, "", "predict"], [41, 2, 1, "", "setup_client"], [41, 2, 1, "", "update_after_step"], [41, 2, 1, "", "update_before_train"], [41, 2, 1, "", "update_buffers"]], "fl4health.clients.model_merge_client": [[42, 1, 1, "", "ModelMergeClient"]], "fl4health.clients.model_merge_client.ModelMergeClient": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "fit"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_parameter_exchanger"], [42, 2, 1, "", "get_parameters"], [42, 2, 1, "", "get_test_data_loader"], [42, 2, 1, "", "set_parameters"], [42, 2, 1, "", "setup_client"], [42, 2, 1, "", "validate"]], "fl4health.clients.moon_client": [[43, 1, 1, "", "MoonClient"]], "fl4health.clients.moon_client.MoonClient": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "compute_evaluation_loss"], [43, 2, 1, "", "compute_loss_and_additional_losses"], [43, 2, 1, "", "compute_training_loss"], [43, 2, 1, "", "predict"], [43, 2, 1, "", "update_after_train"], [43, 2, 1, "", "update_before_train"]], "fl4health.clients.mr_mtl_client": [[44, 1, 1, "", "MrMtlClient"]], "fl4health.clients.mr_mtl_client.MrMtlClient": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "compute_training_loss"], [44, 2, 1, "", "set_parameters"], [44, 2, 1, "", "setup_client"], [44, 2, 1, "", "update_before_train"], [44, 2, 1, "", "validate"]], "fl4health.clients.nnunet_client": [[45, 1, 1, "", "NnunetClient"]], "fl4health.clients.nnunet_client.NnunetClient": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "compute_loss_and_additional_losses"], [45, 2, 1, "", "create_plans"], [45, 2, 1, "", "empty_cache"], [45, 2, 1, "", "get_client_specific_logs"], [45, 2, 1, "", "get_client_specific_reports"], [45, 2, 1, "", "get_criterion"], [45, 2, 1, "", "get_data_loaders"], [45, 2, 1, "", "get_lr_scheduler"], [45, 2, 1, "", "get_model"], [45, 2, 1, "", "get_optimizer"], [45, 2, 1, "", "get_properties"], [45, 2, 1, "", "mask_data"], [45, 2, 1, "", "maybe_extract_fingerprint"], [45, 2, 1, "", "maybe_preprocess"], [45, 2, 1, "", "predict"], [45, 2, 1, "", "setup_client"], [45, 2, 1, "", "shutdown"], [45, 2, 1, "", "shutdown_dataloader"], [45, 2, 1, "", "train_step"], [45, 2, 1, "", "transform_gradients"], [45, 2, 1, "", "update_before_train"], [45, 2, 1, "", "update_metric_manager"]], "fl4health.clients.partial_weight_exchange_client": [[46, 1, 1, "", "PartialWeightExchangeClient"]], "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "get_parameter_exchanger"], [46, 2, 1, "", "get_parameters"], [46, 2, 1, "", "set_parameters"], [46, 2, 1, "", "setup_client"]], "fl4health.clients.perfcl_client": [[47, 1, 1, "", "PerFclClient"]], "fl4health.clients.perfcl_client.PerFclClient": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "compute_evaluation_loss"], [47, 2, 1, "", "compute_loss_and_additional_losses"], [47, 2, 1, "", "get_parameter_exchanger"], [47, 2, 1, "", "predict"], [47, 2, 1, "", "update_after_train"], [47, 2, 1, "", "update_before_train"]], "fl4health.clients.scaffold_client": [[48, 1, 1, "", "DPScaffoldClient"], [48, 1, 1, "", "ScaffoldClient"]], "fl4health.clients.scaffold_client.ScaffoldClient": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "compute_parameters_delta"], [48, 2, 1, "", "compute_updated_control_variates"], [48, 2, 1, "", "get_parameter_exchanger"], [48, 2, 1, "", "get_parameters"], [48, 2, 1, "", "modify_grad"], [48, 2, 1, "", "set_parameters"], [48, 2, 1, "", "setup_client"], [48, 2, 1, "", "transform_gradients"], [48, 2, 1, "", "update_after_train"], [48, 2, 1, "", "update_control_variates"]], "fl4health.datasets": [[51, 0, 0, "-", "rxrx1"], [54, 0, 0, "-", "skin_cancer"]], "fl4health.datasets.rxrx1": [[52, 0, 0, "-", "load_data"], [53, 0, 0, "-", "preprocess"]], "fl4health.datasets.rxrx1.load_data": [[52, 4, 1, "", "construct_rxrx1_tensor_dataset"], [52, 4, 1, "", "create_splits"], [52, 4, 1, "", "label_frequency"], [52, 4, 1, "", "load_rxrx1_data"], [52, 4, 1, "", "load_rxrx1_test_data"]], "fl4health.datasets.rxrx1.preprocess": [[53, 4, 1, "", "filter_and_save_data"], [53, 4, 1, "", "load_image"], [53, 4, 1, "", "main"], [53, 4, 1, "", "process_data"], [53, 4, 1, "", "save_to_pkl"]], "fl4health.datasets.skin_cancer": [[55, 0, 0, "-", "load_data"], [56, 0, 0, "-", "preprocess_skin"]], "fl4health.datasets.skin_cancer.load_data": [[55, 4, 1, "", "construct_skin_cancer_tensor_dataset"], [55, 4, 1, "", "load_image"], [55, 4, 1, "", "load_skin_cancer_data"]], "fl4health.datasets.skin_cancer.preprocess_skin": [[56, 4, 1, "", "derm7pt_image_path_func"], [56, 4, 1, "", "derm7pt_label_map_func"], [56, 4, 1, "", "ham_image_path_func"], [56, 4, 1, "", "ham_label_map_func"], [56, 4, 1, "", "pad_image_path_func"], [56, 4, 1, "", "pad_label_map_func"], [56, 4, 1, "", "preprocess_derm7pt"], [56, 4, 1, "", "preprocess_ham10000"], [56, 4, 1, "", "preprocess_isic_2019"], [56, 4, 1, "", "preprocess_pad_ufes_20"], [56, 4, 1, "", "process_client_data"], [56, 4, 1, "", "save_to_json"]], "fl4health.feature_alignment": [[58, 0, 0, "-", "constants"], [59, 0, 0, "-", "string_columns_transformer"], [62, 0, 0, "-", "tabular_feature"], [63, 0, 0, "-", "tabular_type"]], "fl4health.feature_alignment.string_columns_transformer": [[59, 1, 1, "", "TextColumnTransformer"], [59, 1, 1, "", "TextMulticolumnTransformer"]], "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "fit"], [59, 2, 1, "", "transform"]], "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "fit"], [59, 2, 1, "", "transform"]], "fl4health.feature_alignment.tabular_feature": [[62, 1, 1, "", "TabularFeature"]], "fl4health.feature_alignment.tabular_feature.TabularFeature": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "from_json"], [62, 2, 1, "", "get_feature_name"], [62, 2, 1, "", "get_feature_type"], [62, 2, 1, "", "get_fill_value"], [62, 2, 1, "", "get_metadata"], [62, 2, 1, "", "get_metadata_dimension"], [62, 2, 1, "", "to_json"]], "fl4health.feature_alignment.tabular_type": [[63, 1, 1, "", "TabularType"]], "fl4health.feature_alignment.tabular_type.TabularType": [[63, 3, 1, "", "BINARY"], [63, 3, 1, "", "NUMERIC"], [63, 3, 1, "", "ORDINAL"], [63, 3, 1, "", "STRING"], [63, 2, 1, "", "get_default_fill_value"]], "fl4health.losses": [[65, 0, 0, "-", "contrastive_loss"], [66, 0, 0, "-", "cosine_similarity_loss"], [67, 0, 0, "-", "deep_mmd_loss"], [68, 0, 0, "-", "fenda_loss_config"], [69, 0, 0, "-", "mkmmd_loss"], [70, 0, 0, "-", "perfcl_loss"], [71, 0, 0, "-", "weight_drift_loss"]], "fl4health.losses.contrastive_loss": [[65, 1, 1, "", "MoonContrastiveLoss"], [65, 1, 1, "", "NtXentLoss"]], "fl4health.losses.contrastive_loss.MoonContrastiveLoss": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "compute_negative_similarities"], [65, 2, 1, "", "forward"]], "fl4health.losses.contrastive_loss.NtXentLoss": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "forward"]], "fl4health.losses.cosine_similarity_loss": [[66, 1, 1, "", "CosineSimilarityLoss"]], "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "forward"]], "fl4health.losses.deep_mmd_loss": [[67, 1, 1, "", "DeepMmdLoss"], [67, 1, 1, "", "ModelLatentF"]], "fl4health.losses.deep_mmd_loss.DeepMmdLoss": [[67, 2, 1, "", "MMDu"], [67, 2, 1, "", "__init__"], [67, 2, 1, "", "compute_kernel"], [67, 2, 1, "", "forward"], [67, 2, 1, "", "h1_mean_var_gram"], [67, 2, 1, "", "pairwise_distance_squared"], [67, 2, 1, "", "train_kernel"]], "fl4health.losses.deep_mmd_loss.ModelLatentF": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "forward"]], "fl4health.losses.fenda_loss_config": [[68, 1, 1, "", "ConstrainedFendaLossContainer"], [68, 1, 1, "", "CosineSimilarityLossContainer"], [68, 1, 1, "", "MoonContrastiveLossContainer"], [68, 1, 1, "", "PerFclLossContainer"]], "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "compute_contrastive_loss"], [68, 2, 1, "", "compute_cosine_similarity_loss"], [68, 2, 1, "", "compute_perfcl_loss"], [68, 2, 1, "", "has_contrastive_loss"], [68, 2, 1, "", "has_cosine_similarity_loss"], [68, 2, 1, "", "has_perfcl_loss"]], "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer": [[68, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer": [[68, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.PerFclLossContainer": [[68, 2, 1, "", "__init__"]], "fl4health.losses.mkmmd_loss": [[69, 1, 1, "", "MkMmdLoss"]], "fl4health.losses.mkmmd_loss.MkMmdLoss": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "beta_with_extreme_kernel_base_values"], [69, 2, 1, "", "compute_all_h_u_all_samples"], [69, 2, 1, "", "compute_all_h_u_from_inner_products"], [69, 2, 1, "", "compute_all_h_u_from_inner_products_linear"], [69, 2, 1, "", "compute_all_h_u_linear"], [69, 2, 1, "", "compute_euclidean_inner_products"], [69, 2, 1, "", "compute_euclidean_inner_products_linear"], [69, 2, 1, "", "compute_h_u_from_inner_products"], [69, 2, 1, "", "compute_h_u_from_inner_products_linear"], [69, 2, 1, "", "compute_hat_Q_k"], [69, 2, 1, "", "compute_hat_Q_k_linear"], [69, 2, 1, "", "compute_hat_d_per_kernel"], [69, 2, 1, "", "compute_mkmmd"], [69, 2, 1, "", "compute_vertices"], [69, 2, 1, "", "construct_quadruples"], [69, 2, 1, "", "form_and_solve_qp"], [69, 2, 1, "", "form_h_u_delta_w_i"], [69, 2, 1, "", "form_kernel_samples_minus_expectation"], [69, 2, 1, "", "forward"], [69, 2, 1, "", "get_best_vertex_for_objective_function"], [69, 2, 1, "", "normalize"], [69, 2, 1, "", "optimize_betas"]], "fl4health.losses.perfcl_loss": [[70, 1, 1, "", "PerFclLoss"]], "fl4health.losses.perfcl_loss.PerFclLoss": [[70, 2, 1, "", "forward"]], "fl4health.losses.weight_drift_loss": [[71, 1, 1, "", "WeightDriftLoss"]], "fl4health.losses.weight_drift_loss.WeightDriftLoss": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "forward"]], "fl4health.metrics": [[72, 1, 1, "", "Accuracy"], [72, 1, 1, "", "BalancedAccuracy"], [72, 1, 1, "", "BinarySoftDiceCoefficient"], [72, 1, 1, "", "F1"], [72, 1, 1, "", "ROC_AUC"], [72, 1, 1, "", "SimpleMetric"], [72, 1, 1, "", "TorchMetric"], [73, 0, 0, "-", "base_metrics"], [74, 0, 0, "-", "compound_metrics"], [75, 0, 0, "-", "metric_aggregation"], [76, 0, 0, "-", "metric_managers"], [77, 0, 0, "-", "metrics"]], "fl4health.metrics.Accuracy": [[72, 2, 1, "", "__init__"]], "fl4health.metrics.BalancedAccuracy": [[72, 2, 1, "", "__init__"]], "fl4health.metrics.BinarySoftDiceCoefficient": [[72, 2, 1, "", "__init__"]], "fl4health.metrics.F1": [[72, 2, 1, "", "__init__"]], "fl4health.metrics.ROC_AUC": [[72, 2, 1, "", "__init__"]], "fl4health.metrics.SimpleMetric": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "clear"], [72, 2, 1, "", "compute"], [72, 2, 1, "", "update"]], "fl4health.metrics.TorchMetric": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "clear"], [72, 2, 1, "", "compute"], [72, 2, 1, "", "update"]], "fl4health.metrics.base_metrics": [[73, 1, 1, "", "Metric"], [73, 1, 1, "", "MetricPrefix"]], "fl4health.metrics.base_metrics.Metric": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "clear"], [73, 2, 1, "", "compute"], [73, 2, 1, "", "update"]], "fl4health.metrics.base_metrics.MetricPrefix": [[73, 3, 1, "", "TEST_PREFIX"], [73, 3, 1, "", "VAL_PREFIX"]], "fl4health.metrics.compound_metrics": [[74, 1, 1, "", "EmaMetric"], [74, 1, 1, "", "TransformsMetric"]], "fl4health.metrics.compound_metrics.EmaMetric": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "clear"], [74, 2, 1, "", "compute"], [74, 2, 1, "", "update"]], "fl4health.metrics.compound_metrics.TransformsMetric": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "clear"], [74, 2, 1, "", "compute"], [74, 2, 1, "", "update"]], "fl4health.metrics.metric_aggregation": [[75, 4, 1, "", "evaluate_metrics_aggregation_fn"], [75, 4, 1, "", "fit_metrics_aggregation_fn"], [75, 4, 1, "", "metric_aggregation"], [75, 4, 1, "", "normalize_metrics"], [75, 4, 1, "", "uniform_evaluate_metrics_aggregation_fn"], [75, 4, 1, "", "uniform_metric_aggregation"], [75, 4, 1, "", "uniform_normalize_metrics"]], "fl4health.metrics.metric_managers": [[76, 1, 1, "", "MetricManager"]], "fl4health.metrics.metric_managers.MetricManager": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "check_target_prediction_keys_equal"], [76, 2, 1, "", "clear"], [76, 2, 1, "", "compute"], [76, 2, 1, "", "reset"], [76, 2, 1, "", "update"]], "fl4health.metrics.metrics": [[77, 1, 1, "", "Accuracy"], [77, 1, 1, "", "BalancedAccuracy"], [77, 1, 1, "", "BinarySoftDiceCoefficient"], [77, 1, 1, "", "F1"], [77, 1, 1, "", "ROC_AUC"], [77, 1, 1, "", "SimpleMetric"], [77, 1, 1, "", "TorchMetric"]], "fl4health.metrics.metrics.Accuracy": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BalancedAccuracy": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BinarySoftDiceCoefficient": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.F1": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.ROC_AUC": [[77, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.SimpleMetric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.metrics.metrics.TorchMetric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.mixins": [[78, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [79, 0, 0, "-", "adaptive_drift_constrained"], [80, 0, 0, "-", "core_protocols"]], "fl4health.mixins.AdaptiveDriftConstrainedMixin": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "compute_penalty_loss"], [78, 2, 1, "", "compute_training_loss"], [78, 2, 1, "", "get_parameter_exchanger"], [78, 2, 1, "", "get_parameters"], [78, 2, 1, "", "set_parameters"], [78, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained": [[79, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [79, 1, 1, "", "AdaptiveDriftConstrainedProtocol"], [79, 4, 1, "", "apply_adaptive_drift_to_client"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_penalty_loss"], [79, 2, 1, "", "compute_training_loss"], [79, 2, 1, "", "get_parameter_exchanger"], [79, 2, 1, "", "get_parameters"], [79, 2, 1, "", "set_parameters"], [79, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol": [[79, 2, 1, "", "compute_penalty_loss"], [79, 3, 1, "", "drift_penalty_tensors"], [79, 3, 1, "", "drift_penalty_weight"], [79, 3, 1, "", "loss_for_adaptation"], [79, 3, 1, "", "parameter_exchanger"], [79, 3, 1, "", "penalty_loss_function"]], "fl4health.mixins.core_protocols": [[80, 1, 1, "", "BasicClientProtocol"], [80, 1, 1, "", "BasicClientProtocolPreSetup"], [80, 1, 1, "", "NumPyClientMinimalProtocol"]], "fl4health.mixins.core_protocols.BasicClientProtocol": [[80, 3, 1, "", "model"], [80, 3, 1, "", "optimizers"], [80, 3, 1, "", "test_loader"], [80, 3, 1, "", "train_loader"], [80, 3, 1, "", "val_loader"]], "fl4health.mixins.core_protocols.BasicClientProtocolPreSetup": [[80, 2, 1, "", "compute_loss_and_additional_losses"], [80, 3, 1, "", "device"], [80, 2, 1, "", "get_criterion"], [80, 2, 1, "", "get_data_loaders"], [80, 2, 1, "", "get_model"], [80, 2, 1, "", "get_optimizer"], [80, 3, 1, "", "initialized"], [80, 2, 1, "", "setup_client"]], "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol": [[80, 2, 1, "", "evaluate"], [80, 2, 1, "", "fit"], [80, 2, 1, "", "get_parameters"], [80, 2, 1, "", "set_parameters"], [80, 2, 1, "", "update_after_train"]], "fl4health.model_bases": [[82, 0, 0, "-", "apfl_base"], [83, 0, 0, "-", "autoencoders_base"], [84, 0, 0, "-", "ensemble_base"], [85, 0, 0, "-", "feature_extractor_buffer"], [86, 0, 0, "-", "fedrep_base"], [87, 0, 0, "-", "fedsimclr_base"], [88, 0, 0, "-", "fenda_base"], [89, 0, 0, "-", "masked_layers"], [94, 0, 0, "-", "moon_base"], [95, 0, 0, "-", "parallel_split_models"], [96, 0, 0, "-", "partial_layer_exchange_model"], [97, 0, 0, "-", "pca"], [98, 0, 0, "-", "perfcl_base"], [99, 0, 0, "-", "sequential_split_models"]], "fl4health.model_bases.apfl_base": [[82, 1, 1, "", "ApflModule"]], "fl4health.model_bases.apfl_base.ApflModule": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "forward"], [82, 2, 1, "", "global_forward"], [82, 2, 1, "", "layers_to_exchange"], [82, 2, 1, "", "local_forward"], [82, 2, 1, "", "update_alpha"]], "fl4health.model_bases.autoencoders_base": [[83, 1, 1, "", "AbstractAe"], [83, 1, 1, "", "BasicAe"], [83, 1, 1, "", "ConditionalVae"], [83, 1, 1, "", "VariationalAe"]], "fl4health.model_bases.autoencoders_base.AbstractAe": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.BasicAe": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "decode"], [83, 2, 1, "", "encode"], [83, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.ConditionalVae": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "decode"], [83, 2, 1, "", "encode"], [83, 2, 1, "", "forward"], [83, 2, 1, "", "sampling"]], "fl4health.model_bases.autoencoders_base.VariationalAe": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "decode"], [83, 2, 1, "", "encode"], [83, 2, 1, "", "forward"], [83, 2, 1, "", "sampling"]], "fl4health.model_bases.ensemble_base": [[84, 1, 1, "", "EnsembleAggregationMode"], [84, 1, 1, "", "EnsembleModel"]], "fl4health.model_bases.ensemble_base.EnsembleAggregationMode": [[84, 3, 1, "", "AVERAGE"], [84, 3, 1, "", "VOTE"]], "fl4health.model_bases.ensemble_base.EnsembleModel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "ensemble_average"], [84, 2, 1, "", "ensemble_vote"], [84, 2, 1, "", "forward"]], "fl4health.model_bases.feature_extractor_buffer": [[85, 1, 1, "", "FeatureExtractorBuffer"]], "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "clear_buffers"], [85, 2, 1, "", "disable_accumulating_features"], [85, 2, 1, "", "enable_accumulating_features"], [85, 2, 1, "", "find_last_common_prefix"], [85, 2, 1, "", "flatten"], [85, 2, 1, "", "forward_hook"], [85, 2, 1, "", "get_extracted_features"], [85, 2, 1, "", "get_hierarchical_attr"], [85, 2, 1, "", "remove_hooks"]], "fl4health.model_bases.fedrep_base": [[86, 1, 1, "", "FedRepModel"]], "fl4health.model_bases.fedrep_base.FedRepModel": [[86, 2, 1, "", "freeze_base_module"], [86, 2, 1, "", "freeze_head_module"], [86, 2, 1, "", "unfreeze_base_module"], [86, 2, 1, "", "unfreeze_head_module"]], "fl4health.model_bases.fedsimclr_base": [[87, 1, 1, "", "FedSimClrModel"]], "fl4health.model_bases.fedsimclr_base.FedSimClrModel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "forward"], [87, 2, 1, "", "load_pretrained_model"]], "fl4health.model_bases.fenda_base": [[88, 1, 1, "", "FendaModel"], [88, 1, 1, "", "FendaModelWithFeatureState"]], "fl4health.model_bases.fenda_base.FendaModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.fenda_base.FendaModelWithFeatureState": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "forward"]], "fl4health.model_bases.masked_layers": [[90, 0, 0, "-", "masked_conv"], [91, 0, 0, "-", "masked_layers_utils"], [92, 0, 0, "-", "masked_linear"], [93, 0, 0, "-", "masked_normalization_layers"]], "fl4health.model_bases.masked_layers.masked_conv": [[90, 1, 1, "", "MaskedConv1d"], [90, 1, 1, "", "MaskedConv2d"], [90, 1, 1, "", "MaskedConv3d"], [90, 1, 1, "", "MaskedConvTranspose1d"], [90, 1, 1, "", "MaskedConvTranspose2d"], [90, 1, 1, "", "MaskedConvTranspose3d"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "forward"], [90, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "forward"], [90, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "forward"], [90, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "forward"], [90, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "forward"], [90, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "forward"], [90, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[91, 4, 1, "", "convert_to_masked_model"], [91, 4, 1, "", "is_masked_module"]], "fl4health.model_bases.masked_layers.masked_linear": [[92, 1, 1, "", "MaskedLinear"]], "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "forward"], [92, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[93, 1, 1, "", "MaskedBatchNorm1d"], [93, 1, 1, "", "MaskedBatchNorm2d"], [93, 1, 1, "", "MaskedBatchNorm3d"], [93, 1, 1, "", "MaskedLayerNorm"]], "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "forward"], [93, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.moon_base": [[94, 1, 1, "", "MoonModel"]], "fl4health.model_bases.moon_base.MoonModel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "sequential_forward"]], "fl4health.model_bases.parallel_split_models": [[95, 1, 1, "", "ParallelFeatureJoinMode"], [95, 1, 1, "", "ParallelSplitHeadModule"], [95, 1, 1, "", "ParallelSplitModel"]], "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode": [[95, 3, 1, "", "CONCATENATE"], [95, 3, 1, "", "SUM"]], "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "forward"], [95, 2, 1, "", "head_forward"], [95, 2, 1, "", "parallel_output_join"]], "fl4health.model_bases.parallel_split_models.ParallelSplitModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "forward"]], "fl4health.model_bases.partial_layer_exchange_model": [[96, 1, 1, "", "PartialLayerExchangeModel"]], "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel": [[96, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.pca": [[97, 1, 1, "", "PcaModule"]], "fl4health.model_bases.pca.PcaModule": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "center_data"], [97, 2, 1, "", "compute_cumulative_explained_variance"], [97, 2, 1, "", "compute_explained_variance_ratios"], [97, 2, 1, "", "compute_projection_variance"], [97, 2, 1, "", "compute_reconstruction_error"], [97, 2, 1, "", "forward"], [97, 2, 1, "", "maybe_reshape"], [97, 2, 1, "", "prepare_data_forward"], [97, 2, 1, "", "project_back"], [97, 2, 1, "", "project_lower_dim"], [97, 2, 1, "", "set_data_mean"], [97, 2, 1, "", "set_principal_components"]], "fl4health.model_bases.perfcl_base": [[98, 1, 1, "", "PerFclModel"]], "fl4health.model_bases.perfcl_base.PerFclModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "forward"], [98, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models": [[99, 1, 1, "", "SequentiallySplitExchangeBaseModel"], [99, 1, 1, "", "SequentiallySplitModel"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel": [[99, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "forward"], [99, 2, 1, "", "sequential_forward"]], "fl4health.parameter_exchange": [[101, 0, 0, "-", "fedpm_exchanger"], [102, 0, 0, "-", "full_exchanger"], [103, 0, 0, "-", "layer_exchanger"], [104, 0, 0, "-", "packing_exchanger"], [105, 0, 0, "-", "parameter_exchanger_base"], [106, 0, 0, "-", "parameter_packer"], [107, 0, 0, "-", "parameter_selection_criteria"], [108, 0, 0, "-", "partial_parameter_exchanger"], [109, 0, 0, "-", "sparse_coo_parameter_exchanger"]], "fl4health.parameter_exchange.fedpm_exchanger": [[101, 1, 1, "", "FedPmExchanger"]], "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger": [[101, 2, 1, "", "pull_parameters"]], "fl4health.parameter_exchange.full_exchanger": [[102, 1, 1, "", "FullParameterExchanger"]], "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger": [[102, 2, 1, "", "pull_parameters"], [102, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger": [[103, 1, 1, "", "DynamicLayerExchanger"], [103, 1, 1, "", "FixedLayerExchanger"], [103, 1, 1, "", "LayerExchangerWithExclusions"]], "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "pull_parameters"], [103, 2, 1, "", "push_parameters"], [103, 2, 1, "", "select_parameters"]], "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "apply_layer_filter"], [103, 2, 1, "", "pull_parameters"], [103, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "apply_layer_filter"], [103, 2, 1, "", "get_layers_to_transfer"], [103, 2, 1, "", "pull_parameters"], [103, 2, 1, "", "push_parameters"], [103, 2, 1, "", "should_layer_be_excluded"], [103, 2, 1, "", "should_module_be_excluded"]], "fl4health.parameter_exchange.packing_exchanger": [[104, 1, 1, "", "FullParameterExchangerWithPacking"]], "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking": [[104, 2, 1, "", "pack_parameters"], [104, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_exchanger_base": [[105, 1, 1, "", "ParameterExchanger"]], "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger": [[105, 2, 1, "", "pull_parameters"], [105, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.parameter_packer": [[106, 1, 1, "", "ParameterPacker"], [106, 1, 1, "", "ParameterPackerAdaptiveConstraint"], [106, 1, 1, "", "ParameterPackerWithClippingBit"], [106, 1, 1, "", "ParameterPackerWithControlVariates"], [106, 1, 1, "", "ParameterPackerWithLayerNames"], [106, 1, 1, "", "SparseCooParameterPacker"]], "fl4health.parameter_exchange.parameter_packer.ParameterPacker": [[106, 2, 1, "", "pack_parameters"], [106, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint": [[106, 2, 1, "", "pack_parameters"], [106, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit": [[106, 2, 1, "", "pack_parameters"], [106, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "pack_parameters"], [106, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames": [[106, 2, 1, "", "pack_parameters"], [106, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker": [[106, 2, 1, "", "extract_coo_info_from_dense"], [106, 2, 1, "", "pack_parameters"], [106, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_selection_criteria": [[107, 1, 1, "", "LayerSelectionFunctionConstructor"], [107, 4, 1, "", "largest_final_magnitude_scores"], [107, 4, 1, "", "largest_increase_in_magnitude_scores"], [107, 4, 1, "", "largest_magnitude_change_scores"], [107, 4, 1, "", "select_layers_by_percentage"], [107, 4, 1, "", "select_layers_by_threshold"], [107, 4, 1, "", "select_scores_and_sample_masks"], [107, 4, 1, "", "smallest_final_magnitude_scores"], [107, 4, 1, "", "smallest_increase_in_magnitude_scores"], [107, 4, 1, "", "smallest_magnitude_change_scores"]], "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "select_by_percentage"], [107, 2, 1, "", "select_by_threshold"]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[108, 1, 1, "", "PartialParameterExchanger"]], "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger": [[108, 2, 1, "", "pack_parameters"], [108, 2, 1, "", "select_parameters"], [108, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[109, 1, 1, "", "SparseCooParameterExchanger"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "generate_parameter_scores"], [109, 2, 1, "", "pull_parameters"], [109, 2, 1, "", "push_parameters"], [109, 2, 1, "", "select_parameters"]], "fl4health.preprocessing": [[111, 0, 0, "-", "autoencoders"], [114, 0, 0, "-", "pca_preprocessor"], [115, 0, 0, "-", "warmed_up_module"]], "fl4health.preprocessing.autoencoders": [[112, 0, 0, "-", "dim_reduction"], [113, 0, 0, "-", "loss"]], "fl4health.preprocessing.autoencoders.dim_reduction": [[112, 1, 1, "", "AeProcessor"], [112, 1, 1, "", "AutoEncoderProcessing"], [112, 1, 1, "", "CvaeFixedConditionProcessor"], [112, 1, 1, "", "CvaeVariableConditionProcessor"], [112, 1, 1, "", "VaeProcessor"]], "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "load_autoencoder"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor": [[112, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor": [[112, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor": [[112, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.loss": [[113, 1, 1, "", "VaeLoss"]], "fl4health.preprocessing.autoencoders.loss.VaeLoss": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "forward"], [113, 2, 1, "", "standard_normal_kl_divergence_loss"], [113, 2, 1, "", "unpack_model_output"]], "fl4health.preprocessing.pca_preprocessor": [[114, 1, 1, "", "PcaPreprocessor"]], "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "load_pca_module"], [114, 2, 1, "", "reduce_dimension"]], "fl4health.preprocessing.warmed_up_module": [[115, 1, 1, "", "WarmedUpModule"]], "fl4health.preprocessing.warmed_up_module.WarmedUpModule": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "get_matching_component"], [115, 2, 1, "", "load_from_pretrained"]], "fl4health.privacy": [[117, 0, 0, "-", "fl_accountants"], [118, 0, 0, "-", "moments_accountant"]], "fl4health.privacy.fl_accountants": [[117, 1, 1, "", "ClientLevelAccountant"], [117, 1, 1, "", "FlClientLevelAccountantFixedSamplingNoReplacement"], [117, 1, 1, "", "FlClientLevelAccountantPoissonSampling"], [117, 1, 1, "", "FlInstanceLevelAccountant"]], "fl4health.privacy.fl_accountants.ClientLevelAccountant": [[117, 2, 1, "", "get_delta"], [117, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "get_delta"], [117, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "get_delta"], [117, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "get_delta"], [117, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant": [[118, 1, 1, "", "FixedSamplingWithoutReplacement"], [118, 1, 1, "", "MomentsAccountant"], [118, 1, 1, "", "PoissonSampling"], [118, 1, 1, "", "SamplingStrategy"]], "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement": [[118, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.MomentsAccountant": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "get_delta"], [118, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant.PoissonSampling": [[118, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.SamplingStrategy": [[118, 2, 1, "", "get_dp_event"]], "fl4health.reporting": [[119, 1, 1, "", "JsonReporter"], [119, 1, 1, "", "WandBReporter"], [119, 1, 1, "", "WandBStepType"], [120, 0, 0, "-", "base_reporter"], [121, 0, 0, "-", "json_reporter"], [122, 0, 0, "-", "reports_manager"], [123, 0, 0, "-", "wandb_reporter"]], "fl4health.reporting.JsonReporter": [[119, 2, 1, "", "dump"]], "fl4health.reporting.WandBReporter": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "define_metrics"], [119, 2, 1, "", "initialize"], [119, 2, 1, "", "report"], [119, 2, 1, "", "shutdown"], [119, 2, 1, "", "start_run"]], "fl4health.reporting.WandBStepType": [[119, 3, 1, "", "EPOCH"], [119, 3, 1, "", "ROUND"], [119, 3, 1, "", "STEP"]], "fl4health.reporting.base_reporter": [[120, 1, 1, "", "BaseReporter"]], "fl4health.reporting.base_reporter.BaseReporter": [[120, 2, 1, "", "initialize"], [120, 2, 1, "", "report"], [120, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter": [[121, 1, 1, "", "FileReporter"], [121, 1, 1, "", "JsonReporter"]], "fl4health.reporting.json_reporter.FileReporter": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "dump"], [121, 2, 1, "", "initialize"], [121, 2, 1, "", "report"], [121, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter.JsonReporter": [[121, 2, 1, "", "dump"]], "fl4health.reporting.reports_manager": [[122, 1, 1, "", "ReportsManager"]], "fl4health.reporting.reports_manager.ReportsManager": [[122, 2, 1, "", "initialize"], [122, 2, 1, "", "report"], [122, 2, 1, "", "shutdown"]], "fl4health.reporting.wandb_reporter": [[123, 1, 1, "", "WandBReporter"], [123, 1, 1, "", "WandBStepType"]], "fl4health.reporting.wandb_reporter.WandBReporter": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "define_metrics"], [123, 2, 1, "", "initialize"], [123, 2, 1, "", "report"], [123, 2, 1, "", "shutdown"], [123, 2, 1, "", "start_run"]], "fl4health.reporting.wandb_reporter.WandBStepType": [[123, 3, 1, "", "EPOCH"], [123, 3, 1, "", "ROUND"], [123, 3, 1, "", "STEP"]], "fl4health.servers": [[125, 0, 0, "-", "adaptive_constraint_servers"], [129, 0, 0, "-", "base_server"], [130, 0, 0, "-", "client_level_dp_fed_avg_server"], [131, 0, 0, "-", "evaluate_server"], [132, 0, 0, "-", "fedpm_server"], [133, 0, 0, "-", "instance_level_dp_server"], [134, 0, 0, "-", "model_merge_server"], [135, 0, 0, "-", "nnunet_server"], [136, 0, 0, "-", "polling"], [137, 0, 0, "-", "scaffold_server"]], "fl4health.servers.adaptive_constraint_servers": [[126, 0, 0, "-", "ditto_server"], [127, 0, 0, "-", "fedprox_server"], [128, 0, 0, "-", "mrmtl_server"]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[126, 1, 1, "", "DittoServer"]], "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer": [[126, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[127, 1, 1, "", "FedProxServer"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer": [[127, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[128, 1, 1, "", "MrMtlServer"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer": [[128, 2, 1, "", "__init__"]], "fl4health.servers.base_server": [[129, 1, 1, "", "FlServer"]], "fl4health.servers.base_server.FlServer": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "evaluate_round"], [129, 2, 1, "", "fit"], [129, 2, 1, "", "fit_round"], [129, 2, 1, "", "fit_with_per_round_checkpointing"], [129, 2, 1, "", "poll_clients_for_sample_counts"], [129, 2, 1, "", "report_centralized_eval"], [129, 2, 1, "", "shutdown"], [129, 2, 1, "", "update_before_fit"]], "fl4health.servers.client_level_dp_fed_avg_server": [[130, 1, 1, "", "ClientLevelDPFedAvgServer"]], "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "fit"], [130, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.evaluate_server": [[131, 1, 1, "", "EvaluateServer"]], "fl4health.servers.evaluate_server.EvaluateServer": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "aggregate_evaluate"], [131, 2, 1, "", "configure_evaluate"], [131, 2, 1, "", "federated_evaluate"], [131, 2, 1, "", "fit"], [131, 2, 1, "", "load_model_checkpoint_to_parameters"]], "fl4health.servers.fedpm_server": [[132, 1, 1, "", "FedPmServer"]], "fl4health.servers.fedpm_server.FedPmServer": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "fit_round"]], "fl4health.servers.instance_level_dp_server": [[133, 1, 1, "", "InstanceLevelDpServer"]], "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "fit"], [133, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.model_merge_server": [[134, 1, 1, "", "ModelMergeServer"]], "fl4health.servers.model_merge_server.ModelMergeServer": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "fit"]], "fl4health.servers.nnunet_server": [[135, 1, 1, "", "NnunetServer"], [135, 4, 1, "", "add_items_to_config_fn"]], "fl4health.servers.nnunet_server.NnunetServer": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "initialize_server_model"], [135, 2, 1, "", "update_before_fit"]], "fl4health.servers.polling": [[136, 4, 1, "", "poll_client"], [136, 4, 1, "", "poll_clients"]], "fl4health.servers.scaffold_server": [[137, 1, 1, "", "DPScaffoldServer"], [137, 1, 1, "", "ScaffoldServer"]], "fl4health.servers.scaffold_server.DPScaffoldServer": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "fit"]], "fl4health.servers.scaffold_server.ScaffoldServer": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "fit"]], "fl4health.strategies": [[140, 0, 0, "-", "aggregate_utils"], [141, 0, 0, "-", "basic_fedavg"], [142, 0, 0, "-", "client_dp_fedavgm"], [143, 0, 0, "-", "fedavg_dynamic_layer"], [144, 0, 0, "-", "fedavg_sparse_coo_tensor"], [145, 0, 0, "-", "fedavg_with_adaptive_constraint"], [146, 0, 0, "-", "feddg_ga"], [147, 0, 0, "-", "feddg_ga_with_adaptive_constraint"], [148, 0, 0, "-", "fedpca"], [149, 0, 0, "-", "fedpm"], [150, 0, 0, "-", "flash"], [151, 0, 0, "-", "model_merge_strategy"], [152, 0, 0, "-", "noisy_aggregate"], [153, 0, 0, "-", "scaffold"], [154, 0, 0, "-", "strategy_with_poll"]], "fl4health.strategies.aggregate_utils": [[140, 4, 1, "", "aggregate_losses"], [140, 4, 1, "", "aggregate_results"]], "fl4health.strategies.basic_fedavg": [[141, 1, 1, "", "BasicFedAvg"], [141, 1, 1, "", "OpacusBasicFedAvg"]], "fl4health.strategies.basic_fedavg.BasicFedAvg": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "aggregate_evaluate"], [141, 2, 1, "", "aggregate_fit"], [141, 2, 1, "", "configure_evaluate"], [141, 2, 1, "", "configure_fit"], [141, 2, 1, "", "configure_poll"]], "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg": [[141, 2, 1, "", "__init__"]], "fl4health.strategies.client_dp_fedavgm": [[142, 1, 1, "", "ClientLevelDPFedAvgM"]], "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "aggregate_fit"], [142, 2, 1, "", "calculate_update_with_momentum"], [142, 2, 1, "", "configure_evaluate"], [142, 2, 1, "", "configure_fit"], [142, 2, 1, "", "modify_noise_multiplier"], [142, 2, 1, "", "split_model_weights_and_clipping_bits"], [142, 2, 1, "", "update_clipping_bound"], [142, 2, 1, "", "update_current_weights"]], "fl4health.strategies.fedavg_dynamic_layer": [[143, 1, 1, "", "FedAvgDynamicLayer"]], "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "aggregate"], [143, 2, 1, "", "aggregate_fit"], [143, 2, 1, "", "unweighted_aggregate"], [143, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[144, 1, 1, "", "FedAvgSparseCooTensor"]], "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "aggregate"], [144, 2, 1, "", "aggregate_fit"], [144, 2, 1, "", "unweighted_aggregate"], [144, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[145, 1, 1, "", "FedAvgWithAdaptiveConstraint"]], "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.feddg_ga": [[146, 1, 1, "", "FairnessMetric"], [146, 1, 1, "", "FairnessMetricType"], [146, 1, 1, "", "FedDgGa"], [146, 5, 1, "", "SignalForTypeException"]], "fl4health.strategies.feddg_ga.FairnessMetric": [[146, 2, 1, "", "__init__"]], "fl4health.strategies.feddg_ga.FairnessMetricType": [[146, 3, 1, "", "ACCURACY"], [146, 3, 1, "", "CUSTOM"], [146, 3, 1, "", "LOSS"], [146, 2, 1, "", "signal_for_type"]], "fl4health.strategies.feddg_ga.FedDgGa": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "aggregate_evaluate"], [146, 2, 1, "", "aggregate_fit"], [146, 2, 1, "", "configure_evaluate"], [146, 2, 1, "", "configure_fit"], [146, 2, 1, "", "get_current_weight_step_size"], [146, 2, 1, "", "update_weights_by_ga"], [146, 2, 1, "", "weight_and_aggregate_results"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[147, 1, 1, "", "FedDgGaAdaptiveConstraint"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.fedpca": [[148, 1, 1, "", "FedPCA"]], "fl4health.strategies.fedpca.FedPCA": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "aggregate_fit"], [148, 2, 1, "", "merge_subspaces_qr"], [148, 2, 1, "", "merge_subspaces_svd"], [148, 2, 1, "", "merge_two_subspaces_qr"]], "fl4health.strategies.fedpm": [[149, 1, 1, "", "FedPm"]], "fl4health.strategies.fedpm.FedPm": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "aggregate"], [149, 2, 1, "", "aggregate_bayesian"], [149, 2, 1, "", "reset_beta_priors"]], "fl4health.strategies.flash": [[150, 1, 1, "", "Flash"]], "fl4health.strategies.flash.Flash": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.model_merge_strategy": [[151, 1, 1, "", "ModelMergeStrategy"]], "fl4health.strategies.model_merge_strategy.ModelMergeStrategy": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "aggregate_evaluate"], [151, 2, 1, "", "aggregate_fit"], [151, 2, 1, "", "configure_evaluate"], [151, 2, 1, "", "configure_fit"], [151, 2, 1, "", "evaluate"], [151, 2, 1, "", "initialize_parameters"]], "fl4health.strategies.noisy_aggregate": [[152, 4, 1, "", "add_noise_to_array"], [152, 4, 1, "", "add_noise_to_ndarrays"], [152, 4, 1, "", "gaussian_noisy_aggregate_clipping_bits"], [152, 4, 1, "", "gaussian_noisy_unweighted_aggregate"], [152, 4, 1, "", "gaussian_noisy_weighted_aggregate"]], "fl4health.strategies.scaffold": [[153, 1, 1, "", "OpacusScaffold"], [153, 1, 1, "", "Scaffold"]], "fl4health.strategies.scaffold.OpacusScaffold": [[153, 2, 1, "", "__init__"]], "fl4health.strategies.scaffold.Scaffold": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "aggregate"], [153, 2, 1, "", "aggregate_fit"], [153, 2, 1, "", "compute_parameter_delta"], [153, 2, 1, "", "compute_updated_control_variates"], [153, 2, 1, "", "compute_updated_parameters"], [153, 2, 1, "", "compute_updated_weights"], [153, 2, 1, "", "configure_fit_all"], [153, 2, 1, "", "initialize_control_variates"]], "fl4health.strategies.strategy_with_poll": [[154, 1, 1, "", "StrategyWithPolling"]], "fl4health.strategies.strategy_with_poll.StrategyWithPolling": [[154, 2, 1, "", "configure_poll"]], "fl4health.utils": [[156, 0, 0, "-", "client"], [157, 0, 0, "-", "config"], [158, 0, 0, "-", "data_generation"], [159, 0, 0, "-", "dataset"], [160, 0, 0, "-", "dataset_converter"], [161, 0, 0, "-", "early_stopper"], [162, 0, 0, "-", "functions"], [163, 0, 0, "-", "load_data"], [164, 0, 0, "-", "logging"], [165, 0, 0, "-", "losses"], [167, 0, 0, "-", "metrics"], [168, 0, 0, "-", "msd_dataset_sources"], [169, 0, 0, "-", "nnunet_utils"], [170, 0, 0, "-", "parameter_extraction"], [171, 0, 0, "-", "partitioners"], [172, 0, 0, "-", "peft_parameter_extraction"], [173, 0, 0, "-", "privacy_utilities"], [174, 0, 0, "-", "random"], [175, 0, 0, "-", "sampler"], [176, 0, 0, "-", "snapshotter"], [177, 0, 0, "-", "typing"]], "fl4health.utils.client": [[156, 4, 1, "", "check_if_batch_is_empty_and_verify_input"], [156, 4, 1, "", "clone_and_freeze_model"], [156, 4, 1, "", "fold_loss_dict_into_metrics"], [156, 4, 1, "", "maybe_progress_bar"], [156, 4, 1, "", "move_data_to_device"], [156, 4, 1, "", "process_and_check_validation_steps"], [156, 4, 1, "", "set_pack_losses_with_val_metrics"]], "fl4health.utils.config": [[157, 5, 1, "", "InvalidConfigError"], [157, 4, 1, "", "check_config"], [157, 4, 1, "", "load_config"], [157, 4, 1, "", "make_dict_with_epochs_or_steps"], [157, 4, 1, "", "narrow_dict_type"], [157, 4, 1, "", "narrow_dict_type_and_set_attribute"]], "fl4health.utils.data_generation": [[158, 1, 1, "", "SyntheticFedProxDataset"], [158, 1, 1, "", "SyntheticIidFedProxDataset"], [158, 1, 1, "", "SyntheticNonIidFedProxDataset"]], "fl4health.utils.data_generation.SyntheticFedProxDataset": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "construct_covariance_matrix"], [158, 2, 1, "", "generate"], [158, 2, 1, "", "generate_client_tensors"], [158, 2, 1, "", "one_layer_map_inputs_to_outputs"], [158, 2, 1, "", "two_layer_map_inputs_to_outputs"]], "fl4health.utils.data_generation.SyntheticIidFedProxDataset": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "generate_client_tensors"], [158, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "generate_client_tensors"], [158, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.dataset": [[159, 1, 1, "", "BaseDataset"], [159, 1, 1, "", "DictionaryDataset"], [159, 1, 1, "", "SslTensorDataset"], [159, 1, 1, "", "SyntheticDataset"], [159, 1, 1, "", "TensorDataset"], [159, 4, 1, "", "select_by_indices"]], "fl4health.utils.dataset.BaseDataset": [[159, 2, 1, "", "update_target_transform"], [159, 2, 1, "", "update_transform"]], "fl4health.utils.dataset.DictionaryDataset": [[159, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SyntheticDataset": [[159, 2, 1, "", "__init__"]], "fl4health.utils.dataset_converter": [[160, 1, 1, "", "AutoEncoderDatasetConverter"], [160, 1, 1, "", "DatasetConverter"]], "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "convert_dataset"], [160, 2, 1, "", "get_condition_vector_size"], [160, 2, 1, "", "get_unpacking_function"], [160, 2, 1, "", "unpack_input_condition"]], "fl4health.utils.dataset_converter.DatasetConverter": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "convert_dataset"]], "fl4health.utils.early_stopper": [[161, 1, 1, "", "EarlyStopper"]], "fl4health.utils.early_stopper.EarlyStopper": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "add_default_snapshot_attr"], [161, 2, 1, "", "delete_default_snapshot_attr"], [161, 2, 1, "", "load_snapshot"], [161, 2, 1, "", "save_snapshot"], [161, 2, 1, "", "should_stop"]], "fl4health.utils.functions": [[162, 1, 1, "", "BernoulliSample"], [162, 4, 1, "", "decode_and_pseudo_sort_results"], [162, 4, 1, "", "pseudo_sort_scoring_function"], [162, 4, 1, "", "select_zeroeth_element"], [162, 4, 1, "", "sigmoid_inverse"]], "fl4health.utils.functions.BernoulliSample": [[162, 2, 1, "", "backward"], [162, 2, 1, "", "forward"], [162, 2, 1, "", "setup_context"]], "fl4health.utils.load_data": [[163, 1, 1, "", "ToNumpy"], [163, 4, 1, "", "get_cifar10_data_and_target_tensors"], [163, 4, 1, "", "get_mnist_data_and_target_tensors"], [163, 4, 1, "", "get_train_and_val_cifar10_datasets"], [163, 4, 1, "", "get_train_and_val_mnist_datasets"], [163, 4, 1, "", "load_cifar10_data"], [163, 4, 1, "", "load_cifar10_test_data"], [163, 4, 1, "", "load_mnist_data"], [163, 4, 1, "", "load_mnist_test_data"], [163, 4, 1, "", "load_msd_dataset"], [163, 4, 1, "", "split_data_and_targets"]], "fl4health.utils.logging": [[164, 1, 1, "", "LoggingMode"]], "fl4health.utils.logging.LoggingMode": [[164, 3, 1, "", "EARLY_STOP_VALIDATION"], [164, 3, 1, "", "TEST"], [164, 3, 1, "", "TRAIN"], [164, 3, 1, "", "VALIDATION"]], "fl4health.utils.losses": [[165, 1, 1, "", "EvaluationLosses"], [165, 1, 1, "", "LossMeter"], [165, 1, 1, "", "LossMeterType"], [165, 1, 1, "", "Losses"], [165, 1, 1, "", "TrainingLosses"]], "fl4health.utils.losses.EvaluationLosses": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "aggregate"], [165, 2, 1, "", "as_dict"]], "fl4health.utils.losses.LossMeter": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "aggregate_losses_dict"], [165, 2, 1, "", "clear"], [165, 2, 1, "", "compute"], [165, 2, 1, "", "update"]], "fl4health.utils.losses.LossMeterType": [[165, 3, 1, "", "ACCUMULATION"], [165, 3, 1, "", "AVERAGE"]], "fl4health.utils.losses.Losses": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "aggregate"], [165, 2, 1, "", "as_dict"]], "fl4health.utils.losses.TrainingLosses": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "aggregate"], [165, 2, 1, "", "as_dict"]], "fl4health.utils.msd_dataset_sources": [[168, 1, 1, "", "MsdDataset"], [168, 4, 1, "", "get_msd_dataset_enum"]], "fl4health.utils.msd_dataset_sources.MsdDataset": [[168, 3, 1, "", "TASK01_BRAINTUMOUR"], [168, 3, 1, "", "TASK02_HEART"], [168, 3, 1, "", "TASK03_LIVER"], [168, 3, 1, "", "TASK04_HIPPOCAMPUS"], [168, 3, 1, "", "TASK05_PROSTATE"], [168, 3, 1, "", "TASK06_LUNG"], [168, 3, 1, "", "TASK07_PANCREAS"], [168, 3, 1, "", "TASK08_HEPATICVESSEL"], [168, 3, 1, "", "TASK09_SPLEEN"], [168, 3, 1, "", "TASK10_COLON"]], "fl4health.utils.nnunet_utils": [[169, 1, 1, "", "Module2LossWrapper"], [169, 1, 1, "", "NnunetConfig"], [169, 1, 1, "", "PolyLRSchedulerWrapper"], [169, 1, 1, "", "StreamToLogger"], [169, 4, 1, "", "collapse_one_hot_tensor"], [169, 4, 1, "", "convert_deep_supervision_dict_to_list"], [169, 4, 1, "", "convert_deep_supervision_list_to_dict"], [169, 4, 1, "", "get_dataset_n_voxels"], [169, 4, 1, "", "get_segs_from_probs"], [169, 1, 1, "", "nnUNetDataLoaderWrapper"], [169, 4, 1, "", "prepare_loss_arg"], [169, 4, 1, "", "reload_modules"], [169, 4, 1, "", "set_nnunet_env"], [169, 4, 1, "", "use_default_signal_handlers"]], "fl4health.utils.nnunet_utils.Module2LossWrapper": [[169, 2, 1, "", "forward"]], "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "get_lr"]], "fl4health.utils.nnunet_utils.StreamToLogger": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "flush"], [169, 2, 1, "", "write"]], "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "reset"], [169, 2, 1, "", "shutdown"]], "fl4health.utils.parameter_extraction": [[170, 4, 1, "", "check_shape_match"], [170, 4, 1, "", "get_all_model_parameters"]], "fl4health.utils.partitioners": [[171, 1, 1, "", "DirichletLabelBasedAllocation"]], "fl4health.utils.partitioners.DirichletLabelBasedAllocation": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "partition_dataset"], [171, 2, 1, "", "partition_label_indices"]], "fl4health.utils.peft_parameter_extraction": [[172, 4, 1, "", "get_all_peft_parameters_from_model"]], "fl4health.utils.privacy_utilities": [[173, 4, 1, "", "convert_model_to_opacus_model"], [173, 4, 1, "", "map_model_to_opacus_model"], [173, 4, 1, "", "privacy_validate_and_fix_modules"]], "fl4health.utils.random": [[174, 4, 1, "", "generate_hash"], [174, 4, 1, "", "restore_random_state"], [174, 4, 1, "", "save_random_state"], [174, 4, 1, "", "set_all_random_seeds"], [174, 4, 1, "", "unset_all_random_seeds"]], "fl4health.utils.sampler": [[175, 1, 1, "", "DirichletLabelBasedSampler"], [175, 1, 1, "", "LabelBasedSampler"], [175, 1, 1, "", "MinorityLabelBasedSampler"]], "fl4health.utils.sampler.DirichletLabelBasedSampler": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "subsample"]], "fl4health.utils.sampler.LabelBasedSampler": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "subsample"]], "fl4health.utils.sampler.MinorityLabelBasedSampler": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "subsample"]], "fl4health.utils.snapshotter": [[176, 1, 1, "", "AbstractSnapshotter"], [176, 1, 1, "", "LRSchedulerSnapshotter"], [176, 1, 1, "", "NumberSnapshotter"], [176, 1, 1, "", "OptimizerSnapshotter"], [176, 1, 1, "", "SerializableObjectSnapshotter"], [176, 1, 1, "", "TorchModuleSnapshotter"]], "fl4health.utils.snapshotter.AbstractSnapshotter": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "dict_wrap_attr"], [176, 2, 1, "", "load"], [176, 2, 1, "", "load_attribute"], [176, 2, 1, "", "save"], [176, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.LRSchedulerSnapshotter": [[176, 2, 1, "", "load_attribute"], [176, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.NumberSnapshotter": [[176, 2, 1, "", "load_attribute"], [176, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.OptimizerSnapshotter": [[176, 2, 1, "", "load_attribute"], [176, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SerializableObjectSnapshotter": [[176, 2, 1, "", "load_attribute"], [176, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.TorchModuleSnapshotter": [[176, 2, 1, "", "load_attribute"], [176, 2, 1, "", "save_attribute"]], "fl4health.utils.typing": [[177, 1, 1, "", "LogLevel"]], "fl4health.utils.typing.LogLevel": [[177, 3, 1, "", "CRITICAL"], [177, 3, 1, "", "DEBUG"], [177, 3, 1, "", "ERROR"], [177, 3, 1, "", "INFO"], [177, 3, 1, "", "NOTSET"], [177, 3, 1, "", "WARNING"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "terms": {"": [1, 10, 11, 16, 20, 21, 22, 24, 26, 27, 28, 34, 36, 40, 41, 43, 44, 45, 47, 48, 78, 79, 85, 103, 107, 109, 119, 123, 129, 135, 141, 143, 144, 146, 148, 149, 150, 153, 154, 156, 158, 169, 171, 176], "0": [7, 23, 26, 40, 41, 42, 43, 45, 47, 52, 55, 65, 67, 68, 70, 72, 74, 77, 82, 83, 84, 90, 92, 93, 97, 109, 119, 123, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 158, 162, 163, 169, 171, 175, 177], "000": 45, "000local": 45, "001": [7, 67], "00818": 32, "01": 82, "03075": 56, "03871": 142, "05": [69, 93], "05206": 34, "05629": [141, 145], "05709": [65, 87], "06127": 158, "06378": [48, 137, 153], "06963": [142, 152], "07": [72, 77], "07078": [34, 86], "07978313": [171, 175], "08857052": [171, 175], "09": 150, "09158": [65, 87], "09278": [48, 137], "1": [15, 23, 26, 40, 41, 43, 45, 47, 48, 65, 66, 67, 69, 72, 74, 77, 82, 84, 90, 92, 93, 97, 99, 109, 119, 123, 129, 130, 131, 132, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 158, 161, 162, 163, 169, 171, 175], "10": [1, 26, 40, 41, 67, 97, 158, 163, 169, 171, 175, 177], "100": 175, "1000": [158, 171, 175], "10000": 171, "12": 45, "1308": 162, "13461": 21, "15": 55, "15328": [33, 132, 149], "1602": [141, 145], "16825": 35, "1710": [142, 152], "1812": 158, "19": 69, "1905": 142, "1910": [48, 137, 153], "1912": 32, "19619462": [171, 175], "19644968": [171, 175], "19992536": [171, 175], "1d": [90, 158, 171], "1e": [69, 72, 77, 93, 150], "2": [7, 22, 30, 45, 48, 65, 69, 72, 77, 97, 118, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 158, 162, 163, 169, 171, 175], "20": [7, 26, 40, 41, 56, 177], "2002": [65, 87], "2003": 21, "20080513": [171, 175], "2016": [65, 118], "2019": 56, "2023": [146, 147], "2066252": [171, 175], "2102": [34, 86], "2111": [48, 137], "2207": [56, 65, 87], "2209": [33, 132, 149], "2303": 34, "2309": 35, "23645891": [171, 175], "250": [45, 169], "29519184": [171, 175], "2999956": [171, 175], "2d": [45, 85, 90, 93, 97, 158], "2i": 69, "2n": 65, "3": [1, 7, 45, 72, 77, 171], "30": 177, "32": [118, 136, 174], "333": 74, "3432": 162, "3837": 169, "3d": [72, 77, 90, 93], "3d_fullr": 45, "4": [45, 48, 69, 72, 77, 162], "40": 177, "4096": 174, "42": 174, "4d": 93, "5": [43, 45, 47, 65, 67, 68, 70, 72, 74, 77, 82, 83, 93, 97, 142, 145, 147, 158, 161, 169, 171, 175], "50": [67, 175, 177], "5d": 93, "6": 97, "60": 158, "64": [7, 169], "667": 74, "6b180037abbebea991d8b1232f8a8ca9": 65, "7": 55, "8": [30, 52, 55, 174, 175], "80": 1, "8080": 7, "9": [1, 7, 74, 142, 150, 169], "99": 150, "A": [1, 4, 10, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 93, 94, 95, 97, 107, 109, 119, 120, 121, 123, 126, 128, 130, 131, 132, 133, 134, 135, 137, 140, 143, 144, 145, 146, 147, 148, 149, 151, 153, 157, 159, 160, 163, 165, 169, 174, 176], "AND": [10, 34, 36, 135, 153, 159], "AS": 47, "As": [1, 10, 11, 13, 27, 72, 77, 97, 158, 162], "At": [1, 22, 29, 36, 42, 161], "By": [13, 20, 22, 26, 40, 41, 45, 67, 78, 79, 95, 129, 153], "For": [1, 11, 13, 16, 21, 22, 24, 26, 27, 31, 34, 36, 40, 41, 42, 43, 44, 45, 47, 62, 72, 74, 77, 82, 83, 90, 93, 97, 99, 103, 106, 109, 115, 118, 119, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 142, 143, 144, 145, 146, 147, 148, 152, 158, 159, 162, 169, 173, 174, 175], "If": [1, 7, 10, 11, 12, 13, 15, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 68, 69, 72, 74, 76, 77, 78, 79, 82, 83, 87, 90, 92, 93, 97, 112, 115, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 142, 145, 146, 147, 148, 153, 156, 157, 158, 161, 162, 169, 171, 174], "In": [1, 4, 10, 20, 21, 22, 26, 27, 29, 34, 36, 40, 44, 45, 46, 47, 69, 78, 79, 90, 92, 93, 107, 109, 118, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 148, 149, 151, 158, 165, 171, 175], "It": [1, 10, 12, 13, 31, 44, 45, 65, 83, 85, 86, 103, 107, 113, 119, 120, 123, 129, 141, 142, 146, 147, 153, 158, 162, 171, 173, 174], "NOT": [10, 36, 88, 98, 145, 147], "No": [17, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 117], "Not": [42, 44, 45, 59, 102, 131, 134, 151], "OR": 135, "On": 44, "One": [4, 21, 98, 133, 137, 163], "Or": 156, "TO": 47, "That": [1, 11, 29, 34, 82, 83, 94, 142, 153, 158, 171], "The": [1, 4, 7, 10, 11, 12, 13, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 56, 59, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 106, 109, 113, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 165, 169, 171, 173, 174, 175, 176], "Then": [22, 23, 26, 27, 28, 36, 40, 41, 44, 45, 48, 149, 153, 158], "There": [36, 162, 171], "These": [1, 4, 22, 27, 29, 30, 36, 42, 46, 69, 82, 86, 94, 95, 98, 99, 103, 130, 131, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 158, 170, 172], "To": [1, 7, 22, 28, 30, 36, 42, 45, 48, 72, 73, 74, 77, 78, 79, 83, 134, 165], "Will": [10, 146, 159], "With": 7, "_": [7, 10, 12, 48, 70], "_1": 48, "_2": 48, "__call__": [72, 77], "__init__": [1, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 59, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 165, 169, 171, 175, 176], "_config": 45, "_description_": 29, "_f": 97, "_hydrate_model_for_checkpoint": [13, 134], "_loss": [7, 22, 45, 80, 113, 169], "_lrschedul": [45, 169], "_maskedbatchnorm": 93, "_modul": 90, "_p": 70, "_summary_": 68, "ab": [21, 32, 34, 48, 56, 137, 141, 142, 145, 158], "ab8068dbc96804a5c1a8b898fd115175cfebfe75": 82, "abadi": 118, "abc": [1, 10, 72, 73, 77, 83, 95, 96, 105, 106, 112, 117, 118, 129, 154, 158, 159, 165, 175, 176], "abil": [36, 78, 79], "abl": [1, 43], "ablat": [4, 35], "about": [20, 22, 23, 27, 29, 36, 42, 44, 48, 53, 78, 79], "abov": [1, 4, 26, 36, 40, 41, 69, 72, 77, 97, 109, 117, 118, 119, 123, 142, 144, 148, 158], "absenc": 4, "absolut": [66, 169], "abstract": [10, 42, 65, 72, 73, 77, 83, 95, 96, 105, 106, 108, 112, 117, 118, 154, 158, 165, 175, 176], "abstracta": [8, 81, 83], "abstractsnapshott": [8, 155, 176], "accept": [74, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 162], "accept_failur": [126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "access": [119, 123], "accomplish": [129, 175], "accord": [23, 45, 48, 97, 109, 141, 144, 145, 151, 153, 165, 171], "accordingli": 83, "account": [38, 117, 119, 123, 130, 133, 137, 142, 148], "accumul": [26, 40, 41, 72, 73, 74, 76, 77, 85, 155, 165], "accumulate_featur": 85, "accuraci": [7, 8, 72, 74, 77, 139, 146, 151, 153], "achiev": 22, "across": [36, 42, 44, 66, 70, 75, 85, 117, 119, 120, 123, 143, 144, 148, 149, 152, 153, 158, 162, 169, 171], "act": [84, 93, 95, 99, 156], "activ": [1, 7, 22, 24, 26, 27, 36, 40, 41, 43, 47], "actual": [11, 44, 97], "ad": [1, 4, 10, 20, 22, 23, 26, 27, 29, 36, 40, 41, 42, 44, 48, 78, 79, 85, 90, 93, 95, 97, 118, 119, 123, 130, 133, 135, 137, 152, 160], "adap": 169, "adapt": [4, 13, 20, 27, 37, 44, 56, 78, 79, 82, 142, 145, 147, 150], "adapt_loss_weight": [145, 147], "adaptive_alpha": 82, "adaptive_clip": [23, 142], "adaptive_constraint_serv": [8, 124], "adaptive_drift_constrain": [8, 78], "adaptive_drift_constraint_cli": [8, 19], "adaptiveconstraintservercheckpointandstatemodul": [8, 9, 13, 126, 127, 128], "adaptivedriftconstrainedmixin": [8, 78, 79], "adaptivedriftconstrainedprotocol": [8, 78, 79], "adaptivedriftconstraintcli": [8, 19, 20, 27, 31, 44], "add": [4, 10, 20, 26, 27, 33, 36, 40, 41, 44, 72, 77, 78, 79, 90, 97, 113, 119, 120, 123, 129, 132, 142, 152, 162], "add_default_snapshot_attr": [155, 161], "add_items_to_config_fn": [8, 124, 135], "add_mean": 97, "add_noise_to_arrai": [8, 139, 152], "add_noise_to_ndarrai": [8, 139, 152], "addit": [1, 4, 13, 20, 21, 22, 24, 26, 27, 28, 36, 37, 40, 41, 43, 44, 45, 47, 78, 79, 85, 90, 92, 93, 129, 135, 145, 158, 160, 165, 174], "addition": [27, 45], "additional_dim": 169, "additional_loss": 165, "additional_paramet": [104, 106, 108], "adher": 1, "adjust": [4, 145, 146, 147], "adjustment_weight": 146, "adjustment_weight_step_s": [146, 147], "advanc": [21, 22], "aeprocessor": [110, 111, 112], "affect": [135, 174], "affin": [93, 158], "aforement": 162, "after": [4, 7, 10, 11, 13, 20, 21, 22, 24, 26, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 82, 83, 93, 97, 107, 114, 119, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 142, 148, 149, 151, 158, 163, 169], "afterward": [83, 169], "again": 16, "against": [20, 21, 22, 24, 26, 27, 28, 36, 40, 41, 43, 44, 47, 72, 73, 74, 77, 78, 79, 146, 147], "agglom": 148, "aggreg": [4, 11, 13, 20, 21, 22, 24, 27, 29, 30, 31, 36, 41, 42, 43, 44, 45, 46, 47, 48, 70, 75, 78, 79, 82, 84, 86, 88, 98, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 162, 165], "aggregate_bayesian": [139, 149], "aggregate_evalu": [124, 131, 139, 141, 146, 151], "aggregate_fit": [139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153], "aggregate_loss": [8, 139, 140], "aggregate_losses_dict": [155, 165], "aggregate_result": [8, 139, 140], "aggregate_util": [8, 139], "aggregated_metr": 75, "aggregation_mod": 84, "ai": [52, 119, 123], "aim": [4, 47, 65, 69, 70, 83, 126, 127, 128, 129, 130, 132, 133, 135, 137], "akin": [11, 27, 44], "al": [56, 118, 146, 147], "algorithm": [4, 21, 22, 27, 29, 31, 33, 36, 43, 44, 97, 107, 126, 128, 132, 137, 142, 146, 147, 148, 150, 174], "alia": [24, 27, 28, 34, 43, 47], "align": [67, 141, 143, 144, 148, 149, 153], "all": [1, 4, 15, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 34, 36, 40, 41, 43, 44, 45, 46, 47, 48, 53, 59, 62, 68, 75, 76, 78, 79, 83, 85, 88, 90, 97, 102, 103, 107, 109, 117, 118, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 158, 160, 161, 162, 165, 169, 170, 172], "all_client_metr": 75, "all_h_u_per_sampl": 69, "all_h_u_per_v_i": 69, "alloc": [163, 171], "allow": [4, 10, 11, 13, 20, 22, 23, 27, 29, 30, 34, 36, 37, 38, 42, 44, 48, 69, 74, 78, 79, 85, 94, 97, 115, 119, 123, 129, 132, 135, 141, 143, 144, 146, 148, 149, 161, 162, 174], "almost": 152, "along": [1, 4, 13, 21, 22, 28, 29, 30, 34, 36, 42, 45, 48, 75, 76, 85, 88, 98, 131, 142, 143, 144, 145, 148, 149, 165], "alpha": [22, 26, 40, 41, 82, 149, 158], "alpha_lr": 82, "alpha_new": 149, "alreadi": [1, 7, 10, 11, 12, 13, 21, 22, 28, 42, 45, 97, 103, 119, 123, 148, 163, 176], "also": [1, 4, 13, 20, 22, 23, 24, 26, 27, 28, 33, 36, 40, 41, 43, 44, 45, 46, 47, 48, 69, 78, 79, 86, 88, 94, 106, 107, 109, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 142, 143, 144, 145, 146, 147, 148, 149, 153, 158, 160, 162, 169, 174], "alter": 1, "altern": [97, 158], "although": [83, 169], "alwai": [10, 12, 13, 20, 23, 29, 42, 44, 45, 78, 79, 94, 107, 119, 120, 123, 151, 169], "always_preprocess": 45, "among": 144, "amount": [129, 130, 133, 137, 145, 147], "an": [1, 4, 7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 55, 63, 73, 74, 78, 79, 83, 84, 87, 90, 92, 93, 94, 95, 97, 106, 107, 109, 119, 120, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 154, 156, 158, 159, 162, 164, 165, 168, 169, 171, 173, 175, 177], "analysi": [1, 97, 148], "analyt": 113, "analyz": 52, "ani": [1, 10, 11, 13, 21, 22, 23, 24, 26, 28, 30, 34, 40, 41, 43, 45, 47, 53, 55, 56, 80, 82, 85, 86, 95, 103, 104, 105, 106, 107, 108, 109, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 143, 144, 146, 147, 148, 154, 157, 158, 160, 162, 169, 170, 173, 174, 175, 176], "announc": [22, 45], "anoth": [4, 7, 90, 92, 93, 109, 153, 158, 171], "anticip": 4, "anyth": [4, 22, 26, 27, 28, 90, 129], "apfl": [4, 21, 22, 26, 40, 41, 45, 82], "apfl_bas": [8, 81], "apfl_client": [8, 19], "apflclient": [8, 19, 21], "apflmodul": [8, 81, 82], "api": 4, "app": 131, "appear": 1, "append": [22, 45, 59, 72, 73, 74, 77, 165], "appendix": 158, "appli": [1, 4, 15, 16, 17, 20, 22, 24, 26, 28, 40, 41, 45, 48, 52, 55, 59, 65, 74, 78, 79, 82, 90, 92, 93, 97, 114, 117, 118, 135, 149, 152, 160, 162, 163, 169], "applic": [4, 10, 59, 91, 114, 118, 145, 147, 169], "apply_adaptive_drift_to_cli": [8, 78, 79], "apply_layer_filt": [100, 103], "approach": [11, 33, 35, 46, 47, 67, 82, 86, 98, 141, 142, 145, 148, 149, 173], "appropri": [20, 22, 29, 34, 43, 47, 78, 79, 83, 140, 158], "approv": 1, "approx": 142, "approxim": [26, 40, 41, 69, 97, 117, 148], "ar": [1, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 65, 66, 67, 69, 71, 72, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 106, 107, 109, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 169, 170, 171, 172, 173, 175], "arbitrari": [22, 106, 109, 120, 121, 143, 144, 162], "architectur": [4, 13, 27, 36, 82, 83, 86, 135, 141, 153], "area": [72, 77, 143, 144], "aren": 37, "arg": [78, 79, 80, 96, 162, 173, 175], "argmax": 158, "argument": [7, 10, 12, 22, 26, 40, 41, 74, 97, 119, 120, 121, 123, 135, 156, 162, 169], "around": [1, 127], "arrai": [20, 78, 79, 102, 106, 134, 140, 149, 152, 153, 162, 170, 171, 172, 175], "arrang": 148, "art": 4, "articl": [47, 70], "artifact": [126, 127, 128, 129, 130, 132, 133, 135, 137], "arxiv": [21, 32, 33, 34, 35, 48, 56, 65, 86, 87, 132, 137, 141, 142, 145, 149, 152, 153, 158, 162], "as_dict": [155, 165], "ask": [36, 126, 127, 128, 129, 130, 132, 133, 135, 137], "assert": 10, "assertionerror": [42, 72, 77], "assess": 67, "assign": [171, 175], "associ": [1, 10, 12, 16, 22, 23, 29, 30, 35, 37, 43, 47, 52, 62, 68, 70, 72, 73, 74, 76, 77, 82, 83, 98, 99, 106, 109, 119, 123, 131, 136, 137, 141, 142, 153, 158, 159, 170, 171, 172, 173], "assum": [13, 20, 21, 22, 23, 26, 27, 28, 29, 36, 40, 41, 42, 45, 46, 48, 66, 69, 72, 77, 78, 79, 83, 87, 90, 92, 93, 97, 98, 102, 103, 117, 118, 131, 142, 146, 148, 149, 151, 153, 156, 158, 162, 169, 171], "assumpt": [83, 85], "attempt": [4, 10, 12, 13, 29, 37, 47, 171, 173], "attent": 159, "attribut": [10, 21, 22, 23, 24, 26, 27, 28, 29, 36, 40, 41, 42, 44, 45, 48, 72, 73, 74, 77, 85, 130, 133, 146, 157, 161, 162, 176], "attribute_nam": 157, "attribute_snapshot": 176, "aucroc": [72, 77], "augment": [31, 45, 169], "auto": 83, "autocast": 45, "autodocstr": 1, "autoencod": [8, 83, 110, 160], "autoencoderdatasetconvert": [8, 155, 160], "autoencoderprocess": [110, 111, 112], "autoencoders_bas": [8, 81], "autograd": 162, "autom": 1, "automat": [1, 7, 87, 162], "auxiliari": [20, 78, 79, 147], "avail": [1, 4, 11, 13, 15, 17, 129, 137, 141, 151, 153], "available_cli": [141, 151], "averag": [4, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 72, 74, 77, 81, 84, 130, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 165, 169], "avoid": [72, 77, 119, 123, 169, 174], "awai": [26, 40, 41, 97, 107], "awar": 37, "axi": 84, "b": [22, 45, 148, 158], "b_1": 158, "b_2": 158, "b_i": 158, "b_k": [118, 158], "back": [10, 12, 22, 29, 30, 42, 46, 90, 92, 93, 97, 142, 153, 169], "background": 169, "backprop": [21, 22, 45], "backpropag": 28, "backward": [20, 22, 26, 27, 28, 36, 40, 41, 43, 44, 48, 78, 79, 155, 162, 165], "balanc": [72, 77], "balanced_accuraci": [72, 77], "balanced_accuracy_scor": [72, 77], "balancedaccuraci": [8, 72, 77], "bar": [20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 156], "base": [10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 175, 176, 177], "base_loss": 113, "base_metr": [8, 72], "base_model": 99, "base_modul": [86, 94, 99], "base_report": [8, 119], "base_sampling_manag": [8, 14], "base_serv": [7, 8, 124], "basecli": [78, 79], "basedataset": [8, 114, 155, 159, 175], "baseestim": 59, "baseexcept": [131, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153], "basefractionsamplingmanag": [8, 14, 15, 17, 18, 142, 153], "basereport": [8, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "baseservercheckpointandstatemodul": [8, 9, 13, 129, 130], "basi": 69, "basic": [10, 13, 22, 45, 46, 48, 79, 112, 119, 123, 126, 128, 135, 146], "basic_cli": [7, 8, 19], "basic_exampl": 7, "basic_fedavg": [8, 139], "basica": [8, 81, 83], "basiccli": [7, 8, 10, 19, 20, 21, 22, 23, 28, 29, 32, 33, 34, 35, 37, 38, 43, 45, 46, 47, 48, 79, 80, 161, 176], "basicclientprotocol": [8, 78, 79, 80], "basicclientprotocolpresetup": [8, 78, 79, 80], "basicfedavg": [8, 133, 139, 141, 142, 143, 144, 145, 148, 150, 153], "batch": [4, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 65, 66, 74, 83, 84, 85, 93, 106, 117, 118, 133, 137, 142, 156, 163, 169], "batch_siz": [7, 45, 52, 55, 65, 66, 70, 72, 77, 85, 88, 94, 98, 99, 133, 137, 163, 169], "batchnorm": 173, "bayesian": [132, 149], "bayesian_aggreg": 149, "becaus": [11, 34, 45, 97, 102, 134, 142, 169], "becom": 15, "been": [1, 4, 7, 11, 13, 20, 22, 24, 29, 30, 33, 42, 48, 75, 78, 79, 83, 85, 90, 95, 97, 103, 106, 129, 134, 135, 142, 156, 158, 162, 171], "befor": [1, 7, 11, 13, 15, 22, 24, 26, 27, 31, 40, 41, 42, 43, 44, 45, 47, 48, 69, 74, 94, 95, 119, 123, 126, 127, 128, 129, 130, 132, 134, 136, 137, 143, 144, 145, 147, 160, 161, 169], "begin": [22, 36, 45, 46, 129, 132, 149], "behavior": [20, 29, 30, 38, 45, 74, 78, 79, 126, 127, 128, 129, 130, 132, 133, 137, 146, 169], "behind": 148, "being": [4, 12, 13, 20, 22, 23, 24, 27, 29, 32, 35, 36, 37, 42, 43, 44, 46, 47, 48, 71, 74, 78, 79, 99, 129, 130, 133, 135, 137, 141, 153, 169], "believ": 97, "belong": [99, 106, 109, 144, 148], "below": [1, 23, 72, 74, 77, 102, 158], "benchmark": 174, "bernoulli": [90, 92, 93, 149, 162], "bernoulli_prob": 162, "bernoullisampl": [8, 155, 162], "best": [4, 161], "bestlossopacuscheckpoint": [8, 9, 12], "bestlosstorchmodulecheckpoint": [8, 9, 10], "bestmetrictorchmodulecheckpoint": [8, 9, 10], "beta": [22, 26, 40, 41, 69, 132, 142, 149, 158, 171, 175], "beta_1": 150, "beta_2": 150, "beta_global_update_interv": [40, 41], "beta_new": 149, "beta_with_extreme_kernel_base_valu": [64, 69], "better": [1, 4, 10], "between": [4, 21, 22, 23, 24, 26, 27, 31, 32, 34, 35, 36, 40, 41, 43, 44, 46, 48, 65, 66, 67, 68, 69, 70, 71, 74, 90, 92, 93, 107, 109, 113, 149, 163], "bia": [90, 92, 93, 158], "bias": [93, 119, 123], "bias_scor": 107, "bin": 1, "binari": [45, 57, 63, 72, 77, 90, 92, 93, 107, 142, 149, 169], "binarysoftdicecoeffici": [8, 72, 77], "bit": [13, 23, 129, 132, 142, 152, 169], "black": 1, "blank": [126, 127, 128, 129, 130, 132, 133, 137], "blob": [45, 82, 118], "block": [74, 90, 148, 169], "bool": [1, 10, 12, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 62, 67, 68, 69, 78, 79, 80, 82, 85, 87, 88, 90, 91, 92, 93, 97, 99, 103, 107, 112, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 160, 161, 169, 173, 174], "boolean": [20, 22, 23, 27, 29, 36, 44, 46, 78, 79, 85, 93, 162, 173], "both": [4, 7, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 74, 82, 83, 84, 88, 90, 93, 98, 126, 127, 128, 129, 130, 132, 133, 135, 137, 153, 157], "bound": [23, 90, 92, 93, 117, 118, 142, 152, 175], "branch": 1, "break": [1, 4, 34, 171], "buf": 169, "buffer": [26, 40, 41, 85, 169], "bug": 158, "built": [1, 4, 142, 153], "byte": [29, 62, 80, 147, 150], "c": [1, 23, 48, 93, 153, 158], "c_": 153, "c_i": 48, "c_t": 142, "c_updat": 153, "cach": 45, "calcul": [4, 21, 22, 24, 29, 36, 43, 47, 48, 72, 74, 77, 94, 107, 113, 142, 146, 153, 156, 169], "calculate_parameters_norm": [19, 23], "calculate_update_with_momentum": [139, 142], "call": [1, 7, 10, 11, 12, 13, 16, 20, 21, 22, 23, 24, 26, 27, 28, 31, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 83, 85, 109, 119, 120, 121, 123, 129, 132, 143, 144, 149, 162, 169, 173, 175], "callabl": [1, 52, 55, 56, 74, 83, 85, 107, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 160, 163, 169], "can": [1, 7, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 40, 41, 42, 44, 45, 48, 65, 67, 69, 78, 79, 83, 85, 87, 97, 106, 112, 115, 117, 119, 123, 129, 134, 135, 142, 143, 144, 146, 147, 148, 149, 151, 153, 154, 156, 160, 161, 162, 169, 174], "cancer": 55, "cannot": [119, 123], "capabl": 83, "care": [83, 169], "carri": [11, 13, 130], "case": [20, 21, 22, 26, 27, 30, 40, 42, 47, 78, 79, 109, 119, 120, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 148, 149, 151, 152, 156, 165, 169], "categor": 62, "categori": 62, "caus": [126, 127, 128, 129, 130, 132, 133, 135, 137], "cc": 65, "cdot": [23, 48, 74, 82, 83, 97, 153, 158], "cell": 53, "cell_typ": 53, "center": [97, 152, 158], "center_data": [81, 97], "central": [117, 141, 142, 143, 144, 145, 148, 149, 151, 153], "certain": [12, 99, 144, 174], "cfg_fn": 135, "chang": [1, 7, 33, 119, 123, 145, 146, 147], "channel": [72, 77, 90, 93, 135], "charact": 169, "check": [10, 22, 28, 29, 37, 45, 85, 91, 119, 121, 123, 146, 156, 157, 169, 170], "check_config": [8, 155, 157], "check_if_batch_is_empty_and_verify_input": [8, 155, 156], "check_shape_match": [8, 155, 170], "check_target_prediction_keys_equ": [72, 76], "checker": 1, "checkpoint": [1, 8, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 85, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 146, 161, 165], "checkpoint_and_state_modul": [20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 126, 127, 128, 129, 130, 132, 133, 135, 137], "checkpoint_dict": 10, "checkpoint_dir": [10, 12], "checkpoint_exist": [9, 10], "checkpoint_nam": [10, 12], "checkpoint_path": [10, 12], "checkpoint_score_funct": [10, 12], "checkpoint_score_nam": [10, 12], "checkpointing_path": [112, 114], "checkpointmod": [8, 9, 11], "checkpointscorefunctiontyp": 10, "child": [13, 22, 28, 30, 36, 42, 45, 95, 129, 165, 169], "choic": 1, "choos": 97, "chosen": [97, 129, 132, 160], "cid": [15, 146, 162], "cifar10": 163, "cifarcli": 7, "circular": 90, "clarifi": 1, "class": [1, 4, 7, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 175, 176, 177], "classif": [35, 36, 72, 77, 88, 94, 98, 99], "classifi": [4, 32, 34, 72, 77, 99], "classmethod": [90, 92, 93, 146], "clear": [8, 72, 73, 74, 76, 77, 85, 155, 165], "clear_buff": [81, 85], "client": [4, 8, 10, 11, 13, 15, 16, 17, 18, 52, 53, 56, 70, 75, 78, 79, 88, 98, 103, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 160, 161, 162, 169, 171, 174, 176], "client_base_typ": 79, "client_batch_s": 117, "client_dataset_s": 117, "client_dp_fedavgm": [8, 139], "client_instruct": 136, "client_level_dp_fed_avg_serv": [8, 124], "client_manag": [7, 8, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 146, 151, 153, 154], "client_model_upd": 152, "client_modul": [8, 9], "client_nam": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56], "client_num": [52, 53], "client_result": 162, "client_sampling_r": 117, "client_singular_valu": 148, "client_singular_vector": 148, "clientcheckpointandstatemodul": [8, 9, 11, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48], "clientlevelaccount": [8, 116, 117], "clientleveldpfedavgm": [8, 130, 139, 142], "clientleveldpfedavgserv": [8, 124, 130], "clientmanag": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 146, 151, 153], "clientproxi": [15, 16, 17, 18, 131, 136, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 162], "clip": [4, 13, 22, 23, 45, 117, 118, 142, 152], "clip_paramet": [19, 23], "clipping_bit": 142, "clipping_bound": [23, 38, 152], "clipping_cli": [8, 19], "clipping_learning_r": 142, "clipping_noise_multipli": 142, "clipping_quantil": 142, "clippingbitservercheckpointandstatemodul": [8, 9, 13], "clone": [43, 156], "clone_and_freeze_model": [8, 155, 156], "close": [4, 35], "cnn_model": 7, "code": [4, 56, 67, 74, 158, 162], "codecov": 1, "codestyl": 1, "coeffici": [4, 20, 69, 72, 77, 145, 153], "coincid": 69, "collabor": 7, "collaps": 169, "collapse_one_hot_tensor": [8, 155, 169], "collat": 30, "collect": [1, 146, 147, 165], "column": [56, 59, 97, 148], "com": [27, 45, 47, 56, 65, 67, 70, 82, 118, 158, 169, 174], "combin": [4, 21, 36, 82, 95, 142, 147, 162], "come": [1, 162], "comm": 82, "command": 1, "commenc": 7, "comment": 1, "commit": 1, "common": 7, "commun": [13, 33, 42, 46, 129, 142], "compar": [46, 68, 97, 107, 109], "comparison": [68, 107], "compat": [33, 36, 38, 72, 74, 77, 82, 83, 94, 95, 99, 119, 123, 162, 169, 173], "compil": 45, "complet": [4, 21, 22, 26, 40, 41, 43, 85, 115, 117], "complex": 13, "compliant": 173, "compon": [4, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 70, 87, 94, 97, 114, 115, 129, 132, 135, 148, 158], "compos": 113, "composit": 95, "compound_metr": [8, 72], "compress": [4, 33], "comput": [8, 10, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 87, 90, 92, 93, 97, 113, 114, 117, 129, 130, 133, 140, 142, 148, 151, 152, 153, 155, 162, 165, 169], "compute_all_h_u_all_sampl": [64, 69], "compute_all_h_u_from_inner_product": [64, 69], "compute_all_h_u_from_inner_products_linear": [64, 69], "compute_all_h_u_linear": [64, 69], "compute_contrastive_loss": [64, 68], "compute_cosine_similarity_loss": [64, 68], "compute_cumulative_explained_vari": [81, 97], "compute_euclidean_inner_product": [64, 69], "compute_euclidean_inner_products_linear": [64, 69], "compute_evaluation_loss": [19, 22, 24, 25, 26, 27, 28, 43, 47], "compute_explained_variance_ratio": [81, 97], "compute_h_u_from_inner_product": [64, 69], "compute_h_u_from_inner_products_linear": [64, 69], "compute_hat_d_per_kernel": [64, 69], "compute_hat_q_k": [64, 69], "compute_hat_q_k_linear": [64, 69], "compute_kernel": [64, 67], "compute_loss_and_additional_loss": [19, 21, 22, 24, 25, 26, 27, 39, 40, 41, 43, 45, 47, 78, 80], "compute_mkmmd": [64, 69], "compute_negative_similar": [64, 65], "compute_parameter_delta": [139, 153], "compute_parameters_delta": [19, 48], "compute_penalty_loss": [8, 19, 20, 78, 79], "compute_perfcl_loss": [64, 68], "compute_projection_vari": [81, 97], "compute_reconstruction_error": [81, 97], "compute_training_loss": [8, 19, 20, 22, 25, 26, 27, 28, 36, 39, 40, 41, 43, 44, 78, 79], "compute_updated_control_vari": [19, 48, 139, 153], "compute_updated_paramet": [139, 153], "compute_updated_weight": [139, 153], "compute_vertic": [64, 69], "compute_weight_update_and_clip": [19, 23], "concaten": [20, 27, 48, 59, 78, 79, 81, 83, 95], "concept": [13, 37, 150], "conclud": [24, 47], "concurr": 136, "cond_vec_s": 160, "conda": 1, "condit": [83, 93, 112, 160, 162], "condition_vector_s": 160, "conditionalva": [8, 81, 83], "config": [1, 7, 8, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 80, 101, 102, 103, 105, 109, 119, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 155, 156, 169], "config_path": 157, "configur": [1, 20, 24, 30, 33, 37, 38, 42, 45, 46, 47, 68, 72, 77, 78, 79, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 157], "configure_evalu": [124, 131, 135, 139, 141, 142, 146, 151], "configure_fit": [135, 139, 141, 142, 146, 151], "configure_fit_al": [139, 153], "configure_pol": [129, 139, 141, 154], "conform": 1, "conjug": 149, "conjunct": [72, 73, 74, 77], "connect": [4, 33, 90, 146], "consequ": 97, "consid": [1, 4, 13, 65, 74, 156], "consist": [28, 36, 109, 114, 143, 144, 153, 161], "constant": [8, 20, 57, 117, 142, 145, 147, 169], "constitut": [144, 171], "constrain": [4, 26, 27, 36, 40, 43, 44, 47, 68, 71, 78, 79], "constrained_fenda_cli": [8, 19], "constrainedfendacli": [8, 19, 24], "constrainedfendalosscontain": [8, 24, 64, 68], "constraint": [13, 24, 27, 36, 44, 145, 147], "constraint_tenor": 71, "constraint_tensor": 71, "construct": [10, 52, 55, 56, 62, 69, 103, 107, 144, 153, 171, 175], "construct_covariance_matrix": [155, 158], "construct_quadrupl": [64, 69], "construct_rxrx1_tensor_dataset": [50, 51, 52], "construct_skin_cancer_tensor_dataset": [50, 54, 55], "constructor": [45, 103], "contain": [1, 4, 11, 20, 22, 23, 24, 26, 27, 28, 29, 34, 36, 40, 41, 42, 43, 44, 47, 48, 52, 53, 55, 56, 68, 70, 76, 78, 79, 102, 106, 109, 113, 114, 115, 120, 121, 129, 130, 131, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 169, 170, 172, 174, 175, 176], "content": 1, "context": [10, 162], "continu": [1, 4, 72, 77], "contrast": [4, 22, 24, 43, 47, 65, 68, 70, 87, 94, 99, 148], "contrastive_loss": [8, 24, 43, 64], "contrastive_loss_config": 68, "contrastive_loss_minim": 24, "contrastive_loss_weight": 68, "contrastive_weight": 43, "contribut": [4, 10, 75, 143, 144, 149], "control": [1, 4, 22, 46, 48, 106, 137, 150, 153, 169, 171, 175], "control_variates_upd": 153, "conv": 90, "conv1d": 90, "conv2d": 90, "conv3d": 90, "conv_modul": 90, "convent": 1, "converg": 62, "convers": [160, 173], "convert": [33, 55, 90, 91, 93, 106, 144, 160, 162, 163, 169, 170, 171, 172, 173], "convert_dataset": [155, 160], "convert_deep_supervision_dict_to_list": [8, 155, 169], "convert_deep_supervision_list_to_dict": [8, 155, 169], "convert_model_to_opacus_model": [8, 155, 173], "convert_to_masked_model": [81, 89, 91], "converter_funct": 160, "convex": [4, 21], "convolut": 90, "convolv": 90, "convtranspose1d": 90, "convtranspose2d": 90, "convtranspose3d": 90, "coo": [13, 106, 109, 144], "coordin": [22, 29, 34, 42, 46, 144], "copi": [36, 45, 46, 91, 92, 93], "core": 1, "core_protocol": [8, 78], "correct": [1, 4, 48, 136, 142], "correctli": [11, 13, 34, 146], "correspond": [10, 20, 21, 22, 27, 28, 44, 45, 46, 48, 62, 70, 71, 72, 77, 78, 79, 82, 97, 98, 103, 106, 107, 118, 142, 148, 149, 152, 157, 159, 162, 165, 171], "cos_sim_loss": 24, "cos_sim_loss_weight": 68, "cosin": [24, 65, 66, 68], "cosine_similarity_loss": [8, 24, 64], "cosine_similarity_loss_config": 68, "cosinesimilarityloss": [8, 64, 66], "cosinesimilaritylosscontain": [8, 64, 68], "could": 160, "count": [22, 42, 45, 52, 75, 129, 130, 133, 140, 141, 142, 143, 144, 145, 148, 149, 153, 162, 163], "covari": [69, 106, 158], "cover": 149, "cpu": [7, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 112, 156], "creat": [1, 10, 12, 45, 52, 76, 79, 82, 114, 119, 123, 156, 157, 159, 161, 163, 175], "create_plan": [19, 45], "create_split": [50, 51, 52], "creation": [1, 13, 160], "criteria": [97, 103, 145, 147, 161], "criterion": [11, 15, 16, 17, 18, 20, 43, 46, 47, 109], "critic": [155, 177], "cross": [44, 65], "crossentropyloss": 7, "csv": 53, "ctx": 162, "cubla": 174, "cublas_workspace_config": 174, "cuda": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 156, 174], "current": [1, 11, 13, 20, 22, 23, 24, 26, 27, 29, 31, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 70, 78, 79, 95, 107, 109, 119, 120, 121, 123, 129, 131, 132, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 156, 162, 165, 169, 171], "current_epoch": [22, 45], "current_round": [21, 22, 26, 34, 37, 40, 41, 45], "current_server_round": [7, 22, 24, 26, 27, 31, 34, 36, 37, 40, 41, 43, 44, 45, 47], "curv": [72, 77], "custom": [20, 21, 22, 23, 24, 27, 29, 30, 32, 34, 35, 36, 37, 38, 42, 44, 45, 48, 78, 79, 129, 131, 132, 135, 137, 139, 141, 146, 147, 153, 160, 162, 173], "custom_converter_funct": 160, "customtemplatepath": 1, "cvae": [83, 112, 113], "cvaefixedconditionprocessor": [110, 111, 112], "cvaevariableconditionprocessor": [110, 111, 112], "cycl": [142, 145, 161], "d": [97, 148, 159, 171, 175], "data": [4, 7, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 62, 67, 69, 76, 78, 79, 83, 84, 97, 112, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 148, 149, 156, 158, 159, 160, 162, 163, 169, 171, 175], "data_dir": [55, 163], "data_gener": [8, 155], "data_identifi": 45, "data_load": 30, "data_path": [7, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 52, 56, 163], "data_shap": 160, "datafram": [52, 53, 56, 59, 62], "dataload": [7, 22, 23, 26, 27, 28, 29, 30, 36, 38, 40, 41, 42, 44, 45, 48, 52, 55, 80, 114, 160, 163, 169], "datapoint": [52, 118, 159, 171, 175], "dataset": [7, 8, 22, 26, 27, 29, 30, 34, 42, 44, 45, 72, 75, 77, 114, 117, 118, 135, 141, 142, 143, 144, 145, 148, 149, 151, 153, 155, 158, 160, 163, 169, 171, 175], "dataset_convert": [8, 55, 155, 163], "dataset_dir": 53, "dataset_fingerprint": 45, "dataset_id": 45, "dataset_json": 45, "dataset_nam": [45, 55, 168], "dataset_path": 7, "dataset_typ": 52, "datasetconvert": [8, 55, 155, 160, 163], "ddp": 4, "deal": 159, "debug": [1, 45, 119, 123, 155, 177], "decai": 169, "decathelon": 163, "decid": [10, 11, 13, 83], "decis": [10, 12], "decod": [81, 83], "decode_and_pseudo_sort_result": [8, 155, 162], "decomposit": [97, 148], "decor": 169, "decreas": [145, 147, 169], "deep": [26, 45, 67, 118, 135, 162, 169], "deep_mmd_client": [8, 19], "deep_mmd_loss": [8, 64], "deep_mmd_loss_weight": 26, "deepmmdloss": [8, 64, 67], "def": [7, 162], "default": [10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 52, 55, 59, 62, 63, 66, 67, 68, 69, 72, 74, 77, 78, 79, 82, 83, 87, 88, 90, 92, 93, 94, 95, 97, 99, 102, 107, 112, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 158, 161, 163, 169, 171, 173, 174, 175], "defaultdict": 75, "defin": [1, 7, 10, 11, 12, 13, 21, 22, 24, 28, 29, 30, 34, 36, 37, 42, 45, 69, 72, 73, 74, 77, 82, 83, 95, 97, 113, 119, 123, 133, 134, 135, 137, 146, 148, 160, 162, 163, 169, 173], "define_metr": [8, 119, 123], "definit": [10, 13, 151], "degre": [67, 150], "delet": [119, 123], "delete_default_snapshot_attr": [155, 161], "delta": [23, 117, 118, 130, 133, 137, 153], "delta_control_vari": 48, "delta_model_weight": 48, "denomin": [72, 77, 93, 152], "denot": [70, 148], "dens": [106, 144], "depend": [1, 7, 22, 29, 34, 46, 83, 87, 95, 99, 119, 123, 141, 173], "depth": 85, "deriv": [22, 23, 26, 27, 28, 36, 40, 41, 44, 45, 47, 48, 126, 128], "derm7pt": 56, "derm7pt_image_path_func": [50, 54, 56], "derm7pt_label_map_func": [50, 54, 56], "descent": 169, "describ": [35, 37, 69, 119, 123, 142, 158], "descript": [118, 158], "design": [4, 37, 160], "desir": [1, 13, 20, 22, 23, 27, 29, 36, 42, 44, 48, 78, 79, 85, 88, 90, 109, 140], "despit": 44, "detach": [27, 36], "detail": [1, 97, 103, 109, 144, 149, 158, 162, 174], "determin": [10, 11, 12, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 87, 95, 109, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 169, 173, 174, 175], "determinist": [162, 174], "dev": [1, 117], "develop": 4, "deviat": [107, 118, 152, 158], "devic": [7, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 65, 66, 67, 68, 69, 70, 71, 78, 80, 90, 92, 93, 112, 156], "diagon": [148, 158], "dice": [72, 77], "dict": [1, 10, 11, 12, 13, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 62, 78, 79, 80, 82, 84, 85, 88, 95, 98, 99, 107, 109, 115, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 159, 161, 163, 165, 169, 171, 174, 176], "dict_wrap_attr": [155, 176], "dictionari": [10, 11, 12, 13, 20, 21, 22, 24, 26, 27, 28, 29, 34, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 52, 55, 56, 72, 73, 74, 76, 77, 78, 79, 82, 84, 85, 95, 98, 99, 106, 109, 115, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 156, 157, 159, 163, 165, 169, 176], "dictionary_kei": 157, "dictionarydataset": [8, 155, 159, 175], "differ": [4, 13, 22, 28, 29, 31, 34, 36, 37, 42, 44, 45, 48, 68, 106, 107, 118, 131, 143, 144, 149, 153, 158, 169, 171], "differenti": [4, 12, 23, 38, 48, 71, 83, 118, 130, 133, 137, 142, 162], "dilat": 90, "dim": [66, 169], "dim_reduct": [110, 111], "dimens": [66, 67, 69, 72, 77, 83, 84, 85, 90, 93, 114, 158, 159, 162, 169], "dimension": [30, 83, 97, 113, 114], "dir": [10, 30], "direct": [4, 153], "directli": [1, 148, 162], "directori": [10, 11, 12, 13, 52, 53, 55, 161, 163], "dirichlet": [171, 175], "dirichletlabelbasedalloc": [8, 155, 171], "dirichletlabelbasedsampl": [8, 155, 175], "disabl": [27, 44, 85, 174], "disable_accumulating_featur": [81, 85], "disable_torch_benchmark": 174, "discard": [144, 175], "disconnect": 129, "discrep": [67, 69], "discuss": [36, 142], "disk": [30, 45], "displai": [20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 119, 123, 170], "display_progress_bar": 156, "distanc": [26, 40, 41, 67, 69], "distinct": [11, 34, 36, 98, 126, 127, 128, 129, 132, 133, 135, 137], "distribut": [4, 7, 26, 40, 41, 67, 83, 113, 135, 148, 149, 158, 171, 175], "ditto": [4, 11, 22, 26, 27, 36, 40, 41, 44, 126], "ditto_cli": [8, 19], "ditto_deep_mmd_cli": [19, 25], "ditto_mkmmd_cli": [19, 39], "ditto_serv": [124, 125], "dittocli": [8, 19, 26, 27, 36, 40], "dittodeepmmdcli": [19, 25, 26], "dittomkmmdcli": [19, 39, 40], "dittoserv": [124, 125, 126], "diverg": 113, "divid": [72, 75, 77, 107, 150], "divis": 69, "dk": 67, "dkfz": [45, 169], "dl_name": 45, "do": [1, 4, 7, 12, 20, 21, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 90, 92, 93, 119, 123, 129, 134, 135, 146, 148, 154, 170, 175], "do_one_hot_encod": 160, "doc": [1, 90, 97, 106, 109, 118, 119, 123, 144, 174], "docstr": [1, 103], "docstringformat": 1, "document": [4, 45, 68, 97, 119, 123, 147, 174], "doe": [10, 12, 42, 78, 79, 82, 93, 119, 123, 135, 144, 148, 151, 163, 171], "doesn": [11, 13], "domain": [4, 69, 146, 147], "don": [27, 30, 36, 169], "done": [1, 4, 7, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 97, 117, 118, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 141, 142, 143, 144, 148, 158], "down": [22, 45, 152], "download": [7, 163], "downsampl": 175, "downsampling_ratio": 175, "downstream": 30, "dp": [4, 13, 38, 118, 130, 133, 137, 142, 173], "dpevent": 118, "dpscaffoldcli": [8, 19, 48], "dpscaffoldserv": [8, 124, 137], "dpscaffoldservercheckpointandstatemodul": [8, 9, 13, 137], "draw": 158, "drawn": [67, 158, 171], "drift": [4, 20, 26, 27, 31, 36, 37, 40, 41, 44, 48, 78, 79, 107, 145, 150], "drift_penalty_tensor": [78, 79], "drift_penalty_weight": [31, 78, 79], "dtype": [23, 80, 90, 92, 93, 103, 104, 105, 106, 107, 108, 109, 148], "due": [4, 45, 142, 149], "dummi": [10, 131], "dump": [8, 119, 121], "dure": [4, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 70, 74, 78, 79, 82, 83, 85, 90, 92, 93, 106, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 160, 162], "dynam": [46, 47, 79, 143, 156], "dynamiclayerexchang": [8, 100, 101, 103, 107], "e": [10, 13, 20, 21, 22, 23, 28, 43, 45, 88, 90, 92, 97, 118, 119, 120, 121, 123, 137, 142, 151, 153, 160, 162], "each": [1, 4, 13, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 52, 53, 55, 65, 67, 74, 75, 76, 83, 85, 88, 90, 92, 97, 98, 103, 109, 112, 117, 118, 121, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 158, 161, 162, 165, 169, 171, 175], "earli": [37, 161], "early_stop_valid": [155, 164], "early_stopp": [8, 155], "earlystopp": [8, 155, 161], "easi": 4, "easiest": [1, 7], "effect": [1, 4, 33, 149, 174], "effici": [4, 33, 97, 148, 173], "eg": 169, "eigenvector": 97, "either": [10, 11, 12, 63, 87, 97, 99, 118, 119, 123, 135, 141, 153, 162, 169, 171, 176], "elaps": [129, 130, 131, 133, 134, 137], "element": [22, 24, 26, 27, 36, 40, 41, 43, 45, 47, 48, 90, 93, 107, 129, 130, 131, 133, 134, 137, 152, 153, 158, 162], "elementwise_affin": 93, "elig": 1, "ema": 74, "ema_": 74, "emametr": [8, 72, 74], "empti": [27, 36, 42, 45, 72, 77, 95, 151, 156, 157, 165], "empty_cach": [19, 45], "enabl": [28, 45, 59, 85, 90, 91, 92, 93, 142, 145, 165], "enable_accumulating_featur": [81, 85], "encod": [13, 45, 81, 83, 87, 112, 158, 160, 169], "encourag": 1, "end": [22, 26, 29, 40, 41, 45, 70, 103, 119, 120, 121, 123, 142, 158, 175], "enforc": [1, 43, 119, 123, 127, 162], "engin": [4, 38], "enhanc": [65, 70], "ensembl": [28, 84], "ensemble_averag": [81, 84], "ensemble_bas": [8, 81], "ensemble_cli": [8, 19], "ensemble_model": [84, 165], "ensemble_vot": [81, 84], "ensembleaggregationmod": [8, 81, 84], "ensemblecli": [8, 19, 28], "ensemblemodel": [8, 28, 81, 84], "ensur": [1, 4, 13, 22, 27, 28, 33, 34, 37, 47, 67, 126, 128, 133, 137, 141, 142, 144, 146, 153, 154, 169, 171, 173], "entir": [13, 22, 26, 27, 29, 44, 53, 82, 144, 169, 175], "entiti": [119, 123], "entri": [22, 23, 45, 131, 142, 153, 158], "entropi": 65, "enum": [11, 34, 63, 73, 84, 95, 119, 123, 146, 163, 164, 165, 168, 169, 177], "enumer": [11, 34, 63, 73, 84, 95, 119, 123, 164, 165, 168, 177], "env_path": 1, "environ": [1, 7, 45, 169, 174], "ep": 93, "epoch": [8, 22, 34, 37, 45, 117, 118, 119, 120, 121, 122, 123, 133, 137, 157, 169], "epochs_per_round": 117, "epsilon": [67, 72, 77, 83, 117, 118, 130, 133, 137], "equal": [109, 114, 161, 169], "equat": [48, 149], "equival": [4, 118, 162], "error": [1, 10, 11, 13, 69, 97, 119, 123, 142, 146, 153, 155, 159, 169, 170, 171, 174, 177], "error_messag": 170, "especi": 45, "essenti": [10, 35, 80, 88, 131, 135], "estim": [67, 69, 113, 118, 137, 142, 162, 169], "et": [56, 118, 146, 147], "eta": 150, "eta_l": 150, "etc": [11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 153, 156], "eval": [7, 13, 22, 131, 141, 142, 151], "evalu": [13, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 36, 40, 41, 42, 43, 44, 45, 46, 47, 72, 73, 74, 75, 76, 77, 78, 79, 80, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 161, 165], "evaluate_after_fit": [22, 34, 37, 146], "evaluate_cli": [8, 19], "evaluate_config": 131, "evaluate_fn": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "evaluate_metrics_aggregation_fn": [7, 8, 72, 75, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "evaluate_round": [124, 129], "evaluate_serv": [8, 124], "evaluatecli": [8, 19, 29], "evaluatein": [131, 141, 142, 146, 151], "evaluater": [131, 141, 151], "evaluateresultsandfailur": [129, 131], "evaluateserv": [8, 124, 131], "evaluationloss": [8, 22, 24, 26, 27, 28, 29, 43, 47, 155, 165], "even": [4, 44, 45, 120, 121, 142, 145, 147, 153], "evenli": 175, "event": 11, "everi": [10, 45, 65, 82, 83, 91, 109, 118, 119, 121, 123, 144, 149, 156, 169], "everyth": 141, "ex": [83, 118], "exactli": [37, 45, 103, 115, 156], "exampl": [1, 4, 7, 10, 11, 12, 16, 20, 22, 26, 31, 40, 41, 42, 44, 45, 55, 62, 74, 75, 99, 106, 107, 115, 118, 119, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 144, 145, 159, 162, 171, 173, 175], "exce": 107, "exceed": 171, "except": [4, 10, 11, 13, 32, 33, 45, 90, 97, 103, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 148, 151, 153, 156, 157, 169], "exchang": [4, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 44, 45, 46, 47, 48, 78, 79, 82, 86, 88, 98, 99, 103, 106, 107, 109, 134, 143, 144, 146], "exchange_percentag": 107, "exchangertyp": [13, 134], "exclud": [103, 119, 123], "exclus": [35, 103, 115, 171], "execut": [1, 26, 27, 30, 40, 43, 169], "executor": 136, "exhaust": 171, "exist": [4, 7, 10, 11, 12, 13, 21, 22, 28, 29, 45, 68, 87, 119, 123, 157, 159, 160, 163, 165, 171], "exp": 83, "expect": [20, 29, 45, 84, 88, 93, 94, 97, 98, 99, 119, 123, 142, 154, 157, 169, 176], "expected_typ": 176, "expend": [72, 73, 74, 77], "experi": [53, 119, 123], "experienc": [141, 142, 143, 144, 145, 148, 151], "experiment": [4, 69, 119, 123], "explicitli": [10, 27, 119, 123, 174, 175], "explor": 4, "expon": 169, "exponenti": 74, "extend": [4, 22, 24, 48, 73, 74, 141, 162, 175], "extens": [1, 4, 20, 141, 153], "extent": 18, "extra": [45, 103], "extra_adaptive_vari": 106, "extract": [22, 24, 26, 32, 34, 36, 40, 41, 46, 47, 48, 69, 85, 87, 88, 95, 98, 99, 103, 106, 109, 136, 159, 163, 170, 172], "extract_coo_info_from_dens": [100, 106], "extracted_features_buff": 85, "extractor": [4, 24, 32, 34, 35, 36, 47, 70, 85, 88, 94, 95, 98, 99], "extrem": [126, 127, 128, 129, 130, 132, 133, 135, 136, 137], "f": 159, "f1": [8, 72, 77], "f1_score": [72, 77], "facilit": [1, 4, 7, 11, 13, 16, 30, 33, 46, 109, 129, 131, 134, 142, 146], "fact": 30, "factor": [74, 169], "fail": [1, 119, 123, 146, 153], "failur": [126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "fair": [27, 36, 146], "fairli": [31, 86, 158], "fairness_metr": [146, 147], "fairness_metric_typ": 146, "fairnessmetr": [8, 139, 146, 147], "fairnessmetrictyp": [8, 139, 146, 147], "fall": [10, 12, 107], "fals": [1, 10, 12, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 69, 82, 85, 86, 87, 88, 91, 92, 93, 97, 99, 112, 126, 127, 128, 129, 130, 132, 133, 135, 137, 142, 145, 147, 150, 156, 160, 161, 169, 174], "far": [20, 22, 78, 79, 97, 107], "feasibl": 171, "featur": [1, 4, 20, 21, 22, 24, 26, 27, 28, 32, 34, 35, 36, 40, 41, 43, 44, 45, 47, 59, 62, 63, 65, 66, 67, 68, 69, 70, 78, 79, 80, 85, 87, 88, 93, 94, 95, 98, 99, 158], "feature_align": 8, "feature_dimens": 65, "feature_extraction_lay": [40, 41], "feature_extraction_layers_with_s": 26, "feature_extractor_buff": [8, 81], "feature_l2_norm_weight": [40, 41], "feature_nam": 62, "feature_s": 85, "feature_typ": 62, "featureextractorbuff": [8, 81, 85], "features_org": 67, "fed": [21, 22, 24, 26, 27, 28, 36, 40, 41, 43, 45, 47, 65, 160], "fed_pca_cli": [8, 19], "fed_prox_cli": [8, 19], "fedadagrad": 4, "fedadam": 4, "fedavg": [4, 7, 32, 34, 35, 47, 86, 129, 135, 141, 142, 143, 144, 145, 146, 148, 149, 153], "fedavg_dynamic_lay": [8, 139], "fedavg_sparse_coo_tensor": [8, 139], "fedavg_with_adaptive_constraint": [8, 139], "fedavgdynamiclay": [8, 139, 143, 144, 149], "fedavgm": 142, "fedavgsparsecootensor": [8, 139, 144], "fedavgwithadaptiveconstraint": [8, 20, 78, 79, 126, 127, 128, 139, 145, 147], "fedbn": 4, "feddg": [4, 16, 146, 147], "feddg_ga": [8, 139], "feddg_ga_with_adaptive_constraint": [8, 139], "feddgga": [8, 139, 146, 147], "feddggaadaptiveconstraint": [8, 139, 147], "feder": [4, 7, 11, 13, 20, 22, 23, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 42, 43, 44, 46, 48, 78, 79, 84, 87, 118, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 162], "federated_evalu": [124, 131], "federated_learning_with_differential_privaci": 118, "fedopt": 4, "fedpca": [8, 30, 139], "fedpcacli": [8, 19, 30], "fedper": [4, 32, 34], "fedper_cli": [8, 19], "fedpercli": [8, 19, 32], "fedpm": [4, 8, 33, 90, 91, 92, 93, 107, 132, 139], "fedpm_client": [8, 19], "fedpm_exchang": [8, 100], "fedpm_serv": [8, 124], "fedpmclient": [8, 19, 33], "fedpmexchang": [8, 33, 100, 101], "fedpmserv": [8, 124, 132], "fedprox": [4, 20, 22, 27, 31, 44, 127, 145, 147, 158], "fedprox_serv": [124, 125], "fedproxcli": [8, 19, 31], "fedproxserv": [124, 125, 127], "fedrep": [4, 34, 86], "fedrep_bas": [8, 81], "fedrep_cli": [8, 19], "fedrepcli": [8, 19, 34], "fedrepmodel": [8, 81, 86], "fedreptrainmod": [8, 19, 34], "fedsimclr": [22, 65], "fedsimclr_bas": [8, 81], "fedsimclrmodel": [8, 81, 87], "fedtorch": 82, "fedyogi": 4, "fenda": [4, 22, 24, 26, 31, 35, 36, 40, 41, 44, 45, 47, 68, 86, 88], "fenda_bas": [8, 81], "fenda_cli": [8, 19], "fenda_ditto_cli": [8, 19], "fenda_loss_config": [8, 64], "fendacli": [8, 19, 24, 35], "fendaditto": 36, "fendadittocli": [8, 19, 36], "fendamodel": [8, 36, 81, 88], "fendamodelwithfeaturest": [8, 81, 88], "fengliu90": 67, "fetch": [130, 133, 134], "few": 4, "fhook": 85, "field": 45, "file": [1, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 53, 55, 56, 115, 119, 120, 121, 123, 135, 169], "filereport": [8, 119, 121], "fill": [1, 62], "fill_valu": 62, "filter": [15, 16, 17, 53, 85, 90, 103, 107], "filter_and_save_data": [50, 51, 53], "filtrat": 15, "final": [11, 30, 43, 45, 70, 82, 87, 90, 92, 93, 95, 109, 144, 169, 174], "find": [1, 10], "find_last_common_prefix": [81, 85], "fine": [11, 87], "finetun": 87, "first": [4, 7, 11, 16, 20, 22, 23, 24, 26, 27, 29, 34, 36, 40, 41, 43, 44, 45, 46, 47, 48, 59, 66, 67, 68, 69, 70, 74, 78, 79, 83, 85, 86, 95, 99, 107, 109, 129, 130, 131, 132, 133, 134, 137, 141, 142, 144, 153, 156, 158, 159, 162, 169, 170], "first_featur": 68, "first_feature_extractor": 95, "first_tensor": 95, "fit": [1, 7, 13, 19, 20, 22, 23, 27, 29, 30, 34, 36, 42, 44, 46, 57, 59, 75, 78, 79, 80, 124, 129, 130, 131, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 160], "fit_config": 7, "fit_config_fn": 7, "fit_metrics_aggregation_fn": [7, 8, 72, 75, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "fit_round": [124, 129, 132], "fit_with_per_round_checkpoint": [124, 129], "fitin": [141, 142, 146, 151, 153], "fitr": [141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 162], "fitresultsandfailur": [129, 132], "fitting_round": [20, 22, 23, 27, 29, 36, 44, 46, 48, 78, 79, 80], "fix": [1, 4, 12, 15, 16, 17, 18, 32, 38, 52, 82, 83, 86, 98, 107, 112, 117, 118, 137, 142, 158, 160, 169, 173], "fixed_sampling_client_manag": [8, 14], "fixed_without_replacement_manag": [8, 14], "fixedlayerexchang": [8, 47, 99, 100, 103], "fixedsamplingbyfractionclientmanag": [8, 14, 17], "fixedsamplingclientmanag": [8, 14, 16, 146], "fixedsamplingwithoutreplac": [8, 116, 118], "fl": [4, 11, 13, 20, 22, 23, 26, 27, 29, 30, 34, 36, 40, 41, 42, 44, 45, 48, 78, 79, 88, 103, 106, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 142, 153, 154, 157, 169], "fl4health": [0, 1, 7], "fl_account": [8, 116], "fl_config": [126, 127, 128, 129, 130, 132, 133, 135, 137], "flag": [85, 174], "flake8": 1, "flash": [4, 8, 37, 139], "flash_client": [8, 19], "flashclient": [8, 19, 37], "flat": 23, "flatten": [40, 41, 81, 83, 85, 87, 88, 94, 97, 98, 99], "flatten_featur": [86, 88, 99], "flatten_feature_extraction_lay": 85, "flattened_output": 83, "flclientlevelaccountantfixedsamplingnoreplac": [8, 116, 117], "flclientlevelaccountantpoissonsampl": [8, 116, 117], "flexibl": [4, 10, 12, 36, 141], "flinstancelevelaccount": [8, 116, 117], "float": [10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 26, 27, 29, 30, 34, 37, 40, 41, 42, 43, 44, 45, 47, 48, 52, 55, 62, 65, 67, 68, 71, 72, 74, 77, 78, 79, 80, 82, 93, 97, 106, 107, 109, 117, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 162, 163, 165, 169, 171, 175, 176], "flow": [1, 13, 29, 36, 37, 38, 46, 52, 83, 129, 132, 141, 142, 153], "flow_util": 82, "flower": [4, 15, 17, 18, 126, 127, 128, 129, 130, 132, 133, 137, 141, 162, 169, 170, 172], "flserver": [7, 8, 124, 126, 127, 128, 129, 130, 132, 133, 135, 137], "flush": [155, 169], "flwr": [7, 126, 127, 128, 129, 130, 132, 133, 135, 137, 169], "fn": [135, 169], "focu": 4, "focus": 80, "fold": 45, "fold_loss_dict_into_metr": [8, 155, 156], "folder": [1, 121, 163], "follow": [1, 22, 23, 27, 29, 30, 34, 36, 37, 45, 56, 74, 82, 97, 106, 109, 118, 141, 142, 144, 148, 149, 151, 153, 162, 169], "forc": [33, 141, 146, 153, 174], "foreground_intensity_properties_per_channel": 45, "form": [10, 27, 36, 44, 69, 87, 102, 118, 153, 159], "form_and_solve_qp": [64, 69], "form_h_u_delta_w_i": [64, 69], "form_kernel_samples_minus_expect": [64, 69], "format": [1, 13, 62, 84, 106, 109, 144, 160], "former": [83, 126, 127, 128, 129, 130, 132, 133, 135, 137, 169], "formula": [153, 162], "forward": [22, 26, 27, 36, 40, 41, 64, 65, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 111, 113, 155, 162, 169], "forward_hook": [81, 85], "found": [69, 174], "foundat": 4, "four": [90, 144], "frac": [23, 48, 153, 158], "fraction": [17, 18, 52, 131, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153], "fraction_evalu": [131, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153], "fraction_fit": [141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "framework": [26, 40, 41, 133], "free": 43, "freez": [36, 156], "freeze_base_modul": [81, 86], "freeze_global_feature_extractor": 36, "freeze_head_modul": [81, 86], "frequenc": [52, 53, 132, 161], "frequent": [120, 121], "from": [1, 4, 7, 10, 11, 12, 13, 15, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 59, 62, 67, 68, 69, 70, 74, 76, 78, 79, 82, 83, 85, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 103, 106, 107, 114, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 157, 158, 160, 161, 162, 170, 171, 172, 175], "from_json": [57, 62], "from_pretrain": [89, 90, 92, 93], "frozen": [4, 34, 36, 71, 106, 156], "full": [1, 13, 20, 21, 22, 23, 24, 29, 32, 34, 35, 36, 42, 46, 48, 52, 78, 79, 82, 85, 97, 117, 129, 130, 133, 137, 175], "full_exchang": [8, 100], "full_svd": 97, "fullparameterexchang": [8, 20, 22, 23, 27, 29, 36, 42, 46, 48, 78, 79, 100, 102, 104], "fullparameterexchangerwithpack": [8, 13, 79, 100, 104], "func": 157, "function": [1, 4, 7, 8, 10, 11, 12, 13, 20, 22, 23, 24, 26, 27, 29, 30, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 56, 62, 63, 65, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 82, 83, 85, 87, 90, 92, 93, 94, 95, 99, 103, 106, 107, 109, 113, 115, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 169, 170, 172, 173, 174], "functiontorchcheckpoint": 12, "functiontorchmodulecheckpoint": [8, 9, 10, 12], "functool": [7, 107], "further": [1, 11, 35, 107, 117], "furthermor": 1, "futur": 107, "g": [45, 119, 120, 121, 123, 142, 151, 159, 162], "ga": [4, 16, 146, 147], "gamma": [37, 47, 69], "gather": 68, "gaussian": [67, 118, 133, 137, 152], "gaussian_degre": 67, "gaussian_noisy_aggregate_clipping_bit": [8, 139, 152], "gaussian_noisy_unweighted_aggreg": [8, 139, 152], "gaussian_noisy_weighted_aggreg": [8, 139, 152], "gener": [1, 4, 10, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 67, 72, 74, 77, 83, 85, 97, 104, 106, 108, 109, 113, 119, 123, 129, 132, 135, 143, 144, 145, 146, 147, 155, 158, 159, 165, 169, 171, 174, 175, 176], "generate_client_tensor": [155, 158], "generate_hash": [8, 19, 30, 155, 174], "generate_parameter_scor": [100, 109], "generatedocstringonent": 1, "get": [1, 4, 42, 74, 85, 115, 119, 123, 136, 158, 169], "get_all_model_paramet": [7, 8, 155, 170], "get_all_peft_parameters_from_model": [8, 155, 172], "get_best_vertex_for_objective_funct": [64, 69], "get_cifar10_data_and_target_tensor": [8, 155, 163], "get_client_specific_log": [19, 22, 45], "get_client_specific_report": [19, 22, 45], "get_condition_vector_s": [155, 160], "get_criterion": [7, 19, 22, 45, 78, 80], "get_current_weight_step_s": [139, 146], "get_data_load": [7, 19, 22, 29, 30, 45, 78, 80], "get_data_tensor": [19, 30], "get_dataset_n_voxel": [8, 155, 169], "get_default_fill_valu": [57, 63], "get_delta": [116, 117, 118], "get_dp_ev": [116, 118], "get_epsilon": [116, 117, 118], "get_extracted_featur": [81, 85], "get_feature_nam": [57, 62], "get_feature_typ": [57, 62], "get_fill_valu": [57, 62], "get_global_model": [19, 27, 36], "get_hierarchical_attr": [81, 85], "get_input_output_tensor": [155, 158], "get_layers_to_transf": [100, 103], "get_local_model": [19, 29], "get_lr": [155, 169], "get_lr_schedul": [19, 22, 45], "get_matching_compon": [110, 115], "get_metadata": [57, 62], "get_metadata_dimens": [57, 62], "get_mnist_data_and_target_tensor": [8, 155, 163], "get_model": [7, 19, 22, 27, 30, 36, 42, 45, 78, 80], "get_msd_dataset_enum": [8, 155, 163, 168], "get_optim": [7, 19, 21, 22, 27, 28, 34, 45, 78, 80], "get_paramet": [8, 19, 20, 22, 23, 27, 29, 30, 36, 42, 46, 48, 78, 79, 80], "get_parameter_exchang": [8, 19, 20, 21, 22, 23, 24, 29, 32, 33, 34, 35, 42, 46, 47, 48, 78, 79], "get_properti": [19, 22, 45, 135], "get_segs_from_prob": [8, 155, 169], "get_test_data_load": [19, 22, 42], "get_train_and_val_cifar10_dataset": [8, 155, 163], "get_train_and_val_mnist_dataset": [8, 155, 163], "get_unpacking_funct": [155, 160], "getpropertiesin": [136, 141, 154], "getpropertiesr": 136, "git": [1, 56], "github": [1, 4, 27, 45, 56, 65, 67, 82, 118, 158, 169], "give": 171, "given": [10, 20, 21, 22, 23, 24, 26, 27, 28, 34, 36, 40, 41, 43, 44, 45, 47, 53, 55, 65, 72, 74, 76, 77, 78, 79, 83, 84, 85, 87, 91, 95, 117, 118, 129, 142, 146, 152, 153, 157, 159, 160, 161, 162, 165, 169, 171], "global": [4, 11, 13, 21, 22, 24, 26, 27, 29, 31, 32, 34, 35, 36, 40, 41, 43, 44, 45, 47, 68, 70, 82, 86, 88, 95, 98, 126, 129, 131, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "global_deep_supervis": 135, "global_featur": [68, 70, 88, 98], "global_feature_contrastive_loss": 47, "global_feature_contrastive_loss_weight": [47, 68], "global_feature_loss_temperatur": [47, 68, 70], "global_forward": [81, 82], "global_logit": 82, "global_loss": [21, 26, 27, 36, 40, 41], "global_metr": 29, "global_model": [43, 82, 115], "global_modul": [88, 98], "global_tensor": 95, "go": [13, 119, 123], "good": [4, 33, 97], "googl": 1, "grab": [141, 142, 153], "gracefulli": [45, 169], "grad": 162, "grad_output": 162, "grad_sample_mod": 173, "gradient": [4, 22, 27, 36, 45, 48, 90, 92, 93, 133, 137, 142, 162], "gradsamplemodul": [141, 153, 173], "gradsamplingmodul": 153, "greater": 109, "ground": [20, 21, 22, 24, 26, 27, 28, 36, 40, 41, 43, 44, 45, 47, 72, 73, 74, 76, 77, 78, 79], "group": [90, 119, 123, 169], "groupnorm": 173, "guarante": [17, 88, 97, 171], "guess": 142, "guesstyp": 1, "guid": [1, 4], "h1_mean_var_gram": [64, 67], "ha": [4, 7, 11, 13, 20, 22, 24, 28, 29, 33, 34, 36, 42, 43, 45, 65, 76, 78, 79, 83, 88, 90, 92, 93, 95, 97, 103, 119, 123, 134, 141, 142, 144, 146, 147, 148, 151, 153, 156, 157, 158, 162, 169, 175], "ham10000": 56, "ham_image_path_func": [50, 54, 56], "ham_label_map_func": [50, 54, 56], "handl": [10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 78, 79, 85, 95, 106, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 143, 144, 149, 153, 160, 162, 169], "handler": 169, "happen": [20, 42, 78, 79, 126, 127, 128, 129, 130, 132, 133, 135, 137, 142, 162], "hardcod": 121, "has_contrastive_loss": [64, 68], "has_cosine_similarity_loss": [64, 68], "has_perfcl_loss": [64, 68], "has_region": 169, "hash": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 65, 163, 174], "hash_kei": [163, 175], "hat": [70, 142, 158], "hat_d_per_kernel": 69, "hat_q_k": 69, "have": [1, 4, 7, 11, 13, 20, 22, 23, 24, 27, 28, 29, 30, 33, 34, 36, 42, 44, 45, 47, 48, 59, 65, 69, 72, 75, 77, 78, 79, 83, 85, 88, 90, 92, 93, 98, 106, 107, 112, 118, 119, 123, 129, 131, 135, 142, 143, 144, 149, 152, 153, 156, 158, 162, 171], "he": 147, "head": [19, 34, 35, 36, 87, 88, 94, 95, 98, 99, 131], "head_epoch": 34, "head_forward": [81, 95], "head_modul": [86, 94, 99], "head_step": 34, "header": [22, 45], "health": 4, "healthcar": 4, "heavili": [74, 129], "held": [10, 13, 42, 129, 143, 144, 149], "help": [1, 13, 16, 17, 20, 22, 23, 27, 29, 36, 46, 78, 79, 136, 169], "helper": [153, 162], "henc": [30, 148], "here": [1, 4, 27, 30, 34, 43, 44, 114, 119, 123, 148, 149, 158, 171, 174], "heterogen": [4, 31, 37, 158, 171, 175], "heterogeneous_partition": 171, "heurist": [27, 44], "hidden": [67, 158], "hidden_dim": [67, 158], "hidden_s": 67, "hierarch": 85, "hierarchi": 169, "high": [120, 121, 171], "higher": [158, 169], "hinder": 69, "hint": 1, "histori": [129, 130, 131, 133, 134, 137], "hold": [11, 13, 52, 68, 129, 132, 136, 146], "hood": [45, 173], "hook": [1, 22, 26, 31, 40, 41, 44, 45, 48, 83, 85, 129, 135, 169, 173], "hope": 10, "hot": [45, 158, 160, 169], "hous": [1, 158], "how": [10, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 72, 75, 77, 83, 95, 119, 123, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 149, 158, 160, 169, 173], "howev": [1, 4, 13, 20, 27, 29, 34, 42, 44, 45, 78, 79, 90, 92, 126, 128], "html": [65, 72, 77, 90, 97, 106, 109, 144, 174], "http": [21, 27, 32, 33, 34, 35, 37, 45, 47, 48, 52, 56, 65, 67, 70, 72, 77, 82, 86, 87, 90, 97, 106, 109, 118, 119, 123, 132, 137, 141, 142, 144, 145, 149, 150, 152, 153, 158, 162, 169, 174], "huge": 97, "hydrat": [13, 29, 134], "hyperparamet": [119, 123], "hypothesi": [4, 33], "i": [1, 4, 7, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103, 106, 107, 109, 112, 114, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 171, 173, 174, 175, 176], "id": [1, 30, 45, 119, 121, 123, 129, 131, 146, 159, 174], "idea": [4, 27, 31, 36, 43, 44], "idempot": 27, "ident": [11, 22, 27, 32, 36, 44, 87], "identifi": [20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 76, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 148, 151, 153], "ie": [21, 22, 76, 120, 121, 169], "ignor": [30, 45, 83, 97, 121, 131, 169, 171], "ignore_label": 45, "ii": 69, "iid": [43, 158, 175], "imag": [22, 52, 53, 55, 56, 72, 77, 90, 169], "image_path_func": 56, "imbalanc": [72, 77], "immedi": [22, 31, 41, 43, 44, 45], "implement": [1, 10, 12, 13, 20, 21, 22, 26, 27, 29, 31, 32, 33, 34, 36, 37, 40, 41, 43, 44, 46, 48, 65, 67, 70, 82, 86, 88, 90, 92, 93, 95, 97, 103, 107, 118, 129, 141, 142, 145, 148, 149, 150, 152, 153, 154, 158, 162, 165, 169, 176], "impli": [118, 158], "import": [1, 7, 74, 151, 169], "importantli": 42, "imput": 63, "in_channel": 90, "in_featur": 92, "includ": [1, 4, 20, 22, 24, 26, 27, 29, 36, 40, 41, 43, 44, 45, 47, 78, 79, 82, 117, 126, 127, 128, 129, 130, 132, 133, 135, 137, 153, 158, 160, 170], "include_loss_in_metr": 29, "include_losses_in_metr": [22, 26, 27, 29, 44], "includeextendedsummari": 1, "includenam": 1, "incompat": 173, "incorpor": [1, 4], "increas": 74, "increment": 148, "indefinit": [129, 131, 132, 134, 135, 171], "independ": [143, 144, 158], "index": [20, 21, 22, 24, 26, 27, 28, 36, 40, 41, 43, 44, 45, 47, 78, 79, 84, 162, 169, 174], "indic": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 78, 79, 85, 97, 106, 107, 109, 112, 119, 120, 121, 123, 129, 132, 135, 141, 142, 143, 144, 145, 148, 149, 151, 153, 156, 159, 171, 173], "individu": [26, 28, 40, 41, 43, 84, 119, 123, 129, 132], "infer": [85, 119, 123, 135], "infimum": 118, "infinit": 169, "info": [1, 45, 155, 177], "inform": [4, 11, 13, 20, 22, 23, 27, 29, 33, 36, 42, 44, 45, 48, 53, 62, 72, 77, 78, 79, 83, 90, 106, 109, 119, 120, 121, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 142, 144, 146, 147, 174], "infti": [171, 175], "inherit": [22, 45, 78, 79, 129, 169], "ini": 1, "init": [119, 123, 153], "initi": [8, 10, 13, 20, 22, 23, 24, 26, 27, 28, 29, 31, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 70, 76, 78, 79, 80, 82, 93, 109, 115, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 165, 169], "initial_clipping_bound": 142, "initial_control_vari": 153, "initial_global_featur": [68, 70], "initial_global_model": [26, 40, 41], "initial_loss_weight": [145, 147], "initial_lr": 169, "initial_model": [102, 103, 105, 107, 108, 109], "initial_paramet": [7, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153], "initialize_all_model_weight": [19, 22, 27], "initialize_control_vari": [139, 153], "initialize_global_model": [19, 29], "initialize_paramet": [139, 141, 151, 153], "initialize_server_model": [124, 135], "inject": [13, 22, 24, 27, 36, 43, 47, 83, 91, 94, 102, 142], "inner": [26, 27, 36, 40, 41, 44, 71], "inner_product": 69, "inner_product_all_sampl": 69, "inner_product_quadrupl": 69, "input": [21, 22, 24, 26, 27, 28, 34, 36, 40, 41, 43, 45, 47, 53, 65, 67, 68, 72, 73, 74, 77, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 103, 106, 109, 113, 115, 119, 123, 135, 146, 148, 156, 158, 159, 160, 162, 163, 169, 171], "input_dim": 158, "input_dir": 53, "input_s": 67, "input_tensor": 95, "input_typ": 161, "ins": 136, "insert": [92, 134, 143, 144], "insid": [109, 162], "inspir": 67, "instal": 1, "instanc": [4, 15, 16, 17, 18, 20, 22, 24, 26, 27, 28, 30, 36, 38, 40, 41, 43, 44, 47, 48, 78, 79, 83, 90, 92, 93, 117, 118, 133, 137, 146, 165, 169], "instance_level_dp_cli": [8, 19], "instance_level_dp_serv": [8, 124], "instanceleveldpcli": [8, 19, 38, 48, 141, 153], "instanceleveldpserv": [8, 124, 133, 137], "instanti": [29, 46, 135, 146], "instead": [10, 12, 22, 37, 44, 83, 85, 90, 92, 93, 162, 169], "instruct": [1, 131, 136, 141], "int": [1, 7, 15, 16, 17, 18, 20, 22, 24, 26, 27, 29, 30, 31, 34, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 52, 53, 55, 62, 66, 67, 72, 75, 77, 78, 79, 80, 90, 92, 97, 106, 113, 114, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 169, 171, 174, 175, 176], "integ": [21, 22, 26, 40, 41, 93, 146, 162, 169], "integr": [1, 162], "intend": [135, 162], "interact": 12, "interest": 1, "interestingli": [4, 33], "interfac": [10, 72, 77], "intermedi": [22, 24, 26, 27, 36, 40, 41, 43, 47, 85], "intern": [10, 11, 12, 119, 123], "interrupt": [11, 13, 126, 127, 128, 129, 130, 132, 133, 135, 137, 169], "interv": [26, 40, 41, 120, 121, 161], "interval_step": 161, "introduc": [1, 45, 70], "invalidconfigerror": [8, 155, 157], "invok": 1, "involv": [22, 45], "ipynb": 118, "is_glob": 29, "is_masked_modul": [81, 89, 91], "is_smooth": 67, "is_start_of_local_train": [19, 21], "is_unbias": 67, "is_var_comput": 67, "isic": 56, "isn": [1, 68, 126, 128, 171], "isort": 1, "issu": [1, 4, 10, 12, 141, 142, 143, 144, 145, 148, 151, 169], "istinct": 130, "item": [22, 45, 55, 76, 135, 144], "iter": [1, 24, 30, 47, 114, 156, 170, 171], "its": [4, 13, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 65, 72, 73, 74, 77, 91, 97, 106, 119, 123, 146, 148, 149, 156, 157, 160, 169, 171, 173], "itself": [1, 11, 13, 22, 88, 95, 106, 162, 163], "j": 158, "jit": 45, "job": [45, 119, 123], "job_typ": [119, 123], "join": 95, "json": [1, 45, 56, 62, 115, 119, 121], "json_report": [8, 119], "json_str": 62, "jsonreport": [8, 119, 121], "just": [11, 12, 13, 20, 36, 45, 78, 79, 80, 129, 135, 137, 142, 156, 159, 162, 169], "justif": 148, "jvp": 162, "k": [48, 97, 149], "k_x": 67, "k_xy": 67, "k_y": 67, "keep": [16, 45, 120, 161], "kei": [10, 13, 21, 22, 24, 26, 27, 28, 34, 40, 41, 43, 44, 45, 72, 73, 74, 76, 77, 82, 85, 88, 95, 98, 102, 115, 119, 123, 146, 157, 163, 165, 169], "kept": [149, 161], "kernel": [26, 67, 69, 90], "kernel_s": 90, "keyword": [22, 26, 40, 41, 119, 120, 121, 123, 169], "kind": [24, 91, 118, 159, 171], "kl": 113, "know": [13, 106], "known": [13, 69], "kwarg": [10, 45, 78, 79, 80, 96, 119, 120, 121, 122, 123, 162, 169, 173], "l": [93, 97, 118, 175], "l2": [4, 23, 26, 27, 36, 40, 41, 44, 107, 145], "l240": 82, "l_2": 71, "label": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 56, 76, 156, 158, 160, 163, 171, 175], "label_frequ": [50, 51, 52], "label_indic": 171, "label_map_func": 56, "labelbasedsampl": [8, 55, 155, 163, 175], "lambda": [27, 44, 118], "lambda_m": 69, "languag": 159, "laplacian": 118, "larg": [69, 97, 136, 148, 171], "larger": [26, 40, 41, 45, 107, 119, 123, 141, 151, 158, 171, 175], "largest_final_magnitude_scor": [8, 100, 107], "largest_increase_in_magnitude_scor": [8, 100, 107], "largest_magnitude_change_scor": [8, 100, 107], "last": [1, 23, 38, 85, 86, 93, 119, 123, 142, 169], "latent": [26, 35, 40, 41, 47, 83, 87, 88, 98, 113, 148, 158], "latent_dim": 113, "latent_vector": 83, "later": [13, 30, 83, 97, 99, 135, 174], "latestopacuscheckpoint": [8, 9, 12], "latesttorchcheckpoint": 134, "latesttorchmodulecheckpoint": [8, 9, 10], "latter": [83, 126, 127, 128, 129, 130, 132, 133, 135, 137, 156, 169], "law": 158, "layer": [4, 12, 13, 26, 32, 40, 41, 47, 69, 82, 83, 85, 86, 90, 91, 92, 93, 98, 99, 103, 106, 107, 109, 142, 143, 144, 148, 149, 152, 158, 173, 174], "layer1": 115, "layer_exchang": [8, 100], "layer_hierarchi": 85, "layer_nam": [69, 85, 103], "layer_norm_modul": 93, "layer_selection_funct": 103, "layerexchangerwithexclus": [8, 100, 103], "layernamesservercheckpointandstatemodul": [8, 9, 13, 132], "layernorm": 93, "layers_nam": 85, "layers_to_exchang": [81, 82, 88, 96, 98, 99], "layers_to_transf": 103, "layerselectionfunct": 103, "layerselectionfunctionconstructor": [8, 100, 103, 107], "lazi": 114, "lead": [162, 169], "learn": [4, 7, 11, 20, 22, 23, 27, 29, 33, 36, 37, 43, 44, 46, 48, 67, 72, 77, 78, 79, 82, 86, 92, 93, 97, 118, 129, 131, 142, 150, 153, 160, 169, 176], "learnabl": [90, 93], "learning_r": [48, 153], "least": [1, 13, 15, 45, 107, 153], "leav": [69, 119, 123], "left": [13, 23, 45, 74, 83, 95, 121, 148], "len": 171, "len_": 67, "len_old_models_buff": 43, "length": [22, 30, 42, 45, 67, 69, 93, 153, 156, 169, 171, 174], "leq": 97, "less": [4, 107, 109], "level": [1, 4, 23, 38, 45, 48, 109, 117, 118, 120, 121, 130, 133, 137, 142, 169, 175], "leverag": [107, 109, 114], "librari": [1, 4, 129, 162], "light": [4, 160], "like": [1, 11, 13, 22, 45, 90, 92, 106, 119, 123, 129, 130, 133, 137, 147, 149, 156, 160, 169, 174], "limit": [162, 171], "line": [4, 153], "linear": [69, 92, 158], "linear_modul": 92, "linearli": [141, 142, 143, 144, 145, 148, 149, 150, 151, 153], "link": [1, 158], "list": [1, 15, 16, 17, 18, 20, 22, 23, 40, 41, 43, 45, 46, 48, 52, 53, 55, 56, 62, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 88, 90, 93, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 117, 118, 119, 123, 129, 130, 131, 133, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 158, 159, 161, 162, 165, 169, 171, 175], "litian96": [27, 158], "ll": [142, 171], "load": [7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 55, 87, 115, 119, 123, 129, 131, 151, 155, 157, 160, 161, 163, 169, 176], "load_attribut": [155, 176], "load_autoencod": [111, 112], "load_best_checkpoint_into_model": [9, 12], "load_checkpoint": [9, 10, 12], "load_cifar10_data": [7, 8, 155, 163], "load_cifar10_test_data": [8, 155, 163], "load_config": [8, 155, 157], "load_data": [7, 8, 50, 51, 54, 155], "load_from_pretrain": [110, 115], "load_imag": [50, 51, 53, 54, 55], "load_mnist_data": [8, 155, 163], "load_mnist_test_data": [8, 155, 163], "load_model_checkpoint_to_paramet": [124, 131], "load_msd_dataset": [8, 155, 163], "load_pca_modul": [110, 114], "load_pretrained_model": [81, 87], "load_rxrx1_data": [50, 51, 52], "load_rxrx1_test_data": [50, 51, 52], "load_skin_cancer_data": [50, 54, 55], "load_snapshot": [155, 161], "loader": [22, 30, 42, 45, 52, 163], "local": [1, 4, 7, 11, 20, 21, 22, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 68, 70, 78, 79, 82, 88, 95, 98, 131, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 157, 161, 163, 169], "local_epoch": [7, 22, 29, 34, 37, 133, 137, 157], "local_featur": [68, 70, 88, 98], "local_feature_contrastive_loss": 47, "local_feature_contrastive_loss_weight": [47, 68], "local_feature_loss_temperatur": [47, 68, 70], "local_forward": [81, 82], "local_logit": 82, "local_loss": [21, 27], "local_metr": 29, "local_model": [26, 40, 41], "local_modul": [88, 98], "local_prediction_head": 86, "local_step": [20, 22, 24, 29, 34, 37, 43, 47, 48, 78, 79, 80, 133, 137, 157], "local_tensor": 95, "locat": [119, 123, 163], "lock": 1, "log": [7, 8, 10, 22, 45, 83, 113, 119, 123, 129, 132, 155, 169, 171], "logger": 169, "logging_mod": [22, 45, 156], "loggingmod": [8, 22, 45, 155, 164], "logic": 22, "logit": [65, 72, 77], "logits_threshold": [72, 77], "loglevel": [1, 8, 22, 45, 155, 169, 177], "logvar": [83, 113], "long": [45, 129, 136, 162], "longer": [162, 169], "look": [1, 45, 119, 123], "loop": [26, 27, 34, 40, 160], "loss": [4, 7, 8, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 87, 94, 97, 99, 110, 111, 119, 123, 129, 130, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 161, 169], "loss_contain": 24, "loss_dict": [20, 22, 24, 43, 47, 48, 78, 79, 80, 156], "loss_for_adapt": [20, 78, 79], "loss_list": 165, "loss_met": [29, 165], "loss_meter_typ": [20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 165], "loss_weight_delta": [145, 147], "loss_weight_pati": [145, 147], "losses_list": 165, "losses_typ": 165, "lossestyp": 165, "lossmet": [8, 155, 165, 176], "lossmetertyp": [8, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 155, 165], "lotteri": [4, 33], "low": [97, 171], "low_rank": 97, "lower": [45, 97], "lr": [7, 22, 45, 48, 67, 169], "lrschedul": [22, 176], "lrschedulersnapshott": [8, 155, 176], "m": [7, 97, 149], "m_": 74, "m_t": [74, 142], "machineri": 129, "made": [4, 21, 121], "magnitud": [130, 146, 147], "mai": [1, 13, 20, 22, 24, 29, 36, 42, 46, 78, 79, 83, 94, 97, 99, 118, 126, 127, 128, 129, 130, 132, 133, 135, 137, 143, 144, 149, 159, 162, 173, 174], "main": [1, 7, 50, 51, 53, 65, 118], "mainli": 30, "maintain": [4, 33, 90, 92, 93, 102, 149], "major": 11, "make": [38, 45, 72, 77, 83, 84, 119, 123, 169, 171, 173], "make_dict_with_epochs_or_step": [8, 155, 157], "manag": [1, 10, 15, 16, 17, 18, 22, 45, 76, 131, 136, 141, 142, 146, 151, 153], "mandatori": 146, "manger": 141, "mani": [1, 20, 75, 158, 162], "manipul": [45, 47, 94], "manner": [28, 84, 87, 97, 149], "manual": 1, "map": [1, 13, 45, 52, 56, 72, 77, 83, 87, 88, 90, 92, 93, 95, 98, 109, 115, 143, 144, 149, 158], "map_model_to_opacus_model": [8, 155, 173], "mark": 1, "mask": [33, 45, 90, 91, 92, 93, 107, 149, 159], "mask_data": [19, 45], "masked_conv": [81, 89], "masked_lay": [8, 81], "masked_layers_util": [81, 89], "masked_linear": [81, 89], "masked_normalization_lay": [81, 89], "maskedbatchnorm1d": [81, 89, 93], "maskedbatchnorm2d": [81, 89, 93], "maskedbatchnorm3d": [81, 89, 93], "maskedconv1d": [81, 89, 90], "maskedconv2d": [81, 89, 90], "maskedconv3d": [81, 89, 90], "maskedconvtranspose1d": [81, 89, 90], "maskedconvtranspose2d": [81, 89, 90], "maskedconvtranspose3d": [81, 89, 90], "maskedlayernorm": [81, 89, 93], "maskedlinear": [81, 89, 92], "master": [45, 158], "match": [13, 22, 26, 40, 41, 45, 85, 103, 115, 135, 170, 171], "mathbf": [31, 83], "mathcal": [83, 158], "matric": [97, 148], "matrix": [23, 67, 69, 97, 148, 158], "matter": [1, 102], "max": 45, "max_grad_norm": 45, "max_retri": 171, "max_step": 169, "max_work": 136, "maxim": [10, 12, 69], "maximum": [45, 67, 69, 136, 142, 152, 169, 174], "mayb": [13, 120, 121], "maybe_checkpoint": [9, 10, 11, 12, 13], "maybe_extract_fingerprint": [19, 45], "maybe_load_st": [9, 11, 13], "maybe_preprocess": [19, 45], "maybe_progress_bar": [8, 155, 156], "maybe_reshap": [81, 97], "md": 45, "mean": [1, 20, 44, 66, 67, 69, 78, 79, 83, 97, 113, 158, 169], "meant": [4, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 52, 95, 107, 131], "measur": [23, 26, 40, 41, 69, 117], "mechan": [11, 12, 27, 34, 38, 95, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 161, 173], "median": 169, "median_image_size_in_voxel": 45, "medic": 163, "medical_feder": 56, "member": [1, 142, 152], "memori": 161, "mention": 1, "merg": [1, 4, 30, 42, 67, 95, 134, 148, 151], "merge_metr": [19, 29], "merge_subspaces_qr": [139, 148], "merge_subspaces_svd": [139, 148], "merge_two_subspaces_qr": [139, 148], "messag": [22, 45, 170], "met": [153, 171], "metadata": [52, 53, 62], "meter": [20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 165], "method": [1, 4, 10, 11, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 72, 73, 74, 77, 80, 85, 95, 97, 106, 109, 119, 120, 121, 123, 127, 129, 135, 144, 148, 150, 153, 158, 165, 169, 174, 175, 176], "metric": [7, 8, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 119, 121, 123, 129, 130, 131, 132, 133, 134, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156], "metric_aggreg": [7, 8, 72], "metric_manag": [8, 22, 45, 72], "metric_manager_nam": 76, "metric_met": 29, "metric_nam": 146, "metric_typ": 146, "metric_valu": [22, 29, 30], "metricmanag": [8, 22, 45, 72, 76, 176], "metricprefix": [8, 72, 73], "metricsaggregationfn": [131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "mic": [45, 169], "middl": 83, "might": [1, 10, 11, 20, 45, 46, 107, 120, 121, 131, 145], "mimic": 173, "min": [23, 97], "min_available_cli": [7, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "min_evaluate_cli": [7, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151], "min_fit_cli": [7, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151], "min_label_exampl": 171, "min_num_cli": [15, 16, 17, 18], "mini": 93, "minim": [10, 12, 67, 69, 80, 126, 127, 128, 129, 130, 132, 133, 135, 137], "minimize_type_two_error": 69, "minimum": [15, 16, 17, 18, 22, 29, 42, 131, 134, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 171], "minor": 175, "minority_label": 175, "minoritylabelbasedsampl": [8, 155, 175], "mismatch": 173, "miss": 62, "mix": [45, 79, 82], "mixin": 8, "mixtur": 82, "mk": [22, 26, 40, 41, 69], "mkmmd_client": [8, 19], "mkmmd_loss": [8, 64], "mkmmd_loss_weight": [40, 41], "mkmmdloss": [8, 64, 69], "mloptpsu": 82, "mlr": [37, 150], "mmd": [22, 26, 40, 41, 67, 69], "mmd_kernel_train_interv": 26, "mmdu": [64, 67], "mnist": [160, 163], "mode": [11, 21, 22, 28, 34, 36, 44, 45, 84, 95, 162], "model": [4, 7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 115, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 165, 169, 170, 172, 173], "model_bas": 8, "model_checkpoint": 13, "model_checkpoint_path": [29, 131], "model_head": [88, 95, 98], "model_merge_cli": [8, 19], "model_merge_serv": [8, 124], "model_merge_strategi": [8, 139], "model_paramet": 106, "model_path": [42, 87], "model_save_dir": 30, "model_weight": [104, 106, 108], "modelcheckpoint": [11, 13], "modellatentf": [8, 64, 67], "modelmergecli": [8, 19, 42], "modelmergeserv": [8, 124, 134], "modelmergestrategi": [8, 134, 139, 151], "modern": 1, "modif": [4, 107, 145, 147, 173], "modifi": [4, 22, 45, 48, 119, 123, 133, 142, 145, 147, 156, 169, 173, 175], "modify_grad": [19, 48], "modify_noise_multipli": [139, 142], "modul": [4, 7, 8, 9, 14, 19, 25, 39, 50, 51, 54, 57, 64, 72, 78, 81, 89, 100, 110, 111, 116, 119, 124, 125, 139, 155], "modular": 4, "module2losswrapp": [8, 155, 169], "module_exclus": 103, "modulelist": 85, "modulu": 69, "moment": [117, 118, 150], "moment_ord": [117, 118], "moments_account": [8, 116], "momentsaccount": [8, 116, 118], "momentum": [7, 93, 142, 150], "monitor": [161, 176], "monolith": 30, "moon": [4, 22, 26, 31, 40, 41, 43, 44, 45, 65, 86, 94, 99], "moon_bas": [8, 81], "moon_client": [8, 19], "moonclient": [8, 19, 43], "mooncontrastiveloss": [8, 64, 65], "mooncontrastivelosscontain": [8, 64, 68], "moonmodel": [8, 81, 94], "more": [4, 13, 21, 22, 28, 29, 31, 34, 37, 42, 45, 72, 74, 76, 77, 90, 97, 103, 106, 109, 120, 141, 144, 147, 148, 149, 158, 162, 169, 171, 173, 174, 175], "most": [21, 22, 26, 40, 41, 107, 109, 126, 127, 128, 129, 130, 132, 133, 135, 137, 140, 157], "mostli": 46, "move": [1, 67, 69, 74, 136, 137, 153, 156], "move_data_to_devic": [8, 155, 156], "mp": 45, "mr": [4, 11, 41, 44, 126, 128], "mr_mtl_client": [8, 19], "mr_mtl_mkmmd_client": [19, 39], "mrmtl_server": [124, 125], "mrmtlclient": [8, 19, 41, 44], "mrmtlmkmmdclient": [19, 39, 41], "mrmtlserver": [124, 125, 128], "msd": 163, "msd_dataset_nam": 163, "msd_dataset_sourc": [8, 155], "msddataset": [8, 155, 163, 168], "mtl": [4, 11, 41, 44, 126, 128], "mu": [20, 31, 43, 47, 83, 112, 113, 145, 147, 158], "much": [13, 148], "multi": 69, "multidimension": 158, "multinomi": [171, 175], "multipl": [13, 22, 28, 45, 59, 65, 85, 115, 140, 148, 169], "multipli": [117, 142, 152], "multiprocess": 45, "multithread": 169, "multithreadedaugment": 169, "multivari": 158, "must": [1, 10, 13, 21, 22, 45, 46, 72, 74, 77, 95, 109, 118, 119, 123, 126, 128, 132, 133, 134, 135, 137, 141, 143, 144, 145, 146, 147, 153, 159, 162, 169, 171], "mutual": [66, 115, 171], "mypi": 1, "n": [22, 26, 40, 41, 65, 83, 93, 97, 118, 148, 153, 158], "n_1": 148, "n_2": 148, "n_case": 169, "n_client": 152, "n_clients_sampl": 117, "n_dataload_process": 45, "n_featur": [65, 66, 69, 70], "n_i": 148, "n_k": 118, "n_n": 148, "n_pair": 65, "n_sampl": [69, 158], "n_server_round": 146, "n_total_cli": 117, "name": [7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 62, 69, 72, 73, 74, 76, 77, 78, 79, 82, 85, 99, 103, 106, 107, 109, 115, 119, 121, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 143, 144, 146, 149, 157, 160, 161, 163, 169, 176], "named_modul": 85, "narrow": 157, "narrow_dict_typ": [8, 155, 157], "narrow_dict_type_and_set_attribut": [8, 155, 157], "narrow_type_to": 157, "navig": 1, "ndarrai": [20, 22, 23, 27, 29, 30, 34, 36, 42, 44, 46, 48, 78, 79, 80, 102, 103, 104, 105, 106, 107, 108, 109, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 171], "nearli": [4, 32], "necessari": [13, 30, 37, 43, 46, 62, 99, 135, 169, 173], "necessarili": 13, "need": [1, 4, 7, 10, 12, 13, 22, 27, 29, 30, 32, 34, 36, 42, 45, 72, 77, 83, 95, 97, 103, 115, 129, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 158, 162, 169, 174], "needs_input_grad": 162, "neg": [65, 68, 70, 142], "negative_pair": [65, 68], "neighbor_rel": 118, "neither": 153, "net": 7, "network": [31, 36, 67, 85, 148, 169], "neural": 85, "neuron": 162, "never": [11, 44, 119, 123, 161], "new": [1, 16, 23, 52, 56, 74, 87, 91, 92, 93, 114, 119, 123, 135, 146, 148, 160, 165, 171, 173, 175], "new_dimens": 114, "new_tag": [119, 123], "newli": 153, "next": [7, 24, 34, 47, 109, 131, 146, 147, 169, 171], "nice": 162, "nip": 65, "nn": [7, 10, 11, 12, 13, 22, 26, 27, 40, 41, 42, 45, 71, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 107, 109, 115, 134, 153, 156, 169, 170, 172, 173, 176], "nnunet": [13, 45, 129, 135, 169], "nnunet_augment": 169, "nnunet_cli": [8, 19], "nnunet_config": [45, 169], "nnunet_dataload": 169, "nnunet_plan": [45, 135], "nnunet_serv": [8, 124], "nnunet_trainer_class": [45, 135], "nnunet_trainer_class_kwarg": 45, "nnunet_util": [8, 155], "nnunetcli": [8, 19, 45, 135, 169], "nnunetconfig": [8, 155, 169], "nnunetdataloaderwrapp": [8, 155, 169], "nnunetserv": [8, 13, 45, 124, 129, 135], "nnunetservercheckpointandstatemodul": [8, 9, 13, 135], "nnunettrain": [45, 135], "nnunetv2": [45, 135, 169], "node": 7, "nois": [23, 117, 118, 130, 133, 137, 142, 152], "noise_ev": 118, "noise_multipli": [38, 117, 118, 133, 137, 152], "noise_std_dev": 152, "noisi": 152, "noisy_aggreg": [8, 139], "non": [1, 4, 20, 42, 43, 67, 72, 77, 118, 129, 132, 156, 157, 158, 159, 160, 162, 165, 169, 175], "nondetmultithreadedaugment": 169, "none": [1, 7, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 59, 62, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 97, 101, 102, 103, 105, 107, 108, 109, 112, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 170, 171, 174, 175, 176], "nonneg": 107, "nonzero": [106, 144], "nor": [82, 153], "norm": [4, 23, 31, 40, 41, 45, 69, 103, 107], "norm_threshold": 107, "normal": [4, 64, 65, 69, 75, 83, 93, 106, 107, 113, 152, 158, 165], "normalize_featur": 69, "normalize_metr": [8, 72, 75], "normalized_shap": 93, "notabl": 65, "notat": 158, "note": [1, 4, 7, 11, 13, 22, 27, 31, 36, 41, 42, 44, 45, 46, 69, 74, 83, 87, 90, 92, 93, 97, 102, 103, 106, 107, 114, 117, 118, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 158, 162, 171, 173, 174, 175], "notebook": 118, "noth": [7, 82], "notimplementederror": [10, 22, 28, 30, 36, 42, 45, 72, 73, 74, 77, 95, 165], "notset": [155, 177], "now": [1, 7, 10, 97, 120, 156], "np": [162, 171, 175], "nt": 65, "ntxentloss": [8, 64, 65], "num": 45, "num_accumulating_batch": [26, 40, 41], "num_client": [15, 16, 158], "num_featur": 93, "num_input_channel": 135, "num_round": [7, 129, 130, 131, 133, 134, 135, 137], "num_sampl": 169, "num_segmentation_head": 135, "num_server_round": [130, 133, 137], "num_spatial_dim": 169, "num_validation_step": [22, 29], "num_work": [52, 55], "number": [1, 4, 15, 16, 17, 18, 20, 22, 24, 26, 27, 29, 30, 31, 34, 37, 40, 41, 42, 43, 44, 45, 47, 48, 52, 53, 55, 67, 69, 75, 78, 79, 90, 93, 97, 106, 107, 114, 117, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 161, 162, 169, 171, 174, 175, 176], "number_of_partit": 171, "numbersnapshott": [8, 155, 176], "numer": [57, 63, 93, 162], "numpi": [20, 78, 79, 102, 106, 134, 140, 152, 153, 162, 170, 172, 174], "numpy_st": 174, "numpycli": [22, 30, 42, 80], "numpyclientminimalprotocol": [8, 78, 80], "numpyclippingcli": [8, 19, 23], "nunetserv": 135, "nutshel": 148, "nvidia": 174, "object": [10, 11, 13, 15, 17, 18, 20, 21, 22, 28, 29, 34, 37, 42, 45, 46, 62, 68, 76, 78, 79, 85, 87, 103, 107, 114, 115, 117, 118, 119, 120, 122, 123, 129, 130, 131, 133, 134, 136, 137, 143, 144, 146, 148, 149, 157, 161, 162, 163, 165, 169, 170, 172, 175, 176], "observ": 148, "obtain": [11, 13, 23, 30, 140, 148], "obviou": 1, "occur": [4, 22, 26, 27, 36, 40, 41, 42, 129, 151, 158], "off": [13, 42, 69, 129, 131, 142, 145, 147], "offer": [141, 174], "offici": [56, 97], "official_column": 56, "often": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 140, 156], "old": [23, 24, 43, 47, 70], "old_global_featur": [68, 70], "old_local_featur": [68, 70], "old_model": 43, "omit": 1, "on_evaluate_config_fn": [7, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "on_fit_config_fn": [7, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "on_init_parameters_config_fn": [126, 127, 128, 129, 130, 132, 133, 135, 137], "onc": [7, 42, 120, 121, 169], "one": [1, 11, 13, 22, 27, 28, 29, 30, 33, 34, 37, 45, 70, 76, 83, 85, 88, 90, 91, 92, 93, 94, 95, 115, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 142, 146, 149, 151, 153, 156, 157, 158, 160, 163, 165, 169, 174], "one_layer_map_inputs_to_output": [155, 158], "ones": [93, 119, 123, 149, 153], "onli": [1, 4, 10, 11, 12, 13, 22, 26, 27, 29, 30, 32, 34, 36, 37, 40, 41, 42, 46, 47, 48, 76, 82, 88, 93, 95, 97, 99, 103, 112, 119, 123, 129, 131, 134, 135, 141, 142, 144, 145, 147, 148, 151, 152, 153, 159, 169], "onlin": 1, "onto": [67, 69, 97, 114], "op": [129, 174], "opacu": [12, 13, 38, 133, 141, 153, 173], "opacus_checkpoint": [8, 9], "opacusbasicfedavg": [8, 133, 139, 141], "opacuscheckpoint": [8, 9, 12], "opacusscaffold": [8, 139, 153], "opacusservercheckpointandstatemodul": [8, 9, 13, 133], "open": 4, "oper": [36, 72, 77, 109, 129, 162, 173], "oppos": 162, "optim": [4, 7, 11, 21, 22, 23, 26, 27, 28, 30, 31, 34, 36, 37, 38, 40, 41, 43, 44, 45, 48, 67, 68, 69, 78, 80, 82, 153, 165, 169, 173, 176], "optimization_step": 67, "optimize_beta": [64, 69], "optimizer_kei": [22, 45], "optimizersnapshott": [8, 155, 176], "option": [1, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 59, 62, 66, 67, 68, 69, 72, 73, 74, 77, 82, 83, 87, 88, 90, 93, 94, 97, 99, 102, 107, 112, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 158, 160, 161, 163, 165, 169, 171, 173, 174, 175], "orchestr": [46, 83], "order": [1, 13, 34, 43, 74, 78, 79, 85, 102, 103, 106, 109, 117, 118, 131, 135, 137, 140, 142, 146, 147, 162, 169], "ordin": [57, 63], "ordinari": 33, "org": [21, 32, 33, 34, 35, 48, 56, 65, 72, 77, 86, 87, 90, 97, 106, 109, 132, 137, 141, 142, 144, 145, 149, 152, 153, 158, 162, 174], "organ": [119, 123], "origin": [4, 27, 43, 44, 45, 47, 52, 56, 67, 70, 82, 91, 97, 99, 135, 149, 156, 158, 160, 171], "original_column": 56, "original_dataset": 171, "original_label_map": 52, "original_median_shape_after_transp": 45, "original_median_spacing_after_transp": 45, "original_model": 91, "original_param": 153, "orthonorm": 148, "other": [1, 4, 20, 21, 22, 23, 26, 27, 28, 29, 36, 40, 41, 44, 45, 46, 48, 74, 78, 79, 88, 90, 94, 98, 99, 109, 118, 126, 127, 128, 129, 130, 132, 133, 135, 137, 148, 152, 160, 162, 173], "other_st": 13, "otherwis": [7, 10, 11, 13, 22, 29, 36, 37, 46, 91, 115, 119, 121, 123, 161, 171], "our": [1, 4, 7, 32, 72, 77], "out": [1, 107, 130, 142, 148], "out_channel": 90, "out_featur": 92, "output": [22, 27, 34, 45, 53, 67, 72, 77, 82, 83, 85, 87, 88, 90, 92, 93, 95, 98, 99, 113, 135, 158, 162, 169], "output_dim": 158, "output_dir": 53, "output_fold": [119, 121], "output_pad": 90, "output_path": 53, "output_s": [67, 90], "outsid": [4, 119, 120, 121, 123, 174], "over": [20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 66, 67, 72, 73, 74, 77, 78, 79, 93, 118, 119, 123, 126, 128, 141, 142, 153, 160, 169, 175], "overal": 1, "overestim": 97, "overfit": 161, "overhead": 45, "overrid": [12, 15, 17, 18, 21, 22, 23, 24, 32, 34, 35, 45, 46, 48, 94, 131, 137, 146, 162, 169], "overridden": [20, 22, 29, 42, 45, 78, 79, 83, 129, 134, 146, 153, 162, 169], "overwrit": [10, 12, 85, 119, 123], "own": [4, 45, 169, 173], "p": [1, 142], "pack": [1, 20, 26, 27, 36, 40, 41, 48, 78, 79, 83, 106, 109, 131, 142, 143, 144, 145, 147, 148, 149, 160], "pack_losses_with_val_metr": [22, 37, 146], "pack_paramet": [100, 104, 106, 108], "packag": [0, 1, 7, 20, 109, 141, 142, 151, 153, 169], "packed_data": 160, "packed_paramet": [104, 106, 108], "packer": [13, 106, 142], "packing_exchang": [8, 100], "packingservercheckpointandandstatemodul": [8, 9, 13], "pad": [56, 90], "pad_image_path_func": [50, 54, 56], "pad_label_map_func": [50, 54, 56], "padding_mod": 90, "page": [1, 106, 109, 144], "pair": [65, 67, 68, 70, 72, 73, 74, 77, 119, 123, 158], "pairwise_distance_squar": [64, 67], "panchal23a": [37, 150], "panda": 59, "paper": [27, 34, 43, 44, 47, 48, 56, 65, 67, 70, 118, 141, 142, 145, 148, 153, 158, 162], "paper_fil": 65, "paradigm": 149, "parallel": [35, 47, 55, 86, 88, 95], "parallel_output_join": [81, 95], "parallel_split_model": [8, 81], "parallelfeaturejoinmod": [8, 81, 95], "parallelsplitheadmodul": [8, 81, 88, 95, 98], "parallelsplitmodel": [8, 81, 88, 95, 98], "param": [48, 106, 153], "paramet": [4, 7, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 170, 171, 172, 173, 174, 175, 176], "parameter_exchang": [8, 13, 46, 78, 79, 134], "parameter_exchanger_bas": [8, 100], "parameter_extract": [7, 8, 155], "parameter_pack": [8, 100, 104, 108], "parameter_selection_criteria": [8, 100], "parameter_upd": 153, "parameterexchang": [8, 20, 21, 22, 23, 24, 29, 32, 33, 34, 35, 46, 47, 48, 78, 79, 100, 102, 103, 105, 108], "parameterpack": [8, 100, 106], "parameterpackeradaptiveconstraint": [8, 100, 106], "parameterpackerwithclippingbit": [8, 100, 106], "parameterpackerwithcontrolvari": [8, 100, 106], "parameterpackerwithlayernam": [8, 100, 106], "parametr": 67, "params1": 170, "params2": 170, "params_1": [48, 153], "params_2": [48, 153], "parent": [13, 28, 36, 45, 94, 151], "part": [20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 74, 95, 118, 126, 127, 128, 129, 130, 132, 133, 135, 137, 144, 169, 175], "parti": 43, "partial": [7, 29, 46, 74, 86, 107, 115, 146, 153], "partial_layer_exchange_model": [8, 81], "partial_parameter_exchang": [8, 100], "partial_weight_exchange_cli": [8, 19], "partiallayerexchangemodel": [8, 81, 82, 88, 96, 98, 99], "partialparameterexchang": [8, 46, 100, 103, 108, 109], "partialweightexchangecli": [8, 19, 46], "particip": [126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 143, 144, 146, 153], "particular": [11, 149, 171, 175], "partit": 171, "partition": [8, 155], "partition_dataset": [155, 171], "partition_label_indic": [155, 171], "partitioned_dataset": 171, "pass": [1, 10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 67, 72, 73, 74, 77, 78, 79, 83, 85, 87, 90, 92, 93, 94, 95, 97, 99, 119, 120, 121, 123, 131, 135, 136, 137, 145, 147, 157, 160, 162, 169, 171, 175], "past": [10, 12, 29, 71], "patch": 169, "path": [7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 55, 56, 87, 112, 114, 115, 121, 131, 161, 163], "path_to_checkpoint": [10, 12], "pathlib": 7, "patienc": 161, "pc": 148, "pca": [8, 30, 81, 148], "pca_lowrank": 97, "pca_preprocessor": [8, 110], "pcamodul": [8, 30, 81, 97, 114, 148], "pcapreprocessor": [8, 110, 114], "pd": [53, 56, 59], "pdf": [33, 34, 35, 37, 48, 65, 86, 87, 132, 142, 149, 150, 152, 153, 162], "peft": 172, "peft_parameter_extract": [8, 155], "penal": [20, 26, 40, 41], "penalti": [4, 20, 26, 27, 31, 36, 40, 41, 44, 78, 79, 145, 147], "penalty_loss_funct": [78, 79], "per": [45, 65, 75, 93, 97, 117, 118, 133, 137, 142, 152, 158, 169, 171], "per_client_example_cap": [142, 152], "per_round_checkpoint": [22, 29], "percentag": [52, 55, 103, 107, 175], "perfcl": [4, 24, 35, 47, 68, 70, 98], "perfcl_bas": [8, 81], "perfcl_client": [8, 19], "perfcl_loss": [8, 24, 64], "perfcl_loss_config": 68, "perfclclient": [8, 19, 47], "perfclloss": [8, 64, 70], "perfcllosscontain": [8, 64, 68], "perfclmodel": [8, 47, 81, 98], "perform": [4, 11, 15, 20, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 72, 77, 78, 79, 83, 97, 109, 114, 117, 118, 129, 133, 134, 135, 137, 141, 142, 143, 144, 148, 149, 151, 153, 157, 160, 165, 169, 171, 173], "perform_linear_approxim": 69, "perhap": [13, 22, 30, 45, 83], "perroundstatecheckpoint": [8, 9, 10, 11, 13], "persist": 10, "person": [4, 21, 27, 36, 44, 82, 128], "perspect": 153, "phase": [4, 13, 34, 87, 143, 144, 153], "pickl": [45, 53], "piec": [47, 62, 68, 83], "pii": [47, 70], "pinnabl": 162, "pip": [1, 7], "pipelin": 83, "place": [13, 43, 59, 143, 144, 169, 171], "placehold": 12, "plan": [45, 129, 135, 169], "plans_identifi": 45, "plans_nam": 45, "plansnam": 45, "plate": 53, "pleas": [1, 90, 103, 106, 109, 144, 162], "plu": [43, 165], "plugin": 161, "poetri": 1, "point": [1, 42, 52, 97, 117, 118, 131, 148, 171, 175], "poisson": [18, 117, 118], "poisson_sampling_manag": [8, 14], "poissonsampl": [8, 116, 118], "poissonsamplingclientmanag": [8, 14, 18], "poll": [8, 42, 124, 129, 130, 133, 135, 141, 154], "poll_client": [8, 124, 136], "poll_clients_for_sample_count": [124, 129], "pollresultsandfailur": 136, "polylrschedulerwrapp": [8, 155, 169], "polynomi": 169, "pool": [129, 136], "popul": [118, 119, 123], "population_s": 118, "posit": [65, 68, 70], "positive_pair": [65, 68], "posixpath": [119, 121], "possibl": [1, 33, 68, 169, 173], "possibli": [37, 44, 173], "post": [11, 13, 129, 132], "post_aggreg": [9, 11], "posterior": 149, "potenti": [4, 10, 11, 12, 13, 22, 26, 27, 28, 29, 38, 44, 83, 126, 127, 128, 129, 130, 132, 133, 135, 137, 145, 160, 171, 173], "power": [69, 158], "pr": 1, "pre": [1, 11, 13, 87, 103, 112, 114, 160], "pre_aggreg": [9, 11], "preced": [95, 153], "precis": [45, 97, 144, 148, 149], "pred": [20, 21, 22, 24, 26, 27, 28, 36, 40, 41, 43, 44, 45, 47, 74, 76, 78, 79, 80, 113, 169], "pred_1": 74, "pred_2": 74, "pred_transform": 74, "predict": [4, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 72, 73, 74, 76, 77, 78, 79, 82, 84, 87, 88, 94, 95, 98, 99, 113, 146, 169], "prediction_head": 87, "preds_1": 74, "preds_2": 74, "preds_list": 84, "preemption": 129, "prefix": [10, 45, 85, 115], "prepar": 97, "prepare_data_forward": [81, 97], "prepare_loss_arg": [8, 155, 169], "prepend": 10, "preprocess": [8, 45, 50, 51, 56], "preprocess_derm7pt": [50, 54, 56], "preprocess_ham10000": [50, 54, 56], "preprocess_isic_2019": [50, 54, 56], "preprocess_pad_ufes_20": [50, 54, 56], "preprocess_skin": [50, 54], "prescrib": 1, "present": [4, 11, 22, 29, 34, 87, 146, 157, 171], "preserv": [11, 13, 43, 99, 126, 127, 128, 129, 130, 132, 133, 135, 137, 156], "press": [37, 150], "pretrain": [87, 115], "pretrained_model": 115, "pretrained_model_path": 115, "prevent": 85, "previou": [4, 10, 43, 70, 71, 74, 119, 123, 142], "previous": [10, 74, 174], "primari": 97, "princip": [4, 30, 97, 114, 148], "principal_compon": 97, "print": [45, 52, 156], "prior": [22, 24, 42, 47, 48, 74, 85, 97, 129, 132, 133, 135, 152, 157, 169, 171], "prior_distribut": 171, "priorit": [4, 157], "prioriti": [119, 123], "privaci": [8, 12, 23, 38, 44, 130, 133, 137, 142, 173], "privacy_util": [8, 155], "privacy_validate_and_fix_modul": [8, 155, 173], "privat": [4, 32, 34, 38, 48, 137, 142], "probabilist": 149, "probabl": [18, 90, 92, 93, 117, 118, 149, 158, 162, 169, 171, 175], "proce": [126, 127, 128, 129, 130, 132, 133, 135, 137], "procedur": [4, 26, 27, 40, 95, 118, 148], "proceed": [13, 26, 27, 37, 40, 137, 150], "process": [11, 13, 18, 22, 29, 34, 35, 37, 38, 45, 52, 53, 55, 56, 107, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 160, 161, 162, 169, 174], "process_and_check_validation_step": [8, 155, 156], "process_client_data": [50, 54, 56], "process_config": [19, 22, 37], "process_data": [50, 51, 53], "process_fed_rep_config": [19, 34], "processor": 112, "produc": [1, 10, 16, 17, 21, 22, 28, 34, 43, 45, 70, 82, 83, 84, 88, 90, 92, 93, 94, 95, 98, 109, 126, 127, 128, 129, 130, 132, 133, 135, 137, 141, 142, 148, 153, 158, 165], "product": [26, 27, 36, 40, 41, 44, 71], "progress": [1, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 156], "progress_bar": [20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 156], "project": [4, 87, 94, 97, 114, 119, 123], "project_back": [81, 97], "project_lower_dim": [81, 97], "projection_head": 87, "projection_modul": 94, "propag": [90, 92, 93, 162], "proper": [10, 11, 12, 13, 27, 34, 87, 103, 133, 143, 144, 169], "properli": [1, 11, 13, 33, 46], "properti": [22, 45, 46, 103, 135, 136, 141], "proport": [153, 163], "propos": [65, 67], "protocol": [79, 80], "provid": [4, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 63, 65, 66, 68, 69, 75, 82, 83, 87, 91, 92, 93, 102, 103, 115, 117, 118, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 156, 159, 162, 169, 171, 173], "proxi": [136, 162], "proxim": [145, 147], "prune": 149, "pseudo": 162, "pseudo_sort_scoring_funct": [8, 155, 162], "pull": [20, 22, 23, 27, 29, 36, 46, 78, 79], "pull_paramet": [100, 101, 102, 103, 105, 109], "purpos": [10, 45, 59, 97, 126, 128], "push": 1, "push_paramet": [100, 102, 103, 105, 109], "put": 52, "py": [1, 56, 82], "pylint": 1, "pypi": [1, 4], "pyproject": 1, "pytest": 1, "pytestarg": 1, "pytesten": 1, "python": [1, 4, 7, 119, 123, 169, 174], "python3": 1, "pytorch": [10, 12, 22, 27, 29, 30, 38, 42, 45, 90, 97, 103, 106, 109, 114, 144, 159, 169, 170, 172, 173, 174], "q": [97, 118], "q_1": 118, "q_2": 118, "qinbinli": 65, "qr": 148, "quadrupl": 69, "quantil": 142, "quantiti": 153, "queri": 137, "quickli": 169, "quickstart": 4, "quintessenti": 145, "quotat": 1, "quotestyl": 1, "r": 162, "rais": [10, 11, 13, 22, 27, 28, 29, 30, 34, 36, 37, 40, 41, 42, 45, 63, 72, 73, 74, 77, 78, 79, 90, 95, 131, 142, 146, 153, 156, 157, 159, 165, 169, 171], "rand": 171, "randint": 171, "random": [8, 52, 55, 69, 97, 119, 123, 135, 155, 169, 171, 175], "random_st": 174, "randomli": [20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48], "rang": [4, 74, 171, 175], "rank": 97, "rank_estim": 97, "rapid": 169, "rate": [4, 11, 22, 48, 67, 82, 118, 142, 150, 153, 169, 176], "rather": [1, 13, 18, 36, 86, 142, 159, 161, 171], "ratio": [117, 118, 169], "raw": [131, 142, 153], "rbf": 69, "re": [1, 10, 20, 22, 27, 36, 69, 78, 79, 87, 119, 123, 129, 141, 142, 143, 144, 145, 148, 151, 153, 160, 165], "read": 169, "readi": [129, 169], "real": [13, 107, 114], "realiti": 114, "reason": [10, 12, 97, 135, 153], "recal": 13, "receiv": [16, 20, 22, 24, 31, 41, 44, 45, 47, 72, 77, 90, 92, 93, 136, 143, 144, 145, 153, 158], "recent": [4, 21, 22, 26, 33, 40, 41, 129], "recip": [83, 169], "recogn": 11, "recommend": [1, 7, 45, 145, 153], "reconstitut": 102, "reconstruct": [62, 83, 97, 113], "record": [38, 129], "recov": 97, "redirect": 169, "redistribut": [134, 151], "reduc": [45, 65, 67, 70, 97, 114, 145, 147], "reduce_dimens": [110, 114], "reduct": [30, 97, 114], "ref": [119, 123], "ref_image_shap": 169, "refer": [4, 22, 43, 47, 71, 149, 158], "reflect": [90, 153], "reformat": 45, "regardless": [10, 141, 160], "regist": [83, 85, 169], "regular": [44, 90, 92, 144], "regularized_q_k": 69, "reiniti": 173, "rel": [65, 97, 175], "relat": [4, 35, 47, 142, 149], "releas": [1, 169], "relev": [20, 22, 23, 27, 29, 36, 42, 44, 47, 48, 78, 79, 93, 140], "reli": [13, 32, 102, 103, 160], "reload": [30, 169], "reload_modul": [8, 155, 169], "remain": [11, 65, 88, 98, 142, 145, 147], "remaind": [52, 94], "rememb": [1, 7], "remot": 1, "remov": [4, 85], "removablehandl": 85, "remove_hook": [81, 85], "rep_epoch": 34, "rep_step": 34, "repack": 153, "reparameter": 83, "repeat": 171, "repeatedli": 162, "replac": [15, 17, 18, 44, 117, 169, 173], "replic": 90, "report": [8, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "report_centralized_ev": [124, 129], "reports_manag": [8, 119], "reportsmanag": [8, 119, 122, 176], "repositori": [1, 56], "repres": [10, 13, 15, 17, 18, 21, 22, 24, 26, 29, 30, 34, 37, 40, 41, 42, 47, 62, 72, 73, 74, 77, 83, 84, 86, 97, 99, 106, 109, 113, 136, 140, 144, 152, 153, 158, 162, 165, 169], "represent": [4, 19, 34, 43, 67, 83, 87, 97, 158, 165], "reproduc": [163, 174], "request": [20, 78, 79, 90, 126, 127, 128, 129, 130, 132, 133, 135, 137, 140, 141, 156, 171], "requir": [10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 27, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 67, 78, 79, 88, 97, 99, 106, 109, 118, 127, 135, 136, 141, 142, 143, 144, 146, 148, 151, 159, 162, 171, 173], "requires_grad": 86, "resampl": [16, 171], "research": [1, 4], "resembl": 86, "reserv": 52, "reset": [16, 22, 26, 40, 41, 72, 73, 74, 76, 77, 132, 149, 155, 165, 169], "reset_beta_prior": [139, 149], "reset_frequ": 132, "reset_sampl": [14, 16], "reshap": 97, "resili": 129, "resolut": 169, "respect": [7, 21, 24, 26, 27, 34, 36, 72, 73, 74, 77, 88, 90, 92, 93, 98, 117, 161, 163], "respond": [131, 134], "respons": [13, 22, 95, 103, 106, 109, 129, 131, 132, 136, 148], "rest": 65, "restart": [11, 13, 126, 127, 128, 129, 130, 132, 133, 135, 137], "restor": [83, 161, 174], "restore_random_st": [8, 155, 174], "restrict": [142, 153], "result": [30, 74, 97, 106, 119, 123, 129, 130, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 162, 173, 174, 175], "resum": [11, 119, 123], "retain": [109, 144], "retri": 171, "retriev": [13, 130, 133, 136, 162], "return": [7, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176], "return_mu_onli": 112, "reus": [27, 34, 83, 119, 123], "right": [4, 13, 23, 34, 83, 97, 127, 148], "robust": [27, 36], "roc_auc": [8, 72, 77], "root": [52, 53], "round": [7, 8, 13, 20, 22, 23, 24, 26, 27, 29, 30, 31, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 70, 78, 79, 82, 103, 117, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 169], "rout": [13, 27, 36, 44, 87], "row": [53, 56, 97, 148], "rpc": 135, "rtype": [83, 162, 169], "rule": 1, "run": [1, 13, 16, 27, 30, 34, 45, 82, 83, 94, 99, 118, 119, 121, 123, 129, 130, 131, 133, 136, 137, 146, 153, 162, 169, 173, 174], "run_id": [119, 121], "runtim": 45, "runtimeerror": [78, 79], "rxrx": 52, "rxrx1": [8, 50], "s0031320323002078": [47, 70], "s_1": 148, "s_2": 148, "s_i": 148, "s_n": 148, "said": 1, "same": [7, 16, 27, 33, 36, 37, 38, 45, 67, 69, 76, 83, 90, 91, 92, 93, 94, 103, 115, 118, 119, 123, 129, 132, 135, 144, 145, 149, 152, 156, 158, 159, 162, 169, 171], "sampl": [14, 15, 16, 17, 18, 22, 29, 30, 34, 42, 45, 52, 67, 75, 81, 83, 84, 87, 90, 92, 93, 107, 112, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 149, 151, 152, 153, 158, 160, 162, 163, 169, 171, 175], "sample_al": [14, 15], "sample_count": [130, 133], "sample_fract": [14, 15, 17, 18, 142], "sample_percentag": 175, "sample_s": 118, "sampler": [8, 55, 155, 163], "samples_per_cli": 158, "sampling_ratio": 118, "sampling_strategi": 118, "samplingstrategi": [8, 116, 118], "satisfi": [78, 79, 171], "save": [10, 11, 12, 13, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 53, 56, 70, 87, 112, 114, 119, 121, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 155, 160, 161, 162, 174, 176], "save_attribut": [155, 176], "save_checkpoint": [9, 10], "save_for_backward": 162, "save_for_forward": 162, "save_model": [19, 30], "save_random_st": [8, 155, 174], "save_snapshot": [155, 161], "save_st": [9, 11, 13], "save_to_json": [50, 54, 56], "save_to_pkl": [50, 51, 53], "scaffold": [4, 8, 13, 22, 48, 106, 137, 139], "scaffold_cli": [8, 19], "scaffold_serv": [8, 124], "scaffoldcli": [8, 19, 48], "scaffoldserv": [8, 124, 137], "scaffoldservercheckpointandstatemodul": [8, 9, 13, 137], "scalar": [10, 11, 12, 13, 22, 26, 27, 29, 30, 34, 37, 42, 44, 45, 62, 63, 72, 73, 74, 77, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "scale": [45, 65, 69, 71, 152, 153, 169], "scaling_coeffici": 153, "scenario": [22, 36, 85], "schedul": [11, 22, 45, 169, 176], "scheme": [143, 144, 148, 149, 160], "scienc": [47, 70], "sciencedirect": [47, 70], "scikit": [72, 77], "scope": [119, 120, 121, 123, 169], "score": [10, 12, 13, 72, 74, 77, 90, 92, 93, 107, 109, 149, 162], "score_gen_funct": 109, "scoregenfunct": 109, "script": [7, 52, 56], "second": [11, 22, 24, 26, 27, 33, 36, 40, 41, 43, 45, 47, 48, 66, 68, 69, 70, 95, 99, 129, 130, 131, 132, 133, 134, 137, 141, 142, 149, 150, 158, 170], "second_featur": 68, "second_feature_extractor": [95, 98], "second_tensor": 95, "section": [1, 158, 162], "secur": 4, "see": [1, 45, 68, 72, 77, 90, 97, 103, 106, 109, 118, 119, 123, 129, 134, 144, 145, 147, 148, 158, 162, 169, 174], "seed": [52, 55, 162, 174, 175], "seem": [10, 45], "seen": [10, 74, 145, 147], "segment": [45, 163, 169], "select": [15, 16, 17, 18, 46, 52, 103, 106, 107, 109, 118, 129, 130, 131, 133, 136, 159, 162, 175], "select_by_indic": [8, 155, 159], "select_by_percentag": [100, 107], "select_by_threshold": [100, 107], "select_drift_mor": 107, "select_layers_by_percentag": [8, 100, 107], "select_layers_by_threshold": [8, 100, 107], "select_paramet": [100, 103, 108, 109], "select_scores_and_sample_mask": [8, 100, 107], "select_zeroeth_el": [8, 155, 162], "selected_indic": 159, "self": [7, 10, 12, 16, 20, 21, 22, 23, 26, 28, 36, 38, 40, 41, 42, 45, 46, 95, 97, 99, 107, 119, 123, 146, 153, 156, 157, 158, 160, 171], "semant": 148, "send": [10, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 102, 107, 112, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 143, 144, 148, 156, 161], "sens": 30, "sent": [20, 22, 23, 27, 28, 29, 30, 36, 38, 42, 44, 45, 46, 48, 68, 78, 79, 102, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 145, 146, 147, 149, 151, 153], "sentri": 1, "seongjun": 56, "separ": [4, 7, 22, 26, 40, 41, 44, 106, 120, 143, 162, 169], "sequenc": [1, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 74, 76, 93, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 169], "sequenti": [36, 85, 94, 99], "sequential_forward": [81, 94, 99], "sequential_split_model": [8, 81], "sequentiallysplitexchangebasemodel": [8, 32, 81, 86, 99], "sequentiallysplitmodel": [8, 36, 81, 94, 99], "seri": 56, "serial": [45, 62], "serializ": 176, "serializableobjectsnapshott": [8, 155, 176], "serv": [20, 27], "server": [4, 8, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 70, 78, 79, 82, 86, 88, 98, 99, 103, 107, 117, 118, 119, 120, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 161, 162], "server_address": 7, "server_control_vari": 153, "server_learning_r": 142, "server_model": 134, "server_model_weight": 153, "server_modul": [8, 9], "server_nam": [126, 127, 128, 129, 130, 132, 133, 134, 135, 137], "server_noise_multipli": 130, "server_paramet": 13, "server_round": [129, 132, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154], "server_upd": [117, 118], "serverconfig": 7, "set": [1, 4, 7, 10, 12, 13, 16, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 65, 66, 68, 69, 71, 74, 76, 78, 79, 82, 85, 86, 87, 92, 93, 95, 97, 98, 102, 103, 106, 109, 114, 118, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 157, 158, 159, 162, 163, 169, 171, 174, 175], "set_all_random_se": [8, 155, 174], "set_data_mean": [81, 97], "set_initial_global_tensor": [19, 27, 36], "set_len": 169, "set_nnunet_env": [8, 155, 169], "set_optim": [19, 21, 22, 27, 28, 34], "set_pack_losses_with_val_metr": [8, 155, 156], "set_paramet": [8, 19, 20, 22, 23, 27, 29, 30, 36, 42, 44, 46, 48, 78, 79, 80], "set_principal_compon": [81, 97], "setup": [1, 7, 27, 30, 33, 34, 38, 44, 46, 126, 127, 128, 129, 130, 132, 133, 135, 137, 158], "setup_cli": [19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 78, 80], "setup_context": [155, 162], "setup_opacus_object": [19, 38, 173], "setup_privacy_account": [124, 130, 133], "sever": 4, "sgd": [7, 118, 133, 137, 173], "shape": [45, 65, 66, 69, 70, 72, 77, 83, 85, 88, 90, 93, 94, 98, 99, 106, 109, 144, 149, 158, 160, 169, 170], "share": [4, 21, 31, 32, 34, 115, 126, 148, 158], "shift": 4, "short": [107, 119, 123], "should": [1, 7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 59, 66, 67, 69, 71, 78, 79, 83, 85, 88, 93, 97, 99, 103, 117, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145, 146, 147, 152, 154, 158, 159, 160, 161, 162, 165, 169, 171, 176], "should_layer_be_exclud": [100, 103], "should_module_be_exclud": [100, 103], "should_stop": [155, 161], "shouldn": [119, 123], "show": 1, "shown": [4, 33], "shuffl": 55, "shut": [22, 45], "shutdown": [7, 8, 19, 22, 45, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 135, 137, 155, 169], "shutdown_dataload": [19, 45], "side": [1, 4, 11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 70, 78, 79, 82, 90, 118, 127, 129, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153], "sigint": 169, "sigma": [118, 152, 158], "sigma_phi": 67, "sigma_q": 67, "sigmoid": [90, 92, 93, 149], "sigmoid_invers": [8, 155, 162], "signal": [16, 146, 169], "signal_for_typ": [139, 146], "signalfortypeexcept": [8, 139, 146], "signatur": 162, "signific": 4, "significantli": [4, 45], "sigterm": 169, "silent": [83, 169], "silo": 44, "sim": [66, 83, 158], "simclr": [65, 87], "similar": [4, 24, 34, 43, 45, 65, 66, 68, 70, 83, 87, 148, 171], "similarli": 148, "simpl": [4, 15, 17, 18, 20, 120, 134, 141, 153, 158], "simpleclientmanag": [7, 15, 16], "simplemetr": [8, 72, 77], "simplest": [21, 22], "simpli": [7, 11, 13, 24, 26, 27, 28, 34, 36, 37, 40, 42, 43, 47, 83, 88, 98, 102, 129, 132, 142, 145, 147, 149, 153, 162], "simultan": [27, 36], "sinc": [28, 30, 42, 46, 83, 115, 131, 143, 148, 149, 161, 169], "singl": [13, 20, 21, 22, 28, 30, 45, 48, 59, 78, 79, 93, 95, 117, 136, 152, 165, 169, 176], "singlethreadedaugment": 169, "singleton": 93, "singular": [97, 148], "singular_valu": 97, "sirna_id": 53, "sit": [129, 132], "site": 53, "six": 90, "size": [26, 52, 55, 66, 67, 69, 90, 92, 93, 106, 117, 118, 133, 137, 142, 146, 147, 148, 152, 156, 158, 160, 163, 169, 171, 175], "size_of_model_param": 106, "skew": [158, 171, 175], "skin": 55, "skin_canc": [8, 50], "skin_cancer_feder": 56, "sklearn": [59, 72, 77], "slice": 159, "slight": 97, "slightli": 34, "small": [72, 77, 97, 171], "smaller": [74, 148, 171, 175], "smallest_final_magnitude_scor": [8, 100, 107], "smallest_increase_in_magnitude_scor": [8, 100, 107], "smallest_magnitude_change_scor": [8, 100, 107], "smoke": 1, "smoke_test": 1, "smooth": [67, 74], "smoothing_factor": 74, "snapshot": [161, 176], "snapshot_ckpt": 161, "snapshot_class": 161, "snapshot_dir": 161, "snapshott": [8, 155], "so": [1, 10, 11, 12, 13, 16, 20, 22, 27, 30, 36, 37, 42, 45, 46, 78, 79, 97, 103, 114, 119, 123, 129, 135, 142, 143, 144, 149, 156, 157, 162, 169, 171, 175], "soft": [72, 77], "softmax": 158, "solver": 44, "some": [1, 11, 18, 28, 30, 38, 45, 83, 95, 109, 118, 119, 123, 129, 135, 142, 143, 144, 148, 152, 153, 169, 171], "someth": [1, 22, 27, 36, 40, 41, 90, 174], "sometim": [120, 121], "soon": 4, "sophist": 149, "sort": [85, 162], "sourc": [1, 4, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "source_plan": 169, "source_plans_nam": 45, "space": [35, 47, 83, 88, 90, 97, 113], "spars": [4, 13, 33, 97, 106, 109, 144], "sparse_coo_parameter_exchang": [8, 100], "sparse_coo_tensor": [106, 109, 144], "sparsecooparameterexchang": [8, 100, 109], "sparsecooparameterpack": [8, 100, 106], "sparsecooservercheckpointandstatemodul": [8, 9, 13], "sparsiti": 109, "sparsity_level": 109, "spatial": [72, 77, 169], "spatial_dimens": [72, 77], "spawn": [45, 169], "special": [13, 143, 144], "specif": [1, 4, 10, 12, 13, 21, 22, 24, 43, 45, 47, 56, 85, 93, 94, 99, 102, 103, 109, 112, 148, 151, 153, 160, 169], "specifi": [7, 10, 12, 22, 29, 33, 34, 45, 48, 52, 53, 63, 82, 83, 85, 94, 95, 97, 99, 103, 118, 119, 123, 132, 135, 137, 146, 147, 156, 161, 163, 169, 175], "spite": 142, "split": [35, 47, 52, 55, 88, 94, 95, 99, 106, 115, 142, 163], "split_data_and_target": [8, 155, 163], "split_model_weights_and_clipping_bit": [139, 142], "split_perc": 55, "sqrt": 142, "squar": 23, "ssltensordataset": [8, 155, 159], "stabil": 93, "stabl": [72, 77, 90, 97, 106, 109, 144, 174], "stack": [30, 36], "stage": [29, 87, 99, 158], "stai": [4, 27, 36, 94], "standard": [1, 4, 42, 45, 47, 83, 99, 113, 118, 135, 141, 142, 152, 153, 158, 173], "standard_normal_kl_divergence_loss": [111, 113], "start": [1, 4, 24, 43, 45, 46, 47, 70, 85, 107, 119, 123, 129, 158, 161, 169], "start_client": 7, "start_run": [8, 119, 123], "start_serv": 7, "startonnewlin": 1, "state": [1, 4, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 72, 73, 74, 76, 77, 78, 79, 82, 98, 106, 115, 118, 126, 127, 128, 129, 130, 132, 133, 135, 137, 140, 156, 161, 170, 172, 174, 176], "state_checkpoint": [11, 13], "state_checkpoint_nam": [11, 13], "state_dict": [12, 102, 103, 107], "static": [1, 29, 62, 63, 87, 103, 106, 160, 162, 165], "staticmethod": 162, "statist": [13, 37, 69], "std": [67, 117, 152], "stdout": [45, 169], "step": [7, 8, 13, 20, 21, 22, 24, 26, 27, 28, 34, 37, 38, 40, 41, 43, 45, 47, 48, 67, 74, 78, 79, 119, 120, 121, 122, 123, 133, 137, 144, 146, 147, 153, 157, 160, 161, 169], "steps_per_lr": 169, "steptyp": [119, 123], "still": [126, 128, 141, 149, 151, 161], "stochast": 162, "stop": [37, 161], "stopiter": 169, "stopper": 161, "storag": [46, 88], "store": [10, 13, 20, 22, 23, 26, 27, 28, 31, 36, 40, 41, 43, 46, 74, 78, 79, 82, 85, 88, 94, 95, 97, 98, 99, 162, 165], "store_initial_model": 46, "str": [1, 7, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 62, 63, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 88, 90, 95, 96, 98, 99, 103, 106, 107, 109, 115, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 159, 160, 161, 163, 164, 165, 169, 170, 171, 173, 174, 176], "straight": 162, "straightforward": [31, 86], "strap": [36, 37, 38, 129], "strategi": [4, 7, 8, 12, 20, 27, 44, 46, 48, 78, 79, 118, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137], "strategy_with_pol": [8, 139], "strategywithpol": [8, 129, 139, 141, 154], "stream": 169, "streamtologg": [8, 155, 169], "strict": 1, "strictli": [1, 4, 21, 158, 159], "stride": 90, "string": [1, 10, 21, 22, 27, 34, 45, 57, 59, 62, 63, 72, 73, 74, 76, 77, 119, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 157, 169, 171], "string_columns_transform": [8, 57], "stringio": 169, "strongli": 1, "structur": [83, 86], "stuff": 169, "style": [1, 158], "subclass": [21, 22, 23, 24, 32, 34, 35, 45, 46, 48, 83, 158, 162, 165, 169], "subfold": 163, "subject": 175, "submit": [1, 4], "submodul": [8, 36, 50], "subpackag": 169, "subprocess": 169, "subsampl": [155, 159, 163, 171, 175], "subsequ": [16, 30, 42, 43, 74, 135, 169], "subset": [1, 13, 22, 29, 46, 47, 52, 103, 107, 109, 118, 143, 144, 159], "subspac": [97, 148], "subspace1": 148, "subspace2": 148, "subtract": [48, 97, 153], "success": [129, 131, 132, 153], "suffici": [97, 118], "suggest": [27, 44, 148], "suit": 1, "sum": [23, 70, 81, 95, 146, 147, 149, 152, 162], "summari": [119, 120, 121, 123], "summat": 95, "super": [120, 146], "supervis": [22, 45, 135, 160, 169], "support": [4, 10, 42, 59, 84, 91, 107, 151, 158, 159, 160, 171], "suppos": 149, "sure": [119, 123, 171], "surfac": 10, "svd": [97, 148], "svd_lowrank": 97, "svd_merg": 148, "swallow": 10, "switch": 34, "sync": [36, 44], "synthet": [158, 159], "synthetic_1_1": 158, "syntheticdataset": [8, 155, 159, 171], "syntheticfedproxdataset": [8, 155, 158], "syntheticiidfedproxdataset": [8, 155, 158], "syntheticnoniidfedproxdataset": [8, 155, 158], "system": [4, 7, 131, 141, 145, 146, 147, 150, 151, 153], "t": [1, 11, 13, 27, 30, 31, 36, 37, 74, 97, 104, 106, 108, 119, 123, 126, 128, 148, 156, 157, 158, 162, 169, 171, 175, 176], "t_1": 118, "t_2": 118, "tab_features_info_encod": [8, 57], "tab_features_preprocessor": [8, 57], "tabl": 1, "tabular": [62, 63], "tabular_data_cli": [8, 19], "tabular_featur": [8, 57], "tabular_feature_alignment_serv": [8, 124], "tabular_typ": [8, 57], "tabularfeatur": [8, 57, 62], "tabulartyp": [8, 57, 62, 63], "tag": [119, 123, 142], "take": [10, 83, 85, 88, 95, 97, 98, 102, 103, 106, 109, 119, 123, 143, 144, 148, 151, 153, 158, 169], "taken": [48, 118], "tandem": 27, "target": [1, 11, 12, 20, 21, 22, 24, 26, 27, 28, 34, 36, 40, 41, 43, 44, 45, 47, 55, 67, 69, 72, 73, 74, 76, 77, 78, 79, 80, 90, 92, 93, 113, 115, 126, 128, 136, 156, 159, 163, 169, 170, 172], "target_is_grad_sample_modul": 12, "target_model": [12, 71], "target_transform": [74, 159, 163], "targets_1": 74, "targets_2": 74, "task": [4, 30, 72, 77, 151, 160, 162], "task01_braintumour": [155, 168], "task02_heart": [155, 168], "task03_liv": [155, 168], "task04_hippocampu": [155, 168], "task05_prost": [155, 168], "task06_lung": [155, 168], "task07_pancrea": [155, 168], "task08_hepaticvessel": [155, 168], "task09_spleen": [155, 168], "task10_colon": [155, 168], "tau": 150, "team": [1, 119, 123], "temperatur": [43, 47, 65, 68, 158], "templat": 1, "tensor": [20, 21, 22, 23, 24, 26, 27, 28, 30, 34, 36, 40, 41, 43, 44, 45, 47, 53, 55, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 106, 107, 109, 112, 113, 144, 149, 156, 158, 159, 160, 162, 163, 165, 169, 170, 171, 174], "tensor_dict": 169, "tensor_list": 169, "tensordataset": [8, 52, 55, 155, 158, 159, 160, 163, 175], "tensorflow": 118, "term": [4, 27, 36, 44, 161], "termin": [7, 45, 129, 169], "test": [10, 22, 29, 30, 42, 45, 52, 53, 55, 67, 73, 76, 97, 134, 151, 155, 159, 163, 164, 169, 171], "test_": 1, "test_best_checkpoint": 1, "test_load": [42, 78, 80], "test_prefix": [72, 73], "test_transform": 55, "text": [23, 48, 59, 74, 82, 83, 153, 158], "textcolumntransform": [8, 57, 59], "textfeaturetransform": 59, "textmulticolumntransform": [8, 57, 59], "than": [1, 10, 13, 18, 22, 26, 27, 28, 29, 36, 40, 41, 42, 76, 86, 90, 109, 135, 141, 142, 148, 151, 159, 161, 171], "thank": 1, "thei": [1, 4, 11, 13, 20, 21, 22, 23, 27, 28, 29, 30, 42, 45, 48, 78, 79, 83, 94, 99, 106, 109, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 142, 144, 145, 147, 153, 156, 158, 159, 160, 162, 165, 169], "them": [4, 15, 21, 26, 27, 36, 38, 40, 41, 47, 83, 85, 95, 102, 106, 109, 142, 144, 146, 147, 149, 160, 162, 169, 176], "themselv": [149, 162, 169], "theorem": 118, "theoret": 148, "thereaft": [23, 153], "therebi": [141, 153], "therefor": [1, 45, 119, 121, 123, 153, 162, 169], "thereof": [22, 29], "theta": 149, "theta_cli": 142, "theta_serv": 142, "thi": [1, 4, 7, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 85, 87, 88, 93, 95, 97, 99, 103, 106, 107, 109, 113, 115, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 171, 173, 174, 175, 176], "thin": [72, 74, 77], "thing": [1, 11, 22, 45, 106, 129, 130, 133, 135, 137], "third": [129, 131, 132], "thorough": 4, "those": [1, 4, 15, 27, 36, 44, 72, 77, 90, 92, 93, 95, 99, 103, 106, 107, 141, 153, 158, 169], "though": [1, 162], "thought": 153, "thread": 52, "three": [11, 144, 160], "threshold": [37, 72, 77, 103, 107, 109, 142, 153, 169, 171], "through": [1, 4, 10, 23, 27, 30, 31, 32, 34, 36, 37, 43, 82, 83, 87, 88, 90, 95, 98, 114, 119, 123, 135, 142, 153, 162, 171, 175], "throughout": [22, 29, 30, 34, 117], "throw": [10, 11, 13, 37, 90, 119, 123, 126, 127, 128, 129, 130, 132, 133, 135, 137, 159, 171], "thrown": [10, 11, 63, 90, 97, 146, 157], "thu": [42, 146, 148], "ticket": [4, 33], "time": [1, 16, 22, 27, 45, 46, 48, 74, 114, 118, 129, 130, 131, 132, 133, 134, 137, 156, 169, 171, 174], "timeout": [129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 148, 151, 153], "tmetric": [72, 77], "to_client": 7, "to_json": [57, 62], "togeth": [20, 27, 30, 46, 48, 78, 79, 83, 95, 140, 153], "token": 159, "toml": 1, "ton": 162, "tonumpi": [8, 155, 163], "too": [28, 97], "tool": 1, "top": [53, 97], "top_sirna_id": 53, "torch": [7, 10, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 55, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 90, 94, 95, 97, 98, 99, 103, 106, 109, 112, 113, 115, 144, 156, 158, 159, 160, 162, 165, 169, 170, 171, 174], "torch_stat": 174, "torchcheckpoint": 10, "torchfeaturetyp": [20, 22, 26, 27, 36, 40, 41, 44, 78, 79], "torchinputtyp": [21, 22, 24, 26, 27, 28, 34, 36, 40, 41, 43, 45, 47, 156], "torchmetr": [8, 72, 77], "torchmodul": 103, "torchmodulecheckpoint": [8, 9, 10], "torchmodulesnapshott": [8, 155, 176], "torchpredtyp": [20, 21, 22, 26, 27, 36, 40, 41, 44, 45, 76, 78, 79], "torchshap": 93, "torchtargettyp": [20, 21, 22, 26, 27, 40, 41, 44, 45, 76, 78, 79, 156], "torchtransformfunct": 74, "total": [24, 43, 44, 45, 47, 75, 113, 117, 119, 120, 121, 123, 130, 131, 133, 141, 145, 146, 147, 150, 151, 152, 153, 169, 171, 175], "total_client_count_by_metr": 75, "total_client_weight": 152, "total_exampl": 75, "total_loss": [24, 43, 47], "total_sampl": [130, 133, 137], "total_step": 22, "toward": 1, "tqdm": [20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48], "track": [20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 148], "track_running_stat": 93, "tradit": 11, "train": [4, 7, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 67, 70, 76, 78, 79, 82, 83, 84, 87, 88, 90, 92, 93, 97, 98, 103, 107, 112, 113, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 169, 171, 174], "train_by_epoch": [19, 22, 37], "train_by_step": [19, 22], "train_data_tensor": 30, "train_fedrep_by_epoch": [19, 34], "train_fedrep_by_step": [19, 34], "train_fract": 52, "train_kernel": [64, 67], "train_load": [7, 78, 80], "train_step": [19, 21, 22, 27, 28, 34, 45], "train_transform": 55, "train_val_split": 52, "trainer": 45, "trainingloss": [8, 20, 21, 22, 26, 27, 28, 34, 36, 40, 41, 43, 44, 45, 48, 78, 79, 155, 165], "trajectori": [20, 145], "transfer": [22, 27, 29, 30, 36, 42, 46, 103], "transform": [22, 45, 48, 52, 55, 57, 59, 65, 74, 87, 90, 92, 93, 112, 114, 158, 159, 163], "transform_gradi": [19, 22, 45, 48], "transform_target": [19, 22], "transformed_featur": 65, "transformermixin": 59, "transformsmetr": [8, 72, 74], "transpar": 171, "transpos": [90, 148], "travers": 85, "treat": [93, 117, 120, 121, 169], "treatment": [13, 133, 143, 144], "tree": [158, 169], "trick": 83, "tripl": 1, "trivial": [1, 159], "true": [1, 10, 22, 23, 26, 27, 28, 36, 40, 41, 42, 44, 45, 48, 67, 69, 82, 85, 86, 87, 90, 91, 92, 93, 97, 107, 112, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 161, 162, 169, 174], "truth": [20, 21, 22, 24, 26, 27, 28, 36, 40, 41, 43, 44, 45, 47, 72, 73, 74, 76, 77, 78, 79, 126, 127, 128, 129, 130, 132, 133, 135, 137], "try": [1, 10, 37, 69, 118, 119, 123, 142], "tst": 67, "tune": [11, 87], "tupl": [1, 7, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 36, 37, 40, 41, 42, 43, 44, 45, 47, 52, 55, 67, 68, 70, 72, 75, 77, 80, 83, 88, 90, 94, 95, 97, 98, 99, 103, 104, 106, 107, 108, 109, 113, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 160, 162, 163, 171, 173, 174], "turn": [142, 145, 147, 148, 153], "tutori": 118, "twin": [4, 21, 82], "two": [4, 7, 11, 22, 27, 33, 34, 36, 38, 45, 48, 66, 67, 70, 88, 90, 92, 93, 95, 99, 103, 106, 109, 119, 123, 131, 135, 141, 144, 148, 153, 157, 158, 162, 170], "two_layer_map_inputs_to_output": [155, 158], "type": [1, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176], "type_data": 53, "typeerror": [22, 40, 41, 156, 159], "typevar": [104, 106, 108, 175], "typic": [22, 45, 85], "typing1": 1, "typing2": 1, "typing_stuff": 1, "u": [97, 148], "u_1": 148, "u_2": 148, "u_i": 148, "u_k": 158, "u_n": 148, "uf": 56, "ui": [119, 123], "un": 83, "unaffect": 174, "unbias": 67, "uncategor": [119, 123], "under": [10, 13, 26, 27, 36, 40, 41, 45, 72, 77, 82, 88, 93, 95, 97, 98, 119, 123, 173], "underli": [20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 72, 74, 77, 82, 162], "underpin": 163, "undo": 174, "unfreeze_base_modul": [81, 86], "unfreeze_head_modul": [81, 86], "unfrozen": 86, "unifi": 160, "uniform": [10, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 169, 171], "uniform_evaluate_metrics_aggregation_fn": [8, 72, 75], "uniform_metric_aggreg": [8, 72, 75], "uniform_normalize_metr": [8, 72, 75], "uniformli": [75, 152, 153], "unintend": 1, "unintention": 1, "union": [1, 24, 27, 28, 29, 34, 43, 47, 62, 80, 147, 150], "uniqu": [4, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 119, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 169, 174], "unique_label": [171, 175], "unit": [1, 69], "unitari": 148, "unittestarg": 1, "unittesten": 1, "unknown": 63, "unless": [29, 45, 134], "unlik": [4, 12, 13, 36, 44, 171], "unpack": [13, 20, 23, 27, 48, 78, 79, 83, 106, 113, 160], "unpack_input_condit": [83, 155, 160], "unpack_model_output": [111, 113], "unpack_paramet": [100, 104, 106, 108], "unrespons": 137, "unseen": 4, "unset_all_random_se": [8, 155, 174], "unspecifi": [119, 123], "unstructur": 13, "unsuccess": [129, 132], "until": [1, 16, 48, 171], "unus": [45, 151], "unweight": [4, 43, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153], "unweighted_aggreg": [139, 143, 144], "unwound": 46, "up": [1, 4, 11, 20, 26, 27, 34, 37, 38, 40, 42, 46, 78, 79, 84, 120, 129, 130, 133, 142, 148, 158, 162, 171, 175], "updat": [1, 4, 8, 20, 21, 22, 23, 26, 27, 28, 36, 40, 41, 44, 45, 48, 72, 73, 74, 76, 77, 82, 90, 92, 93, 117, 118, 119, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 142, 145, 146, 147, 149, 152, 153, 155, 156, 165], "update_after_step": [19, 21, 22, 25, 26, 39, 40, 41], "update_after_train": [8, 19, 20, 22, 24, 43, 47, 48, 78, 79, 80], "update_alpha": [81, 82], "update_before_epoch": [19, 22], "update_before_fit": [124, 129, 135], "update_before_step": [19, 22], "update_before_train": [19, 22, 24, 25, 26, 27, 31, 36, 39, 40, 41, 43, 44, 45, 47], "update_buff": [25, 26, 39, 40, 41], "update_clipping_bound": [139, 142], "update_control_vari": [19, 48], "update_current_weight": [139, 142], "update_lr_schedul": [19, 22], "update_metric_manag": [19, 22, 45], "update_target_transform": [155, 159], "update_transform": [155, 159], "update_weights_by_ga": [139, 146], "updated_param": 153, "upgrad": 1, "upload": [119, 123, 134], "upon": [13, 102], "us": [1, 4, 7, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 59, 63, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 85, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 106, 107, 109, 112, 113, 115, 117, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 169, 171, 173, 174, 175], "usag": [45, 162, 171], "use_default_signal_handl": [8, 155, 169], "use_deterministic_algorithm": 174, "use_deterministic_torch_algo": 174, "user": [10, 12, 21, 22, 27, 28, 29, 30, 34, 36, 37, 42, 45, 46, 47, 72, 77, 83, 85, 88, 95, 97, 113, 114, 115, 141, 146, 160, 171], "usernam": [119, 123], "usual": [10, 44, 118, 169], "util": [7, 8, 10, 22, 45, 82, 97], "uuid": [121, 162], "v": [1, 34, 141, 148, 158], "v2": 169, "v202": [37, 150], "v_i": 69, "v_i_quadrupl": 69, "v_k": 158, "vae": [83, 112, 113], "vaeloss": [110, 111, 113], "vaeprocessor": [110, 111, 112], "val": [10, 22, 55, 73, 76, 146], "val_load": [7, 78, 80, 156], "val_prefix": [72, 73], "val_step": [19, 22], "val_transform": 55, "valid": [11, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 97, 129, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 161, 163, 164, 169, 173], "validate_on_model": [19, 29], "validation_proport": 163, "valu": [10, 11, 12, 13, 21, 22, 23, 24, 26, 27, 28, 31, 34, 40, 41, 43, 45, 47, 53, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 82, 83, 84, 85, 90, 92, 93, 95, 97, 106, 107, 109, 113, 117, 118, 119, 123, 129, 130, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 177], "valueerror": [10, 11, 13, 22, 27, 29, 34, 36, 37, 40, 41, 63, 90, 142, 153, 156, 157, 171], "vanilla": [12, 26, 27, 36, 40, 41, 44], "vari": 1, "variabl": [11, 38, 45, 112, 157, 169, 174], "varianc": [67, 83, 97, 113, 158], "variat": [4, 22, 48, 83, 106, 137, 153], "variationala": [8, 81, 83], "varieti": 22, "variou": [4, 11, 24, 46, 47], "vector": [66, 83, 87, 97, 148, 160], "venv": 1, "verbos": [45, 169], "veri": [1, 4, 20, 22, 23, 27, 29, 36, 46, 74, 78, 79, 126, 128, 162, 171], "verifi": [156, 157, 158], "version": [4, 22, 27, 44, 45, 67, 71, 82, 142, 169], "vert": [23, 142, 153], "vert_2": 23, "vertic": 86, "via": [7, 10, 13, 20, 78, 79, 84, 90, 92, 93, 97, 109, 117, 171, 173], "view": [148, 149], "violat": 171, "virtual": 1, "virtualenv": 1, "vjp": 162, "vote": [81, 84], "voxel": 169, "vram": 45, "vscode": 1, "w": [22, 31, 45, 118, 142, 158, 162], "w_1": 158, "w_2": 158, "w_i": 158, "wa": [10, 21, 22, 23, 26, 40, 41, 83, 87, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 142, 143, 144, 149, 169], "wai": [1, 7, 30, 42, 71, 93, 95, 141, 158, 162, 169, 175, 176], "wait": [7, 15, 129, 130, 131, 132, 133, 134, 136, 137, 153, 161], "wait_and_filt": [14, 15], "wandb": [119, 123], "wandb_init_kwarg": [119, 123], "wandb_report": [8, 22, 45, 119], "wandb_step": [119, 123], "wandb_step_typ": [119, 123], "wandbreport": [8, 119, 123], "wandbsteptyp": [8, 119, 123], "want": [11, 20, 22, 27, 36, 44, 45, 52, 78, 79, 85, 119, 123, 126, 128, 129, 145, 146, 153, 154, 169, 171], "warm": [4, 137], "warm_start": 137, "warmed_up_modul": [8, 110], "warmedupmodul": [8, 110, 115], "warn": [155, 177], "we": [1, 4, 7, 10, 11, 12, 13, 20, 22, 23, 26, 27, 28, 29, 30, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 67, 69, 74, 78, 79, 83, 85, 87, 94, 99, 103, 107, 118, 119, 120, 123, 129, 131, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 158, 161, 162, 169, 171, 175], "weigh": [146, 147], "weight": [4, 13, 20, 22, 23, 24, 26, 27, 29, 31, 36, 40, 41, 43, 44, 46, 47, 48, 68, 70, 71, 72, 74, 75, 77, 78, 79, 86, 87, 90, 92, 93, 102, 109, 115, 118, 119, 123, 130, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 162], "weight_and_aggregate_result": [139, 146], "weight_drift_loss": [8, 64], "weight_noise_multipli": 142, "weight_scor": 107, "weightdriftloss": [8, 64, 71, 79], "weighted_aggreg": [139, 141, 142, 143, 144, 145, 148, 149, 150, 151], "weighted_eval_loss": [141, 142, 143, 144, 145, 148, 149, 150, 153], "weighted_train_loss": [145, 147], "weights_mapping_dir": 115, "weights_mapping_path": 115, "weights_nam": 106, "weights_upd": 142, "well": [1, 4, 7, 12, 53, 84, 97, 134, 142, 146, 149, 158, 162], "were": [48, 74, 83, 118, 143, 144, 153, 162], "what": [1, 22, 45, 119, 120, 123, 153], "whatev": [1, 10, 11, 12], "when": [1, 10, 12, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 62, 78, 79, 82, 88, 93, 95, 97, 99, 106, 107, 117, 119, 120, 123, 129, 135, 141, 142, 146, 147, 153, 154, 159, 160, 162, 169, 173], "whenev": 10, "where": [11, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 66, 67, 72, 77, 83, 84, 85, 88, 93, 94, 97, 99, 112, 117, 119, 123, 129, 132, 140, 141, 142, 143, 144, 148, 149, 153, 156, 158, 165, 169, 175], "wherein": 4, "whether": [7, 10, 11, 12, 13, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 67, 69, 72, 77, 78, 79, 82, 85, 87, 88, 91, 97, 99, 107, 118, 119, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 162, 169, 173, 174], "which": [1, 4, 10, 11, 12, 13, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 59, 62, 65, 66, 67, 68, 69, 71, 72, 74, 77, 78, 79, 83, 84, 85, 90, 92, 93, 97, 98, 106, 107, 109, 114, 117, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 169, 171, 173, 174, 175], "while": [4, 33, 65, 70, 82, 83, 88, 97, 98, 109, 169], "who": 143, "whole": [26, 40, 41, 84], "whose": [35, 90, 92, 93, 97, 103, 107, 109, 114, 148, 153, 170, 172], "wide": 4, "window": 169, "wise": [13, 37, 48, 152, 153], "wish": 97, "within": [12, 13, 72, 77, 83, 103, 106, 109, 119, 120, 121, 123, 144, 156, 159, 169], "without": [1, 15, 17, 18, 20, 65, 74, 119, 123, 137, 142, 156, 162], "wns823": 56, "word": [119, 123], "work": [1, 30, 37, 45, 103, 112, 120, 121, 129, 146, 149, 162], "worker": [52, 55, 136], "workflow": [1, 12], "would": [1, 22, 62, 97, 162, 174], "woven": 46, "wrap": [12, 135, 156, 169, 173, 176], "wrap_model": 173, "wrapper": [72, 74, 77, 84, 126, 127, 128], "write": [155, 169], "written": 169, "wrong": [22, 34, 157], "www": [47, 52, 70], "wx": 158, "x": [45, 48, 59, 65, 67, 69, 88, 97, 106, 158, 162, 169], "x1": 66, "x2": 66, "x_": [69, 158], "x_in_dim": 67, "x_lower_dim": 97, "x_out_dim": 67, "xent": 65, "xt": [67, 69], "xxyxz": 169, "y": [45, 59, 67, 69, 158, 169], "y_": 69, "y_i": 48, "yaml": [1, 119, 123], "yang": 56, "yield": [4, 173], "you": [1, 10, 12, 13, 52, 85, 119, 123, 129, 162, 171, 174], "your": [1, 4, 7, 45, 119, 123, 129, 173], "z": [45, 70, 118, 169], "z_": 70, "z_1": 118, "z_2": 118, "z_g": 70, "z_p": 70, "zero": [90, 93, 107, 109, 144, 153, 156], "zeroeth": 162, "zhang": [146, 147]}, "titles": ["API Reference", "Contributing", "Basic Example", "Examples", "Welcome to FL4Health \u2728", "Checkpointing", "Module Guides", "Quickstart", "fl4health package", "fl4health.checkpointing package", "fl4health.checkpointing.checkpointer module", "fl4health.checkpointing.client_module module", "fl4health.checkpointing.opacus_checkpointer module", "fl4health.checkpointing.server_module module", "fl4health.client_managers package", "fl4health.client_managers.base_sampling_manager module", "fl4health.client_managers.fixed_sampling_client_manager module", "fl4health.client_managers.fixed_without_replacement_manager module", "fl4health.client_managers.poisson_sampling_manager module", "fl4health.clients package", "fl4health.clients.adaptive_drift_constraint_client module", "fl4health.clients.apfl_client module", "fl4health.clients.basic_client module", "fl4health.clients.clipping_client module", "fl4health.clients.constrained_fenda_client module", "fl4health.clients.deep_mmd_clients package", "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module", "fl4health.clients.ditto_client module", "fl4health.clients.ensemble_client module", "fl4health.clients.evaluate_client module", "fl4health.clients.fed_pca_client module", "fl4health.clients.fed_prox_client module", "fl4health.clients.fedper_client module", "fl4health.clients.fedpm_client module", "fl4health.clients.fedrep_client module", "fl4health.clients.fenda_client module", "fl4health.clients.fenda_ditto_client module", "fl4health.clients.flash_client module", "fl4health.clients.instance_level_dp_client module", "fl4health.clients.mkmmd_clients package", "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module", "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module", "fl4health.clients.model_merge_client module", "fl4health.clients.moon_client module", "fl4health.clients.mr_mtl_client module", "fl4health.clients.nnunet_client module", "fl4health.clients.partial_weight_exchange_client module", "fl4health.clients.perfcl_client module", "fl4health.clients.scaffold_client module", "fl4health.clients.tabular_data_client module", "fl4health.datasets package", "fl4health.datasets.rxrx1 package", "fl4health.datasets.rxrx1.load_data module", "fl4health.datasets.rxrx1.preprocess module", "fl4health.datasets.skin_cancer package", "fl4health.datasets.skin_cancer.load_data module", "fl4health.datasets.skin_cancer.preprocess_skin module", "fl4health.feature_alignment package", "fl4health.feature_alignment.constants module", "fl4health.feature_alignment.string_columns_transformer module", "fl4health.feature_alignment.tab_features_info_encoder module", "fl4health.feature_alignment.tab_features_preprocessor module", "fl4health.feature_alignment.tabular_feature module", "fl4health.feature_alignment.tabular_type module", "fl4health.losses package", "fl4health.losses.contrastive_loss module", "fl4health.losses.cosine_similarity_loss module", "fl4health.losses.deep_mmd_loss module", "fl4health.losses.fenda_loss_config module", "fl4health.losses.mkmmd_loss module", "fl4health.losses.perfcl_loss module", "fl4health.losses.weight_drift_loss module", "fl4health.metrics package", "fl4health.metrics.base_metrics module", "fl4health.metrics.compound_metrics module", "fl4health.metrics.metric_aggregation module", "fl4health.metrics.metric_managers module", "fl4health.metrics.metrics module", "fl4health.mixins package", "fl4health.mixins.adaptive_drift_constrained module", "fl4health.mixins.core_protocols module", "fl4health.model_bases package", "fl4health.model_bases.apfl_base module", "fl4health.model_bases.autoencoders_base module", "fl4health.model_bases.ensemble_base module", "fl4health.model_bases.feature_extractor_buffer module", "fl4health.model_bases.fedrep_base module", "fl4health.model_bases.fedsimclr_base module", "fl4health.model_bases.fenda_base module", "fl4health.model_bases.masked_layers package", "fl4health.model_bases.masked_layers.masked_conv module", "fl4health.model_bases.masked_layers.masked_layers_utils module", "fl4health.model_bases.masked_layers.masked_linear module", "fl4health.model_bases.masked_layers.masked_normalization_layers module", "fl4health.model_bases.moon_base module", "fl4health.model_bases.parallel_split_models module", "fl4health.model_bases.partial_layer_exchange_model module", "fl4health.model_bases.pca module", "fl4health.model_bases.perfcl_base module", "fl4health.model_bases.sequential_split_models module", "fl4health.parameter_exchange package", "fl4health.parameter_exchange.fedpm_exchanger module", "fl4health.parameter_exchange.full_exchanger module", "fl4health.parameter_exchange.layer_exchanger module", "fl4health.parameter_exchange.packing_exchanger module", "fl4health.parameter_exchange.parameter_exchanger_base module", "fl4health.parameter_exchange.parameter_packer module", "fl4health.parameter_exchange.parameter_selection_criteria module", "fl4health.parameter_exchange.partial_parameter_exchanger module", "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module", "fl4health.preprocessing package", "fl4health.preprocessing.autoencoders package", "fl4health.preprocessing.autoencoders.dim_reduction module", "fl4health.preprocessing.autoencoders.loss module", "fl4health.preprocessing.pca_preprocessor module", "fl4health.preprocessing.warmed_up_module module", "fl4health.privacy package", "fl4health.privacy.fl_accountants module", "fl4health.privacy.moments_accountant module", "fl4health.reporting package", "fl4health.reporting.base_reporter module", "fl4health.reporting.json_reporter module", "fl4health.reporting.reports_manager module", "fl4health.reporting.wandb_reporter module", "fl4health.servers package", "fl4health.servers.adaptive_constraint_servers package", "fl4health.servers.adaptive_constraint_servers.ditto_server module", "fl4health.servers.adaptive_constraint_servers.fedprox_server module", "fl4health.servers.adaptive_constraint_servers.mrmtl_server module", "fl4health.servers.base_server module", "fl4health.servers.client_level_dp_fed_avg_server module", "fl4health.servers.evaluate_server module", "fl4health.servers.fedpm_server module", "fl4health.servers.instance_level_dp_server module", "fl4health.servers.model_merge_server module", "fl4health.servers.nnunet_server module", "fl4health.servers.polling module", "fl4health.servers.scaffold_server module", "fl4health.servers.tabular_feature_alignment_server module", "fl4health.strategies package", "fl4health.strategies.aggregate_utils module", "fl4health.strategies.basic_fedavg module", "fl4health.strategies.client_dp_fedavgm module", "fl4health.strategies.fedavg_dynamic_layer module", "fl4health.strategies.fedavg_sparse_coo_tensor module", "fl4health.strategies.fedavg_with_adaptive_constraint module", "fl4health.strategies.feddg_ga module", "fl4health.strategies.feddg_ga_with_adaptive_constraint module", "fl4health.strategies.fedpca module", "fl4health.strategies.fedpm module", "fl4health.strategies.flash module", "fl4health.strategies.model_merge_strategy module", "fl4health.strategies.noisy_aggregate module", "fl4health.strategies.scaffold module", "fl4health.strategies.strategy_with_poll module", "fl4health.utils package", "fl4health.utils.client module", "fl4health.utils.config module", "fl4health.utils.data_generation module", "fl4health.utils.dataset module", "fl4health.utils.dataset_converter module", "fl4health.utils.early_stopper module", "fl4health.utils.functions module", "fl4health.utils.load_data module", "fl4health.utils.logging module", "fl4health.utils.losses module", "fl4health.utils.metric_aggregation module", "fl4health.utils.metrics module", "fl4health.utils.msd_dataset_sources module", "fl4health.utils.nnunet_utils module", "fl4health.utils.parameter_extraction module", "fl4health.utils.partitioners module", "fl4health.utils.peft_parameter_extraction module", "fl4health.utils.privacy_utilities module", "fl4health.utils.random module", "fl4health.utils.sampler module", "fl4health.utils.snapshotter module", "fl4health.utils.typing module"], "titleterms": {"": 4, "A": 7, "adaptive_constraint_serv": [125, 126, 127, 128], "adaptive_drift_constrain": 79, "adaptive_drift_constraint_cli": 20, "aggregate_util": 140, "apfl_bas": 82, "apfl_client": 21, "api": 0, "approach": 4, "autoencod": [111, 112, 113], "autoencoders_bas": 83, "base_metr": 73, "base_report": 120, "base_sampling_manag": 15, "base_serv": 129, "basic": 2, "basic_cli": 22, "basic_fedavg": 141, "capabl": 4, "check": 1, "checkpoint": [5, 9, 10, 11, 12, 13], "client": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 156], "client_dp_fedavgm": 142, "client_level_dp_fed_avg_serv": 130, "client_manag": [14, 15, 16, 17, 18], "client_modul": 11, "clipping_cli": 23, "code": 1, "commun": 4, "compound_metr": 74, "config": 157, "constant": 58, "constrained_fenda_cli": 24, "contrastive_loss": 65, "contribut": 1, "core_protocol": 80, "cosine_similarity_loss": 66, "coverag": 1, "current": 4, "data_gener": 158, "dataset": [50, 51, 52, 53, 54, 55, 56, 159], "dataset_convert": 160, "deep_mmd_client": [25, 26], "deep_mmd_loss": 67, "develop": 1, "dim_reduct": 112, "ditto_cli": 27, "ditto_deep_mmd_cli": 26, "ditto_mkmmd_cli": 40, "ditto_serv": 126, "document": 1, "early_stopp": 161, "ensemble_bas": 84, "ensemble_cli": 28, "evaluate_cli": 29, "evaluate_serv": 131, "exampl": [2, 3], "feature_align": [57, 58, 59, 60, 61, 62, 63], "feature_extractor_buff": 85, "fed_pca_cli": 30, "fed_prox_cli": 31, "fedavg_dynamic_lay": 143, "fedavg_sparse_coo_tensor": 144, "fedavg_with_adaptive_constraint": 145, "feddg_ga": 146, "feddg_ga_with_adaptive_constraint": 147, "fedpca": 148, "fedper_cli": 32, "fedpm": 149, "fedpm_client": 33, "fedpm_exchang": 101, "fedpm_serv": 132, "fedprox_serv": 127, "fedrep_bas": 86, "fedrep_cli": 34, "fedsimclr_bas": 87, "fenda_bas": 88, "fenda_cli": 35, "fenda_ditto_cli": 36, "fenda_loss_config": 68, "fixed_sampling_client_manag": 16, "fixed_without_replacement_manag": 17, "fl": 7, "fl4health": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "fl_account": 117, "flash": 150, "flash_client": 37, "formatt": 1, "full_exchang": 102, "function": 162, "guid": 6, "guidelin": 1, "implement": 4, "instal": 7, "instance_level_dp_cli": 38, "instance_level_dp_serv": 133, "introduct": 4, "json_report": 121, "layer_exchang": 103, "load_data": [52, 55, 163], "log": 164, "loss": [64, 65, 66, 67, 68, 69, 70, 71, 113, 165], "masked_conv": 90, "masked_lay": [89, 90, 91, 92, 93], "masked_layers_util": 91, "masked_linear": 92, "masked_normalization_lay": 93, "metric": [72, 73, 74, 75, 76, 77, 167], "metric_aggreg": [75, 166], "metric_manag": 76, "mixin": [78, 79, 80], "mkmmd_client": [39, 40, 41], "mkmmd_loss": 69, "model_bas": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "model_merge_cli": 42, "model_merge_serv": 134, "model_merge_strategi": 151, "modul": [6, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "moments_account": 118, "moon_bas": 94, "moon_client": 43, "mr_mtl_client": 44, "mr_mtl_mkmmd_client": 41, "mrmtl_server": 128, "msd_dataset_sourc": 168, "next": 4, "nnunet_cli": 45, "nnunet_serv": 135, "nnunet_util": 169, "noisy_aggreg": 152, "opacus_checkpoint": 12, "packag": [8, 9, 14, 19, 25, 39, 50, 51, 54, 57, 64, 72, 78, 81, 89, 100, 110, 111, 116, 119, 124, 125, 139, 155], "packing_exchang": 104, "parallel_split_model": 95, "parameter_exchang": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "parameter_exchanger_bas": 105, "parameter_extract": 170, "parameter_pack": 106, "parameter_selection_criteria": 107, "partial_layer_exchange_model": 96, "partial_parameter_exchang": 108, "partial_weight_exchange_cli": 46, "partition": 171, "pca": 97, "pca_preprocessor": 114, "peft_parameter_extract": 172, "perfcl_bas": 98, "perfcl_client": 47, "perfcl_loss": 70, "poisson_sampling_manag": 18, "poll": 136, "practic": 1, "preprocess": [53, 110, 111, 112, 113, 114, 115], "preprocess_skin": 56, "privaci": [4, 116, 117, 118], "privacy_util": 173, "py": 7, "quickstart": 7, "random": 174, "refer": 0, "report": [119, 120, 121, 122, 123], "reports_manag": 122, "requir": 1, "run": 7, "rxrx1": [51, 52, 53], "sampler": 175, "scaffold": 153, "scaffold_cli": 48, "scaffold_serv": 137, "sequential_split_model": 99, "server": [7, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "server_modul": 13, "simpl": 7, "skin_canc": [54, 55, 56], "snapshott": 176, "sparse_coo_parameter_exchang": 109, "start": 7, "strategi": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "strategy_with_pol": 154, "string_columns_transform": 59, "submodul": [9, 14, 19, 25, 39, 51, 54, 57, 64, 72, 78, 81, 89, 100, 110, 111, 116, 119, 124, 125, 139, 155], "subpackag": [8, 19, 50, 81, 110, 124], "summari": 4, "tab_features_info_encod": 60, "tab_features_preprocessor": 61, "tabular_data_cli": 49, "tabular_featur": 62, "tabular_feature_alignment_serv": 138, "tabular_typ": 63, "task": 7, "test": 1, "type": 177, "util": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "wandb_report": 123, "warmed_up_modul": 115, "weight_drift_loss": 71, "welcom": 4, "what": 4}})