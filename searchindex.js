Search.setIndex({"alltitles": {"A simple FL task": [[7, "a-simple-fl-task"]], "API Reference": [[0, null]], "Basic Example": [[2, null]], "Checkpointing": [[5, null]], "Code Coverage": [[1, "code-coverage"]], "Code Documentation": [[1, "code-documentation"]], "Coding Guidelines, Formatters, and Checks": [[1, "coding-guidelines-formatters-and-checks"]], "Community": [[4, "community"]], "Contributing to FL4Health": [[1, null]], "Development Practices": [[1, "development-practices"]], "Development Requirements": [[1, "development-requirements"]], "Examples": [[3, null]], "Installation": [[7, "installation"]], "Introduction": [[4, "introduction"]], "Module Guides": [[6, null]], "Privacy Capabilities": [[4, "privacy-capabilities"]], "Quickstart": [[7, null]], "Running the FL task": [[7, "running-the-fl-task"]], "Starting Clients": [[7, "starting-clients"]], "Starting Server": [[7, "starting-server"]], "Submodules": [[9, "submodules"], [15, "submodules"], [20, "submodules"], [26, "submodules"], [40, "submodules"], [45, "submodules"], [57, "submodules"], [60, "submodules"], [63, "submodules"], [70, "submodules"], [78, "submodules"], [88, "submodules"], [91, "submodules"], [95, "submodules"], [104, "submodules"], [115, "submodules"], [125, "submodules"], [126, "submodules"], [131, "submodules"], [134, "submodules"], [139, "submodules"], [140, "submodules"], [154, "submodules"], [170, "submodules"]], "Subpackages": [[8, "subpackages"], [20, "subpackages"], [56, "subpackages"], [88, "subpackages"], [95, "subpackages"], [125, "subpackages"], [139, "subpackages"]], "Summary of Currently Implemented Approaches": [[4, "summary-of-currently-implemented-approaches"]], "Tests": [[1, "tests"]], "Welcome to FL4Health \u2728": [[4, null]], "What\u2019s Next?": [[4, "what-s-next"]], "client.py": [[7, "client-py"]], "fl4health package": [[8, null]], "fl4health.checkpointing package": [[9, null]], "fl4health.checkpointing.checkpointer module": [[10, null]], "fl4health.checkpointing.client_module module": [[11, null]], "fl4health.checkpointing.opacus_checkpointer module": [[12, null]], "fl4health.checkpointing.server_module module": [[13, null]], "fl4health.checkpointing.state_checkpointer module": [[14, null]], "fl4health.client_managers package": [[15, null]], "fl4health.client_managers.base_sampling_manager module": [[16, null]], "fl4health.client_managers.fixed_sampling_client_manager module": [[17, null]], "fl4health.client_managers.fixed_without_replacement_manager module": [[18, null]], "fl4health.client_managers.poisson_sampling_manager module": [[19, null]], "fl4health.clients package": [[20, null]], "fl4health.clients.adaptive_drift_constraint_client module": [[21, null]], "fl4health.clients.apfl_client module": [[22, null]], "fl4health.clients.basic_client module": [[23, null]], "fl4health.clients.clipping_client module": [[24, null]], "fl4health.clients.constrained_fenda_client module": [[25, null]], "fl4health.clients.deep_mmd_clients package": [[26, null]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module": [[27, null]], "fl4health.clients.ditto_client module": [[28, null]], "fl4health.clients.ensemble_client module": [[29, null]], "fl4health.clients.evaluate_client module": [[30, null]], "fl4health.clients.fed_pca_client module": [[31, null]], "fl4health.clients.fed_prox_client module": [[32, null]], "fl4health.clients.fedbn_client module": [[33, null]], "fl4health.clients.fedper_client module": [[34, null]], "fl4health.clients.fedpm_client module": [[35, null]], "fl4health.clients.fedrep_client module": [[36, null]], "fl4health.clients.fenda_client module": [[37, null]], "fl4health.clients.fenda_ditto_client module": [[38, null]], "fl4health.clients.flash_client module": [[39, null]], "fl4health.clients.flexible package": [[40, null]], "fl4health.clients.flexible.base module": [[41, null]], "fl4health.clients.flexible.nnunet module": [[42, null]], "fl4health.clients.gpfl_client module": [[43, null]], "fl4health.clients.instance_level_dp_client module": [[44, null]], "fl4health.clients.mkmmd_clients package": [[45, null]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module": [[46, null]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module": [[47, null]], "fl4health.clients.model_merge_client module": [[48, null]], "fl4health.clients.moon_client module": [[49, null]], "fl4health.clients.mr_mtl_client module": [[50, null]], "fl4health.clients.nnunet_client module": [[51, null]], "fl4health.clients.partial_weight_exchange_client module": [[52, null]], "fl4health.clients.perfcl_client module": [[53, null]], "fl4health.clients.scaffold_client module": [[54, null]], "fl4health.clients.tabular_data_client module": [[55, null]], "fl4health.datasets package": [[56, null]], "fl4health.datasets.rxrx1 package": [[57, null]], "fl4health.datasets.rxrx1.load_data module": [[58, null]], "fl4health.datasets.rxrx1.preprocess module": [[59, null]], "fl4health.datasets.skin_cancer package": [[60, null]], "fl4health.datasets.skin_cancer.load_data module": [[61, null]], "fl4health.datasets.skin_cancer.preprocess_skin module": [[62, null]], "fl4health.feature_alignment package": [[63, null]], "fl4health.feature_alignment.constants module": [[64, null]], "fl4health.feature_alignment.string_columns_transformer module": [[65, null]], "fl4health.feature_alignment.tab_features_info_encoder module": [[66, null]], "fl4health.feature_alignment.tab_features_preprocessor module": [[67, null]], "fl4health.feature_alignment.tabular_feature module": [[68, null]], "fl4health.feature_alignment.tabular_type module": [[69, null]], "fl4health.losses package": [[70, null]], "fl4health.losses.contrastive_loss module": [[71, null]], "fl4health.losses.cosine_similarity_loss module": [[72, null]], "fl4health.losses.deep_mmd_loss module": [[73, null]], "fl4health.losses.fenda_loss_config module": [[74, null]], "fl4health.losses.mkmmd_loss module": [[75, null]], "fl4health.losses.perfcl_loss module": [[76, null]], "fl4health.losses.weight_drift_loss module": [[77, null]], "fl4health.metrics package": [[78, null]], "fl4health.metrics.base_metrics module": [[79, null]], "fl4health.metrics.compound_metrics module": [[80, null]], "fl4health.metrics.efficient_metrics module": [[81, null]], "fl4health.metrics.efficient_metrics_base module": [[82, null]], "fl4health.metrics.metric_aggregation module": [[83, null]], "fl4health.metrics.metric_managers module": [[84, null]], "fl4health.metrics.metrics module": [[85, null]], "fl4health.metrics.metrics_utils module": [[86, null]], "fl4health.metrics.utils module": [[87, null]], "fl4health.mixins package": [[88, null]], "fl4health.mixins.adaptive_drift_constrained module": [[89, null]], "fl4health.mixins.core_protocols module": [[90, null]], "fl4health.mixins.personalized package": [[91, null]], "fl4health.mixins.personalized.ditto module": [[92, null]], "fl4health.mixins.personalized.mr_mtl module": [[93, null]], "fl4health.mixins.personalized.utils module": [[94, null]], "fl4health.model_bases package": [[95, null]], "fl4health.model_bases.apfl_base module": [[96, null]], "fl4health.model_bases.autoencoders_base module": [[97, null]], "fl4health.model_bases.ensemble_base module": [[98, null]], "fl4health.model_bases.feature_extractor_buffer module": [[99, null]], "fl4health.model_bases.fedrep_base module": [[100, null]], "fl4health.model_bases.fedsimclr_base module": [[101, null]], "fl4health.model_bases.fenda_base module": [[102, null]], "fl4health.model_bases.gpfl_base module": [[103, null]], "fl4health.model_bases.masked_layers package": [[104, null]], "fl4health.model_bases.masked_layers.masked_conv module": [[105, null]], "fl4health.model_bases.masked_layers.masked_layers_utils module": [[106, null]], "fl4health.model_bases.masked_layers.masked_linear module": [[107, null]], "fl4health.model_bases.masked_layers.masked_normalization_layers module": [[108, null]], "fl4health.model_bases.moon_base module": [[109, null]], "fl4health.model_bases.parallel_split_models module": [[110, null]], "fl4health.model_bases.partial_layer_exchange_model module": [[111, null]], "fl4health.model_bases.pca module": [[112, null]], "fl4health.model_bases.perfcl_base module": [[113, null]], "fl4health.model_bases.sequential_split_models module": [[114, null]], "fl4health.parameter_exchange package": [[115, null]], "fl4health.parameter_exchange.fedpm_exchanger module": [[116, null]], "fl4health.parameter_exchange.full_exchanger module": [[117, null]], "fl4health.parameter_exchange.layer_exchanger module": [[118, null]], "fl4health.parameter_exchange.packing_exchanger module": [[119, null]], "fl4health.parameter_exchange.parameter_exchanger_base module": [[120, null]], "fl4health.parameter_exchange.parameter_packer module": [[121, null]], "fl4health.parameter_exchange.parameter_selection_criteria module": [[122, null]], "fl4health.parameter_exchange.partial_parameter_exchanger module": [[123, null]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module": [[124, null]], "fl4health.preprocessing package": [[125, null]], "fl4health.preprocessing.autoencoders package": [[126, null]], "fl4health.preprocessing.autoencoders.dim_reduction module": [[127, null]], "fl4health.preprocessing.autoencoders.loss module": [[128, null]], "fl4health.preprocessing.pca_preprocessor module": [[129, null]], "fl4health.preprocessing.warmed_up_module module": [[130, null]], "fl4health.privacy package": [[131, null]], "fl4health.privacy.fl_accountants module": [[132, null]], "fl4health.privacy.moments_accountant module": [[133, null]], "fl4health.reporting package": [[134, null]], "fl4health.reporting.base_reporter module": [[135, null]], "fl4health.reporting.json_reporter module": [[136, null]], "fl4health.reporting.reports_manager module": [[137, null]], "fl4health.reporting.wandb_reporter module": [[138, null]], "fl4health.servers package": [[139, null]], "fl4health.servers.adaptive_constraint_servers package": [[140, null]], "fl4health.servers.adaptive_constraint_servers.ditto_server module": [[141, null]], "fl4health.servers.adaptive_constraint_servers.fedprox_server module": [[142, null]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server module": [[143, null]], "fl4health.servers.base_server module": [[144, null]], "fl4health.servers.client_level_dp_fed_avg_server module": [[145, null]], "fl4health.servers.evaluate_server module": [[146, null]], "fl4health.servers.fedpm_server module": [[147, null]], "fl4health.servers.instance_level_dp_server module": [[148, null]], "fl4health.servers.model_merge_server module": [[149, null]], "fl4health.servers.nnunet_server module": [[150, null]], "fl4health.servers.polling module": [[151, null]], "fl4health.servers.scaffold_server module": [[152, null]], "fl4health.servers.tabular_feature_alignment_server module": [[153, null]], "fl4health.strategies package": [[154, null]], "fl4health.strategies.aggregate_utils module": [[155, null]], "fl4health.strategies.basic_fedavg module": [[156, null]], "fl4health.strategies.client_dp_fedavgm module": [[157, null]], "fl4health.strategies.fedavg_dynamic_layer module": [[158, null]], "fl4health.strategies.fedavg_sparse_coo_tensor module": [[159, null]], "fl4health.strategies.fedavg_with_adaptive_constraint module": [[160, null]], "fl4health.strategies.feddg_ga module": [[161, null]], "fl4health.strategies.feddg_ga_with_adaptive_constraint module": [[162, null]], "fl4health.strategies.fedpca module": [[163, null]], "fl4health.strategies.fedpm module": [[164, null]], "fl4health.strategies.flash module": [[165, null]], "fl4health.strategies.model_merge_strategy module": [[166, null]], "fl4health.strategies.noisy_aggregate module": [[167, null]], "fl4health.strategies.scaffold module": [[168, null]], "fl4health.strategies.strategy_with_poll module": [[169, null]], "fl4health.utils package": [[170, null]], "fl4health.utils.client module": [[171, null]], "fl4health.utils.config module": [[172, null]], "fl4health.utils.data_generation module": [[173, null]], "fl4health.utils.dataset module": [[174, null]], "fl4health.utils.dataset_converter module": [[175, null]], "fl4health.utils.early_stopper module": [[176, null]], "fl4health.utils.functions module": [[177, null]], "fl4health.utils.load_data module": [[178, null]], "fl4health.utils.logging module": [[179, null]], "fl4health.utils.losses module": [[180, null]], "fl4health.utils.metrics module": [[181, null]], "fl4health.utils.msd_dataset_sources module": [[182, null]], "fl4health.utils.nnunet_utils module": [[183, null]], "fl4health.utils.parameter_extraction module": [[184, null]], "fl4health.utils.partitioners module": [[185, null]], "fl4health.utils.peft_parameter_extraction module": [[186, null]], "fl4health.utils.privacy_utilities module": [[187, null]], "fl4health.utils.random module": [[188, null]], "fl4health.utils.sampler module": [[189, null]], "fl4health.utils.snapshotter module": [[190, null]], "fl4health.utils.typing module": [[191, null]], "server.py": [[7, "server-py"]]}, "docnames": ["api", "contributing", "examples/basic/index", "examples/index", "index", "module_guides/checkpointing/index", "module_guides/index", "quickstart", "reference/api/fl4health", "reference/api/fl4health.checkpointing", "reference/api/fl4health.checkpointing.checkpointer", "reference/api/fl4health.checkpointing.client_module", "reference/api/fl4health.checkpointing.opacus_checkpointer", "reference/api/fl4health.checkpointing.server_module", "reference/api/fl4health.checkpointing.state_checkpointer", "reference/api/fl4health.client_managers", "reference/api/fl4health.client_managers.base_sampling_manager", "reference/api/fl4health.client_managers.fixed_sampling_client_manager", "reference/api/fl4health.client_managers.fixed_without_replacement_manager", "reference/api/fl4health.client_managers.poisson_sampling_manager", "reference/api/fl4health.clients", "reference/api/fl4health.clients.adaptive_drift_constraint_client", "reference/api/fl4health.clients.apfl_client", "reference/api/fl4health.clients.basic_client", "reference/api/fl4health.clients.clipping_client", "reference/api/fl4health.clients.constrained_fenda_client", "reference/api/fl4health.clients.deep_mmd_clients", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", "reference/api/fl4health.clients.ditto_client", "reference/api/fl4health.clients.ensemble_client", "reference/api/fl4health.clients.evaluate_client", "reference/api/fl4health.clients.fed_pca_client", "reference/api/fl4health.clients.fed_prox_client", "reference/api/fl4health.clients.fedbn_client", "reference/api/fl4health.clients.fedper_client", "reference/api/fl4health.clients.fedpm_client", "reference/api/fl4health.clients.fedrep_client", "reference/api/fl4health.clients.fenda_client", "reference/api/fl4health.clients.fenda_ditto_client", "reference/api/fl4health.clients.flash_client", "reference/api/fl4health.clients.flexible", "reference/api/fl4health.clients.flexible.base", "reference/api/fl4health.clients.flexible.nnunet", "reference/api/fl4health.clients.gpfl_client", "reference/api/fl4health.clients.instance_level_dp_client", "reference/api/fl4health.clients.mkmmd_clients", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", "reference/api/fl4health.clients.model_merge_client", "reference/api/fl4health.clients.moon_client", "reference/api/fl4health.clients.mr_mtl_client", "reference/api/fl4health.clients.nnunet_client", "reference/api/fl4health.clients.partial_weight_exchange_client", "reference/api/fl4health.clients.perfcl_client", "reference/api/fl4health.clients.scaffold_client", "reference/api/fl4health.clients.tabular_data_client", "reference/api/fl4health.datasets", "reference/api/fl4health.datasets.rxrx1", "reference/api/fl4health.datasets.rxrx1.load_data", "reference/api/fl4health.datasets.rxrx1.preprocess", "reference/api/fl4health.datasets.skin_cancer", "reference/api/fl4health.datasets.skin_cancer.load_data", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin", "reference/api/fl4health.feature_alignment", "reference/api/fl4health.feature_alignment.constants", "reference/api/fl4health.feature_alignment.string_columns_transformer", "reference/api/fl4health.feature_alignment.tab_features_info_encoder", "reference/api/fl4health.feature_alignment.tab_features_preprocessor", "reference/api/fl4health.feature_alignment.tabular_feature", "reference/api/fl4health.feature_alignment.tabular_type", "reference/api/fl4health.losses", "reference/api/fl4health.losses.contrastive_loss", "reference/api/fl4health.losses.cosine_similarity_loss", "reference/api/fl4health.losses.deep_mmd_loss", "reference/api/fl4health.losses.fenda_loss_config", "reference/api/fl4health.losses.mkmmd_loss", "reference/api/fl4health.losses.perfcl_loss", "reference/api/fl4health.losses.weight_drift_loss", "reference/api/fl4health.metrics", "reference/api/fl4health.metrics.base_metrics", "reference/api/fl4health.metrics.compound_metrics", "reference/api/fl4health.metrics.efficient_metrics", "reference/api/fl4health.metrics.efficient_metrics_base", "reference/api/fl4health.metrics.metric_aggregation", "reference/api/fl4health.metrics.metric_managers", "reference/api/fl4health.metrics.metrics", "reference/api/fl4health.metrics.metrics_utils", "reference/api/fl4health.metrics.utils", "reference/api/fl4health.mixins", "reference/api/fl4health.mixins.adaptive_drift_constrained", "reference/api/fl4health.mixins.core_protocols", "reference/api/fl4health.mixins.personalized", "reference/api/fl4health.mixins.personalized.ditto", "reference/api/fl4health.mixins.personalized.mr_mtl", "reference/api/fl4health.mixins.personalized.utils", "reference/api/fl4health.model_bases", "reference/api/fl4health.model_bases.apfl_base", "reference/api/fl4health.model_bases.autoencoders_base", "reference/api/fl4health.model_bases.ensemble_base", "reference/api/fl4health.model_bases.feature_extractor_buffer", "reference/api/fl4health.model_bases.fedrep_base", "reference/api/fl4health.model_bases.fedsimclr_base", "reference/api/fl4health.model_bases.fenda_base", "reference/api/fl4health.model_bases.gpfl_base", "reference/api/fl4health.model_bases.masked_layers", "reference/api/fl4health.model_bases.masked_layers.masked_conv", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils", "reference/api/fl4health.model_bases.masked_layers.masked_linear", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers", "reference/api/fl4health.model_bases.moon_base", "reference/api/fl4health.model_bases.parallel_split_models", "reference/api/fl4health.model_bases.partial_layer_exchange_model", "reference/api/fl4health.model_bases.pca", "reference/api/fl4health.model_bases.perfcl_base", "reference/api/fl4health.model_bases.sequential_split_models", "reference/api/fl4health.parameter_exchange", "reference/api/fl4health.parameter_exchange.fedpm_exchanger", "reference/api/fl4health.parameter_exchange.full_exchanger", "reference/api/fl4health.parameter_exchange.layer_exchanger", "reference/api/fl4health.parameter_exchange.packing_exchanger", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base", "reference/api/fl4health.parameter_exchange.parameter_packer", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger", "reference/api/fl4health.preprocessing", "reference/api/fl4health.preprocessing.autoencoders", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction", "reference/api/fl4health.preprocessing.autoencoders.loss", "reference/api/fl4health.preprocessing.pca_preprocessor", "reference/api/fl4health.preprocessing.warmed_up_module", "reference/api/fl4health.privacy", "reference/api/fl4health.privacy.fl_accountants", "reference/api/fl4health.privacy.moments_accountant", "reference/api/fl4health.reporting", "reference/api/fl4health.reporting.base_reporter", "reference/api/fl4health.reporting.json_reporter", "reference/api/fl4health.reporting.reports_manager", "reference/api/fl4health.reporting.wandb_reporter", "reference/api/fl4health.servers", "reference/api/fl4health.servers.adaptive_constraint_servers", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server", "reference/api/fl4health.servers.base_server", "reference/api/fl4health.servers.client_level_dp_fed_avg_server", "reference/api/fl4health.servers.evaluate_server", "reference/api/fl4health.servers.fedpm_server", "reference/api/fl4health.servers.instance_level_dp_server", "reference/api/fl4health.servers.model_merge_server", "reference/api/fl4health.servers.nnunet_server", "reference/api/fl4health.servers.polling", "reference/api/fl4health.servers.scaffold_server", "reference/api/fl4health.servers.tabular_feature_alignment_server", "reference/api/fl4health.strategies", "reference/api/fl4health.strategies.aggregate_utils", "reference/api/fl4health.strategies.basic_fedavg", "reference/api/fl4health.strategies.client_dp_fedavgm", "reference/api/fl4health.strategies.fedavg_dynamic_layer", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint", "reference/api/fl4health.strategies.feddg_ga", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint", "reference/api/fl4health.strategies.fedpca", "reference/api/fl4health.strategies.fedpm", "reference/api/fl4health.strategies.flash", "reference/api/fl4health.strategies.model_merge_strategy", "reference/api/fl4health.strategies.noisy_aggregate", "reference/api/fl4health.strategies.scaffold", "reference/api/fl4health.strategies.strategy_with_poll", "reference/api/fl4health.utils", "reference/api/fl4health.utils.client", "reference/api/fl4health.utils.config", "reference/api/fl4health.utils.data_generation", "reference/api/fl4health.utils.dataset", "reference/api/fl4health.utils.dataset_converter", "reference/api/fl4health.utils.early_stopper", "reference/api/fl4health.utils.functions", "reference/api/fl4health.utils.load_data", "reference/api/fl4health.utils.logging", "reference/api/fl4health.utils.losses", "reference/api/fl4health.utils.metrics", "reference/api/fl4health.utils.msd_dataset_sources", "reference/api/fl4health.utils.nnunet_utils", "reference/api/fl4health.utils.parameter_extraction", "reference/api/fl4health.utils.partitioners", "reference/api/fl4health.utils.peft_parameter_extraction", "reference/api/fl4health.utils.privacy_utilities", "reference/api/fl4health.utils.random", "reference/api/fl4health.utils.sampler", "reference/api/fl4health.utils.snapshotter", "reference/api/fl4health.utils.typing"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "contributing.md", "examples/basic/index.md", "examples/index.md", "index.md", "module_guides/checkpointing/index.md", "module_guides/index.md", "quickstart.md", "reference/api/fl4health.rst", "reference/api/fl4health.checkpointing.rst", "reference/api/fl4health.checkpointing.checkpointer.rst", "reference/api/fl4health.checkpointing.client_module.rst", "reference/api/fl4health.checkpointing.opacus_checkpointer.rst", "reference/api/fl4health.checkpointing.server_module.rst", "reference/api/fl4health.checkpointing.state_checkpointer.rst", "reference/api/fl4health.client_managers.rst", "reference/api/fl4health.client_managers.base_sampling_manager.rst", "reference/api/fl4health.client_managers.fixed_sampling_client_manager.rst", "reference/api/fl4health.client_managers.fixed_without_replacement_manager.rst", "reference/api/fl4health.client_managers.poisson_sampling_manager.rst", "reference/api/fl4health.clients.rst", "reference/api/fl4health.clients.adaptive_drift_constraint_client.rst", "reference/api/fl4health.clients.apfl_client.rst", "reference/api/fl4health.clients.basic_client.rst", "reference/api/fl4health.clients.clipping_client.rst", "reference/api/fl4health.clients.constrained_fenda_client.rst", "reference/api/fl4health.clients.deep_mmd_clients.rst", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.rst", "reference/api/fl4health.clients.ditto_client.rst", "reference/api/fl4health.clients.ensemble_client.rst", "reference/api/fl4health.clients.evaluate_client.rst", "reference/api/fl4health.clients.fed_pca_client.rst", "reference/api/fl4health.clients.fed_prox_client.rst", "reference/api/fl4health.clients.fedbn_client.rst", "reference/api/fl4health.clients.fedper_client.rst", "reference/api/fl4health.clients.fedpm_client.rst", "reference/api/fl4health.clients.fedrep_client.rst", "reference/api/fl4health.clients.fenda_client.rst", "reference/api/fl4health.clients.fenda_ditto_client.rst", "reference/api/fl4health.clients.flash_client.rst", "reference/api/fl4health.clients.flexible.rst", "reference/api/fl4health.clients.flexible.base.rst", "reference/api/fl4health.clients.flexible.nnunet.rst", "reference/api/fl4health.clients.gpfl_client.rst", "reference/api/fl4health.clients.instance_level_dp_client.rst", "reference/api/fl4health.clients.mkmmd_clients.rst", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client.rst", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.rst", "reference/api/fl4health.clients.model_merge_client.rst", "reference/api/fl4health.clients.moon_client.rst", "reference/api/fl4health.clients.mr_mtl_client.rst", "reference/api/fl4health.clients.nnunet_client.rst", "reference/api/fl4health.clients.partial_weight_exchange_client.rst", "reference/api/fl4health.clients.perfcl_client.rst", "reference/api/fl4health.clients.scaffold_client.rst", "reference/api/fl4health.clients.tabular_data_client.rst", "reference/api/fl4health.datasets.rst", "reference/api/fl4health.datasets.rxrx1.rst", "reference/api/fl4health.datasets.rxrx1.load_data.rst", "reference/api/fl4health.datasets.rxrx1.preprocess.rst", "reference/api/fl4health.datasets.skin_cancer.rst", "reference/api/fl4health.datasets.skin_cancer.load_data.rst", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin.rst", "reference/api/fl4health.feature_alignment.rst", "reference/api/fl4health.feature_alignment.constants.rst", "reference/api/fl4health.feature_alignment.string_columns_transformer.rst", "reference/api/fl4health.feature_alignment.tab_features_info_encoder.rst", "reference/api/fl4health.feature_alignment.tab_features_preprocessor.rst", "reference/api/fl4health.feature_alignment.tabular_feature.rst", "reference/api/fl4health.feature_alignment.tabular_type.rst", "reference/api/fl4health.losses.rst", "reference/api/fl4health.losses.contrastive_loss.rst", "reference/api/fl4health.losses.cosine_similarity_loss.rst", "reference/api/fl4health.losses.deep_mmd_loss.rst", "reference/api/fl4health.losses.fenda_loss_config.rst", "reference/api/fl4health.losses.mkmmd_loss.rst", "reference/api/fl4health.losses.perfcl_loss.rst", "reference/api/fl4health.losses.weight_drift_loss.rst", "reference/api/fl4health.metrics.rst", "reference/api/fl4health.metrics.base_metrics.rst", "reference/api/fl4health.metrics.compound_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics_base.rst", "reference/api/fl4health.metrics.metric_aggregation.rst", "reference/api/fl4health.metrics.metric_managers.rst", "reference/api/fl4health.metrics.metrics.rst", "reference/api/fl4health.metrics.metrics_utils.rst", "reference/api/fl4health.metrics.utils.rst", "reference/api/fl4health.mixins.rst", "reference/api/fl4health.mixins.adaptive_drift_constrained.rst", "reference/api/fl4health.mixins.core_protocols.rst", "reference/api/fl4health.mixins.personalized.rst", "reference/api/fl4health.mixins.personalized.ditto.rst", "reference/api/fl4health.mixins.personalized.mr_mtl.rst", "reference/api/fl4health.mixins.personalized.utils.rst", "reference/api/fl4health.model_bases.rst", "reference/api/fl4health.model_bases.apfl_base.rst", "reference/api/fl4health.model_bases.autoencoders_base.rst", "reference/api/fl4health.model_bases.ensemble_base.rst", "reference/api/fl4health.model_bases.feature_extractor_buffer.rst", "reference/api/fl4health.model_bases.fedrep_base.rst", "reference/api/fl4health.model_bases.fedsimclr_base.rst", "reference/api/fl4health.model_bases.fenda_base.rst", "reference/api/fl4health.model_bases.gpfl_base.rst", "reference/api/fl4health.model_bases.masked_layers.rst", "reference/api/fl4health.model_bases.masked_layers.masked_conv.rst", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils.rst", "reference/api/fl4health.model_bases.masked_layers.masked_linear.rst", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers.rst", "reference/api/fl4health.model_bases.moon_base.rst", "reference/api/fl4health.model_bases.parallel_split_models.rst", "reference/api/fl4health.model_bases.partial_layer_exchange_model.rst", "reference/api/fl4health.model_bases.pca.rst", "reference/api/fl4health.model_bases.perfcl_base.rst", "reference/api/fl4health.model_bases.sequential_split_models.rst", "reference/api/fl4health.parameter_exchange.rst", "reference/api/fl4health.parameter_exchange.fedpm_exchanger.rst", "reference/api/fl4health.parameter_exchange.full_exchanger.rst", "reference/api/fl4health.parameter_exchange.layer_exchanger.rst", "reference/api/fl4health.parameter_exchange.packing_exchanger.rst", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base.rst", "reference/api/fl4health.parameter_exchange.parameter_packer.rst", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria.rst", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger.rst", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger.rst", "reference/api/fl4health.preprocessing.rst", "reference/api/fl4health.preprocessing.autoencoders.rst", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction.rst", "reference/api/fl4health.preprocessing.autoencoders.loss.rst", "reference/api/fl4health.preprocessing.pca_preprocessor.rst", "reference/api/fl4health.preprocessing.warmed_up_module.rst", "reference/api/fl4health.privacy.rst", "reference/api/fl4health.privacy.fl_accountants.rst", "reference/api/fl4health.privacy.moments_accountant.rst", "reference/api/fl4health.reporting.rst", "reference/api/fl4health.reporting.base_reporter.rst", "reference/api/fl4health.reporting.json_reporter.rst", "reference/api/fl4health.reporting.reports_manager.rst", "reference/api/fl4health.reporting.wandb_reporter.rst", "reference/api/fl4health.servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server.rst", "reference/api/fl4health.servers.base_server.rst", "reference/api/fl4health.servers.client_level_dp_fed_avg_server.rst", "reference/api/fl4health.servers.evaluate_server.rst", "reference/api/fl4health.servers.fedpm_server.rst", "reference/api/fl4health.servers.instance_level_dp_server.rst", "reference/api/fl4health.servers.model_merge_server.rst", "reference/api/fl4health.servers.nnunet_server.rst", "reference/api/fl4health.servers.polling.rst", "reference/api/fl4health.servers.scaffold_server.rst", "reference/api/fl4health.servers.tabular_feature_alignment_server.rst", "reference/api/fl4health.strategies.rst", "reference/api/fl4health.strategies.aggregate_utils.rst", "reference/api/fl4health.strategies.basic_fedavg.rst", "reference/api/fl4health.strategies.client_dp_fedavgm.rst", "reference/api/fl4health.strategies.fedavg_dynamic_layer.rst", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor.rst", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.feddg_ga.rst", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.fedpca.rst", "reference/api/fl4health.strategies.fedpm.rst", "reference/api/fl4health.strategies.flash.rst", "reference/api/fl4health.strategies.model_merge_strategy.rst", "reference/api/fl4health.strategies.noisy_aggregate.rst", "reference/api/fl4health.strategies.scaffold.rst", "reference/api/fl4health.strategies.strategy_with_poll.rst", "reference/api/fl4health.utils.rst", "reference/api/fl4health.utils.client.rst", "reference/api/fl4health.utils.config.rst", "reference/api/fl4health.utils.data_generation.rst", "reference/api/fl4health.utils.dataset.rst", "reference/api/fl4health.utils.dataset_converter.rst", "reference/api/fl4health.utils.early_stopper.rst", "reference/api/fl4health.utils.functions.rst", "reference/api/fl4health.utils.load_data.rst", "reference/api/fl4health.utils.logging.rst", "reference/api/fl4health.utils.losses.rst", "reference/api/fl4health.utils.metrics.rst", "reference/api/fl4health.utils.msd_dataset_sources.rst", "reference/api/fl4health.utils.nnunet_utils.rst", "reference/api/fl4health.utils.parameter_extraction.rst", "reference/api/fl4health.utils.partitioners.rst", "reference/api/fl4health.utils.peft_parameter_extraction.rst", "reference/api/fl4health.utils.privacy_utilities.rst", "reference/api/fl4health.utils.random.rst", "reference/api/fl4health.utils.sampler.rst", "reference/api/fl4health.utils.snapshotter.rst", "reference/api/fl4health.utils.typing.rst"], "indexentries": {"__init__() (abstractae method)": [[97, "fl4health.model_bases.autoencoders_base.AbstractAe.__init__", false]], "__init__() (accuracy method)": [[78, "fl4health.metrics.Accuracy.__init__", false], [85, "fl4health.metrics.metrics.Accuracy.__init__", false]], "__init__() (adaptiveconstraintservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule.__init__", false]], "__init__() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.__init__", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.__init__", false]], "__init__() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.__init__", false]], "__init__() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.__init__", false]], "__init__() (apflmodule method)": [[96, "fl4health.model_bases.apfl_base.ApflModule.__init__", false]], "__init__() (autoencoderdatasetconverter method)": [[175, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.__init__", false]], "__init__() (autoencoderprocessing method)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.__init__", false]], "__init__() (balancedaccuracy method)": [[78, "fl4health.metrics.BalancedAccuracy.__init__", false], [85, "fl4health.metrics.metrics.BalancedAccuracy.__init__", false]], "__init__() (basedataset method)": [[174, "fl4health.utils.dataset.BaseDataset.__init__", false]], "__init__() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.__init__", false]], "__init__() (basicae method)": [[97, "fl4health.model_bases.autoencoders_base.BasicAe.__init__", false]], "__init__() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.__init__", false]], "__init__() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.__init__", false]], "__init__() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.__init__", false]], "__init__() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.__init__", false]], "__init__() (bestmetrictorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer.__init__", false]], "__init__() (binaryclassificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.__init__", false]], "__init__() (binarydice method)": [[81, "fl4health.metrics.efficient_metrics.BinaryDice.__init__", false]], "__init__() (binarysoftdicecoefficient method)": [[78, "fl4health.metrics.BinarySoftDiceCoefficient.__init__", false], [85, "fl4health.metrics.metrics.BinarySoftDiceCoefficient.__init__", false]], "__init__() (classificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.__init__", false]], "__init__() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.__init__", false]], "__init__() (clientlevelaccountant method)": [[132, "fl4health.privacy.fl_accountants.ClientLevelAccountant.__init__", false]], "__init__() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.__init__", false]], "__init__() (clientleveldpfedavgserver method)": [[145, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.__init__", false]], "__init__() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.__init__", false]], "__init__() (clippingbitservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule.__init__", false]], "__init__() (conditionalvae method)": [[97, "fl4health.model_bases.autoencoders_base.ConditionalVae.__init__", false]], "__init__() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.__init__", false]], "__init__() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.__init__", false]], "__init__() (cosinesimilarityloss method)": [[72, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.__init__", false]], "__init__() (cosinesimilaritylosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer.__init__", false]], "__init__() (cov method)": [[103, "fl4health.model_bases.gpfl_base.CoV.__init__", false]], "__init__() (cvaefixedconditionprocessor method)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor.__init__", false]], "__init__() (cvaevariableconditionprocessor method)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor.__init__", false]], "__init__() (datasetconverter method)": [[175, "fl4health.utils.dataset_converter.DatasetConverter.__init__", false]], "__init__() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.__init__", false]], "__init__() (dictionarydataset method)": [[174, "fl4health.utils.dataset.DictionaryDataset.__init__", false]], "__init__() (dirichletlabelbasedallocation method)": [[185, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.__init__", false]], "__init__() (dirichletlabelbasedsampler method)": [[189, "fl4health.utils.sampler.DirichletLabelBasedSampler.__init__", false]], "__init__() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.__init__", false]], "__init__() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.__init__", false]], "__init__() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.__init__", false]], "__init__() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.__init__", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.__init__", false]], "__init__() (dittoserver method)": [[141, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer.__init__", false]], "__init__() (dpscaffoldclient method)": [[54, "fl4health.clients.scaffold_client.DPScaffoldClient.__init__", false]], "__init__() (dpscaffoldserver method)": [[152, "fl4health.servers.scaffold_server.DPScaffoldServer.__init__", false]], "__init__() (dpscaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (dynamiclayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.__init__", false]], "__init__() (earlystopper method)": [[176, "fl4health.utils.early_stopper.EarlyStopper.__init__", false]], "__init__() (emametric method)": [[80, "fl4health.metrics.compound_metrics.EmaMetric.__init__", false]], "__init__() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.__init__", false]], "__init__() (ensemblemodel method)": [[98, "fl4health.model_bases.ensemble_base.EnsembleModel.__init__", false]], "__init__() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.__init__", false]], "__init__() (evaluateserver method)": [[146, "fl4health.servers.evaluate_server.EvaluateServer.__init__", false]], "__init__() (evaluationlosses method)": [[180, "fl4health.utils.losses.EvaluationLosses.__init__", false]], "__init__() (f1 method)": [[78, "fl4health.metrics.F1.__init__", false], [85, "fl4health.metrics.metrics.F1.__init__", false]], "__init__() (fairnessmetric method)": [[161, "fl4health.strategies.feddg_ga.FairnessMetric.__init__", false]], "__init__() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.__init__", false]], "__init__() (fedavgdynamiclayer method)": [[158, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.__init__", false]], "__init__() (fedavgsparsecootensor method)": [[159, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.__init__", false]], "__init__() (fedavgwithadaptiveconstraint method)": [[160, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.__init__", false]], "__init__() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.__init__", false]], "__init__() (feddggaadaptiveconstraint method)": [[162, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.__init__", false]], "__init__() (fedpca method)": [[163, "fl4health.strategies.fedpca.FedPCA.__init__", false]], "__init__() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.__init__", false]], "__init__() (fedpm method)": [[164, "fl4health.strategies.fedpm.FedPm.__init__", false]], "__init__() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.__init__", false]], "__init__() (fedpmexchanger method)": [[116, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.__init__", false]], "__init__() (fedpmserver method)": [[147, "fl4health.servers.fedpm_server.FedPmServer.__init__", false]], "__init__() (fedproxserver method)": [[142, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer.__init__", false]], "__init__() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.__init__", false]], "__init__() (fedsimclrmodel method)": [[101, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.__init__", false]], "__init__() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.__init__", false]], "__init__() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.__init__", false]], "__init__() (fendamodel method)": [[102, "fl4health.model_bases.fenda_base.FendaModel.__init__", false]], "__init__() (fendamodelwithfeaturestate method)": [[102, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.__init__", false]], "__init__() (filereporter method)": [[136, "fl4health.reporting.json_reporter.FileReporter.__init__", false]], "__init__() (fixedlayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.__init__", false]], "__init__() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.__init__", false]], "__init__() (fixedsamplingwithoutreplacement method)": [[133, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.__init__", false]], "__init__() (flash method)": [[165, "fl4health.strategies.flash.Flash.__init__", false]], "__init__() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.__init__", false]], "__init__() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.__init__", false]], "__init__() (flclientlevelaccountantpoissonsampling method)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.__init__", false]], "__init__() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.__init__", false]], "__init__() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.__init__", false]], "__init__() (flinstancelevelaccountant method)": [[132, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.__init__", false]], "__init__() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.__init__", false]], "__init__() (fullparameterexchangerwithpacking method)": [[119, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.__init__", false]], "__init__() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.__init__", false]], "__init__() (gce method)": [[103, "fl4health.model_bases.gpfl_base.Gce.__init__", false]], "__init__() (gpflbaseandheadmodules method)": [[103, "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules.__init__", false]], "__init__() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.__init__", false]], "__init__() (gpflmodel method)": [[103, "fl4health.model_bases.gpfl_base.GpflModel.__init__", false]], "__init__() (instanceleveldpclient method)": [[44, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.__init__", false]], "__init__() (instanceleveldpserver method)": [[148, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.__init__", false]], "__init__() (labelbasedsampler method)": [[189, "fl4health.utils.sampler.LabelBasedSampler.__init__", false]], "__init__() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.__init__", false]], "__init__() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.__init__", false]], "__init__() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.__init__", false]], "__init__() (layernamesservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule.__init__", false]], "__init__() (layerselectionfunctionconstructor method)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.__init__", false]], "__init__() (losses method)": [[180, "fl4health.utils.losses.Losses.__init__", false]], "__init__() (lossmeter method)": [[180, "fl4health.utils.losses.LossMeter.__init__", false]], "__init__() (maskedconv1d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.__init__", false]], "__init__() (maskedconv2d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.__init__", false]], "__init__() (maskedconv3d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.__init__", false]], "__init__() (maskedconvtranspose1d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.__init__", false]], "__init__() (maskedconvtranspose2d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.__init__", false]], "__init__() (maskedconvtranspose3d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.__init__", false]], "__init__() (maskedlayernorm method)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.__init__", false]], "__init__() (maskedlinear method)": [[107, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.__init__", false]], "__init__() (metric method)": [[79, "fl4health.metrics.base_metrics.Metric.__init__", false]], "__init__() (metricmanager method)": [[84, "fl4health.metrics.metric_managers.MetricManager.__init__", false]], "__init__() (minoritylabelbasedsampler method)": [[189, "fl4health.utils.sampler.MinorityLabelBasedSampler.__init__", false]], "__init__() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.__init__", false]], "__init__() (modellatentf method)": [[73, "fl4health.losses.deep_mmd_loss.ModelLatentF.__init__", false]], "__init__() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.__init__", false]], "__init__() (modelmergeserver method)": [[149, "fl4health.servers.model_merge_server.ModelMergeServer.__init__", false]], "__init__() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.__init__", false]], "__init__() (module2losswrapper method)": [[183, "fl4health.utils.nnunet_utils.Module2LossWrapper.__init__", false]], "__init__() (momentsaccountant method)": [[133, "fl4health.privacy.moments_accountant.MomentsAccountant.__init__", false]], "__init__() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.__init__", false]], "__init__() (mooncontrastiveloss method)": [[71, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.__init__", false]], "__init__() (mooncontrastivelosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer.__init__", false]], "__init__() (moonmodel method)": [[109, "fl4health.model_bases.moon_base.MoonModel.__init__", false]], "__init__() (mrmtlclient method)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient.__init__", false]], "__init__() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.__init__", false]], "__init__() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.__init__", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.__init__", false]], "__init__() (mrmtlserver method)": [[143, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer.__init__", false]], "__init__() (multiclassdice method)": [[81, "fl4health.metrics.efficient_metrics.MultiClassDice.__init__", false]], "__init__() (multiclassificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.__init__", false]], "__init__() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.__init__", false]], "__init__() (nnunetdataloaderwrapper method)": [[183, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.__init__", false]], "__init__() (nnunetserver method)": [[150, "fl4health.servers.nnunet_server.NnunetServer.__init__", false]], "__init__() (nnunetservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule.__init__", false]], "__init__() (nnunetserverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer.__init__", false]], "__init__() (ntxentloss method)": [[71, "fl4health.losses.contrastive_loss.NtXentLoss.__init__", false]], "__init__() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.__init__", false]], "__init__() (opacusbasicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg.__init__", false]], "__init__() (opacusscaffold method)": [[168, "fl4health.strategies.scaffold.OpacusScaffold.__init__", false]], "__init__() (opacusservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule.__init__", false]], "__init__() (packingservercheckpointandandstatemodule method)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule.__init__", false]], "__init__() (parallelsplitheadmodule method)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.__init__", false]], "__init__() (parallelsplitmodel method)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.__init__", false]], "__init__() (parameterpackerwithcontrolvariates method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.__init__", false]], "__init__() (partialparameterexchanger method)": [[123, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.__init__", false]], "__init__() (partialweightexchangeclient method)": [[52, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.__init__", false]], "__init__() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.__init__", false]], "__init__() (pcapreprocessor method)": [[129, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.__init__", false]], "__init__() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.__init__", false]], "__init__() (perfclloss method)": [[76, "fl4health.losses.perfcl_loss.PerFclLoss.__init__", false]], "__init__() (perfcllosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.PerFclLossContainer.__init__", false]], "__init__() (perfclmodel method)": [[113, "fl4health.model_bases.perfcl_base.PerFclModel.__init__", false]], "__init__() (poissonsampling method)": [[133, "fl4health.privacy.moments_accountant.PoissonSampling.__init__", false]], "__init__() (polylrschedulerwrapper method)": [[183, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.__init__", false]], "__init__() (reportsmanager method)": [[137, "fl4health.reporting.reports_manager.ReportsManager.__init__", false]], "__init__() (rocauc method)": [[78, "fl4health.metrics.RocAuc.__init__", false], [85, "fl4health.metrics.metrics.RocAuc.__init__", false]], "__init__() (samplingstrategy method)": [[133, "fl4health.privacy.moments_accountant.SamplingStrategy.__init__", false]], "__init__() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.__init__", false]], "__init__() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.__init__", false]], "__init__() (scaffoldserver method)": [[152, "fl4health.servers.scaffold_server.ScaffoldServer.__init__", false]], "__init__() (scaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (sequentiallysplitmodel method)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.__init__", false]], "__init__() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.__init__", false]], "__init__() (simplemetric method)": [[78, "fl4health.metrics.SimpleMetric.__init__", false], [85, "fl4health.metrics.metrics.SimpleMetric.__init__", false]], "__init__() (sparsecooparameterexchanger method)": [[124, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.__init__", false]], "__init__() (sparsecooservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule.__init__", false]], "__init__() (ssltensordataset method)": [[174, "fl4health.utils.dataset.SslTensorDataset.__init__", false]], "__init__() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.__init__", false]], "__init__() (streamtologger method)": [[183, "fl4health.utils.nnunet_utils.StreamToLogger.__init__", false]], "__init__() (syntheticdataset method)": [[174, "fl4health.utils.dataset.SyntheticDataset.__init__", false]], "__init__() (syntheticfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset.__init__", false]], "__init__() (syntheticiidfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.__init__", false]], "__init__() (syntheticnoniidfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.__init__", false]], "__init__() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.__init__", false]], "__init__() (tensordataset method)": [[174, "fl4health.utils.dataset.TensorDataset.__init__", false]], "__init__() (textcolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.__init__", false]], "__init__() (textmulticolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.__init__", false]], "__init__() (torchmetric method)": [[78, "fl4health.metrics.TorchMetric.__init__", false], [85, "fl4health.metrics.metrics.TorchMetric.__init__", false]], "__init__() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.__init__", false]], "__init__() (traininglosses method)": [[180, "fl4health.utils.losses.TrainingLosses.__init__", false]], "__init__() (transformsmetric method)": [[80, "fl4health.metrics.compound_metrics.TransformsMetric.__init__", false]], "__init__() (vaeloss method)": [[128, "fl4health.preprocessing.autoencoders.loss.VaeLoss.__init__", false]], "__init__() (vaeprocessor method)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor.__init__", false]], "__init__() (variationalae method)": [[97, "fl4health.model_bases.autoencoders_base.VariationalAe.__init__", false]], "__init__() (wandbreporter method)": [[134, "fl4health.reporting.WandBReporter.__init__", false], [138, "fl4health.reporting.wandb_reporter.WandBReporter.__init__", false]], "__init__() (warmedupmodule method)": [[130, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.__init__", false]], "__init__() (weightdriftloss method)": [[77, "fl4health.losses.weight_drift_loss.WeightDriftLoss.__init__", false]], "abstractae (class in fl4health.model_bases.autoencoders_base)": [[97, "fl4health.model_bases.autoencoders_base.AbstractAe", false]], "abstractsnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.AbstractSnapshotter", false]], "accumulation (lossmetertype attribute)": [[180, "fl4health.utils.losses.LossMeterType.ACCUMULATION", false]], "accuracy (class in fl4health.metrics)": [[78, "fl4health.metrics.Accuracy", false]], "accuracy (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.Accuracy", false]], "accuracy (fairnessmetrictype attribute)": [[161, "fl4health.strategies.feddg_ga.FairnessMetricType.ACCURACY", false]], "adaptiveconstraintservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins.adaptive_drift_constrained)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedprotocol (class in fl4health.mixins.adaptive_drift_constrained)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol", false]], "adaptivedriftconstraintclient (class in fl4health.clients.adaptive_drift_constraint_client)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient", false]], "add_auxiliary_information() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.add_auxiliary_information", false]], "add_auxiliary_information() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.add_auxiliary_information", false]], "add_auxiliary_information() (fedavgwithadaptiveconstraint method)": [[160, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.add_auxiliary_information", false]], "add_auxiliary_information() (feddggaadaptiveconstraint method)": [[162, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.add_auxiliary_information", false]], "add_auxiliary_information() (flash method)": [[165, "fl4health.strategies.flash.Flash.add_auxiliary_information", false]], "add_items_to_config_fn() (in module fl4health.servers.nnunet_server)": [[150, "fl4health.servers.nnunet_server.add_items_to_config_fn", false]], "add_noise_to_array() (in module fl4health.strategies.noisy_aggregate)": [[167, "fl4health.strategies.noisy_aggregate.add_noise_to_array", false]], "add_noise_to_ndarrays() (in module fl4health.strategies.noisy_aggregate)": [[167, "fl4health.strategies.noisy_aggregate.add_noise_to_ndarrays", false]], "add_to_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.add_to_snapshot_attr", false]], "aeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.AeProcessor", false]], "aggregate() (evaluationlosses static method)": [[180, "fl4health.utils.losses.EvaluationLosses.aggregate", false]], "aggregate() (fedavgdynamiclayer method)": [[158, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate", false]], "aggregate() (fedavgsparsecootensor method)": [[159, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate", false]], "aggregate() (fedpm method)": [[164, "fl4health.strategies.fedpm.FedPm.aggregate", false]], "aggregate() (losses static method)": [[180, "fl4health.utils.losses.Losses.aggregate", false]], "aggregate() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.aggregate", false]], "aggregate() (traininglosses static method)": [[180, "fl4health.utils.losses.TrainingLosses.aggregate", false]], "aggregate_bayesian() (fedpm method)": [[164, "fl4health.strategies.fedpm.FedPm.aggregate_bayesian", false]], "aggregate_evaluate() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_evaluate", false]], "aggregate_evaluate() (evaluateserver method)": [[146, "fl4health.servers.evaluate_server.EvaluateServer.aggregate_evaluate", false]], "aggregate_evaluate() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_evaluate", false]], "aggregate_evaluate() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_evaluate", false]], "aggregate_fit() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_fit", false]], "aggregate_fit() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.aggregate_fit", false]], "aggregate_fit() (fedavgdynamiclayer method)": [[158, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate_fit", false]], "aggregate_fit() (fedavgsparsecootensor method)": [[159, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate_fit", false]], "aggregate_fit() (fedavgwithadaptiveconstraint method)": [[160, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_fit", false]], "aggregate_fit() (feddggaadaptiveconstraint method)": [[162, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (fedpca method)": [[163, "fl4health.strategies.fedpca.FedPCA.aggregate_fit", false]], "aggregate_fit() (flash method)": [[165, "fl4health.strategies.flash.Flash.aggregate_fit", false]], "aggregate_fit() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_fit", false]], "aggregate_fit() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.aggregate_fit", false]], "aggregate_losses() (in module fl4health.strategies.aggregate_utils)": [[155, "fl4health.strategies.aggregate_utils.aggregate_losses", false]], "aggregate_losses_dict() (lossmeter static method)": [[180, "fl4health.utils.losses.LossMeter.aggregate_losses_dict", false]], "aggregate_results() (in module fl4health.strategies.aggregate_utils)": [[155, "fl4health.strategies.aggregate_utils.aggregate_results", false]], "align_pred_and_target_shapes() (in module fl4health.metrics.utils)": [[87, "fl4health.metrics.utils.align_pred_and_target_shapes", false]], "apflclient (class in fl4health.clients.apfl_client)": [[22, "fl4health.clients.apfl_client.ApflClient", false]], "apflmodule (class in fl4health.model_bases.apfl_base)": [[96, "fl4health.model_bases.apfl_base.ApflModule", false]], "apply_adaptive_drift_to_client() (in module fl4health.mixins.adaptive_drift_constrained)": [[89, "fl4health.mixins.adaptive_drift_constrained.apply_adaptive_drift_to_client", false]], "apply_layer_filter() (fixedlayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.apply_layer_filter", false]], "apply_layer_filter() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.apply_layer_filter", false]], "as_dict() (evaluationlosses method)": [[180, "fl4health.utils.losses.EvaluationLosses.as_dict", false]], "as_dict() (losses method)": [[180, "fl4health.utils.losses.Losses.as_dict", false]], "as_dict() (traininglosses method)": [[180, "fl4health.utils.losses.TrainingLosses.as_dict", false]], "autoencoderdatasetconverter (class in fl4health.utils.dataset_converter)": [[175, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter", false]], "autoencoderprocessing (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing", false]], "average (ensembleaggregationmode attribute)": [[98, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.AVERAGE", false]], "average (lossmetertype attribute)": [[180, "fl4health.utils.losses.LossMeterType.AVERAGE", false]], "backward() (bernoullisample static method)": [[177, "fl4health.utils.functions.BernoulliSample.backward", false]], "balancedaccuracy (class in fl4health.metrics)": [[78, "fl4health.metrics.BalancedAccuracy", false]], "balancedaccuracy (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.BalancedAccuracy", false]], "basedataset (class in fl4health.utils.dataset)": [[174, "fl4health.utils.dataset.BaseDataset", false]], "basefractionsamplingmanager (class in fl4health.client_managers.base_sampling_manager)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager", false]], "basereporter (class in fl4health.reporting.base_reporter)": [[135, "fl4health.reporting.base_reporter.BaseReporter", false]], "baseservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule", false]], "basicae (class in fl4health.model_bases.autoencoders_base)": [[97, "fl4health.model_bases.autoencoders_base.BasicAe", false]], "basicclient (class in fl4health.clients.basic_client)": [[23, "fl4health.clients.basic_client.BasicClient", false]], "basicfedavg (class in fl4health.strategies.basic_fedavg)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg", false]], "bernoullisample (class in fl4health.utils.functions)": [[177, "fl4health.utils.functions.BernoulliSample", false]], "bestlossopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer", false]], "bestlosstorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer", false]], "bestmetrictorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer", false]], "beta_with_extreme_kernel_base_values() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.beta_with_extreme_kernel_base_values", false]], "binary (tabulartype attribute)": [[69, "fl4health.feature_alignment.tabular_type.TabularType.BINARY", false]], "binaryclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[82, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric", false]], "binarydice (class in fl4health.metrics.efficient_metrics)": [[81, "fl4health.metrics.efficient_metrics.BinaryDice", false]], "binarysoftdicecoefficient (class in fl4health.metrics)": [[78, "fl4health.metrics.BinarySoftDiceCoefficient", false]], "binarysoftdicecoefficient (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.BinarySoftDiceCoefficient", false]], "bytessnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.BytesSnapshotter", false]], "calculate_class_sample_proportions() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.calculate_class_sample_proportions", false]], "calculate_parameters_norm() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.calculate_parameters_norm", false]], "calculate_update_with_momentum() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.calculate_update_with_momentum", false]], "center_data() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.center_data", false]], "check_config() (in module fl4health.utils.config)": [[172, "fl4health.utils.config.check_config", false]], "check_if_batch_is_empty_and_verify_input() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.check_if_batch_is_empty_and_verify_input", false]], "check_shape_match() (in module fl4health.utils.parameter_extraction)": [[184, "fl4health.utils.parameter_extraction.check_shape_match", false]], "check_target_prediction_keys_equal() (metricmanager method)": [[84, "fl4health.metrics.metric_managers.MetricManager.check_target_prediction_keys_equal", false]], "checkpoint_exists() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.checkpoint_exists", false]], "checkpointmode (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.CheckpointMode", false]], "classificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric", false]], "classificationoutcome (class in fl4health.metrics.efficient_metrics_base)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome", false]], "clear() (classificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.clear", false]], "clear() (emametric method)": [[80, "fl4health.metrics.compound_metrics.EmaMetric.clear", false]], "clear() (lossmeter method)": [[180, "fl4health.utils.losses.LossMeter.clear", false]], "clear() (metric method)": [[79, "fl4health.metrics.base_metrics.Metric.clear", false]], "clear() (metricmanager method)": [[84, "fl4health.metrics.metric_managers.MetricManager.clear", false]], "clear() (simplemetric method)": [[78, "fl4health.metrics.SimpleMetric.clear", false], [85, "fl4health.metrics.metrics.SimpleMetric.clear", false]], "clear() (torchmetric method)": [[78, "fl4health.metrics.TorchMetric.clear", false], [85, "fl4health.metrics.metrics.TorchMetric.clear", false]], "clear() (transformsmetric method)": [[80, "fl4health.metrics.compound_metrics.TransformsMetric.clear", false]], "clear_buffers() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.clear_buffers", false]], "clientcheckpointandstatemodule (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule", false]], "clientlevelaccountant (class in fl4health.privacy.fl_accountants)": [[132, "fl4health.privacy.fl_accountants.ClientLevelAccountant", false]], "clientleveldpfedavgm (class in fl4health.strategies.client_dp_fedavgm)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM", false]], "clientleveldpfedavgserver (class in fl4health.servers.client_level_dp_fed_avg_server)": [[145, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer", false]], "clientstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer", false]], "clip_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.clip_parameters", false]], "clippingbitservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule", false]], "clone_and_freeze_model() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.clone_and_freeze_model", false]], "collapse_one_hot_tensor() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.collapse_one_hot_tensor", false]], "compute() (classificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute", false]], "compute() (emametric method)": [[80, "fl4health.metrics.compound_metrics.EmaMetric.compute", false]], "compute() (lossmeter method)": [[180, "fl4health.utils.losses.LossMeter.compute", false]], "compute() (metric method)": [[79, "fl4health.metrics.base_metrics.Metric.compute", false]], "compute() (metricmanager method)": [[84, "fl4health.metrics.metric_managers.MetricManager.compute", false]], "compute() (simplemetric method)": [[78, "fl4health.metrics.SimpleMetric.compute", false], [85, "fl4health.metrics.metrics.SimpleMetric.compute", false]], "compute() (torchmetric method)": [[78, "fl4health.metrics.TorchMetric.compute", false], [85, "fl4health.metrics.metrics.TorchMetric.compute", false]], "compute() (transformsmetric method)": [[80, "fl4health.metrics.compound_metrics.TransformsMetric.compute", false]], "compute_all_h_u_all_samples() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_all_samples", false]], "compute_all_h_u_from_inner_products() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products", false]], "compute_all_h_u_from_inner_products_linear() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products_linear", false]], "compute_all_h_u_linear() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_linear", false]], "compute_conditional_inputs() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.compute_conditional_inputs", false]], "compute_contrastive_loss() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_contrastive_loss", false]], "compute_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_cosine_similarity_loss", false]], "compute_cumulative_explained_variance() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.compute_cumulative_explained_variance", false]], "compute_dice_on_count_tensors() (in module fl4health.metrics.metrics_utils)": [[86, "fl4health.metrics.metrics_utils.compute_dice_on_count_tensors", false]], "compute_euclidean_inner_products() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products", false]], "compute_euclidean_inner_products_linear() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products_linear", false]], "compute_evaluation_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.compute_evaluation_loss", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.compute_evaluation_loss", false]], "compute_evaluation_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_evaluation_loss", false]], "compute_evaluation_loss() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.compute_evaluation_loss", false]], "compute_explained_variance_ratios() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.compute_explained_variance_ratios", false]], "compute_from_counts() (binaryclassificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.compute_from_counts", false]], "compute_from_counts() (binarydice method)": [[81, "fl4health.metrics.efficient_metrics.BinaryDice.compute_from_counts", false]], "compute_from_counts() (classificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute_from_counts", false]], "compute_from_counts() (multiclassdice method)": [[81, "fl4health.metrics.efficient_metrics.MultiClassDice.compute_from_counts", false]], "compute_from_counts() (multiclassificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.compute_from_counts", false]], "compute_h_u_from_inner_products() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products", false]], "compute_h_u_from_inner_products_linear() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products_linear", false]], "compute_hat_d_per_kernel() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_d_per_kernel", false]], "compute_hat_q_k() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k", false]], "compute_hat_q_k_linear() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k_linear", false]], "compute_kernel() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.compute_kernel", false]], "compute_loss_and_additional_losses() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (flexibleclientprotocolpresetup method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.compute_loss_and_additional_losses", false]], "compute_magnitude_level_loss() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.compute_magnitude_level_loss", false]], "compute_mkmmd() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_mkmmd", false]], "compute_negative_similarities() (mooncontrastiveloss method)": [[71, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.compute_negative_similarities", false]], "compute_parameter_delta() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.compute_parameter_delta", false]], "compute_parameters_delta() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.compute_parameters_delta", false]], "compute_penalty_loss() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstrainedprotocol method)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_penalty_loss", false]], "compute_perfcl_loss() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_perfcl_loss", false]], "compute_projection_variance() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.compute_projection_variance", false]], "compute_reconstruction_error() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.compute_reconstruction_error", false]], "compute_training_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_training_loss", false]], "compute_training_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_training_loss", false]], "compute_training_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_training_loss", false]], "compute_training_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_training_loss", false]], "compute_training_loss() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_training_loss", false]], "compute_training_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_training_loss", false]], "compute_training_loss() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.compute_training_loss", false]], "compute_training_loss() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_training_loss", false]], "compute_training_loss() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.compute_training_loss", false]], "compute_training_loss() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.compute_training_loss", false]], "compute_training_loss() (mrmtlclient method)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient.compute_training_loss", false]], "compute_training_loss() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_training_loss", false]], "compute_training_loss() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.compute_training_loss", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.compute_training_loss", false]], "compute_updated_control_variates() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.compute_updated_control_variates", false]], "compute_updated_control_variates() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.compute_updated_control_variates", false]], "compute_updated_parameters() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.compute_updated_parameters", false]], "compute_updated_weights() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.compute_updated_weights", false]], "compute_vertices() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_vertices", false]], "compute_weight_update_and_clip() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.compute_weight_update_and_clip", false]], "concatenate (parallelfeaturejoinmode attribute)": [[110, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.CONCATENATE", false]], "conditionalvae (class in fl4health.model_bases.autoencoders_base)": [[97, "fl4health.model_bases.autoencoders_base.ConditionalVae", false]], "configure_evaluate() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_evaluate", false]], "configure_evaluate() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_evaluate", false]], "configure_evaluate() (evaluateserver method)": [[146, "fl4health.servers.evaluate_server.EvaluateServer.configure_evaluate", false]], "configure_evaluate() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.configure_evaluate", false]], "configure_evaluate() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_evaluate", false]], "configure_fit() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_fit", false]], "configure_fit() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_fit", false]], "configure_fit() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.configure_fit", false]], "configure_fit() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_fit", false]], "configure_fit_all() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.configure_fit_all", false]], "configure_poll() (basicfedavg method)": [[156, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_poll", false]], "configure_poll() (strategywithpolling method)": [[169, "fl4health.strategies.strategy_with_poll.StrategyWithPolling.configure_poll", false]], "constrainedfendaclient (class in fl4health.clients.constrained_fenda_client)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient", false]], "constrainedfendalosscontainer (class in fl4health.losses.fenda_loss_config)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer", false]], "construct_covariance_matrix() (syntheticfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset.construct_covariance_matrix", false]], "construct_quadruples() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.construct_quadruples", false]], "construct_rxrx1_tensor_dataset() (in module fl4health.datasets.rxrx1.load_data)": [[58, "fl4health.datasets.rxrx1.load_data.construct_rxrx1_tensor_dataset", false]], "construct_skin_cancer_tensor_dataset() (in module fl4health.datasets.skin_cancer.load_data)": [[61, "fl4health.datasets.skin_cancer.load_data.construct_skin_cancer_tensor_dataset", false]], "convert_dataset() (autoencoderdatasetconverter method)": [[175, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.convert_dataset", false]], "convert_dataset() (datasetconverter method)": [[175, "fl4health.utils.dataset_converter.DatasetConverter.convert_dataset", false]], "convert_deep_supervision_dict_to_list() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.convert_deep_supervision_dict_to_list", false]], "convert_deep_supervision_list_to_dict() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.convert_deep_supervision_list_to_dict", false]], "convert_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[187, "fl4health.utils.privacy_utilities.convert_model_to_opacus_model", false]], "convert_to_masked_model() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[106, "fl4health.model_bases.masked_layers.masked_layers_utils.convert_to_masked_model", false]], "cosinesimilarityloss (class in fl4health.losses.cosine_similarity_loss)": [[72, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss", false]], "cosinesimilaritylosscontainer (class in fl4health.losses.fenda_loss_config)": [[74, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer", false]], "count_tp_fp_tn_fn() (binaryclassificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.count_tp_fp_tn_fn", false]], "count_tp_fp_tn_fn() (classificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.count_tp_fp_tn_fn", false]], "cov (class in fl4health.model_bases.gpfl_base)": [[103, "fl4health.model_bases.gpfl_base.CoV", false]], "create_plans() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.create_plans", false]], "create_plans() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.create_plans", false]], "create_splits() (in module fl4health.datasets.rxrx1.load_data)": [[58, "fl4health.datasets.rxrx1.load_data.create_splits", false]], "criterion (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.criterion", false]], "criterion (flexibleclientprotocol attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.criterion", false]], "criterion (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.criterion", false]], "critical (loglevel attribute)": [[191, "fl4health.utils.typing.LogLevel.CRITICAL", false]], "custom (fairnessmetrictype attribute)": [[161, "fl4health.strategies.feddg_ga.FairnessMetricType.CUSTOM", false]], "cvaefixedconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor", false]], "cvaevariableconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor", false]], "datasetconverter (class in fl4health.utils.dataset_converter)": [[175, "fl4health.utils.dataset_converter.DatasetConverter", false]], "debug (loglevel attribute)": [[191, "fl4health.utils.typing.LogLevel.DEBUG", false]], "decode() (basicae method)": [[97, "fl4health.model_bases.autoencoders_base.BasicAe.decode", false]], "decode() (conditionalvae method)": [[97, "fl4health.model_bases.autoencoders_base.ConditionalVae.decode", false]], "decode() (variationalae method)": [[97, "fl4health.model_bases.autoencoders_base.VariationalAe.decode", false]], "decode_and_pseudo_sort_results() (in module fl4health.utils.functions)": [[177, "fl4health.utils.functions.decode_and_pseudo_sort_results", false]], "deepmmdloss (class in fl4health.losses.deep_mmd_loss)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss", false]], "define_metrics() (wandbreporter method)": [[134, "fl4health.reporting.WandBReporter.define_metrics", false], [138, "fl4health.reporting.wandb_reporter.WandBReporter.define_metrics", false]], "delete_from_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.delete_from_snapshot_attr", false]], "derm7pt_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_image_path_func", false]], "derm7pt_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_label_map_func", false]], "device (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.device", false]], "device (flexibleclientprotocolpresetup attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.device", false]], "device (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.device", false]], "dictionarydataset (class in fl4health.utils.dataset)": [[174, "fl4health.utils.dataset.DictionaryDataset", false]], "dirichletlabelbasedallocation (class in fl4health.utils.partitioners)": [[185, "fl4health.utils.partitioners.DirichletLabelBasedAllocation", false]], "dirichletlabelbasedsampler (class in fl4health.utils.sampler)": [[189, "fl4health.utils.sampler.DirichletLabelBasedSampler", false]], "disable_accumulating_features() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.disable_accumulating_features", false]], "ditto (personalizedmode attribute)": [[91, "fl4health.mixins.personalized.PersonalizedMode.DITTO", false]], "dittoclient (class in fl4health.clients.ditto_client)": [[28, "fl4health.clients.ditto_client.DittoClient", false]], "dittodeepmmdclient (class in fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient", false]], "dittomkmmdclient (class in fl4health.clients.mkmmd_clients.ditto_mkmmd_client)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized.ditto)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized)": [[91, "fl4health.mixins.personalized.DittoPersonalizedProtocol", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized.ditto)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol", false]], "dittoserver (class in fl4health.servers.adaptive_constraint_servers.ditto_server)": [[141, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer", false]], "dpscaffoldclient (class in fl4health.clients.scaffold_client)": [[54, "fl4health.clients.scaffold_client.DPScaffoldClient", false]], "dpscaffoldserver (class in fl4health.servers.scaffold_server)": [[152, "fl4health.servers.scaffold_server.DPScaffoldServer", false]], "dpscaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule", false]], "drift_penalty_tensors (adaptivedriftconstrainedprotocol attribute)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_tensors", false]], "drift_penalty_tensors (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_tensors", false]], "drift_penalty_tensors (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.drift_penalty_tensors", false]], "drift_penalty_weight (adaptivedriftconstrainedprotocol attribute)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_weight", false]], "drift_penalty_weight (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_weight", false]], "drift_penalty_weight (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.drift_penalty_weight", false]], "dump() (filereporter method)": [[136, "fl4health.reporting.json_reporter.FileReporter.dump", false]], "dump() (jsonreporter method)": [[134, "fl4health.reporting.JsonReporter.dump", false], [136, "fl4health.reporting.json_reporter.JsonReporter.dump", false]], "dynamiclayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[118, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger", false]], "early_stop_validation (loggingmode attribute)": [[179, "fl4health.utils.logging.LoggingMode.EARLY_STOP_VALIDATION", false]], "earlystopper (class in fl4health.utils.early_stopper)": [[176, "fl4health.utils.early_stopper.EarlyStopper", false]], "emametric (class in fl4health.metrics.compound_metrics)": [[80, "fl4health.metrics.compound_metrics.EmaMetric", false]], "empty_cache() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.empty_cache", false]], "empty_cache() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.empty_cache", false]], "enable_accumulating_features() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.enable_accumulating_features", false]], "encode() (basicae method)": [[97, "fl4health.model_bases.autoencoders_base.BasicAe.encode", false]], "encode() (conditionalvae method)": [[97, "fl4health.model_bases.autoencoders_base.ConditionalVae.encode", false]], "encode() (variationalae method)": [[97, "fl4health.model_bases.autoencoders_base.VariationalAe.encode", false]], "ensemble_average() (ensemblemodel method)": [[98, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_average", false]], "ensemble_vote() (ensemblemodel method)": [[98, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_vote", false]], "ensembleaggregationmode (class in fl4health.model_bases.ensemble_base)": [[98, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode", false]], "ensembleclient (class in fl4health.clients.ensemble_client)": [[29, "fl4health.clients.ensemble_client.EnsembleClient", false]], "ensemblemodel (class in fl4health.model_bases.ensemble_base)": [[98, "fl4health.model_bases.ensemble_base.EnsembleModel", false]], "ensure_protocol_compliance() (in module fl4health.mixins.personalized.utils)": [[94, "fl4health.mixins.personalized.utils.ensure_protocol_compliance", false]], "enumsnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.EnumSnapshotter", false]], "epoch (wandbsteptype attribute)": [[134, "fl4health.reporting.WandBStepType.EPOCH", false], [138, "fl4health.reporting.wandb_reporter.WandBStepType.EPOCH", false]], "error (loglevel attribute)": [[191, "fl4health.utils.typing.LogLevel.ERROR", false]], "evaluate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.evaluate", false]], "evaluate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.evaluate", false]], "evaluate() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.evaluate", false]], "evaluate() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.evaluate", false]], "evaluate() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.evaluate", false]], "evaluate() (numpyclientminimalprotocol method)": [[90, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.evaluate", false]], "evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.evaluate_metrics_aggregation_fn", false]], "evaluate_round() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.evaluate_round", false]], "evaluateclient (class in fl4health.clients.evaluate_client)": [[30, "fl4health.clients.evaluate_client.EvaluateClient", false]], "evaluateserver (class in fl4health.servers.evaluate_server)": [[146, "fl4health.servers.evaluate_server.EvaluateServer", false]], "evaluationlosses (class in fl4health.utils.losses)": [[180, "fl4health.utils.losses.EvaluationLosses", false]], "extract_coo_info_from_dense() (sparsecooparameterpacker static method)": [[121, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.extract_coo_info_from_dense", false]], "f1 (class in fl4health.metrics)": [[78, "fl4health.metrics.F1", false]], "f1 (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.F1", false]], "fairnessmetric (class in fl4health.strategies.feddg_ga)": [[161, "fl4health.strategies.feddg_ga.FairnessMetric", false]], "fairnessmetrictype (class in fl4health.strategies.feddg_ga)": [[161, "fl4health.strategies.feddg_ga.FairnessMetricType", false]], "false_negative (classificationoutcome attribute)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.FALSE_NEGATIVE", false]], "false_positive (classificationoutcome attribute)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.FALSE_POSITIVE", false]], "featureextractorbuffer (class in fl4health.model_bases.feature_extractor_buffer)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer", false]], "features_forward() (sequentiallysplitmodel method)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.features_forward", false]], "fedavgdynamiclayer (class in fl4health.strategies.fedavg_dynamic_layer)": [[158, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer", false]], "fedavgsparsecootensor (class in fl4health.strategies.fedavg_sparse_coo_tensor)": [[159, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor", false]], "fedavgwithadaptiveconstraint (class in fl4health.strategies.fedavg_with_adaptive_constraint)": [[160, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint", false]], "fedbnclient (class in fl4health.clients.fedbn_client)": [[33, "fl4health.clients.fedbn_client.FedBnClient", false]], "feddgga (class in fl4health.strategies.feddg_ga)": [[161, "fl4health.strategies.feddg_ga.FedDgGa", false]], "feddggaadaptiveconstraint (class in fl4health.strategies.feddg_ga_with_adaptive_constraint)": [[162, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint", false]], "federated_evaluate() (evaluateserver method)": [[146, "fl4health.servers.evaluate_server.EvaluateServer.federated_evaluate", false]], "fedpca (class in fl4health.strategies.fedpca)": [[163, "fl4health.strategies.fedpca.FedPCA", false]], "fedpcaclient (class in fl4health.clients.fed_pca_client)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient", false]], "fedperclient (class in fl4health.clients.fedper_client)": [[34, "fl4health.clients.fedper_client.FedPerClient", false]], "fedpm (class in fl4health.strategies.fedpm)": [[164, "fl4health.strategies.fedpm.FedPm", false]], "fedpmclient (class in fl4health.clients.fedpm_client)": [[35, "fl4health.clients.fedpm_client.FedPmClient", false]], "fedpmexchanger (class in fl4health.parameter_exchange.fedpm_exchanger)": [[116, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger", false]], "fedpmserver (class in fl4health.servers.fedpm_server)": [[147, "fl4health.servers.fedpm_server.FedPmServer", false]], "fedproxclient (class in fl4health.clients.fed_prox_client)": [[32, "fl4health.clients.fed_prox_client.FedProxClient", false]], "fedproxserver (class in fl4health.servers.adaptive_constraint_servers.fedprox_server)": [[142, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer", false]], "fedrepclient (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepClient", false]], "fedrepmodel (class in fl4health.model_bases.fedrep_base)": [[100, "fl4health.model_bases.fedrep_base.FedRepModel", false]], "fedreptrainmode (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode", false]], "fedsimclrmodel (class in fl4health.model_bases.fedsimclr_base)": [[101, "fl4health.model_bases.fedsimclr_base.FedSimClrModel", false]], "fendaclient (class in fl4health.clients.fenda_client)": [[37, "fl4health.clients.fenda_client.FendaClient", false]], "fendadittoclient (class in fl4health.clients.fenda_ditto_client)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient", false]], "fendamodel (class in fl4health.model_bases.fenda_base)": [[102, "fl4health.model_bases.fenda_base.FendaModel", false]], "fendamodelwithfeaturestate (class in fl4health.model_bases.fenda_base)": [[102, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState", false]], "filereporter (class in fl4health.reporting.json_reporter)": [[136, "fl4health.reporting.json_reporter.FileReporter", false]], "filter_and_save_data() (in module fl4health.datasets.rxrx1.preprocess)": [[59, "fl4health.datasets.rxrx1.preprocess.filter_and_save_data", false]], "find_last_common_prefix() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.find_last_common_prefix", false]], "fit() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.fit", false]], "fit() (clientleveldpfedavgserver method)": [[145, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.fit", false]], "fit() (dpscaffoldserver method)": [[152, "fl4health.servers.scaffold_server.DPScaffoldServer.fit", false]], "fit() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.fit", false]], "fit() (evaluateserver method)": [[146, "fl4health.servers.evaluate_server.EvaluateServer.fit", false]], "fit() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.fit", false]], "fit() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.fit", false]], "fit() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.fit", false]], "fit() (instanceleveldpserver method)": [[148, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.fit", false]], "fit() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.fit", false]], "fit() (modelmergeserver method)": [[149, "fl4health.servers.model_merge_server.ModelMergeServer.fit", false]], "fit() (numpyclientminimalprotocol method)": [[90, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.fit", false]], "fit() (scaffoldserver method)": [[152, "fl4health.servers.scaffold_server.ScaffoldServer.fit", false]], "fit() (textcolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.fit", false]], "fit() (textmulticolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.fit", false]], "fit_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.fit_metrics_aggregation_fn", false]], "fit_round() (fedpmserver method)": [[147, "fl4health.servers.fedpm_server.FedPmServer.fit_round", false]], "fit_round() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.fit_round", false]], "fit_with_per_round_checkpointing() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.fit_with_per_round_checkpointing", false]], "fixedlayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[118, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger", false]], "fixedsamplingbyfractionclientmanager (class in fl4health.client_managers.fixed_without_replacement_manager)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager", false]], "fixedsamplingclientmanager (class in fl4health.client_managers.fixed_sampling_client_manager)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager", false]], "fixedsamplingwithoutreplacement (class in fl4health.privacy.moments_accountant)": [[133, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement", false]], "fl4health": [[8, "module-fl4health", false]], "fl4health.checkpointing": [[9, "module-fl4health.checkpointing", false]], "fl4health.checkpointing.checkpointer": [[10, "module-fl4health.checkpointing.checkpointer", false]], "fl4health.checkpointing.client_module": [[11, "module-fl4health.checkpointing.client_module", false]], "fl4health.checkpointing.opacus_checkpointer": [[12, "module-fl4health.checkpointing.opacus_checkpointer", false]], "fl4health.checkpointing.server_module": [[13, "module-fl4health.checkpointing.server_module", false]], "fl4health.checkpointing.state_checkpointer": [[14, "module-fl4health.checkpointing.state_checkpointer", false]], "fl4health.client_managers": [[15, "module-fl4health.client_managers", false]], "fl4health.client_managers.base_sampling_manager": [[16, "module-fl4health.client_managers.base_sampling_manager", false]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, "module-fl4health.client_managers.fixed_sampling_client_manager", false]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, "module-fl4health.client_managers.fixed_without_replacement_manager", false]], "fl4health.client_managers.poisson_sampling_manager": [[19, "module-fl4health.client_managers.poisson_sampling_manager", false]], "fl4health.clients": [[20, "module-fl4health.clients", false]], "fl4health.clients.adaptive_drift_constraint_client": [[21, "module-fl4health.clients.adaptive_drift_constraint_client", false]], "fl4health.clients.apfl_client": [[22, "module-fl4health.clients.apfl_client", false]], "fl4health.clients.basic_client": [[23, "module-fl4health.clients.basic_client", false]], "fl4health.clients.clipping_client": [[24, "module-fl4health.clients.clipping_client", false]], "fl4health.clients.constrained_fenda_client": [[25, "module-fl4health.clients.constrained_fenda_client", false]], "fl4health.clients.deep_mmd_clients": [[26, "module-fl4health.clients.deep_mmd_clients", false]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false]], "fl4health.clients.ditto_client": [[28, "module-fl4health.clients.ditto_client", false]], "fl4health.clients.ensemble_client": [[29, "module-fl4health.clients.ensemble_client", false]], "fl4health.clients.evaluate_client": [[30, "module-fl4health.clients.evaluate_client", false]], "fl4health.clients.fed_pca_client": [[31, "module-fl4health.clients.fed_pca_client", false]], "fl4health.clients.fed_prox_client": [[32, "module-fl4health.clients.fed_prox_client", false]], "fl4health.clients.fedbn_client": [[33, "module-fl4health.clients.fedbn_client", false]], "fl4health.clients.fedper_client": [[34, "module-fl4health.clients.fedper_client", false]], "fl4health.clients.fedpm_client": [[35, "module-fl4health.clients.fedpm_client", false]], "fl4health.clients.fedrep_client": [[36, "module-fl4health.clients.fedrep_client", false]], "fl4health.clients.fenda_client": [[37, "module-fl4health.clients.fenda_client", false]], "fl4health.clients.fenda_ditto_client": [[38, "module-fl4health.clients.fenda_ditto_client", false]], "fl4health.clients.flash_client": [[39, "module-fl4health.clients.flash_client", false]], "fl4health.clients.flexible": [[40, "module-fl4health.clients.flexible", false]], "fl4health.clients.flexible.base": [[41, "module-fl4health.clients.flexible.base", false]], "fl4health.clients.flexible.nnunet": [[42, "module-fl4health.clients.flexible.nnunet", false]], "fl4health.clients.gpfl_client": [[43, "module-fl4health.clients.gpfl_client", false]], "fl4health.clients.instance_level_dp_client": [[44, "module-fl4health.clients.instance_level_dp_client", false]], "fl4health.clients.mkmmd_clients": [[45, "module-fl4health.clients.mkmmd_clients", false]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[46, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[47, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false]], "fl4health.clients.model_merge_client": [[48, "module-fl4health.clients.model_merge_client", false]], "fl4health.clients.moon_client": [[49, "module-fl4health.clients.moon_client", false]], "fl4health.clients.mr_mtl_client": [[50, "module-fl4health.clients.mr_mtl_client", false]], "fl4health.clients.nnunet_client": [[51, "module-fl4health.clients.nnunet_client", false]], "fl4health.clients.partial_weight_exchange_client": [[52, "module-fl4health.clients.partial_weight_exchange_client", false]], "fl4health.clients.perfcl_client": [[53, "module-fl4health.clients.perfcl_client", false]], "fl4health.clients.scaffold_client": [[54, "module-fl4health.clients.scaffold_client", false]], "fl4health.datasets": [[56, "module-fl4health.datasets", false]], "fl4health.datasets.rxrx1": [[57, "module-fl4health.datasets.rxrx1", false]], "fl4health.datasets.rxrx1.load_data": [[58, "module-fl4health.datasets.rxrx1.load_data", false]], "fl4health.datasets.rxrx1.preprocess": [[59, "module-fl4health.datasets.rxrx1.preprocess", false]], "fl4health.datasets.skin_cancer": [[60, "module-fl4health.datasets.skin_cancer", false]], "fl4health.datasets.skin_cancer.load_data": [[61, "module-fl4health.datasets.skin_cancer.load_data", false]], "fl4health.datasets.skin_cancer.preprocess_skin": [[62, "module-fl4health.datasets.skin_cancer.preprocess_skin", false]], "fl4health.feature_alignment": [[63, "module-fl4health.feature_alignment", false]], "fl4health.feature_alignment.constants": [[64, "module-fl4health.feature_alignment.constants", false]], "fl4health.feature_alignment.string_columns_transformer": [[65, "module-fl4health.feature_alignment.string_columns_transformer", false]], "fl4health.feature_alignment.tabular_feature": [[68, "module-fl4health.feature_alignment.tabular_feature", false]], "fl4health.feature_alignment.tabular_type": [[69, "module-fl4health.feature_alignment.tabular_type", false]], "fl4health.losses": [[70, "module-fl4health.losses", false]], "fl4health.losses.contrastive_loss": [[71, "module-fl4health.losses.contrastive_loss", false]], "fl4health.losses.cosine_similarity_loss": [[72, "module-fl4health.losses.cosine_similarity_loss", false]], "fl4health.losses.deep_mmd_loss": [[73, "module-fl4health.losses.deep_mmd_loss", false]], "fl4health.losses.fenda_loss_config": [[74, "module-fl4health.losses.fenda_loss_config", false]], "fl4health.losses.mkmmd_loss": [[75, "module-fl4health.losses.mkmmd_loss", false]], "fl4health.losses.perfcl_loss": [[76, "module-fl4health.losses.perfcl_loss", false]], "fl4health.losses.weight_drift_loss": [[77, "module-fl4health.losses.weight_drift_loss", false]], "fl4health.metrics": [[78, "module-fl4health.metrics", false]], "fl4health.metrics.base_metrics": [[79, "module-fl4health.metrics.base_metrics", false]], "fl4health.metrics.compound_metrics": [[80, "module-fl4health.metrics.compound_metrics", false]], "fl4health.metrics.efficient_metrics": [[81, "module-fl4health.metrics.efficient_metrics", false]], "fl4health.metrics.efficient_metrics_base": [[82, "module-fl4health.metrics.efficient_metrics_base", false]], "fl4health.metrics.metric_aggregation": [[83, "module-fl4health.metrics.metric_aggregation", false]], "fl4health.metrics.metric_managers": [[84, "module-fl4health.metrics.metric_managers", false]], "fl4health.metrics.metrics": [[85, "module-fl4health.metrics.metrics", false]], "fl4health.metrics.metrics_utils": [[86, "module-fl4health.metrics.metrics_utils", false]], "fl4health.metrics.utils": [[87, "module-fl4health.metrics.utils", false]], "fl4health.mixins": [[88, "module-fl4health.mixins", false]], "fl4health.mixins.adaptive_drift_constrained": [[89, "module-fl4health.mixins.adaptive_drift_constrained", false]], "fl4health.mixins.core_protocols": [[90, "module-fl4health.mixins.core_protocols", false]], "fl4health.mixins.personalized": [[91, "module-fl4health.mixins.personalized", false]], "fl4health.mixins.personalized.ditto": [[92, "module-fl4health.mixins.personalized.ditto", false]], "fl4health.mixins.personalized.mr_mtl": [[93, "module-fl4health.mixins.personalized.mr_mtl", false]], "fl4health.mixins.personalized.utils": [[94, "module-fl4health.mixins.personalized.utils", false]], "fl4health.model_bases": [[95, "module-fl4health.model_bases", false]], "fl4health.model_bases.apfl_base": [[96, "module-fl4health.model_bases.apfl_base", false]], "fl4health.model_bases.autoencoders_base": [[97, "module-fl4health.model_bases.autoencoders_base", false]], "fl4health.model_bases.ensemble_base": [[98, "module-fl4health.model_bases.ensemble_base", false]], "fl4health.model_bases.feature_extractor_buffer": [[99, "module-fl4health.model_bases.feature_extractor_buffer", false]], "fl4health.model_bases.fedrep_base": [[100, "module-fl4health.model_bases.fedrep_base", false]], "fl4health.model_bases.fedsimclr_base": [[101, "module-fl4health.model_bases.fedsimclr_base", false]], "fl4health.model_bases.fenda_base": [[102, "module-fl4health.model_bases.fenda_base", false]], "fl4health.model_bases.gpfl_base": [[103, "module-fl4health.model_bases.gpfl_base", false]], "fl4health.model_bases.masked_layers": [[104, "module-fl4health.model_bases.masked_layers", false]], "fl4health.model_bases.masked_layers.masked_conv": [[105, "module-fl4health.model_bases.masked_layers.masked_conv", false]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[106, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false]], "fl4health.model_bases.masked_layers.masked_linear": [[107, "module-fl4health.model_bases.masked_layers.masked_linear", false]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[108, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false]], "fl4health.model_bases.moon_base": [[109, "module-fl4health.model_bases.moon_base", false]], "fl4health.model_bases.parallel_split_models": [[110, "module-fl4health.model_bases.parallel_split_models", false]], "fl4health.model_bases.partial_layer_exchange_model": [[111, "module-fl4health.model_bases.partial_layer_exchange_model", false]], "fl4health.model_bases.pca": [[112, "module-fl4health.model_bases.pca", false]], "fl4health.model_bases.perfcl_base": [[113, "module-fl4health.model_bases.perfcl_base", false]], "fl4health.model_bases.sequential_split_models": [[114, "module-fl4health.model_bases.sequential_split_models", false]], "fl4health.parameter_exchange": [[115, "module-fl4health.parameter_exchange", false]], "fl4health.parameter_exchange.fedpm_exchanger": [[116, "module-fl4health.parameter_exchange.fedpm_exchanger", false]], "fl4health.parameter_exchange.full_exchanger": [[117, "module-fl4health.parameter_exchange.full_exchanger", false]], "fl4health.parameter_exchange.layer_exchanger": [[118, "module-fl4health.parameter_exchange.layer_exchanger", false]], "fl4health.parameter_exchange.packing_exchanger": [[119, "module-fl4health.parameter_exchange.packing_exchanger", false]], "fl4health.parameter_exchange.parameter_exchanger_base": [[120, "module-fl4health.parameter_exchange.parameter_exchanger_base", false]], "fl4health.parameter_exchange.parameter_packer": [[121, "module-fl4health.parameter_exchange.parameter_packer", false]], "fl4health.parameter_exchange.parameter_selection_criteria": [[122, "module-fl4health.parameter_exchange.parameter_selection_criteria", false]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[123, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[124, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false]], "fl4health.preprocessing": [[125, "module-fl4health.preprocessing", false]], "fl4health.preprocessing.autoencoders": [[126, "module-fl4health.preprocessing.autoencoders", false]], "fl4health.preprocessing.autoencoders.dim_reduction": [[127, "module-fl4health.preprocessing.autoencoders.dim_reduction", false]], "fl4health.preprocessing.autoencoders.loss": [[128, "module-fl4health.preprocessing.autoencoders.loss", false]], "fl4health.preprocessing.pca_preprocessor": [[129, "module-fl4health.preprocessing.pca_preprocessor", false]], "fl4health.preprocessing.warmed_up_module": [[130, "module-fl4health.preprocessing.warmed_up_module", false]], "fl4health.privacy": [[131, "module-fl4health.privacy", false]], "fl4health.privacy.fl_accountants": [[132, "module-fl4health.privacy.fl_accountants", false]], "fl4health.privacy.moments_accountant": [[133, "module-fl4health.privacy.moments_accountant", false]], "fl4health.reporting": [[134, "module-fl4health.reporting", false]], "fl4health.reporting.base_reporter": [[135, "module-fl4health.reporting.base_reporter", false]], "fl4health.reporting.json_reporter": [[136, "module-fl4health.reporting.json_reporter", false]], "fl4health.reporting.reports_manager": [[137, "module-fl4health.reporting.reports_manager", false]], "fl4health.reporting.wandb_reporter": [[138, "module-fl4health.reporting.wandb_reporter", false]], "fl4health.servers": [[139, "module-fl4health.servers", false]], "fl4health.servers.adaptive_constraint_servers": [[140, "module-fl4health.servers.adaptive_constraint_servers", false]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[141, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[142, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[143, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false]], "fl4health.servers.base_server": [[144, "module-fl4health.servers.base_server", false]], "fl4health.servers.client_level_dp_fed_avg_server": [[145, "module-fl4health.servers.client_level_dp_fed_avg_server", false]], "fl4health.servers.evaluate_server": [[146, "module-fl4health.servers.evaluate_server", false]], "fl4health.servers.fedpm_server": [[147, "module-fl4health.servers.fedpm_server", false]], "fl4health.servers.instance_level_dp_server": [[148, "module-fl4health.servers.instance_level_dp_server", false]], "fl4health.servers.model_merge_server": [[149, "module-fl4health.servers.model_merge_server", false]], "fl4health.servers.nnunet_server": [[150, "module-fl4health.servers.nnunet_server", false]], "fl4health.servers.polling": [[151, "module-fl4health.servers.polling", false]], "fl4health.servers.scaffold_server": [[152, "module-fl4health.servers.scaffold_server", false]], "fl4health.strategies": [[154, "module-fl4health.strategies", false]], "fl4health.strategies.aggregate_utils": [[155, "module-fl4health.strategies.aggregate_utils", false]], "fl4health.strategies.basic_fedavg": [[156, "module-fl4health.strategies.basic_fedavg", false]], "fl4health.strategies.client_dp_fedavgm": [[157, "module-fl4health.strategies.client_dp_fedavgm", false]], "fl4health.strategies.fedavg_dynamic_layer": [[158, "module-fl4health.strategies.fedavg_dynamic_layer", false]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[159, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[160, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false]], "fl4health.strategies.feddg_ga": [[161, "module-fl4health.strategies.feddg_ga", false]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[162, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false]], "fl4health.strategies.fedpca": [[163, "module-fl4health.strategies.fedpca", false]], "fl4health.strategies.fedpm": [[164, "module-fl4health.strategies.fedpm", false]], "fl4health.strategies.flash": [[165, "module-fl4health.strategies.flash", false]], "fl4health.strategies.model_merge_strategy": [[166, "module-fl4health.strategies.model_merge_strategy", false]], "fl4health.strategies.noisy_aggregate": [[167, "module-fl4health.strategies.noisy_aggregate", false]], "fl4health.strategies.scaffold": [[168, "module-fl4health.strategies.scaffold", false]], "fl4health.strategies.strategy_with_poll": [[169, "module-fl4health.strategies.strategy_with_poll", false]], "fl4health.utils": [[170, "module-fl4health.utils", false]], "fl4health.utils.client": [[171, "module-fl4health.utils.client", false]], "fl4health.utils.config": [[172, "module-fl4health.utils.config", false]], "fl4health.utils.data_generation": [[173, "module-fl4health.utils.data_generation", false]], "fl4health.utils.dataset": [[174, "module-fl4health.utils.dataset", false]], "fl4health.utils.dataset_converter": [[175, "module-fl4health.utils.dataset_converter", false]], "fl4health.utils.early_stopper": [[176, "module-fl4health.utils.early_stopper", false]], "fl4health.utils.functions": [[177, "module-fl4health.utils.functions", false]], "fl4health.utils.load_data": [[178, "module-fl4health.utils.load_data", false]], "fl4health.utils.logging": [[179, "module-fl4health.utils.logging", false]], "fl4health.utils.losses": [[180, "module-fl4health.utils.losses", false]], "fl4health.utils.metrics": [[181, "module-fl4health.utils.metrics", false]], "fl4health.utils.msd_dataset_sources": [[182, "module-fl4health.utils.msd_dataset_sources", false]], "fl4health.utils.nnunet_utils": [[183, "module-fl4health.utils.nnunet_utils", false]], "fl4health.utils.parameter_extraction": [[184, "module-fl4health.utils.parameter_extraction", false]], "fl4health.utils.partitioners": [[185, "module-fl4health.utils.partitioners", false]], "fl4health.utils.peft_parameter_extraction": [[186, "module-fl4health.utils.peft_parameter_extraction", false]], "fl4health.utils.privacy_utilities": [[187, "module-fl4health.utils.privacy_utilities", false]], "fl4health.utils.random": [[188, "module-fl4health.utils.random", false]], "fl4health.utils.sampler": [[189, "module-fl4health.utils.sampler", false]], "fl4health.utils.snapshotter": [[190, "module-fl4health.utils.snapshotter", false]], "fl4health.utils.typing": [[191, "module-fl4health.utils.typing", false]], "flash (class in fl4health.strategies.flash)": [[165, "fl4health.strategies.flash.Flash", false]], "flashclient (class in fl4health.clients.flash_client)": [[39, "fl4health.clients.flash_client.FlashClient", false]], "flatten() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten", false]], "flclientlevelaccountantfixedsamplingnoreplacement (class in fl4health.privacy.fl_accountants)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement", false]], "flclientlevelaccountantpoissonsampling (class in fl4health.privacy.fl_accountants)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling", false]], "flexibleclient (class in fl4health.clients.flexible.base)": [[41, "fl4health.clients.flexible.base.FlexibleClient", false]], "flexibleclientprotocol (class in fl4health.mixins.core_protocols)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol", false]], "flexibleclientprotocolpresetup (class in fl4health.mixins.core_protocols)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup", false]], "flexiblennunetclient (class in fl4health.clients.flexible.nnunet)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient", false]], "flinstancelevelaccountant (class in fl4health.privacy.fl_accountants)": [[132, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant", false]], "flserver (class in fl4health.servers.base_server)": [[144, "fl4health.servers.base_server.FlServer", false]], "flush() (streamtologger method)": [[183, "fl4health.utils.nnunet_utils.StreamToLogger.flush", false]], "fold_loss_dict_into_metrics() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.fold_loss_dict_into_metrics", false]], "form_and_solve_qp() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_and_solve_qp", false]], "form_h_u_delta_w_i() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_h_u_delta_w_i", false]], "form_kernel_samples_minus_expectation() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_kernel_samples_minus_expectation", false]], "forward() (abstractae method)": [[97, "fl4health.model_bases.autoencoders_base.AbstractAe.forward", false]], "forward() (apflmodule method)": [[96, "fl4health.model_bases.apfl_base.ApflModule.forward", false]], "forward() (basicae method)": [[97, "fl4health.model_bases.autoencoders_base.BasicAe.forward", false]], "forward() (bernoullisample static method)": [[177, "fl4health.utils.functions.BernoulliSample.forward", false]], "forward() (conditionalvae method)": [[97, "fl4health.model_bases.autoencoders_base.ConditionalVae.forward", false]], "forward() (cosinesimilarityloss method)": [[72, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.forward", false]], "forward() (cov method)": [[103, "fl4health.model_bases.gpfl_base.CoV.forward", false]], "forward() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.forward", false]], "forward() (ensemblemodel method)": [[98, "fl4health.model_bases.ensemble_base.EnsembleModel.forward", false]], "forward() (fedsimclrmodel method)": [[101, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.forward", false]], "forward() (fendamodelwithfeaturestate method)": [[102, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.forward", false]], "forward() (gce method)": [[103, "fl4health.model_bases.gpfl_base.Gce.forward", false]], "forward() (gpflbaseandheadmodules method)": [[103, "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules.forward", false]], "forward() (gpflmodel method)": [[103, "fl4health.model_bases.gpfl_base.GpflModel.forward", false]], "forward() (maskedconv1d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.forward", false]], "forward() (maskedconv2d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.forward", false]], "forward() (maskedconv3d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.forward", false]], "forward() (maskedconvtranspose1d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.forward", false]], "forward() (maskedconvtranspose2d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.forward", false]], "forward() (maskedconvtranspose3d method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.forward", false]], "forward() (maskedlayernorm method)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.forward", false]], "forward() (maskedlinear method)": [[107, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.forward", false]], "forward() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.forward", false]], "forward() (modellatentf method)": [[73, "fl4health.losses.deep_mmd_loss.ModelLatentF.forward", false]], "forward() (module2losswrapper method)": [[183, "fl4health.utils.nnunet_utils.Module2LossWrapper.forward", false]], "forward() (mooncontrastiveloss method)": [[71, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.forward", false]], "forward() (ntxentloss method)": [[71, "fl4health.losses.contrastive_loss.NtXentLoss.forward", false]], "forward() (parallelsplitheadmodule method)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.forward", false]], "forward() (parallelsplitmodel method)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.forward", false]], "forward() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.forward", false]], "forward() (perfclloss method)": [[76, "fl4health.losses.perfcl_loss.PerFclLoss.forward", false]], "forward() (perfclmodel method)": [[113, "fl4health.model_bases.perfcl_base.PerFclModel.forward", false]], "forward() (sequentiallysplitmodel method)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.forward", false]], "forward() (vaeloss method)": [[128, "fl4health.preprocessing.autoencoders.loss.VaeLoss.forward", false]], "forward() (variationalae method)": [[97, "fl4health.model_bases.autoencoders_base.VariationalAe.forward", false]], "forward() (weightdriftloss method)": [[77, "fl4health.losses.weight_drift_loss.WeightDriftLoss.forward", false]], "forward_hook() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.forward_hook", false]], "freeze_base_module() (fedrepmodel method)": [[100, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_base_module", false]], "freeze_head_module() (fedrepmodel method)": [[100, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_head_module", false]], "from_json() (tabularfeature static method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.from_json", false]], "from_pretrained() (maskedconv1d class method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.from_pretrained", false]], "from_pretrained() (maskedconv2d class method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.from_pretrained", false]], "from_pretrained() (maskedconv3d class method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose1d class method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose2d class method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose3d class method)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.from_pretrained", false]], "from_pretrained() (maskedlayernorm class method)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.from_pretrained", false]], "from_pretrained() (maskedlinear class method)": [[107, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.from_pretrained", false]], "fullparameterexchanger (class in fl4health.parameter_exchange.full_exchanger)": [[117, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger", false]], "fullparameterexchangerwithpacking (class in fl4health.parameter_exchange.packing_exchanger)": [[119, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking", false]], "functiontorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer", false]], "gaussian_noisy_aggregate_clipping_bits() (in module fl4health.strategies.noisy_aggregate)": [[167, "fl4health.strategies.noisy_aggregate.gaussian_noisy_aggregate_clipping_bits", false]], "gaussian_noisy_unweighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[167, "fl4health.strategies.noisy_aggregate.gaussian_noisy_unweighted_aggregate", false]], "gaussian_noisy_weighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[167, "fl4health.strategies.noisy_aggregate.gaussian_noisy_weighted_aggregate", false]], "gce (class in fl4health.model_bases.gpfl_base)": [[103, "fl4health.model_bases.gpfl_base.Gce", false]], "generate() (syntheticfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate", false]], "generate_client_tensors() (syntheticfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticiidfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticnoniidfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.generate_client_tensors", false]], "generate_hash() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.generate_hash", false]], "generate_hash() (in module fl4health.utils.random)": [[188, "fl4health.utils.random.generate_hash", false]], "generate_parameter_scores() (sparsecooparameterexchanger method)": [[124, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.generate_parameter_scores", false]], "get_all_model_parameters() (in module fl4health.utils.parameter_extraction)": [[184, "fl4health.utils.parameter_extraction.get_all_model_parameters", false]], "get_all_peft_parameters_from_model() (in module fl4health.utils.peft_parameter_extraction)": [[186, "fl4health.utils.peft_parameter_extraction.get_all_peft_parameters_from_model", false]], "get_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.get_attribute", false]], "get_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.get_attribute", false]], "get_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.get_attribute", false]], "get_best_vertex_for_objective_function() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.get_best_vertex_for_objective_function", false]], "get_cifar10_data_and_target_tensors() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.get_cifar10_data_and_target_tensors", false]], "get_client_specific_logs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_logs", false]], "get_client_specific_logs() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_client_specific_logs", false]], "get_client_specific_logs() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_logs", false]], "get_client_specific_reports() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_reports", false]], "get_client_specific_reports() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_client_specific_reports", false]], "get_client_specific_reports() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_reports", false]], "get_condition_vector_size() (autoencoderdatasetconverter method)": [[175, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_condition_vector_size", false]], "get_criterion() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_criterion", false]], "get_criterion() (flexibleclientprotocolpresetup method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_criterion", false]], "get_criterion() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_criterion", false]], "get_criterion() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_criterion", false]], "get_current_weight_step_size() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.get_current_weight_step_size", false]], "get_data_loader() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_data_loader", false]], "get_data_loaders() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_data_loaders", false]], "get_data_loaders() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_loaders", false]], "get_data_loaders() (flexibleclientprotocolpresetup method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_data_loaders", false]], "get_data_loaders() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_data_loaders", false]], "get_data_loaders() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_data_loaders", false]], "get_data_tensor() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_tensor", false]], "get_dataset_n_voxels() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.get_dataset_n_voxels", false]], "get_default_fill_value() (tabulartype static method)": [[69, "fl4health.feature_alignment.tabular_type.TabularType.get_default_fill_value", false]], "get_delta() (clientlevelaccountant method)": [[132, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_delta", false]], "get_delta() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_delta", false]], "get_delta() (flclientlevelaccountantpoissonsampling method)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_delta", false]], "get_delta() (flinstancelevelaccountant method)": [[132, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_delta", false]], "get_delta() (momentsaccountant method)": [[133, "fl4health.privacy.moments_accountant.MomentsAccountant.get_delta", false]], "get_dp_event() (fixedsamplingwithoutreplacement method)": [[133, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.get_dp_event", false]], "get_dp_event() (poissonsampling method)": [[133, "fl4health.privacy.moments_accountant.PoissonSampling.get_dp_event", false]], "get_dp_event() (samplingstrategy method)": [[133, "fl4health.privacy.moments_accountant.SamplingStrategy.get_dp_event", false]], "get_epsilon() (clientlevelaccountant method)": [[132, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantpoissonsampling method)": [[132, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_epsilon", false]], "get_epsilon() (flinstancelevelaccountant method)": [[132, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_epsilon", false]], "get_epsilon() (momentsaccountant method)": [[133, "fl4health.privacy.moments_accountant.MomentsAccountant.get_epsilon", false]], "get_extracted_features() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_extracted_features", false]], "get_feature_name() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_name", false]], "get_feature_type() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_type", false]], "get_fill_value() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_fill_value", false]], "get_global_model() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_global_model", false]], "get_global_model() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_global_model", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_global_model", false]], "get_global_model() (dittopersonalizedprotocol method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedProtocol.get_global_model", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.get_global_model", false]], "get_global_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_global_model", false]], "get_global_model() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.get_global_model", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.get_global_model", false]], "get_global_model() (mrmtlpersonalizedprotocol method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedProtocol.get_global_model", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.get_global_model", false]], "get_hierarchical_attr() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_hierarchical_attr", false]], "get_input_output_tensors() (syntheticiidfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.get_input_output_tensors", false]], "get_input_output_tensors() (syntheticnoniidfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.get_input_output_tensors", false]], "get_layers_to_transfer() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.get_layers_to_transfer", false]], "get_local_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_local_model", false]], "get_lr() (polylrschedulerwrapper method)": [[183, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.get_lr", false]], "get_lr_scheduler() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_lr_scheduler", false]], "get_lr_scheduler() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_lr_scheduler", false]], "get_lr_scheduler() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_lr_scheduler", false]], "get_matching_component() (warmedupmodule method)": [[130, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.get_matching_component", false]], "get_metadata() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata", false]], "get_metadata_dimension() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata_dimension", false]], "get_mnist_data_and_target_tensors() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.get_mnist_data_and_target_tensors", false]], "get_model() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_model", false]], "get_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_model", false]], "get_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_model", false]], "get_model() (flexibleclientprotocolpresetup method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_model", false]], "get_model() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_model", false]], "get_model() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.get_model", false]], "get_model() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_model", false]], "get_msd_dataset_enum() (in module fl4health.utils.msd_dataset_sources)": [[182, "fl4health.utils.msd_dataset_sources.get_msd_dataset_enum", false]], "get_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_optimizer", false]], "get_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_optimizer", false]], "get_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_optimizer", false]], "get_optimizer() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_optimizer", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_optimizer", false]], "get_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.get_optimizer", false]], "get_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_optimizer", false]], "get_optimizer() (flexibleclientprotocolpresetup method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_optimizer", false]], "get_optimizer() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_optimizer", false]], "get_optimizer() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.get_optimizer", false]], "get_optimizer() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_optimizer", false]], "get_parameter_exchanger() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false]], "get_parameter_exchanger() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedperclient method)": [[34, "fl4health.clients.fedper_client.FedPerClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (partialweightexchangeclient method)": [[52, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameter_exchanger", false]], "get_parameters() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameters", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameters", false]], "get_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameters", false]], "get_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameters", false]], "get_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_parameters", false]], "get_parameters() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_parameters", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_parameters", false]], "get_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameters", false]], "get_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_parameters", false]], "get_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_parameters", false]], "get_parameters() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameters", false]], "get_parameters() (numpyclientminimalprotocol method)": [[90, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.get_parameters", false]], "get_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameters", false]], "get_parameters() (partialweightexchangeclient method)": [[52, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameters", false]], "get_parameters() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameters", false]], "get_properties() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_properties", false]], "get_properties() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.get_properties", false]], "get_properties() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.get_properties", false]], "get_segs_from_probs() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.get_segs_from_probs", false]], "get_test_data_loader() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_test_data_loader", false]], "get_test_data_loader() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.get_test_data_loader", false]], "get_train_and_val_cifar10_datasets() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.get_train_and_val_cifar10_datasets", false]], "get_train_and_val_mnist_datasets() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.get_train_and_val_mnist_datasets", false]], "get_unpacking_function() (autoencoderdatasetconverter method)": [[175, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_unpacking_function", false]], "global_forward() (apflmodule method)": [[96, "fl4health.model_bases.apfl_base.ApflModule.global_forward", false]], "global_model (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.DittoPersonalizedProtocol.global_model", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.global_model", false]], "gpflbaseandheadmodules (class in fl4health.model_bases.gpfl_base)": [[103, "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules", false]], "gpflclient (class in fl4health.clients.gpfl_client)": [[43, "fl4health.clients.gpfl_client.GpflClient", false]], "gpflmodel (class in fl4health.model_bases.gpfl_base)": [[103, "fl4health.model_bases.gpfl_base.GpflModel", false]], "h1_mean_var_gram() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.h1_mean_var_gram", false]], "ham_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.ham_image_path_func", false]], "ham_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.ham_label_map_func", false]], "has_contrastive_loss() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_contrastive_loss", false]], "has_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_cosine_similarity_loss", false]], "has_perfcl_loss() (constrainedfendalosscontainer method)": [[74, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_perfcl_loss", false]], "head (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.HEAD", false]], "head_forward() (parallelsplitheadmodule method)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.head_forward", false]], "historysnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.HistorySnapshotter", false]], "infer_label_dim() (in module fl4health.metrics.utils)": [[87, "fl4health.metrics.utils.infer_label_dim", false]], "info (loglevel attribute)": [[191, "fl4health.utils.typing.LogLevel.INFO", false]], "initial_global_model (mrmtlpersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedProtocol.initial_global_model", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.initial_global_model", false]], "initialize() (basereporter method)": [[135, "fl4health.reporting.base_reporter.BaseReporter.initialize", false]], "initialize() (filereporter method)": [[136, "fl4health.reporting.json_reporter.FileReporter.initialize", false]], "initialize() (reportsmanager method)": [[137, "fl4health.reporting.reports_manager.ReportsManager.initialize", false]], "initialize() (wandbreporter method)": [[134, "fl4health.reporting.WandBReporter.initialize", false], [138, "fl4health.reporting.wandb_reporter.WandBReporter.initialize", false]], "initialize_all_model_weights() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.initialize_all_model_weights", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.initialize_all_model_weights", false]], "initialize_all_model_weights() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.initialize_all_model_weights", false]], "initialize_control_variates() (scaffold method)": [[168, "fl4health.strategies.scaffold.Scaffold.initialize_control_variates", false]], "initialize_global_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.initialize_global_model", false]], "initialize_parameters() (modelmergestrategy method)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.initialize_parameters", false]], "initialize_server_model() (nnunetserver method)": [[150, "fl4health.servers.nnunet_server.NnunetServer.initialize_server_model", false]], "initialized (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.initialized", false]], "initialized (flexibleclientprotocolpresetup attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.initialized", false]], "initialized (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.initialized", false]], "instanceleveldpclient (class in fl4health.clients.instance_level_dp_client)": [[44, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient", false]], "instanceleveldpserver (class in fl4health.servers.instance_level_dp_server)": [[148, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer", false]], "invalidconfigerror": [[172, "fl4health.utils.config.InvalidConfigError", false]], "is_masked_module() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[106, "fl4health.model_bases.masked_layers.masked_layers_utils.is_masked_module", false]], "is_start_of_local_training() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.is_start_of_local_training", false]], "jsonreporter (class in fl4health.reporting)": [[134, "fl4health.reporting.JsonReporter", false]], "jsonreporter (class in fl4health.reporting.json_reporter)": [[136, "fl4health.reporting.json_reporter.JsonReporter", false]], "label_frequency() (in module fl4health.datasets.rxrx1.load_data)": [[58, "fl4health.datasets.rxrx1.load_data.label_frequency", false]], "labelbasedsampler (class in fl4health.utils.sampler)": [[189, "fl4health.utils.sampler.LabelBasedSampler", false]], "largest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.largest_final_magnitude_scores", false]], "largest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.largest_increase_in_magnitude_scores", false]], "largest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.largest_magnitude_change_scores", false]], "latestopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer", false]], "latesttorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer", false]], "layerexchangerwithexclusions (class in fl4health.parameter_exchange.layer_exchanger)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions", false]], "layernamesservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule", false]], "layers_to_exchange() (apflmodule method)": [[96, "fl4health.model_bases.apfl_base.ApflModule.layers_to_exchange", false]], "layers_to_exchange() (fendamodel method)": [[102, "fl4health.model_bases.fenda_base.FendaModel.layers_to_exchange", false]], "layers_to_exchange() (gpflmodel method)": [[103, "fl4health.model_bases.gpfl_base.GpflModel.layers_to_exchange", false]], "layers_to_exchange() (partiallayerexchangemodel method)": [[111, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel.layers_to_exchange", false]], "layers_to_exchange() (perfclmodel method)": [[113, "fl4health.model_bases.perfcl_base.PerFclModel.layers_to_exchange", false]], "layers_to_exchange() (sequentiallysplitexchangebasemodel method)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel.layers_to_exchange", false]], "layerselectionfunctionconstructor (class in fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor", false]], "load_attribute() (abstractsnapshotter method)": [[190, "fl4health.utils.snapshotter.AbstractSnapshotter.load_attribute", false]], "load_attribute() (bytessnapshotter method)": [[190, "fl4health.utils.snapshotter.BytesSnapshotter.load_attribute", false]], "load_attribute() (enumsnapshotter method)": [[190, "fl4health.utils.snapshotter.EnumSnapshotter.load_attribute", false]], "load_attribute() (historysnapshotter method)": [[190, "fl4health.utils.snapshotter.HistorySnapshotter.load_attribute", false]], "load_attribute() (lrschedulersnapshotter method)": [[190, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.load_attribute", false]], "load_attribute() (optimizersnapshotter method)": [[190, "fl4health.utils.snapshotter.OptimizerSnapshotter.load_attribute", false]], "load_attribute() (serializableobjectsnapshotter method)": [[190, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.load_attribute", false]], "load_attribute() (singletonsnapshotter method)": [[190, "fl4health.utils.snapshotter.SingletonSnapshotter.load_attribute", false]], "load_attribute() (stringsnapshotter method)": [[190, "fl4health.utils.snapshotter.StringSnapshotter.load_attribute", false]], "load_attribute() (torchmodulesnapshotter method)": [[190, "fl4health.utils.snapshotter.TorchModuleSnapshotter.load_attribute", false]], "load_autoencoder() (autoencoderprocessing method)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.load_autoencoder", false]], "load_best_checkpoint_into_model() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_best_checkpoint_into_model", false]], "load_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_checkpoint", false]], "load_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_checkpoint", false]], "load_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.load_checkpoint", false]], "load_cifar10_data() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.load_cifar10_data", false]], "load_cifar10_test_data() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.load_cifar10_test_data", false]], "load_config() (in module fl4health.utils.config)": [[172, "fl4health.utils.config.load_config", false]], "load_from_pretrained() (warmedupmodule method)": [[130, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.load_from_pretrained", false]], "load_image() (in module fl4health.datasets.rxrx1.preprocess)": [[59, "fl4health.datasets.rxrx1.preprocess.load_image", false]], "load_image() (in module fl4health.datasets.skin_cancer.load_data)": [[61, "fl4health.datasets.skin_cancer.load_data.load_image", false]], "load_mnist_data() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.load_mnist_data", false]], "load_mnist_test_data() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.load_mnist_test_data", false]], "load_model_checkpoint_to_parameters() (evaluateserver method)": [[146, "fl4health.servers.evaluate_server.EvaluateServer.load_model_checkpoint_to_parameters", false]], "load_msd_dataset() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.load_msd_dataset", false]], "load_pca_module() (pcapreprocessor method)": [[129, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.load_pca_module", false]], "load_pretrained_model() (fedsimclrmodel static method)": [[101, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.load_pretrained_model", false]], "load_rxrx1_data() (in module fl4health.datasets.rxrx1.load_data)": [[58, "fl4health.datasets.rxrx1.load_data.load_rxrx1_data", false]], "load_rxrx1_test_data() (in module fl4health.datasets.rxrx1.load_data)": [[58, "fl4health.datasets.rxrx1.load_data.load_rxrx1_test_data", false]], "load_skin_cancer_data() (in module fl4health.datasets.skin_cancer.load_data)": [[61, "fl4health.datasets.skin_cancer.load_data.load_skin_cancer_data", false]], "load_snapshot() (earlystopper method)": [[176, "fl4health.utils.early_stopper.EarlyStopper.load_snapshot", false]], "load_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_state", false]], "local_forward() (apflmodule method)": [[96, "fl4health.model_bases.apfl_base.ApflModule.local_forward", false]], "loggingmode (class in fl4health.utils.logging)": [[179, "fl4health.utils.logging.LoggingMode", false]], "loglevel (class in fl4health.utils.typing)": [[191, "fl4health.utils.typing.LogLevel", false]], "lookup() (gce method)": [[103, "fl4health.model_bases.gpfl_base.Gce.lookup", false]], "loss (fairnessmetrictype attribute)": [[161, "fl4health.strategies.feddg_ga.FairnessMetricType.LOSS", false]], "loss_for_adaptation (adaptivedriftconstrainedprotocol attribute)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.loss_for_adaptation", false]], "loss_for_adaptation (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.loss_for_adaptation", false]], "loss_for_adaptation (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.loss_for_adaptation", false]], "losses (class in fl4health.utils.losses)": [[180, "fl4health.utils.losses.Losses", false]], "lossmeter (class in fl4health.utils.losses)": [[180, "fl4health.utils.losses.LossMeter", false]], "lossmetertype (class in fl4health.utils.losses)": [[180, "fl4health.utils.losses.LossMeterType", false]], "lrschedulersnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.LRSchedulerSnapshotter", false]], "main() (in module fl4health.datasets.rxrx1.preprocess)": [[59, "fl4health.datasets.rxrx1.preprocess.main", false]], "make_dict_with_epochs_or_steps() (in module fl4health.utils.config)": [[172, "fl4health.utils.config.make_dict_with_epochs_or_steps", false]], "make_it_personal() (in module fl4health.mixins.personalized)": [[91, "fl4health.mixins.personalized.make_it_personal", false]], "map_label_index_tensor_to_one_hot() (in module fl4health.metrics.utils)": [[87, "fl4health.metrics.utils.map_label_index_tensor_to_one_hot", false]], "map_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[187, "fl4health.utils.privacy_utilities.map_model_to_opacus_model", false]], "mask_data() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.mask_data", false]], "mask_data() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.mask_data", false]], "maskedbatchnorm1d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm1d", false]], "maskedbatchnorm2d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm2d", false]], "maskedbatchnorm3d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm3d", false]], "maskedconv1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d", false]], "maskedconv2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d", false]], "maskedconv3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d", false]], "maskedconvtranspose1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d", false]], "maskedconvtranspose2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d", false]], "maskedconvtranspose3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[105, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d", false]], "maskedlayernorm (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[108, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm", false]], "maskedlinear (class in fl4health.model_bases.masked_layers.masked_linear)": [[107, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear", false]], "maybe_checkpoint() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_extract_fingerprint() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.maybe_extract_fingerprint", false]], "maybe_extract_fingerprint() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.maybe_extract_fingerprint", false]], "maybe_load_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_load_client_state", false]], "maybe_load_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_load_server_state", false]], "maybe_load_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_load_state", false]], "maybe_load_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_load_state", false]], "maybe_preprocess() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.maybe_preprocess", false]], "maybe_preprocess() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.maybe_preprocess", false]], "maybe_progress_bar() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.maybe_progress_bar", false]], "maybe_reshape() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.maybe_reshape", false]], "maybe_set_default_checkpoint_name() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_set_default_checkpoint_name", false]], "maybe_set_default_checkpoint_name() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_set_default_checkpoint_name", false]], "merge_metrics() (evaluateclient static method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.merge_metrics", false]], "merge_subspaces_qr() (fedpca method)": [[163, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_qr", false]], "merge_subspaces_svd() (fedpca method)": [[163, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_svd", false]], "merge_two_subspaces_qr() (fedpca method)": [[163, "fl4health.strategies.fedpca.FedPCA.merge_two_subspaces_qr", false]], "metric (class in fl4health.metrics.base_metrics)": [[79, "fl4health.metrics.base_metrics.Metric", false]], "metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.metric_aggregation", false]], "metricmanager (class in fl4health.metrics.metric_managers)": [[84, "fl4health.metrics.metric_managers.MetricManager", false]], "metricoutcome (in module fl4health.metrics.efficient_metrics_base)": [[82, "fl4health.metrics.efficient_metrics_base.MetricOutcome", false]], "metricprefix (class in fl4health.metrics.base_metrics)": [[79, "fl4health.metrics.base_metrics.MetricPrefix", false]], "minoritylabelbasedsampler (class in fl4health.utils.sampler)": [[189, "fl4health.utils.sampler.MinorityLabelBasedSampler", false]], "mkmmdloss (class in fl4health.losses.mkmmd_loss)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss", false]], "mmdu() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.mmdu", false]], "model (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.model", false]], "model (flexibleclientprotocol attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.model", false]], "model (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.model", false]], "modellatentf (class in fl4health.losses.deep_mmd_loss)": [[73, "fl4health.losses.deep_mmd_loss.ModelLatentF", false]], "modelmergeclient (class in fl4health.clients.model_merge_client)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient", false]], "modelmergeserver (class in fl4health.servers.model_merge_server)": [[149, "fl4health.servers.model_merge_server.ModelMergeServer", false]], "modelmergestrategy (class in fl4health.strategies.model_merge_strategy)": [[166, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy", false]], "modify_grad() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.modify_grad", false]], "modify_noise_multiplier() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.modify_noise_multiplier", false]], "module": [[8, "module-fl4health", false], [9, "module-fl4health.checkpointing", false], [10, "module-fl4health.checkpointing.checkpointer", false], [11, "module-fl4health.checkpointing.client_module", false], [12, "module-fl4health.checkpointing.opacus_checkpointer", false], [13, "module-fl4health.checkpointing.server_module", false], [14, "module-fl4health.checkpointing.state_checkpointer", false], [15, "module-fl4health.client_managers", false], [16, "module-fl4health.client_managers.base_sampling_manager", false], [17, "module-fl4health.client_managers.fixed_sampling_client_manager", false], [18, "module-fl4health.client_managers.fixed_without_replacement_manager", false], [19, "module-fl4health.client_managers.poisson_sampling_manager", false], [20, "module-fl4health.clients", false], [21, "module-fl4health.clients.adaptive_drift_constraint_client", false], [22, "module-fl4health.clients.apfl_client", false], [23, "module-fl4health.clients.basic_client", false], [24, "module-fl4health.clients.clipping_client", false], [25, "module-fl4health.clients.constrained_fenda_client", false], [26, "module-fl4health.clients.deep_mmd_clients", false], [27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false], [28, "module-fl4health.clients.ditto_client", false], [29, "module-fl4health.clients.ensemble_client", false], [30, "module-fl4health.clients.evaluate_client", false], [31, "module-fl4health.clients.fed_pca_client", false], [32, "module-fl4health.clients.fed_prox_client", false], [33, "module-fl4health.clients.fedbn_client", false], [34, "module-fl4health.clients.fedper_client", false], [35, "module-fl4health.clients.fedpm_client", false], [36, "module-fl4health.clients.fedrep_client", false], [37, "module-fl4health.clients.fenda_client", false], [38, "module-fl4health.clients.fenda_ditto_client", false], [39, "module-fl4health.clients.flash_client", false], [40, "module-fl4health.clients.flexible", false], [41, "module-fl4health.clients.flexible.base", false], [42, "module-fl4health.clients.flexible.nnunet", false], [43, "module-fl4health.clients.gpfl_client", false], [44, "module-fl4health.clients.instance_level_dp_client", false], [45, "module-fl4health.clients.mkmmd_clients", false], [46, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false], [47, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false], [48, "module-fl4health.clients.model_merge_client", false], [49, "module-fl4health.clients.moon_client", false], [50, "module-fl4health.clients.mr_mtl_client", false], [51, "module-fl4health.clients.nnunet_client", false], [52, "module-fl4health.clients.partial_weight_exchange_client", false], [53, "module-fl4health.clients.perfcl_client", false], [54, "module-fl4health.clients.scaffold_client", false], [56, "module-fl4health.datasets", false], [57, "module-fl4health.datasets.rxrx1", false], [58, "module-fl4health.datasets.rxrx1.load_data", false], [59, "module-fl4health.datasets.rxrx1.preprocess", false], [60, "module-fl4health.datasets.skin_cancer", false], [61, "module-fl4health.datasets.skin_cancer.load_data", false], [62, "module-fl4health.datasets.skin_cancer.preprocess_skin", false], [63, "module-fl4health.feature_alignment", false], [64, "module-fl4health.feature_alignment.constants", false], [65, "module-fl4health.feature_alignment.string_columns_transformer", false], [68, "module-fl4health.feature_alignment.tabular_feature", false], [69, "module-fl4health.feature_alignment.tabular_type", false], [70, "module-fl4health.losses", false], [71, "module-fl4health.losses.contrastive_loss", false], [72, "module-fl4health.losses.cosine_similarity_loss", false], [73, "module-fl4health.losses.deep_mmd_loss", false], [74, "module-fl4health.losses.fenda_loss_config", false], [75, "module-fl4health.losses.mkmmd_loss", false], [76, "module-fl4health.losses.perfcl_loss", false], [77, "module-fl4health.losses.weight_drift_loss", false], [78, "module-fl4health.metrics", false], [79, "module-fl4health.metrics.base_metrics", false], [80, "module-fl4health.metrics.compound_metrics", false], [81, "module-fl4health.metrics.efficient_metrics", false], [82, "module-fl4health.metrics.efficient_metrics_base", false], [83, "module-fl4health.metrics.metric_aggregation", false], [84, "module-fl4health.metrics.metric_managers", false], [85, "module-fl4health.metrics.metrics", false], [86, "module-fl4health.metrics.metrics_utils", false], [87, "module-fl4health.metrics.utils", false], [88, "module-fl4health.mixins", false], [89, "module-fl4health.mixins.adaptive_drift_constrained", false], [90, "module-fl4health.mixins.core_protocols", false], [91, "module-fl4health.mixins.personalized", false], [92, "module-fl4health.mixins.personalized.ditto", false], [93, "module-fl4health.mixins.personalized.mr_mtl", false], [94, "module-fl4health.mixins.personalized.utils", false], [95, "module-fl4health.model_bases", false], [96, "module-fl4health.model_bases.apfl_base", false], [97, "module-fl4health.model_bases.autoencoders_base", false], [98, "module-fl4health.model_bases.ensemble_base", false], [99, "module-fl4health.model_bases.feature_extractor_buffer", false], [100, "module-fl4health.model_bases.fedrep_base", false], [101, "module-fl4health.model_bases.fedsimclr_base", false], [102, "module-fl4health.model_bases.fenda_base", false], [103, "module-fl4health.model_bases.gpfl_base", false], [104, "module-fl4health.model_bases.masked_layers", false], [105, "module-fl4health.model_bases.masked_layers.masked_conv", false], [106, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false], [107, "module-fl4health.model_bases.masked_layers.masked_linear", false], [108, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false], [109, "module-fl4health.model_bases.moon_base", false], [110, "module-fl4health.model_bases.parallel_split_models", false], [111, "module-fl4health.model_bases.partial_layer_exchange_model", false], [112, "module-fl4health.model_bases.pca", false], [113, "module-fl4health.model_bases.perfcl_base", false], [114, "module-fl4health.model_bases.sequential_split_models", false], [115, "module-fl4health.parameter_exchange", false], [116, "module-fl4health.parameter_exchange.fedpm_exchanger", false], [117, "module-fl4health.parameter_exchange.full_exchanger", false], [118, "module-fl4health.parameter_exchange.layer_exchanger", false], [119, "module-fl4health.parameter_exchange.packing_exchanger", false], [120, "module-fl4health.parameter_exchange.parameter_exchanger_base", false], [121, "module-fl4health.parameter_exchange.parameter_packer", false], [122, "module-fl4health.parameter_exchange.parameter_selection_criteria", false], [123, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false], [124, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false], [125, "module-fl4health.preprocessing", false], [126, "module-fl4health.preprocessing.autoencoders", false], [127, "module-fl4health.preprocessing.autoencoders.dim_reduction", false], [128, "module-fl4health.preprocessing.autoencoders.loss", false], [129, "module-fl4health.preprocessing.pca_preprocessor", false], [130, "module-fl4health.preprocessing.warmed_up_module", false], [131, "module-fl4health.privacy", false], [132, "module-fl4health.privacy.fl_accountants", false], [133, "module-fl4health.privacy.moments_accountant", false], [134, "module-fl4health.reporting", false], [135, "module-fl4health.reporting.base_reporter", false], [136, "module-fl4health.reporting.json_reporter", false], [137, "module-fl4health.reporting.reports_manager", false], [138, "module-fl4health.reporting.wandb_reporter", false], [139, "module-fl4health.servers", false], [140, "module-fl4health.servers.adaptive_constraint_servers", false], [141, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false], [142, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false], [143, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false], [144, "module-fl4health.servers.base_server", false], [145, "module-fl4health.servers.client_level_dp_fed_avg_server", false], [146, "module-fl4health.servers.evaluate_server", false], [147, "module-fl4health.servers.fedpm_server", false], [148, "module-fl4health.servers.instance_level_dp_server", false], [149, "module-fl4health.servers.model_merge_server", false], [150, "module-fl4health.servers.nnunet_server", false], [151, "module-fl4health.servers.polling", false], [152, "module-fl4health.servers.scaffold_server", false], [154, "module-fl4health.strategies", false], [155, "module-fl4health.strategies.aggregate_utils", false], [156, "module-fl4health.strategies.basic_fedavg", false], [157, "module-fl4health.strategies.client_dp_fedavgm", false], [158, "module-fl4health.strategies.fedavg_dynamic_layer", false], [159, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false], [160, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false], [161, "module-fl4health.strategies.feddg_ga", false], [162, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false], [163, "module-fl4health.strategies.fedpca", false], [164, "module-fl4health.strategies.fedpm", false], [165, "module-fl4health.strategies.flash", false], [166, "module-fl4health.strategies.model_merge_strategy", false], [167, "module-fl4health.strategies.noisy_aggregate", false], [168, "module-fl4health.strategies.scaffold", false], [169, "module-fl4health.strategies.strategy_with_poll", false], [170, "module-fl4health.utils", false], [171, "module-fl4health.utils.client", false], [172, "module-fl4health.utils.config", false], [173, "module-fl4health.utils.data_generation", false], [174, "module-fl4health.utils.dataset", false], [175, "module-fl4health.utils.dataset_converter", false], [176, "module-fl4health.utils.early_stopper", false], [177, "module-fl4health.utils.functions", false], [178, "module-fl4health.utils.load_data", false], [179, "module-fl4health.utils.logging", false], [180, "module-fl4health.utils.losses", false], [181, "module-fl4health.utils.metrics", false], [182, "module-fl4health.utils.msd_dataset_sources", false], [183, "module-fl4health.utils.nnunet_utils", false], [184, "module-fl4health.utils.parameter_extraction", false], [185, "module-fl4health.utils.partitioners", false], [186, "module-fl4health.utils.peft_parameter_extraction", false], [187, "module-fl4health.utils.privacy_utilities", false], [188, "module-fl4health.utils.random", false], [189, "module-fl4health.utils.sampler", false], [190, "module-fl4health.utils.snapshotter", false], [191, "module-fl4health.utils.typing", false]], "module2losswrapper (class in fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.Module2LossWrapper", false]], "momentsaccountant (class in fl4health.privacy.moments_accountant)": [[133, "fl4health.privacy.moments_accountant.MomentsAccountant", false]], "moonclient (class in fl4health.clients.moon_client)": [[49, "fl4health.clients.moon_client.MoonClient", false]], "mooncontrastiveloss (class in fl4health.losses.contrastive_loss)": [[71, "fl4health.losses.contrastive_loss.MoonContrastiveLoss", false]], "mooncontrastivelosscontainer (class in fl4health.losses.fenda_loss_config)": [[74, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer", false]], "moonmodel (class in fl4health.model_bases.moon_base)": [[109, "fl4health.model_bases.moon_base.MoonModel", false]], "move_data_to_device() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.move_data_to_device", false]], "mr_mtl (personalizedmode attribute)": [[91, "fl4health.mixins.personalized.PersonalizedMode.MR_MTL", false]], "mrmtlclient (class in fl4health.clients.mr_mtl_client)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient", false]], "mrmtlmkmmdclient (class in fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient", false]], "mrmtlpersonalizedmixin (class in fl4health.mixins.personalized)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin", false]], "mrmtlpersonalizedmixin (class in fl4health.mixins.personalized.mr_mtl)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin", false]], "mrmtlpersonalizedprotocol (class in fl4health.mixins.personalized)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedProtocol", false]], "mrmtlpersonalizedprotocol (class in fl4health.mixins.personalized.mr_mtl)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol", false]], "mrmtlserver (class in fl4health.servers.adaptive_constraint_servers.mrmtl_server)": [[143, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer", false]], "msddataset (class in fl4health.utils.msd_dataset_sources)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset", false]], "multiclassdice (class in fl4health.metrics.efficient_metrics)": [[81, "fl4health.metrics.efficient_metrics.MultiClassDice", false]], "multiclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[82, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric", false]], "narrow_dict_type() (in module fl4health.utils.config)": [[172, "fl4health.utils.config.narrow_dict_type", false]], "narrow_dict_type_and_set_attribute() (in module fl4health.utils.config)": [[172, "fl4health.utils.config.narrow_dict_type_and_set_attribute", false]], "nnunetclient (class in fl4health.clients.nnunet_client)": [[51, "fl4health.clients.nnunet_client.NnunetClient", false]], "nnunetconfig (class in fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.NnunetConfig", false]], "nnunetdataloaderwrapper (class in fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper", false]], "nnunetserver (class in fl4health.servers.nnunet_server)": [[150, "fl4health.servers.nnunet_server.NnunetServer", false]], "nnunetservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule", false]], "nnunetserverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer", false]], "normalize() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.normalize", false]], "normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.normalize_metrics", false]], "notset (loglevel attribute)": [[191, "fl4health.utils.typing.LogLevel.NOTSET", false]], "ntxentloss (class in fl4health.losses.contrastive_loss)": [[71, "fl4health.losses.contrastive_loss.NtXentLoss", false]], "numeric (tabulartype attribute)": [[69, "fl4health.feature_alignment.tabular_type.TabularType.NUMERIC", false]], "numpyclientminimalprotocol (class in fl4health.mixins.core_protocols)": [[90, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol", false]], "numpyclippingclient (class in fl4health.clients.clipping_client)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient", false]], "one_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset.one_layer_map_inputs_to_outputs", false]], "opacusbasicfedavg (class in fl4health.strategies.basic_fedavg)": [[156, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg", false]], "opacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer", false]], "opacusscaffold (class in fl4health.strategies.scaffold)": [[168, "fl4health.strategies.scaffold.OpacusScaffold", false]], "opacusservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule", false]], "optimize_betas() (mkmmdloss method)": [[75, "fl4health.losses.mkmmd_loss.MkMmdLoss.optimize_betas", false]], "optimizer_keys (dittopersonalizedmixin property)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.optimizer_keys", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.optimizer_keys", false]], "optimizer_keys (dittopersonalizedprotocol attribute)": [[91, "fl4health.mixins.personalized.DittoPersonalizedProtocol.optimizer_keys", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizer_keys", false]], "optimizers (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizers", false]], "optimizers (flexibleclientprotocol attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.optimizers", false]], "optimizers (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.optimizers", false]], "optimizersnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.OptimizerSnapshotter", false]], "ordinal (tabulartype attribute)": [[69, "fl4health.feature_alignment.tabular_type.TabularType.ORDINAL", false]], "pack_parameters() (fullparameterexchangerwithpacking method)": [[119, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.pack_parameters", false]], "pack_parameters() (parameterpacker method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.pack_parameters", false]], "pack_parameters() (parameterpackeradaptiveconstraint method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.pack_parameters", false]], "pack_parameters() (parameterpackerwithclippingbit method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.pack_parameters", false]], "pack_parameters() (parameterpackerwithcontrolvariates method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.pack_parameters", false]], "pack_parameters() (parameterpackerwithlayernames method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.pack_parameters", false]], "pack_parameters() (partialparameterexchanger method)": [[123, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.pack_parameters", false]], "pack_parameters() (sparsecooparameterpacker method)": [[121, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.pack_parameters", false]], "packingservercheckpointandandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule", false]], "pad_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.pad_image_path_func", false]], "pad_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.pad_label_map_func", false]], "pairwise_distance_squared() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.pairwise_distance_squared", false]], "parallel_output_join() (parallelsplitheadmodule method)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.parallel_output_join", false]], "parallelfeaturejoinmode (class in fl4health.model_bases.parallel_split_models)": [[110, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode", false]], "parallelsplitheadmodule (class in fl4health.model_bases.parallel_split_models)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule", false]], "parallelsplitmodel (class in fl4health.model_bases.parallel_split_models)": [[110, "fl4health.model_bases.parallel_split_models.ParallelSplitModel", false]], "parameter_exchanger (adaptivedriftconstrainedprotocol attribute)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.parameter_exchanger", false]], "parameter_exchanger (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.parameter_exchanger", false]], "parameter_exchanger (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.parameter_exchanger", false]], "parameterexchanger (class in fl4health.parameter_exchange.parameter_exchanger_base)": [[120, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger", false]], "parameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPacker", false]], "parameterpackeradaptiveconstraint (class in fl4health.parameter_exchange.parameter_packer)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint", false]], "parameterpackerwithclippingbit (class in fl4health.parameter_exchange.parameter_packer)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit", false]], "parameterpackerwithcontrolvariates (class in fl4health.parameter_exchange.parameter_packer)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates", false]], "parameterpackerwithlayernames (class in fl4health.parameter_exchange.parameter_packer)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames", false]], "partiallayerexchangemodel (class in fl4health.model_bases.partial_layer_exchange_model)": [[111, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel", false]], "partialparameterexchanger (class in fl4health.parameter_exchange.partial_parameter_exchanger)": [[123, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger", false]], "partialweightexchangeclient (class in fl4health.clients.partial_weight_exchange_client)": [[52, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient", false]], "partition_dataset() (dirichletlabelbasedallocation method)": [[185, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_dataset", false]], "partition_label_indices() (dirichletlabelbasedallocation method)": [[185, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_label_indices", false]], "pcamodule (class in fl4health.model_bases.pca)": [[112, "fl4health.model_bases.pca.PcaModule", false]], "pcapreprocessor (class in fl4health.preprocessing.pca_preprocessor)": [[129, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor", false]], "penalty_loss_function (adaptivedriftconstrainedprotocol attribute)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.penalty_loss_function", false]], "penalty_loss_function (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.penalty_loss_function", false]], "penalty_loss_function (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.penalty_loss_function", false]], "perfclclient (class in fl4health.clients.perfcl_client)": [[53, "fl4health.clients.perfcl_client.PerFclClient", false]], "perfclloss (class in fl4health.losses.perfcl_loss)": [[76, "fl4health.losses.perfcl_loss.PerFclLoss", false]], "perfcllosscontainer (class in fl4health.losses.fenda_loss_config)": [[74, "fl4health.losses.fenda_loss_config.PerFclLossContainer", false]], "perfclmodel (class in fl4health.model_bases.perfcl_base)": [[113, "fl4health.model_bases.perfcl_base.PerFclModel", false]], "personalizedmode (class in fl4health.mixins.personalized)": [[91, "fl4health.mixins.personalized.PersonalizedMode", false]], "poissonsampling (class in fl4health.privacy.moments_accountant)": [[133, "fl4health.privacy.moments_accountant.PoissonSampling", false]], "poissonsamplingclientmanager (class in fl4health.client_managers.poisson_sampling_manager)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager", false]], "poll_client() (in module fl4health.servers.polling)": [[151, "fl4health.servers.polling.poll_client", false]], "poll_clients() (in module fl4health.servers.polling)": [[151, "fl4health.servers.polling.poll_clients", false]], "poll_clients_for_sample_counts() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.poll_clients_for_sample_counts", false]], "polylrschedulerwrapper (class in fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper", false]], "post_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.POST_AGGREGATION", false]], "pre_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.PRE_AGGREGATION", false]], "predict() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.predict", false]], "predict() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.predict", false]], "predict() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.predict", false]], "predict() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.predict", false]], "predict() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.predict", false]], "predict() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.predict", false]], "predict() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.predict", false]], "predict() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.predict", false]], "predict() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.predict", false]], "predict() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.predict", false]], "predict_with_model() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.predict_with_model", false]], "predict_with_model() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.predict_with_model", false]], "predict_with_model() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.predict_with_model", false]], "prepare_data_forward() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.prepare_data_forward", false]], "prepare_loss_arg() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.prepare_loss_arg", false]], "preprocess_derm7pt() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_derm7pt", false]], "preprocess_ham10000() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_ham10000", false]], "preprocess_isic_2019() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_isic_2019", false]], "preprocess_pad_ufes_20() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_pad_ufes_20", false]], "privacy_validate_and_fix_modules() (in module fl4health.utils.privacy_utilities)": [[187, "fl4health.utils.privacy_utilities.privacy_validate_and_fix_modules", false]], "process_and_check_validation_steps() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.process_and_check_validation_steps", false]], "process_client_data() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.process_client_data", false]], "process_config() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.process_config", false]], "process_config() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.process_config", false]], "process_data() (in module fl4health.datasets.rxrx1.preprocess)": [[59, "fl4health.datasets.rxrx1.preprocess.process_data", false]], "process_fed_rep_config() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.process_fed_rep_config", false]], "project_back() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.project_back", false]], "project_lower_dim() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.project_lower_dim", false]], "pseudo_sort_scoring_function() (in module fl4health.utils.functions)": [[177, "fl4health.utils.functions.pseudo_sort_scoring_function", false]], "pull_parameters() (dynamiclayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.pull_parameters", false]], "pull_parameters() (fedpmexchanger method)": [[116, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.pull_parameters", false]], "pull_parameters() (fixedlayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.pull_parameters", false]], "pull_parameters() (fullparameterexchanger method)": [[117, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.pull_parameters", false]], "pull_parameters() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.pull_parameters", false]], "pull_parameters() (parameterexchanger method)": [[120, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.pull_parameters", false]], "pull_parameters() (sparsecooparameterexchanger method)": [[124, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.pull_parameters", false]], "push_parameters() (dynamiclayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.push_parameters", false]], "push_parameters() (fixedlayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.push_parameters", false]], "push_parameters() (fullparameterexchanger method)": [[117, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.push_parameters", false]], "push_parameters() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.push_parameters", false]], "push_parameters() (parameterexchanger method)": [[120, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.push_parameters", false]], "push_parameters() (sparsecooparameterexchanger method)": [[124, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.push_parameters", false]], "reduce_dimension() (pcapreprocessor method)": [[129, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.reduce_dimension", false]], "reload_modules() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.reload_modules", false]], "remove_hooks() (featureextractorbuffer method)": [[99, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.remove_hooks", false]], "report() (basereporter method)": [[135, "fl4health.reporting.base_reporter.BaseReporter.report", false]], "report() (filereporter method)": [[136, "fl4health.reporting.json_reporter.FileReporter.report", false]], "report() (reportsmanager method)": [[137, "fl4health.reporting.reports_manager.ReportsManager.report", false]], "report() (wandbreporter method)": [[134, "fl4health.reporting.WandBReporter.report", false], [138, "fl4health.reporting.wandb_reporter.WandBReporter.report", false]], "report_centralized_eval() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.report_centralized_eval", false]], "reportsmanager (class in fl4health.reporting.reports_manager)": [[137, "fl4health.reporting.reports_manager.ReportsManager", false]], "representation (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.REPRESENTATION", false]], "reset() (metricmanager method)": [[84, "fl4health.metrics.metric_managers.MetricManager.reset", false]], "reset() (nnunetdataloaderwrapper method)": [[183, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.reset", false]], "reset_beta_priors() (fedpm method)": [[164, "fl4health.strategies.fedpm.FedPm.reset_beta_priors", false]], "reset_sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.reset_sample", false]], "restore_random_state() (in module fl4health.utils.random)": [[188, "fl4health.utils.random.restore_random_state", false]], "rocauc (class in fl4health.metrics)": [[78, "fl4health.metrics.RocAuc", false]], "rocauc (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.RocAuc", false]], "round (wandbsteptype attribute)": [[134, "fl4health.reporting.WandBStepType.ROUND", false], [138, "fl4health.reporting.wandb_reporter.WandBStepType.ROUND", false]], "safe_global_model() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.safe_global_model", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.safe_global_model", false]], "safe_global_model() (dittopersonalizedprotocol method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedProtocol.safe_global_model", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.safe_global_model", false]], "sample() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample", false]], "sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.sample", false]], "sample_all() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_all", false]], "sample_fraction() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_fraction", false]], "sample_fraction() (fixedsamplingbyfractionclientmanager method)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager.sample_fraction", false]], "sample_fraction() (poissonsamplingclientmanager method)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager.sample_fraction", false]], "sample_one() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_one", false]], "sampling() (conditionalvae method)": [[97, "fl4health.model_bases.autoencoders_base.ConditionalVae.sampling", false]], "sampling() (variationalae method)": [[97, "fl4health.model_bases.autoencoders_base.VariationalAe.sampling", false]], "samplingstrategy (class in fl4health.privacy.moments_accountant)": [[133, "fl4health.privacy.moments_accountant.SamplingStrategy", false]], "save_attribute() (abstractsnapshotter method)": [[190, "fl4health.utils.snapshotter.AbstractSnapshotter.save_attribute", false]], "save_attribute() (bytessnapshotter method)": [[190, "fl4health.utils.snapshotter.BytesSnapshotter.save_attribute", false]], "save_attribute() (enumsnapshotter method)": [[190, "fl4health.utils.snapshotter.EnumSnapshotter.save_attribute", false]], "save_attribute() (historysnapshotter method)": [[190, "fl4health.utils.snapshotter.HistorySnapshotter.save_attribute", false]], "save_attribute() (lrschedulersnapshotter method)": [[190, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.save_attribute", false]], "save_attribute() (optimizersnapshotter method)": [[190, "fl4health.utils.snapshotter.OptimizerSnapshotter.save_attribute", false]], "save_attribute() (serializableobjectsnapshotter method)": [[190, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.save_attribute", false]], "save_attribute() (singletonsnapshotter method)": [[190, "fl4health.utils.snapshotter.SingletonSnapshotter.save_attribute", false]], "save_attribute() (stringsnapshotter method)": [[190, "fl4health.utils.snapshotter.StringSnapshotter.save_attribute", false]], "save_attribute() (torchmodulesnapshotter method)": [[190, "fl4health.utils.snapshotter.TorchModuleSnapshotter.save_attribute", false]], "save_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_checkpoint", false]], "save_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.save_client_state", false]], "save_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.save_model", false]], "save_random_state() (in module fl4health.utils.random)": [[188, "fl4health.utils.random.save_random_state", false]], "save_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.save_server_state", false]], "save_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.save_state", false]], "save_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.save_state", false]], "save_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_state", false]], "save_to_json() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[62, "fl4health.datasets.skin_cancer.preprocess_skin.save_to_json", false]], "save_to_pkl() (in module fl4health.datasets.rxrx1.preprocess)": [[59, "fl4health.datasets.rxrx1.preprocess.save_to_pkl", false]], "scaffold (class in fl4health.strategies.scaffold)": [[168, "fl4health.strategies.scaffold.Scaffold", false]], "scaffoldclient (class in fl4health.clients.scaffold_client)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient", false]], "scaffoldserver (class in fl4health.servers.scaffold_server)": [[152, "fl4health.servers.scaffold_server.ScaffoldServer", false]], "scaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule", false]], "select_by_indices() (in module fl4health.utils.dataset)": [[174, "fl4health.utils.dataset.select_by_indices", false]], "select_by_percentage() (layerselectionfunctionconstructor method)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_percentage", false]], "select_by_threshold() (layerselectionfunctionconstructor method)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_threshold", false]], "select_layers_by_percentage() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_percentage", false]], "select_layers_by_threshold() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_threshold", false]], "select_parameters() (dynamiclayerexchanger method)": [[118, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.select_parameters", false]], "select_parameters() (partialparameterexchanger method)": [[123, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.select_parameters", false]], "select_parameters() (sparsecooparameterexchanger method)": [[124, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.select_parameters", false]], "select_scores_and_sample_masks() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.select_scores_and_sample_masks", false]], "select_zeroeth_element() (in module fl4health.utils.functions)": [[177, "fl4health.utils.functions.select_zeroeth_element", false]], "sequential_forward() (moonmodel method)": [[109, "fl4health.model_bases.moon_base.MoonModel.sequential_forward", false]], "sequential_forward() (sequentiallysplitmodel method)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.sequential_forward", false]], "sequentiallysplitexchangebasemodel (class in fl4health.model_bases.sequential_split_models)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel", false]], "sequentiallysplitmodel (class in fl4health.model_bases.sequential_split_models)": [[114, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel", false]], "serializableobjectsnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.SerializableObjectSnapshotter", false]], "serverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer", false]], "set_all_random_seeds() (in module fl4health.utils.random)": [[188, "fl4health.utils.random.set_all_random_seeds", false]], "set_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.set_attribute", false]], "set_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.set_attribute", false]], "set_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_attribute", false]], "set_checkpoint_path() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_checkpoint_path", false]], "set_data_mean() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.set_data_mean", false]], "set_fit_request() (textcolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_fit_request", false]], "set_fit_request() (textmulticolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_fit_request", false]], "set_initial_global_tensors() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_initial_global_tensors", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedprotocol method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedProtocol.set_initial_global_tensors", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.set_initial_global_tensors", false]], "set_initial_global_tensors() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_initial_global_tensors", false]], "set_nnunet_env() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.set_nnunet_env", false]], "set_nnunet_env_and_reload_modules() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.set_nnunet_env_and_reload_modules", false]], "set_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.set_optimizer", false]], "set_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_optimizer", false]], "set_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_optimizer", false]], "set_optimizer() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_optimizer", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_optimizer", false]], "set_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.set_optimizer", false]], "set_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.set_optimizer", false]], "set_optimizer() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.set_optimizer", false]], "set_pack_losses_with_val_metrics() (in module fl4health.utils.client)": [[171, "fl4health.utils.client.set_pack_losses_with_val_metrics", false]], "set_parameters() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.set_parameters", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.set_parameters", false]], "set_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.set_parameters", false]], "set_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_parameters", false]], "set_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_parameters", false]], "set_parameters() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_parameters", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_parameters", false]], "set_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.set_parameters", false]], "set_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.set_parameters", false]], "set_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_parameters", false]], "set_parameters() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.set_parameters", false]], "set_parameters() (mrmtlclient method)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient.set_parameters", false]], "set_parameters() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.set_parameters", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.set_parameters", false]], "set_parameters() (numpyclientminimalprotocol method)": [[90, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.set_parameters", false]], "set_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.set_parameters", false]], "set_parameters() (partialweightexchangeclient method)": [[52, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.set_parameters", false]], "set_parameters() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.set_parameters", false]], "set_principal_components() (pcamodule method)": [[112, "fl4health.model_bases.pca.PcaModule.set_principal_components", false]], "set_transform_request() (textcolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_transform_request", false]], "set_transform_request() (textmulticolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_transform_request", false]], "setup_client() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.setup_client", false]], "setup_client() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.setup_client", false]], "setup_client() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.setup_client", false]], "setup_client() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.setup_client", false]], "setup_client() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.setup_client", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.setup_client", false]], "setup_client() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.setup_client", false]], "setup_client() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.setup_client", false]], "setup_client() (fedbnclient method)": [[33, "fl4health.clients.fedbn_client.FedBnClient.setup_client", false]], "setup_client() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.setup_client", false]], "setup_client() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.setup_client", false]], "setup_client() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.setup_client", false]], "setup_client() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.setup_client", false]], "setup_client() (flexibleclientprotocolpresetup method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.setup_client", false]], "setup_client() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.setup_client", false]], "setup_client() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.setup_client", false]], "setup_client() (instanceleveldpclient method)": [[44, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_client", false]], "setup_client() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.setup_client", false]], "setup_client() (mrmtlclient method)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient.setup_client", false]], "setup_client() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.setup_client", false]], "setup_client() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.setup_client", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.setup_client", false]], "setup_client() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.setup_client", false]], "setup_client() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.setup_client", false]], "setup_client() (partialweightexchangeclient method)": [[52, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.setup_client", false]], "setup_client() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.setup_client", false]], "setup_client_and_return_all_model_parameters() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.setup_client_and_return_all_model_parameters", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.setup_client_and_return_all_model_parameters", false]], "setup_client_and_return_all_model_parameters() (adaptivedriftconstrainedprotocol method)": [[89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.setup_client_and_return_all_model_parameters", false]], "setup_client_and_return_all_model_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.setup_client_and_return_all_model_parameters", false]], "setup_context() (bernoullisample static method)": [[177, "fl4health.utils.functions.BernoulliSample.setup_context", false]], "setup_opacus_objects() (instanceleveldpclient method)": [[44, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_opacus_objects", false]], "setup_privacy_accountant() (clientleveldpfedavgserver method)": [[145, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.setup_privacy_accountant", false]], "setup_privacy_accountant() (instanceleveldpserver method)": [[148, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.setup_privacy_accountant", false]], "should_layer_be_excluded() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_layer_be_excluded", false]], "should_module_be_excluded() (layerexchangerwithexclusions method)": [[118, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_module_be_excluded", false]], "should_stop() (earlystopper method)": [[176, "fl4health.utils.early_stopper.EarlyStopper.should_stop", false]], "shutdown() (basereporter method)": [[135, "fl4health.reporting.base_reporter.BaseReporter.shutdown", false]], "shutdown() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.shutdown", false]], "shutdown() (filereporter method)": [[136, "fl4health.reporting.json_reporter.FileReporter.shutdown", false]], "shutdown() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.shutdown", false]], "shutdown() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.shutdown", false]], "shutdown() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.shutdown", false]], "shutdown() (nnunetdataloaderwrapper method)": [[183, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.shutdown", false]], "shutdown() (reportsmanager method)": [[137, "fl4health.reporting.reports_manager.ReportsManager.shutdown", false]], "shutdown() (wandbreporter method)": [[134, "fl4health.reporting.WandBReporter.shutdown", false], [138, "fl4health.reporting.wandb_reporter.WandBReporter.shutdown", false]], "shutdown_dataloader() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.shutdown_dataloader", false]], "shutdown_dataloader() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.shutdown_dataloader", false]], "sigmoid_inverse() (in module fl4health.utils.functions)": [[177, "fl4health.utils.functions.sigmoid_inverse", false]], "signal_for_type() (fairnessmetrictype class method)": [[161, "fl4health.strategies.feddg_ga.FairnessMetricType.signal_for_type", false]], "signalfortypeerror": [[161, "fl4health.strategies.feddg_ga.SignalForTypeError", false]], "simplemetric (class in fl4health.metrics)": [[78, "fl4health.metrics.SimpleMetric", false]], "simplemetric (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.SimpleMetric", false]], "singletonsnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.SingletonSnapshotter", false]], "smallest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_final_magnitude_scores", false]], "smallest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_increase_in_magnitude_scores", false]], "smallest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[122, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_magnitude_change_scores", false]], "sparsecooparameterexchanger (class in fl4health.parameter_exchange.sparse_coo_parameter_exchanger)": [[124, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger", false]], "sparsecooparameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[121, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker", false]], "sparsecooservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule", false]], "split_data_and_targets() (in module fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.split_data_and_targets", false]], "split_model_weights_and_clipping_bits() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.split_model_weights_and_clipping_bits", false]], "ssltensordataset (class in fl4health.utils.dataset)": [[174, "fl4health.utils.dataset.SslTensorDataset", false]], "standard_normal_kl_divergence_loss() (vaeloss method)": [[128, "fl4health.preprocessing.autoencoders.loss.VaeLoss.standard_normal_kl_divergence_loss", false]], "start_run() (wandbreporter method)": [[134, "fl4health.reporting.WandBReporter.start_run", false], [138, "fl4health.reporting.wandb_reporter.WandBReporter.start_run", false]], "statecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer", false]], "step (wandbsteptype attribute)": [[134, "fl4health.reporting.WandBStepType.STEP", false], [138, "fl4health.reporting.wandb_reporter.WandBStepType.STEP", false]], "strategywithpolling (class in fl4health.strategies.strategy_with_poll)": [[169, "fl4health.strategies.strategy_with_poll.StrategyWithPolling", false]], "streamtologger (class in fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.StreamToLogger", false]], "string (tabulartype attribute)": [[69, "fl4health.feature_alignment.tabular_type.TabularType.STRING", false]], "stringsnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.StringSnapshotter", false]], "subsample() (dirichletlabelbasedsampler method)": [[189, "fl4health.utils.sampler.DirichletLabelBasedSampler.subsample", false]], "subsample() (labelbasedsampler method)": [[189, "fl4health.utils.sampler.LabelBasedSampler.subsample", false]], "subsample() (minoritylabelbasedsampler method)": [[189, "fl4health.utils.sampler.MinorityLabelBasedSampler.subsample", false]], "sum (parallelfeaturejoinmode attribute)": [[110, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.SUM", false]], "syntheticdataset (class in fl4health.utils.dataset)": [[174, "fl4health.utils.dataset.SyntheticDataset", false]], "syntheticfedproxdataset (class in fl4health.utils.data_generation)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset", false]], "syntheticiidfedproxdataset (class in fl4health.utils.data_generation)": [[173, "fl4health.utils.data_generation.SyntheticIidFedProxDataset", false]], "syntheticnoniidfedproxdataset (class in fl4health.utils.data_generation)": [[173, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset", false]], "tabularfeature (class in fl4health.feature_alignment.tabular_feature)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature", false]], "tabulartype (class in fl4health.feature_alignment.tabular_type)": [[69, "fl4health.feature_alignment.tabular_type.TabularType", false]], "task01_braintumour (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK01_BRAINTUMOUR", false]], "task02_heart (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK02_HEART", false]], "task03_liver (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK03_LIVER", false]], "task04_hippocampus (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK04_HIPPOCAMPUS", false]], "task05_prostate (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK05_PROSTATE", false]], "task06_lung (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK06_LUNG", false]], "task07_pancreas (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK07_PANCREAS", false]], "task08_hepaticvessel (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK08_HEPATICVESSEL", false]], "task09_spleen (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK09_SPLEEN", false]], "task10_colon (msddataset attribute)": [[182, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK10_COLON", false]], "tensordataset (class in fl4health.utils.dataset)": [[174, "fl4health.utils.dataset.TensorDataset", false]], "test (loggingmode attribute)": [[179, "fl4health.utils.logging.LoggingMode.TEST", false]], "test_loader (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.test_loader", false]], "test_loader (flexibleclientprotocol attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.test_loader", false]], "test_loader (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.test_loader", false]], "test_prefix (metricprefix attribute)": [[79, "fl4health.metrics.base_metrics.MetricPrefix.TEST_PREFIX", false]], "textcolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer", false]], "textmulticolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer", false]], "threshold_tensor() (in module fl4health.metrics.metrics_utils)": [[86, "fl4health.metrics.metrics_utils.threshold_tensor", false]], "to_json() (tabularfeature method)": [[68, "fl4health.feature_alignment.tabular_feature.TabularFeature.to_json", false]], "tonumpy (class in fl4health.utils.load_data)": [[178, "fl4health.utils.load_data.ToNumpy", false]], "torchmetric (class in fl4health.metrics)": [[78, "fl4health.metrics.TorchMetric", false]], "torchmetric (class in fl4health.metrics.metrics)": [[85, "fl4health.metrics.metrics.TorchMetric", false]], "torchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer", false]], "torchmodulesnapshotter (class in fl4health.utils.snapshotter)": [[190, "fl4health.utils.snapshotter.TorchModuleSnapshotter", false]], "train (loggingmode attribute)": [[179, "fl4health.utils.logging.LoggingMode.TRAIN", false]], "train_by_epochs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_epochs", false]], "train_by_epochs() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.train_by_epochs", false]], "train_by_steps() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_steps", false]], "train_fedrep_by_epochs() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_epochs", false]], "train_fedrep_by_steps() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_steps", false]], "train_kernel() (deepmmdloss method)": [[73, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.train_kernel", false]], "train_loader (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.train_loader", false]], "train_loader (flexibleclientprotocol attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.train_loader", false]], "train_loader (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.train_loader", false]], "train_step() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.train_step", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.train_step", false]], "train_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.train_step", false]], "train_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_step", false]], "train_step() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.train_step", false]], "train_step() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.train_step", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.train_step", false]], "train_step() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.train_step", false]], "train_step() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_step", false]], "train_step() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.train_step", false]], "train_step() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.train_step", false]], "train_step() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.train_step", false]], "traininglosses (class in fl4health.utils.losses)": [[180, "fl4health.utils.losses.TrainingLosses", false]], "transform() (textcolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.transform", false]], "transform() (textmulticolumntransformer method)": [[65, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.transform", false]], "transform_gradients() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_gradients", false]], "transform_gradients() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.transform_gradients", false]], "transform_gradients() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_gradients", false]], "transform_gradients() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.transform_gradients", false]], "transform_gradients() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.transform_gradients", false]], "transform_input() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.transform_input", false]], "transform_target() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_target", false]], "transform_target() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_target", false]], "transformsmetric (class in fl4health.metrics.compound_metrics)": [[80, "fl4health.metrics.compound_metrics.TransformsMetric", false]], "true_negative (classificationoutcome attribute)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.TRUE_NEGATIVE", false]], "true_positive (classificationoutcome attribute)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationOutcome.TRUE_POSITIVE", false]], "two_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[173, "fl4health.utils.data_generation.SyntheticFedProxDataset.two_layer_map_inputs_to_outputs", false]], "unfreeze_base_module() (fedrepmodel method)": [[100, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_base_module", false]], "unfreeze_head_module() (fedrepmodel method)": [[100, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_head_module", false]], "uniform_evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.uniform_evaluate_metrics_aggregation_fn", false]], "uniform_metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.uniform_metric_aggregation", false]], "uniform_normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[83, "fl4health.metrics.metric_aggregation.uniform_normalize_metrics", false]], "unpack_input_condition() (autoencoderdatasetconverter static method)": [[175, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.unpack_input_condition", false]], "unpack_model_output() (vaeloss method)": [[128, "fl4health.preprocessing.autoencoders.loss.VaeLoss.unpack_model_output", false]], "unpack_parameters() (fullparameterexchangerwithpacking method)": [[119, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.unpack_parameters", false]], "unpack_parameters() (parameterpacker method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.unpack_parameters", false]], "unpack_parameters() (parameterpackeradaptiveconstraint method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithclippingbit method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithcontrolvariates method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithlayernames method)": [[121, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.unpack_parameters", false]], "unpack_parameters() (partialparameterexchanger method)": [[123, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.unpack_parameters", false]], "unpack_parameters() (sparsecooparameterpacker method)": [[121, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.unpack_parameters", false]], "unset_all_random_seeds() (in module fl4health.utils.random)": [[188, "fl4health.utils.random.unset_all_random_seeds", false]], "unweighted_aggregate() (fedavgdynamiclayer method)": [[158, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.unweighted_aggregate", false]], "unweighted_aggregate() (fedavgsparsecootensor method)": [[159, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.unweighted_aggregate", false]], "update() (classificationmetric method)": [[82, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.update", false]], "update() (emametric method)": [[80, "fl4health.metrics.compound_metrics.EmaMetric.update", false]], "update() (lossmeter method)": [[180, "fl4health.utils.losses.LossMeter.update", false]], "update() (metric method)": [[79, "fl4health.metrics.base_metrics.Metric.update", false]], "update() (metricmanager method)": [[84, "fl4health.metrics.metric_managers.MetricManager.update", false]], "update() (simplemetric method)": [[78, "fl4health.metrics.SimpleMetric.update", false], [85, "fl4health.metrics.metrics.SimpleMetric.update", false]], "update() (torchmetric method)": [[78, "fl4health.metrics.TorchMetric.update", false], [85, "fl4health.metrics.metrics.TorchMetric.update", false]], "update() (transformsmetric method)": [[80, "fl4health.metrics.compound_metrics.TransformsMetric.update", false]], "update_after_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.update_after_step", false]], "update_after_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_step", false]], "update_after_step() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_after_step", false]], "update_after_step() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_after_step", false]], "update_after_step() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_after_step", false]], "update_after_train() (adaptivedriftconstrainedmixin method)": [[88, "fl4health.mixins.AdaptiveDriftConstrainedMixin.update_after_train", false], [89, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.update_after_train", false]], "update_after_train() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.update_after_train", false]], "update_after_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_train", false]], "update_after_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_after_train", false]], "update_after_train() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.update_after_train", false]], "update_after_train() (numpyclientminimalprotocol method)": [[90, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.update_after_train", false]], "update_after_train() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.update_after_train", false]], "update_after_train() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.update_after_train", false]], "update_alpha() (apflmodule method)": [[96, "fl4health.model_bases.apfl_base.ApflModule.update_alpha", false]], "update_before_epoch() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_epoch", false]], "update_before_fit() (flserver method)": [[144, "fl4health.servers.base_server.FlServer.update_before_fit", false]], "update_before_fit() (nnunetserver method)": [[150, "fl4health.servers.nnunet_server.NnunetServer.update_before_fit", false]], "update_before_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_step", false]], "update_before_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_train", false]], "update_before_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_before_train", false]], "update_before_train() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.update_before_train", false]], "update_before_train() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_before_train", false]], "update_before_train() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_before_train", false]], "update_before_train() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.update_before_train", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.update_before_train", false]], "update_before_train() (fedproxclient method)": [[32, "fl4health.clients.fed_prox_client.FedProxClient.update_before_train", false]], "update_before_train() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.update_before_train", false]], "update_before_train() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.update_before_train", false]], "update_before_train() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.update_before_train", false]], "update_before_train() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.update_before_train", false]], "update_before_train() (moonclient method)": [[49, "fl4health.clients.moon_client.MoonClient.update_before_train", false]], "update_before_train() (mrmtlclient method)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient.update_before_train", false]], "update_before_train() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_before_train", false]], "update_before_train() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.update_before_train", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.update_before_train", false]], "update_before_train() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.update_before_train", false]], "update_before_train() (perfclclient method)": [[53, "fl4health.clients.perfcl_client.PerFclClient.update_before_train", false]], "update_buffers() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_buffers", false]], "update_buffers() (dittomkmmdclient method)": [[46, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_buffers", false]], "update_buffers() (mrmtlmkmmdclient method)": [[47, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_buffers", false]], "update_clipping_bound() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_clipping_bound", false]], "update_control_variates() (scaffoldclient method)": [[54, "fl4health.clients.scaffold_client.ScaffoldClient.update_control_variates", false]], "update_current_weights() (clientleveldpfedavgm method)": [[157, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_current_weights", false]], "update_lr_schedulers() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_lr_schedulers", false]], "update_metric_manager() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_metric_manager", false]], "update_metric_manager() (flexiblennunetclient method)": [[42, "fl4health.clients.flexible.nnunet.FlexibleNnunetClient.update_metric_manager", false]], "update_metric_manager() (nnunetclient method)": [[51, "fl4health.clients.nnunet_client.NnunetClient.update_metric_manager", false]], "update_target_transform() (basedataset method)": [[174, "fl4health.utils.dataset.BaseDataset.update_target_transform", false]], "update_transform() (basedataset method)": [[174, "fl4health.utils.dataset.BaseDataset.update_transform", false]], "update_weights_by_ga() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.update_weights_by_ga", false]], "use_default_signal_handlers() (in module fl4health.utils.nnunet_utils)": [[183, "fl4health.utils.nnunet_utils.use_default_signal_handlers", false]], "vaeloss (class in fl4health.preprocessing.autoencoders.loss)": [[128, "fl4health.preprocessing.autoencoders.loss.VaeLoss", false]], "vaeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[127, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor", false]], "val_loader (dittopersonalizedprotocol attribute)": [[92, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.val_loader", false]], "val_loader (flexibleclientprotocol attribute)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.val_loader", false]], "val_loader (mrmtlpersonalizedprotocol attribute)": [[93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol.val_loader", false]], "val_prefix (metricprefix attribute)": [[79, "fl4health.metrics.base_metrics.MetricPrefix.VAL_PREFIX", false]], "val_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.val_step", false]], "val_step() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.val_step", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.val_step", false]], "val_step() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.val_step", false]], "val_step() (gpflclient method)": [[43, "fl4health.clients.gpfl_client.GpflClient.val_step", false]], "validate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.validate", false]], "validate() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.validate", false]], "validate() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.validate", false]], "validate() (dittopersonalizedmixin method)": [[91, "fl4health.mixins.personalized.DittoPersonalizedMixin.validate", false], [92, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.validate", false]], "validate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate", false]], "validate() (flexibleclientprotocol method)": [[90, "fl4health.mixins.core_protocols.FlexibleClientProtocol.validate", false]], "validate() (modelmergeclient method)": [[48, "fl4health.clients.model_merge_client.ModelMergeClient.validate", false]], "validate() (mrmtlclient method)": [[50, "fl4health.clients.mr_mtl_client.MrMtlClient.validate", false]], "validate() (mrmtlpersonalizedmixin method)": [[91, "fl4health.mixins.personalized.MrMtlPersonalizedMixin.validate", false], [93, "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin.validate", false]], "validate_on_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate_on_model", false]], "validation (loggingmode attribute)": [[179, "fl4health.utils.logging.LoggingMode.VALIDATION", false]], "variationalae (class in fl4health.model_bases.autoencoders_base)": [[97, "fl4health.model_bases.autoencoders_base.VariationalAe", false]], "vote (ensembleaggregationmode attribute)": [[98, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.VOTE", false]], "wait_and_filter() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.wait_and_filter", false]], "wandbreporter (class in fl4health.reporting)": [[134, "fl4health.reporting.WandBReporter", false]], "wandbreporter (class in fl4health.reporting.wandb_reporter)": [[138, "fl4health.reporting.wandb_reporter.WandBReporter", false]], "wandbsteptype (class in fl4health.reporting)": [[134, "fl4health.reporting.WandBStepType", false]], "wandbsteptype (class in fl4health.reporting.wandb_reporter)": [[138, "fl4health.reporting.wandb_reporter.WandBStepType", false]], "warmedupmodule (class in fl4health.preprocessing.warmed_up_module)": [[130, "fl4health.preprocessing.warmed_up_module.WarmedUpModule", false]], "warning (loglevel attribute)": [[191, "fl4health.utils.typing.LogLevel.WARNING", false]], "weight_and_aggregate_results() (feddgga method)": [[161, "fl4health.strategies.feddg_ga.FedDgGa.weight_and_aggregate_results", false]], "weightdriftloss (class in fl4health.losses.weight_drift_loss)": [[77, "fl4health.losses.weight_drift_loss.WeightDriftLoss", false]], "weighted_aggregate() (fedavgdynamiclayer method)": [[158, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.weighted_aggregate", false]], "weighted_aggregate() (fedavgsparsecootensor method)": [[159, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.weighted_aggregate", false]], "write() (streamtologger method)": [[183, "fl4health.utils.nnunet_utils.StreamToLogger.write", false]]}, "objects": {"": [[8, 0, 0, "-", "fl4health"]], "fl4health": [[9, 0, 0, "-", "checkpointing"], [15, 0, 0, "-", "client_managers"], [20, 0, 0, "-", "clients"], [56, 0, 0, "-", "datasets"], [63, 0, 0, "-", "feature_alignment"], [70, 0, 0, "-", "losses"], [78, 0, 0, "-", "metrics"], [88, 0, 0, "-", "mixins"], [95, 0, 0, "-", "model_bases"], [115, 0, 0, "-", "parameter_exchange"], [125, 0, 0, "-", "preprocessing"], [131, 0, 0, "-", "privacy"], [134, 0, 0, "-", "reporting"], [139, 0, 0, "-", "servers"], [154, 0, 0, "-", "strategies"], [170, 0, 0, "-", "utils"]], "fl4health.checkpointing": [[10, 0, 0, "-", "checkpointer"], [11, 0, 0, "-", "client_module"], [12, 0, 0, "-", "opacus_checkpointer"], [13, 0, 0, "-", "server_module"], [14, 0, 0, "-", "state_checkpointer"]], "fl4health.checkpointing.checkpointer": [[10, 1, 1, "", "BestLossTorchModuleCheckpointer"], [10, 1, 1, "", "BestMetricTorchModuleCheckpointer"], [10, 1, 1, "", "FunctionTorchModuleCheckpointer"], [10, 1, 1, "", "LatestTorchModuleCheckpointer"], [10, 1, 1, "", "TorchModuleCheckpointer"]], "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"]], "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "load_checkpoint"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.client_module": [[11, 1, 1, "", "CheckpointMode"], [11, 1, 1, "", "ClientCheckpointAndStateModule"]], "fl4health.checkpointing.client_module.CheckpointMode": [[11, 3, 1, "", "POST_AGGREGATION"], [11, 3, 1, "", "PRE_AGGREGATION"]], "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"], [11, 2, 1, "", "maybe_load_state"], [11, 2, 1, "", "save_state"]], "fl4health.checkpointing.opacus_checkpointer": [[12, 1, 1, "", "BestLossOpacusCheckpointer"], [12, 1, 1, "", "LatestOpacusCheckpointer"], [12, 1, 1, "", "OpacusCheckpointer"]], "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer": [[12, 2, 1, "", "load_best_checkpoint_into_model"], [12, 2, 1, "", "load_checkpoint"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.server_module": [[13, 1, 1, "", "AdaptiveConstraintServerCheckpointAndStateModule"], [13, 1, 1, "", "BaseServerCheckpointAndStateModule"], [13, 1, 1, "", "ClippingBitServerCheckpointAndStateModule"], [13, 1, 1, "", "DpScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "LayerNamesServerCheckpointAndStateModule"], [13, 1, 1, "", "NnUnetServerCheckpointAndStateModule"], [13, 1, 1, "", "OpacusServerCheckpointAndStateModule"], [13, 1, 1, "", "PackingServerCheckpointAndAndStateModule"], [13, 1, 1, "", "ScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "SparseCooServerCheckpointAndStateModule"]], "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "maybe_checkpoint"], [13, 2, 1, "", "maybe_load_state"], [13, 2, 1, "", "save_state"]], "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer": [[14, 1, 1, "", "ClientStateCheckpointer"], [14, 1, 1, "", "NnUnetServerStateCheckpointer"], [14, 1, 1, "", "ServerStateCheckpointer"], [14, 1, 1, "", "StateCheckpointer"]], "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_client_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_client_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer": [[14, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_server_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_server_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.StateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "add_to_snapshot_attr"], [14, 2, 1, "", "checkpoint_exists"], [14, 2, 1, "", "delete_from_snapshot_attr"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "load_checkpoint"], [14, 2, 1, "", "load_state"], [14, 2, 1, "", "save_checkpoint"], [14, 2, 1, "", "save_state"], [14, 2, 1, "", "set_attribute"], [14, 2, 1, "", "set_checkpoint_path"]], "fl4health.client_managers": [[16, 0, 0, "-", "base_sampling_manager"], [17, 0, 0, "-", "fixed_sampling_client_manager"], [18, 0, 0, "-", "fixed_without_replacement_manager"], [19, 0, 0, "-", "poisson_sampling_manager"]], "fl4health.client_managers.base_sampling_manager": [[16, 1, 1, "", "BaseFractionSamplingManager"]], "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager": [[16, 2, 1, "", "sample"], [16, 2, 1, "", "sample_all"], [16, 2, 1, "", "sample_fraction"], [16, 2, 1, "", "sample_one"], [16, 2, 1, "", "wait_and_filter"]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, 1, 1, "", "FixedSamplingClientManager"]], "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "reset_sample"], [17, 2, 1, "", "sample"]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, 1, 1, "", "FixedSamplingByFractionClientManager"]], "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager": [[18, 2, 1, "", "sample_fraction"]], "fl4health.client_managers.poisson_sampling_manager": [[19, 1, 1, "", "PoissonSamplingClientManager"]], "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager": [[19, 2, 1, "", "sample_fraction"]], "fl4health.clients": [[21, 0, 0, "-", "adaptive_drift_constraint_client"], [22, 0, 0, "-", "apfl_client"], [23, 0, 0, "-", "basic_client"], [24, 0, 0, "-", "clipping_client"], [25, 0, 0, "-", "constrained_fenda_client"], [26, 0, 0, "-", "deep_mmd_clients"], [28, 0, 0, "-", "ditto_client"], [29, 0, 0, "-", "ensemble_client"], [30, 0, 0, "-", "evaluate_client"], [31, 0, 0, "-", "fed_pca_client"], [32, 0, 0, "-", "fed_prox_client"], [33, 0, 0, "-", "fedbn_client"], [34, 0, 0, "-", "fedper_client"], [35, 0, 0, "-", "fedpm_client"], [36, 0, 0, "-", "fedrep_client"], [37, 0, 0, "-", "fenda_client"], [38, 0, 0, "-", "fenda_ditto_client"], [39, 0, 0, "-", "flash_client"], [40, 0, 0, "-", "flexible"], [43, 0, 0, "-", "gpfl_client"], [44, 0, 0, "-", "instance_level_dp_client"], [45, 0, 0, "-", "mkmmd_clients"], [48, 0, 0, "-", "model_merge_client"], [49, 0, 0, "-", "moon_client"], [50, 0, 0, "-", "mr_mtl_client"], [51, 0, 0, "-", "nnunet_client"], [52, 0, 0, "-", "partial_weight_exchange_client"], [53, 0, 0, "-", "perfcl_client"], [54, 0, 0, "-", "scaffold_client"]], "fl4health.clients.adaptive_drift_constraint_client": [[21, 1, 1, "", "AdaptiveDriftConstraintClient"]], "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "compute_penalty_loss"], [21, 2, 1, "", "compute_training_loss"], [21, 2, 1, "", "get_parameter_exchanger"], [21, 2, 1, "", "get_parameters"], [21, 2, 1, "", "set_parameters"], [21, 2, 1, "", "update_after_train"]], "fl4health.clients.apfl_client": [[22, 1, 1, "", "ApflClient"]], "fl4health.clients.apfl_client.ApflClient": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "compute_loss_and_additional_losses"], [22, 2, 1, "", "get_optimizer"], [22, 2, 1, "", "get_parameter_exchanger"], [22, 2, 1, "", "is_start_of_local_training"], [22, 2, 1, "", "set_optimizer"], [22, 2, 1, "", "train_step"], [22, 2, 1, "", "update_after_step"]], "fl4health.clients.basic_client": [[23, 1, 1, "", "BasicClient"]], "fl4health.clients.basic_client.BasicClient": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "compute_evaluation_loss"], [23, 2, 1, "", "compute_loss_and_additional_losses"], [23, 2, 1, "", "compute_training_loss"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "get_client_specific_logs"], [23, 2, 1, "", "get_client_specific_reports"], [23, 2, 1, "", "get_criterion"], [23, 2, 1, "", "get_data_loaders"], [23, 2, 1, "", "get_lr_scheduler"], [23, 2, 1, "", "get_model"], [23, 2, 1, "", "get_optimizer"], [23, 2, 1, "", "get_parameter_exchanger"], [23, 2, 1, "", "get_parameters"], [23, 2, 1, "", "get_properties"], [23, 2, 1, "", "get_test_data_loader"], [23, 2, 1, "", "initialize_all_model_weights"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "process_config"], [23, 2, 1, "", "set_optimizer"], [23, 2, 1, "", "set_parameters"], [23, 2, 1, "", "setup_client"], [23, 2, 1, "", "setup_client_and_return_all_model_parameters"], [23, 2, 1, "", "shutdown"], [23, 2, 1, "", "train_by_epochs"], [23, 2, 1, "", "train_by_steps"], [23, 2, 1, "", "train_step"], [23, 2, 1, "", "transform_gradients"], [23, 2, 1, "", "transform_target"], [23, 2, 1, "", "update_after_step"], [23, 2, 1, "", "update_after_train"], [23, 2, 1, "", "update_before_epoch"], [23, 2, 1, "", "update_before_step"], [23, 2, 1, "", "update_before_train"], [23, 2, 1, "", "update_lr_schedulers"], [23, 2, 1, "", "update_metric_manager"], [23, 2, 1, "", "val_step"], [23, 2, 1, "", "validate"]], "fl4health.clients.clipping_client": [[24, 1, 1, "", "NumpyClippingClient"]], "fl4health.clients.clipping_client.NumpyClippingClient": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "calculate_parameters_norm"], [24, 2, 1, "", "clip_parameters"], [24, 2, 1, "", "compute_weight_update_and_clip"], [24, 2, 1, "", "get_parameter_exchanger"], [24, 2, 1, "", "get_parameters"], [24, 2, 1, "", "set_parameters"], [24, 2, 1, "", "setup_client"]], "fl4health.clients.constrained_fenda_client": [[25, 1, 1, "", "ConstrainedFendaClient"]], "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "compute_evaluation_loss"], [25, 2, 1, "", "compute_loss_and_additional_losses"], [25, 2, 1, "", "get_parameter_exchanger"], [25, 2, 1, "", "predict"], [25, 2, 1, "", "update_after_train"], [25, 2, 1, "", "update_before_train"]], "fl4health.clients.deep_mmd_clients": [[27, 0, 0, "-", "ditto_deep_mmd_client"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, 1, 1, "", "DittoDeepMmdClient"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "compute_evaluation_loss"], [27, 2, 1, "", "compute_loss_and_additional_losses"], [27, 2, 1, "", "compute_training_loss"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "setup_client"], [27, 2, 1, "", "update_after_step"], [27, 2, 1, "", "update_before_train"], [27, 2, 1, "", "update_buffers"], [27, 2, 1, "", "validate"]], "fl4health.clients.ditto_client": [[28, 1, 1, "", "DittoClient"]], "fl4health.clients.ditto_client.DittoClient": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "compute_evaluation_loss"], [28, 2, 1, "", "compute_loss_and_additional_losses"], [28, 2, 1, "", "compute_training_loss"], [28, 2, 1, "", "get_global_model"], [28, 2, 1, "", "get_optimizer"], [28, 2, 1, "", "get_parameters"], [28, 2, 1, "", "initialize_all_model_weights"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "set_initial_global_tensors"], [28, 2, 1, "", "set_optimizer"], [28, 2, 1, "", "set_parameters"], [28, 2, 1, "", "setup_client"], [28, 2, 1, "", "train_step"], [28, 2, 1, "", "update_before_train"], [28, 2, 1, "", "validate"]], "fl4health.clients.ensemble_client": [[29, 1, 1, "", "EnsembleClient"]], "fl4health.clients.ensemble_client.EnsembleClient": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "compute_evaluation_loss"], [29, 2, 1, "", "compute_training_loss"], [29, 2, 1, "", "get_optimizer"], [29, 2, 1, "", "set_optimizer"], [29, 2, 1, "", "setup_client"], [29, 2, 1, "", "train_step"]], "fl4health.clients.evaluate_client": [[30, 1, 1, "", "EvaluateClient"]], "fl4health.clients.evaluate_client.EvaluateClient": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "evaluate"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "get_data_loader"], [30, 2, 1, "", "get_local_model"], [30, 2, 1, "", "get_parameter_exchanger"], [30, 2, 1, "", "get_parameters"], [30, 2, 1, "", "initialize_global_model"], [30, 2, 1, "", "merge_metrics"], [30, 2, 1, "", "set_parameters"], [30, 2, 1, "", "setup_client"], [30, 2, 1, "", "validate"], [30, 2, 1, "", "validate_on_model"]], "fl4health.clients.fed_pca_client": [[31, 1, 1, "", "FedPCAClient"]], "fl4health.clients.fed_pca_client.FedPCAClient": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "evaluate"], [31, 2, 1, "", "fit"], [31, 2, 1, "", "generate_hash"], [31, 2, 1, "", "get_data_loaders"], [31, 2, 1, "", "get_data_tensor"], [31, 2, 1, "", "get_model"], [31, 2, 1, "", "get_parameters"], [31, 2, 1, "", "save_model"], [31, 2, 1, "", "set_parameters"], [31, 2, 1, "", "setup_client"]], "fl4health.clients.fed_prox_client": [[32, 1, 1, "", "FedProxClient"]], "fl4health.clients.fed_prox_client.FedProxClient": [[32, 2, 1, "", "update_before_train"]], "fl4health.clients.fedbn_client": [[33, 1, 1, "", "FedBnClient"]], "fl4health.clients.fedbn_client.FedBnClient": [[33, 2, 1, "", "setup_client"]], "fl4health.clients.fedper_client": [[34, 1, 1, "", "FedPerClient"]], "fl4health.clients.fedper_client.FedPerClient": [[34, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fedpm_client": [[35, 1, 1, "", "FedPmClient"]], "fl4health.clients.fedpm_client.FedPmClient": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get_parameter_exchanger"], [35, 2, 1, "", "setup_client"]], "fl4health.clients.fedrep_client": [[36, 1, 1, "", "FedRepClient"], [36, 1, 1, "", "FedRepTrainMode"]], "fl4health.clients.fedrep_client.FedRepClient": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "fit"], [36, 2, 1, "", "get_optimizer"], [36, 2, 1, "", "get_parameter_exchanger"], [36, 2, 1, "", "process_fed_rep_config"], [36, 2, 1, "", "set_optimizer"], [36, 2, 1, "", "train_fedrep_by_epochs"], [36, 2, 1, "", "train_fedrep_by_steps"], [36, 2, 1, "", "train_step"]], "fl4health.clients.fedrep_client.FedRepTrainMode": [[36, 3, 1, "", "HEAD"], [36, 3, 1, "", "REPRESENTATION"]], "fl4health.clients.fenda_client": [[37, 1, 1, "", "FendaClient"]], "fl4health.clients.fenda_client.FendaClient": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fenda_ditto_client": [[38, 1, 1, "", "FendaDittoClient"]], "fl4health.clients.fenda_ditto_client.FendaDittoClient": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "compute_training_loss"], [38, 2, 1, "", "get_global_model"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_parameters"], [38, 2, 1, "", "predict"], [38, 2, 1, "", "set_initial_global_tensors"], [38, 2, 1, "", "set_parameters"], [38, 2, 1, "", "setup_client"], [38, 2, 1, "", "update_before_train"]], "fl4health.clients.flash_client": [[39, 1, 1, "", "FlashClient"]], "fl4health.clients.flash_client.FlashClient": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "process_config"], [39, 2, 1, "", "setup_client"], [39, 2, 1, "", "train_by_epochs"]], "fl4health.clients.flexible": [[41, 0, 0, "-", "base"], [42, 0, 0, "-", "nnunet"]], "fl4health.clients.flexible.base": [[41, 1, 1, "", "FlexibleClient"]], "fl4health.clients.flexible.base.FlexibleClient": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "predict_with_model"], [41, 2, 1, "", "train_step"], [41, 2, 1, "", "transform_gradients"], [41, 2, 1, "", "val_step"]], "fl4health.clients.flexible.nnunet": [[42, 1, 1, "", "FlexibleNnunetClient"]], "fl4health.clients.flexible.nnunet.FlexibleNnunetClient": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "compute_loss_and_additional_losses"], [42, 2, 1, "", "create_plans"], [42, 2, 1, "", "empty_cache"], [42, 2, 1, "", "get_client_specific_logs"], [42, 2, 1, "", "get_client_specific_reports"], [42, 2, 1, "", "get_criterion"], [42, 2, 1, "", "get_data_loaders"], [42, 2, 1, "", "get_lr_scheduler"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_optimizer"], [42, 2, 1, "", "get_properties"], [42, 2, 1, "", "mask_data"], [42, 2, 1, "", "maybe_extract_fingerprint"], [42, 2, 1, "", "maybe_preprocess"], [42, 2, 1, "", "predict_with_model"], [42, 2, 1, "", "setup_client"], [42, 2, 1, "", "shutdown"], [42, 2, 1, "", "shutdown_dataloader"], [42, 2, 1, "", "update_before_train"], [42, 2, 1, "", "update_metric_manager"]], "fl4health.clients.gpfl_client": [[43, 1, 1, "", "GpflClient"]], "fl4health.clients.gpfl_client.GpflClient": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "calculate_class_sample_proportions"], [43, 2, 1, "", "compute_conditional_inputs"], [43, 2, 1, "", "compute_magnitude_level_loss"], [43, 2, 1, "", "compute_training_loss"], [43, 2, 1, "", "get_optimizer"], [43, 2, 1, "", "get_parameter_exchanger"], [43, 2, 1, "", "set_optimizer"], [43, 2, 1, "", "setup_client"], [43, 2, 1, "", "train_step"], [43, 2, 1, "", "transform_input"], [43, 2, 1, "", "update_before_train"], [43, 2, 1, "", "val_step"]], "fl4health.clients.instance_level_dp_client": [[44, 1, 1, "", "InstanceLevelDpClient"]], "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "setup_client"], [44, 2, 1, "", "setup_opacus_objects"]], "fl4health.clients.mkmmd_clients": [[46, 0, 0, "-", "ditto_mkmmd_client"], [47, 0, 0, "-", "mr_mtl_mkmmd_client"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[46, 1, 1, "", "DittoMkMmdClient"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "compute_loss_and_additional_losses"], [46, 2, 1, "", "compute_training_loss"], [46, 2, 1, "", "predict"], [46, 2, 1, "", "setup_client"], [46, 2, 1, "", "update_after_step"], [46, 2, 1, "", "update_before_train"], [46, 2, 1, "", "update_buffers"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[47, 1, 1, "", "MrMtlMkMmdClient"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "compute_loss_and_additional_losses"], [47, 2, 1, "", "compute_training_loss"], [47, 2, 1, "", "predict"], [47, 2, 1, "", "setup_client"], [47, 2, 1, "", "update_after_step"], [47, 2, 1, "", "update_before_train"], [47, 2, 1, "", "update_buffers"]], "fl4health.clients.model_merge_client": [[48, 1, 1, "", "ModelMergeClient"]], "fl4health.clients.model_merge_client.ModelMergeClient": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "evaluate"], [48, 2, 1, "", "fit"], [48, 2, 1, "", "get_model"], [48, 2, 1, "", "get_parameter_exchanger"], [48, 2, 1, "", "get_parameters"], [48, 2, 1, "", "get_test_data_loader"], [48, 2, 1, "", "set_parameters"], [48, 2, 1, "", "setup_client"], [48, 2, 1, "", "validate"]], "fl4health.clients.moon_client": [[49, 1, 1, "", "MoonClient"]], "fl4health.clients.moon_client.MoonClient": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "compute_evaluation_loss"], [49, 2, 1, "", "compute_loss_and_additional_losses"], [49, 2, 1, "", "compute_training_loss"], [49, 2, 1, "", "predict"], [49, 2, 1, "", "update_after_train"], [49, 2, 1, "", "update_before_train"]], "fl4health.clients.mr_mtl_client": [[50, 1, 1, "", "MrMtlClient"]], "fl4health.clients.mr_mtl_client.MrMtlClient": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "compute_training_loss"], [50, 2, 1, "", "set_parameters"], [50, 2, 1, "", "setup_client"], [50, 2, 1, "", "update_before_train"], [50, 2, 1, "", "validate"]], "fl4health.clients.nnunet_client": [[51, 1, 1, "", "NnunetClient"]], "fl4health.clients.nnunet_client.NnunetClient": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "compute_loss_and_additional_losses"], [51, 2, 1, "", "create_plans"], [51, 2, 1, "", "empty_cache"], [51, 2, 1, "", "get_client_specific_logs"], [51, 2, 1, "", "get_client_specific_reports"], [51, 2, 1, "", "get_criterion"], [51, 2, 1, "", "get_data_loaders"], [51, 2, 1, "", "get_lr_scheduler"], [51, 2, 1, "", "get_model"], [51, 2, 1, "", "get_optimizer"], [51, 2, 1, "", "get_properties"], [51, 2, 1, "", "mask_data"], [51, 2, 1, "", "maybe_extract_fingerprint"], [51, 2, 1, "", "maybe_preprocess"], [51, 2, 1, "", "predict"], [51, 2, 1, "", "setup_client"], [51, 2, 1, "", "shutdown"], [51, 2, 1, "", "shutdown_dataloader"], [51, 2, 1, "", "train_step"], [51, 2, 1, "", "transform_gradients"], [51, 2, 1, "", "update_before_train"], [51, 2, 1, "", "update_metric_manager"]], "fl4health.clients.partial_weight_exchange_client": [[52, 1, 1, "", "PartialWeightExchangeClient"]], "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "get_parameter_exchanger"], [52, 2, 1, "", "get_parameters"], [52, 2, 1, "", "set_parameters"], [52, 2, 1, "", "setup_client"]], "fl4health.clients.perfcl_client": [[53, 1, 1, "", "PerFclClient"]], "fl4health.clients.perfcl_client.PerFclClient": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "compute_evaluation_loss"], [53, 2, 1, "", "compute_loss_and_additional_losses"], [53, 2, 1, "", "get_parameter_exchanger"], [53, 2, 1, "", "predict"], [53, 2, 1, "", "update_after_train"], [53, 2, 1, "", "update_before_train"]], "fl4health.clients.scaffold_client": [[54, 1, 1, "", "DPScaffoldClient"], [54, 1, 1, "", "ScaffoldClient"]], "fl4health.clients.scaffold_client.DPScaffoldClient": [[54, 2, 1, "", "__init__"]], "fl4health.clients.scaffold_client.ScaffoldClient": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "compute_parameters_delta"], [54, 2, 1, "", "compute_updated_control_variates"], [54, 2, 1, "", "get_parameter_exchanger"], [54, 2, 1, "", "get_parameters"], [54, 2, 1, "", "modify_grad"], [54, 2, 1, "", "set_parameters"], [54, 2, 1, "", "setup_client"], [54, 2, 1, "", "transform_gradients"], [54, 2, 1, "", "update_after_train"], [54, 2, 1, "", "update_control_variates"]], "fl4health.datasets": [[57, 0, 0, "-", "rxrx1"], [60, 0, 0, "-", "skin_cancer"]], "fl4health.datasets.rxrx1": [[58, 0, 0, "-", "load_data"], [59, 0, 0, "-", "preprocess"]], "fl4health.datasets.rxrx1.load_data": [[58, 4, 1, "", "construct_rxrx1_tensor_dataset"], [58, 4, 1, "", "create_splits"], [58, 4, 1, "", "label_frequency"], [58, 4, 1, "", "load_rxrx1_data"], [58, 4, 1, "", "load_rxrx1_test_data"]], "fl4health.datasets.rxrx1.preprocess": [[59, 4, 1, "", "filter_and_save_data"], [59, 4, 1, "", "load_image"], [59, 4, 1, "", "main"], [59, 4, 1, "", "process_data"], [59, 4, 1, "", "save_to_pkl"]], "fl4health.datasets.skin_cancer": [[61, 0, 0, "-", "load_data"], [62, 0, 0, "-", "preprocess_skin"]], "fl4health.datasets.skin_cancer.load_data": [[61, 4, 1, "", "construct_skin_cancer_tensor_dataset"], [61, 4, 1, "", "load_image"], [61, 4, 1, "", "load_skin_cancer_data"]], "fl4health.datasets.skin_cancer.preprocess_skin": [[62, 4, 1, "", "derm7pt_image_path_func"], [62, 4, 1, "", "derm7pt_label_map_func"], [62, 4, 1, "", "ham_image_path_func"], [62, 4, 1, "", "ham_label_map_func"], [62, 4, 1, "", "pad_image_path_func"], [62, 4, 1, "", "pad_label_map_func"], [62, 4, 1, "", "preprocess_derm7pt"], [62, 4, 1, "", "preprocess_ham10000"], [62, 4, 1, "", "preprocess_isic_2019"], [62, 4, 1, "", "preprocess_pad_ufes_20"], [62, 4, 1, "", "process_client_data"], [62, 4, 1, "", "save_to_json"]], "fl4health.feature_alignment": [[64, 0, 0, "-", "constants"], [65, 0, 0, "-", "string_columns_transformer"], [68, 0, 0, "-", "tabular_feature"], [69, 0, 0, "-", "tabular_type"]], "fl4health.feature_alignment.string_columns_transformer": [[65, 1, 1, "", "TextColumnTransformer"], [65, 1, 1, "", "TextMulticolumnTransformer"]], "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "fit"], [65, 2, 1, "", "set_fit_request"], [65, 2, 1, "", "set_transform_request"], [65, 2, 1, "", "transform"]], "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "fit"], [65, 2, 1, "", "set_fit_request"], [65, 2, 1, "", "set_transform_request"], [65, 2, 1, "", "transform"]], "fl4health.feature_alignment.tabular_feature": [[68, 1, 1, "", "TabularFeature"]], "fl4health.feature_alignment.tabular_feature.TabularFeature": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "from_json"], [68, 2, 1, "", "get_feature_name"], [68, 2, 1, "", "get_feature_type"], [68, 2, 1, "", "get_fill_value"], [68, 2, 1, "", "get_metadata"], [68, 2, 1, "", "get_metadata_dimension"], [68, 2, 1, "", "to_json"]], "fl4health.feature_alignment.tabular_type": [[69, 1, 1, "", "TabularType"]], "fl4health.feature_alignment.tabular_type.TabularType": [[69, 3, 1, "", "BINARY"], [69, 3, 1, "", "NUMERIC"], [69, 3, 1, "", "ORDINAL"], [69, 3, 1, "", "STRING"], [69, 2, 1, "", "get_default_fill_value"]], "fl4health.losses": [[71, 0, 0, "-", "contrastive_loss"], [72, 0, 0, "-", "cosine_similarity_loss"], [73, 0, 0, "-", "deep_mmd_loss"], [74, 0, 0, "-", "fenda_loss_config"], [75, 0, 0, "-", "mkmmd_loss"], [76, 0, 0, "-", "perfcl_loss"], [77, 0, 0, "-", "weight_drift_loss"]], "fl4health.losses.contrastive_loss": [[71, 1, 1, "", "MoonContrastiveLoss"], [71, 1, 1, "", "NtXentLoss"]], "fl4health.losses.contrastive_loss.MoonContrastiveLoss": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "compute_negative_similarities"], [71, 2, 1, "", "forward"]], "fl4health.losses.contrastive_loss.NtXentLoss": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "forward"]], "fl4health.losses.cosine_similarity_loss": [[72, 1, 1, "", "CosineSimilarityLoss"]], "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "forward"]], "fl4health.losses.deep_mmd_loss": [[73, 1, 1, "", "DeepMmdLoss"], [73, 1, 1, "", "ModelLatentF"]], "fl4health.losses.deep_mmd_loss.DeepMmdLoss": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "compute_kernel"], [73, 2, 1, "", "forward"], [73, 2, 1, "", "h1_mean_var_gram"], [73, 2, 1, "", "mmdu"], [73, 2, 1, "", "pairwise_distance_squared"], [73, 2, 1, "", "train_kernel"]], "fl4health.losses.deep_mmd_loss.ModelLatentF": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "forward"]], "fl4health.losses.fenda_loss_config": [[74, 1, 1, "", "ConstrainedFendaLossContainer"], [74, 1, 1, "", "CosineSimilarityLossContainer"], [74, 1, 1, "", "MoonContrastiveLossContainer"], [74, 1, 1, "", "PerFclLossContainer"]], "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "compute_contrastive_loss"], [74, 2, 1, "", "compute_cosine_similarity_loss"], [74, 2, 1, "", "compute_perfcl_loss"], [74, 2, 1, "", "has_contrastive_loss"], [74, 2, 1, "", "has_cosine_similarity_loss"], [74, 2, 1, "", "has_perfcl_loss"]], "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer": [[74, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer": [[74, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.PerFclLossContainer": [[74, 2, 1, "", "__init__"]], "fl4health.losses.mkmmd_loss": [[75, 1, 1, "", "MkMmdLoss"]], "fl4health.losses.mkmmd_loss.MkMmdLoss": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "beta_with_extreme_kernel_base_values"], [75, 2, 1, "", "compute_all_h_u_all_samples"], [75, 2, 1, "", "compute_all_h_u_from_inner_products"], [75, 2, 1, "", "compute_all_h_u_from_inner_products_linear"], [75, 2, 1, "", "compute_all_h_u_linear"], [75, 2, 1, "", "compute_euclidean_inner_products"], [75, 2, 1, "", "compute_euclidean_inner_products_linear"], [75, 2, 1, "", "compute_h_u_from_inner_products"], [75, 2, 1, "", "compute_h_u_from_inner_products_linear"], [75, 2, 1, "", "compute_hat_d_per_kernel"], [75, 2, 1, "", "compute_hat_q_k"], [75, 2, 1, "", "compute_hat_q_k_linear"], [75, 2, 1, "", "compute_mkmmd"], [75, 2, 1, "", "compute_vertices"], [75, 2, 1, "", "construct_quadruples"], [75, 2, 1, "", "form_and_solve_qp"], [75, 2, 1, "", "form_h_u_delta_w_i"], [75, 2, 1, "", "form_kernel_samples_minus_expectation"], [75, 2, 1, "", "forward"], [75, 2, 1, "", "get_best_vertex_for_objective_function"], [75, 2, 1, "", "normalize"], [75, 2, 1, "", "optimize_betas"]], "fl4health.losses.perfcl_loss": [[76, 1, 1, "", "PerFclLoss"]], "fl4health.losses.perfcl_loss.PerFclLoss": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "forward"]], "fl4health.losses.weight_drift_loss": [[77, 1, 1, "", "WeightDriftLoss"]], "fl4health.losses.weight_drift_loss.WeightDriftLoss": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "forward"]], "fl4health.metrics": [[78, 1, 1, "", "Accuracy"], [78, 1, 1, "", "BalancedAccuracy"], [78, 1, 1, "", "BinarySoftDiceCoefficient"], [78, 1, 1, "", "F1"], [78, 1, 1, "", "RocAuc"], [78, 1, 1, "", "SimpleMetric"], [78, 1, 1, "", "TorchMetric"], [79, 0, 0, "-", "base_metrics"], [80, 0, 0, "-", "compound_metrics"], [81, 0, 0, "-", "efficient_metrics"], [82, 0, 0, "-", "efficient_metrics_base"], [83, 0, 0, "-", "metric_aggregation"], [84, 0, 0, "-", "metric_managers"], [85, 0, 0, "-", "metrics"], [86, 0, 0, "-", "metrics_utils"], [87, 0, 0, "-", "utils"]], "fl4health.metrics.Accuracy": [[78, 2, 1, "", "__init__"]], "fl4health.metrics.BalancedAccuracy": [[78, 2, 1, "", "__init__"]], "fl4health.metrics.BinarySoftDiceCoefficient": [[78, 2, 1, "", "__init__"]], "fl4health.metrics.F1": [[78, 2, 1, "", "__init__"]], "fl4health.metrics.RocAuc": [[78, 2, 1, "", "__init__"]], "fl4health.metrics.SimpleMetric": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "compute"], [78, 2, 1, "", "update"]], "fl4health.metrics.TorchMetric": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "compute"], [78, 2, 1, "", "update"]], "fl4health.metrics.base_metrics": [[79, 1, 1, "", "Metric"], [79, 1, 1, "", "MetricPrefix"]], "fl4health.metrics.base_metrics.Metric": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "clear"], [79, 2, 1, "", "compute"], [79, 2, 1, "", "update"]], "fl4health.metrics.base_metrics.MetricPrefix": [[79, 3, 1, "", "TEST_PREFIX"], [79, 3, 1, "", "VAL_PREFIX"]], "fl4health.metrics.compound_metrics": [[80, 1, 1, "", "EmaMetric"], [80, 1, 1, "", "TransformsMetric"]], "fl4health.metrics.compound_metrics.EmaMetric": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "clear"], [80, 2, 1, "", "compute"], [80, 2, 1, "", "update"]], "fl4health.metrics.compound_metrics.TransformsMetric": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "clear"], [80, 2, 1, "", "compute"], [80, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics": [[81, 1, 1, "", "BinaryDice"], [81, 1, 1, "", "MultiClassDice"]], "fl4health.metrics.efficient_metrics.BinaryDice": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics.MultiClassDice": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics_base": [[82, 1, 1, "", "BinaryClassificationMetric"], [82, 1, 1, "", "ClassificationMetric"], [82, 1, 1, "", "ClassificationOutcome"], [82, 3, 1, "", "MetricOutcome"], [82, 1, 1, "", "MultiClassificationMetric"]], "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "compute_from_counts"], [82, 2, 1, "", "count_tp_fp_tn_fn"]], "fl4health.metrics.efficient_metrics_base.ClassificationMetric": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "clear"], [82, 2, 1, "", "compute"], [82, 2, 1, "", "compute_from_counts"], [82, 2, 1, "", "count_tp_fp_tn_fn"], [82, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics_base.ClassificationOutcome": [[82, 3, 1, "", "FALSE_NEGATIVE"], [82, 3, 1, "", "FALSE_POSITIVE"], [82, 3, 1, "", "TRUE_NEGATIVE"], [82, 3, 1, "", "TRUE_POSITIVE"]], "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.metric_aggregation": [[83, 4, 1, "", "evaluate_metrics_aggregation_fn"], [83, 4, 1, "", "fit_metrics_aggregation_fn"], [83, 4, 1, "", "metric_aggregation"], [83, 4, 1, "", "normalize_metrics"], [83, 4, 1, "", "uniform_evaluate_metrics_aggregation_fn"], [83, 4, 1, "", "uniform_metric_aggregation"], [83, 4, 1, "", "uniform_normalize_metrics"]], "fl4health.metrics.metric_managers": [[84, 1, 1, "", "MetricManager"]], "fl4health.metrics.metric_managers.MetricManager": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "check_target_prediction_keys_equal"], [84, 2, 1, "", "clear"], [84, 2, 1, "", "compute"], [84, 2, 1, "", "reset"], [84, 2, 1, "", "update"]], "fl4health.metrics.metrics": [[85, 1, 1, "", "Accuracy"], [85, 1, 1, "", "BalancedAccuracy"], [85, 1, 1, "", "BinarySoftDiceCoefficient"], [85, 1, 1, "", "F1"], [85, 1, 1, "", "RocAuc"], [85, 1, 1, "", "SimpleMetric"], [85, 1, 1, "", "TorchMetric"]], "fl4health.metrics.metrics.Accuracy": [[85, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BalancedAccuracy": [[85, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BinarySoftDiceCoefficient": [[85, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.F1": [[85, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.RocAuc": [[85, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.SimpleMetric": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "clear"], [85, 2, 1, "", "compute"], [85, 2, 1, "", "update"]], "fl4health.metrics.metrics.TorchMetric": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "clear"], [85, 2, 1, "", "compute"], [85, 2, 1, "", "update"]], "fl4health.metrics.metrics_utils": [[86, 4, 1, "", "compute_dice_on_count_tensors"], [86, 4, 1, "", "threshold_tensor"]], "fl4health.metrics.utils": [[87, 4, 1, "", "align_pred_and_target_shapes"], [87, 4, 1, "", "infer_label_dim"], [87, 4, 1, "", "map_label_index_tensor_to_one_hot"]], "fl4health.mixins": [[88, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [89, 0, 0, "-", "adaptive_drift_constrained"], [90, 0, 0, "-", "core_protocols"], [91, 0, 0, "-", "personalized"]], "fl4health.mixins.AdaptiveDriftConstrainedMixin": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "compute_penalty_loss"], [88, 2, 1, "", "get_parameter_exchanger"], [88, 2, 1, "", "get_parameters"], [88, 2, 1, "", "set_parameters"], [88, 2, 1, "", "setup_client_and_return_all_model_parameters"], [88, 2, 1, "", "train_step"], [88, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained": [[89, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [89, 1, 1, "", "AdaptiveDriftConstrainedProtocol"], [89, 4, 1, "", "apply_adaptive_drift_to_client"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "compute_penalty_loss"], [89, 2, 1, "", "get_parameter_exchanger"], [89, 2, 1, "", "get_parameters"], [89, 2, 1, "", "set_parameters"], [89, 2, 1, "", "setup_client_and_return_all_model_parameters"], [89, 2, 1, "", "train_step"], [89, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol": [[89, 2, 1, "", "compute_penalty_loss"], [89, 3, 1, "", "drift_penalty_tensors"], [89, 3, 1, "", "drift_penalty_weight"], [89, 3, 1, "", "loss_for_adaptation"], [89, 3, 1, "", "parameter_exchanger"], [89, 3, 1, "", "penalty_loss_function"], [89, 2, 1, "", "setup_client_and_return_all_model_parameters"]], "fl4health.mixins.core_protocols": [[90, 1, 1, "", "FlexibleClientProtocol"], [90, 1, 1, "", "FlexibleClientProtocolPreSetup"], [90, 1, 1, "", "NumPyClientMinimalProtocol"]], "fl4health.mixins.core_protocols.FlexibleClientProtocol": [[90, 2, 1, "", "compute_evaluation_loss"], [90, 2, 1, "", "compute_training_loss"], [90, 3, 1, "", "criterion"], [90, 2, 1, "", "initialize_all_model_weights"], [90, 3, 1, "", "model"], [90, 3, 1, "", "optimizers"], [90, 2, 1, "", "predict_with_model"], [90, 3, 1, "", "test_loader"], [90, 3, 1, "", "train_loader"], [90, 2, 1, "", "transform_gradients"], [90, 2, 1, "", "transform_target"], [90, 2, 1, "", "update_before_train"], [90, 3, 1, "", "val_loader"], [90, 2, 1, "", "validate"]], "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup": [[90, 2, 1, "", "compute_loss_and_additional_losses"], [90, 3, 1, "", "device"], [90, 2, 1, "", "get_criterion"], [90, 2, 1, "", "get_data_loaders"], [90, 2, 1, "", "get_model"], [90, 2, 1, "", "get_optimizer"], [90, 3, 1, "", "initialized"], [90, 2, 1, "", "setup_client"]], "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol": [[90, 2, 1, "", "evaluate"], [90, 2, 1, "", "fit"], [90, 2, 1, "", "get_parameters"], [90, 2, 1, "", "set_parameters"], [90, 2, 1, "", "update_after_train"]], "fl4health.mixins.personalized": [[91, 1, 1, "", "DittoPersonalizedMixin"], [91, 1, 1, "", "DittoPersonalizedProtocol"], [91, 1, 1, "", "MrMtlPersonalizedMixin"], [91, 1, 1, "", "MrMtlPersonalizedProtocol"], [91, 1, 1, "", "PersonalizedMode"], [92, 0, 0, "-", "ditto"], [91, 4, 1, "", "make_it_personal"], [93, 0, 0, "-", "mr_mtl"], [94, 0, 0, "-", "utils"]], "fl4health.mixins.personalized.DittoPersonalizedMixin": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "compute_evaluation_loss"], [91, 2, 1, "", "get_global_model"], [91, 2, 1, "", "get_optimizer"], [91, 2, 1, "", "get_parameters"], [91, 2, 1, "", "initialize_all_model_weights"], [91, 5, 1, "", "optimizer_keys"], [91, 2, 1, "", "safe_global_model"], [91, 2, 1, "", "set_initial_global_tensors"], [91, 2, 1, "", "set_optimizer"], [91, 2, 1, "", "set_parameters"], [91, 2, 1, "", "setup_client"], [91, 2, 1, "", "train_step"], [91, 2, 1, "", "update_before_train"], [91, 2, 1, "", "val_step"], [91, 2, 1, "", "validate"]], "fl4health.mixins.personalized.DittoPersonalizedProtocol": [[91, 2, 1, "", "get_global_model"], [91, 3, 1, "", "global_model"], [91, 3, 1, "", "optimizer_keys"], [91, 2, 1, "", "safe_global_model"], [91, 2, 1, "", "set_initial_global_tensors"]], "fl4health.mixins.personalized.MrMtlPersonalizedMixin": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "compute_training_loss"], [91, 2, 1, "", "get_global_model"], [91, 2, 1, "", "set_parameters"], [91, 2, 1, "", "setup_client"], [91, 2, 1, "", "update_before_train"], [91, 2, 1, "", "validate"]], "fl4health.mixins.personalized.MrMtlPersonalizedProtocol": [[91, 2, 1, "", "get_global_model"], [91, 3, 1, "", "initial_global_model"]], "fl4health.mixins.personalized.PersonalizedMode": [[91, 3, 1, "", "DITTO"], [91, 3, 1, "", "MR_MTL"]], "fl4health.mixins.personalized.ditto": [[92, 1, 1, "", "DittoPersonalizedMixin"], [92, 1, 1, "", "DittoPersonalizedProtocol"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "compute_evaluation_loss"], [92, 2, 1, "", "get_global_model"], [92, 2, 1, "", "get_optimizer"], [92, 2, 1, "", "get_parameters"], [92, 2, 1, "", "initialize_all_model_weights"], [92, 5, 1, "", "optimizer_keys"], [92, 2, 1, "", "safe_global_model"], [92, 2, 1, "", "set_initial_global_tensors"], [92, 2, 1, "", "set_optimizer"], [92, 2, 1, "", "set_parameters"], [92, 2, 1, "", "setup_client"], [92, 2, 1, "", "train_step"], [92, 2, 1, "", "update_before_train"], [92, 2, 1, "", "val_step"], [92, 2, 1, "", "validate"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol": [[92, 3, 1, "", "criterion"], [92, 3, 1, "", "device"], [92, 3, 1, "", "drift_penalty_tensors"], [92, 3, 1, "", "drift_penalty_weight"], [92, 2, 1, "", "get_global_model"], [92, 3, 1, "", "global_model"], [92, 3, 1, "", "initialized"], [92, 3, 1, "", "loss_for_adaptation"], [92, 3, 1, "", "model"], [92, 3, 1, "", "optimizer_keys"], [92, 3, 1, "", "optimizers"], [92, 3, 1, "", "parameter_exchanger"], [92, 3, 1, "", "penalty_loss_function"], [92, 2, 1, "", "safe_global_model"], [92, 2, 1, "", "set_initial_global_tensors"], [92, 3, 1, "", "test_loader"], [92, 3, 1, "", "train_loader"], [92, 3, 1, "", "val_loader"]], "fl4health.mixins.personalized.mr_mtl": [[93, 1, 1, "", "MrMtlPersonalizedMixin"], [93, 1, 1, "", "MrMtlPersonalizedProtocol"]], "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedMixin": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "compute_training_loss"], [93, 2, 1, "", "get_global_model"], [93, 2, 1, "", "set_parameters"], [93, 2, 1, "", "setup_client"], [93, 2, 1, "", "update_before_train"], [93, 2, 1, "", "validate"]], "fl4health.mixins.personalized.mr_mtl.MrMtlPersonalizedProtocol": [[93, 3, 1, "", "criterion"], [93, 3, 1, "", "device"], [93, 3, 1, "", "drift_penalty_tensors"], [93, 3, 1, "", "drift_penalty_weight"], [93, 2, 1, "", "get_global_model"], [93, 3, 1, "", "initial_global_model"], [93, 3, 1, "", "initialized"], [93, 3, 1, "", "loss_for_adaptation"], [93, 3, 1, "", "model"], [93, 3, 1, "", "optimizers"], [93, 3, 1, "", "parameter_exchanger"], [93, 3, 1, "", "penalty_loss_function"], [93, 3, 1, "", "test_loader"], [93, 3, 1, "", "train_loader"], [93, 3, 1, "", "val_loader"]], "fl4health.mixins.personalized.utils": [[94, 4, 1, "", "ensure_protocol_compliance"]], "fl4health.model_bases": [[96, 0, 0, "-", "apfl_base"], [97, 0, 0, "-", "autoencoders_base"], [98, 0, 0, "-", "ensemble_base"], [99, 0, 0, "-", "feature_extractor_buffer"], [100, 0, 0, "-", "fedrep_base"], [101, 0, 0, "-", "fedsimclr_base"], [102, 0, 0, "-", "fenda_base"], [103, 0, 0, "-", "gpfl_base"], [104, 0, 0, "-", "masked_layers"], [109, 0, 0, "-", "moon_base"], [110, 0, 0, "-", "parallel_split_models"], [111, 0, 0, "-", "partial_layer_exchange_model"], [112, 0, 0, "-", "pca"], [113, 0, 0, "-", "perfcl_base"], [114, 0, 0, "-", "sequential_split_models"]], "fl4health.model_bases.apfl_base": [[96, 1, 1, "", "ApflModule"]], "fl4health.model_bases.apfl_base.ApflModule": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "forward"], [96, 2, 1, "", "global_forward"], [96, 2, 1, "", "layers_to_exchange"], [96, 2, 1, "", "local_forward"], [96, 2, 1, "", "update_alpha"]], "fl4health.model_bases.autoencoders_base": [[97, 1, 1, "", "AbstractAe"], [97, 1, 1, "", "BasicAe"], [97, 1, 1, "", "ConditionalVae"], [97, 1, 1, "", "VariationalAe"]], "fl4health.model_bases.autoencoders_base.AbstractAe": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.BasicAe": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "decode"], [97, 2, 1, "", "encode"], [97, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.ConditionalVae": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "decode"], [97, 2, 1, "", "encode"], [97, 2, 1, "", "forward"], [97, 2, 1, "", "sampling"]], "fl4health.model_bases.autoencoders_base.VariationalAe": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "decode"], [97, 2, 1, "", "encode"], [97, 2, 1, "", "forward"], [97, 2, 1, "", "sampling"]], "fl4health.model_bases.ensemble_base": [[98, 1, 1, "", "EnsembleAggregationMode"], [98, 1, 1, "", "EnsembleModel"]], "fl4health.model_bases.ensemble_base.EnsembleAggregationMode": [[98, 3, 1, "", "AVERAGE"], [98, 3, 1, "", "VOTE"]], "fl4health.model_bases.ensemble_base.EnsembleModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "ensemble_average"], [98, 2, 1, "", "ensemble_vote"], [98, 2, 1, "", "forward"]], "fl4health.model_bases.feature_extractor_buffer": [[99, 1, 1, "", "FeatureExtractorBuffer"]], "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "clear_buffers"], [99, 2, 1, "", "disable_accumulating_features"], [99, 2, 1, "", "enable_accumulating_features"], [99, 2, 1, "", "find_last_common_prefix"], [99, 2, 1, "", "flatten"], [99, 2, 1, "", "forward_hook"], [99, 2, 1, "", "get_extracted_features"], [99, 2, 1, "", "get_hierarchical_attr"], [99, 2, 1, "", "remove_hooks"]], "fl4health.model_bases.fedrep_base": [[100, 1, 1, "", "FedRepModel"]], "fl4health.model_bases.fedrep_base.FedRepModel": [[100, 2, 1, "", "freeze_base_module"], [100, 2, 1, "", "freeze_head_module"], [100, 2, 1, "", "unfreeze_base_module"], [100, 2, 1, "", "unfreeze_head_module"]], "fl4health.model_bases.fedsimclr_base": [[101, 1, 1, "", "FedSimClrModel"]], "fl4health.model_bases.fedsimclr_base.FedSimClrModel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "load_pretrained_model"]], "fl4health.model_bases.fenda_base": [[102, 1, 1, "", "FendaModel"], [102, 1, 1, "", "FendaModelWithFeatureState"]], "fl4health.model_bases.fenda_base.FendaModel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.fenda_base.FendaModelWithFeatureState": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "forward"]], "fl4health.model_bases.gpfl_base": [[103, 1, 1, "", "CoV"], [103, 1, 1, "", "Gce"], [103, 1, 1, "", "GpflBaseAndHeadModules"], [103, 1, 1, "", "GpflModel"]], "fl4health.model_bases.gpfl_base.CoV": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"]], "fl4health.model_bases.gpfl_base.Gce": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "lookup"]], "fl4health.model_bases.gpfl_base.GpflBaseAndHeadModules": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"]], "fl4health.model_bases.gpfl_base.GpflModel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.masked_layers": [[105, 0, 0, "-", "masked_conv"], [106, 0, 0, "-", "masked_layers_utils"], [107, 0, 0, "-", "masked_linear"], [108, 0, 0, "-", "masked_normalization_layers"]], "fl4health.model_bases.masked_layers.masked_conv": [[105, 1, 1, "", "MaskedConv1d"], [105, 1, 1, "", "MaskedConv2d"], [105, 1, 1, "", "MaskedConv3d"], [105, 1, 1, "", "MaskedConvTranspose1d"], [105, 1, 1, "", "MaskedConvTranspose2d"], [105, 1, 1, "", "MaskedConvTranspose3d"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[106, 4, 1, "", "convert_to_masked_model"], [106, 4, 1, "", "is_masked_module"]], "fl4health.model_bases.masked_layers.masked_linear": [[107, 1, 1, "", "MaskedLinear"]], "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "forward"], [107, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[108, 1, 1, "", "MaskedBatchNorm1d"], [108, 1, 1, "", "MaskedBatchNorm2d"], [108, 1, 1, "", "MaskedBatchNorm3d"], [108, 1, 1, "", "MaskedLayerNorm"]], "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "forward"], [108, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.moon_base": [[109, 1, 1, "", "MoonModel"]], "fl4health.model_bases.moon_base.MoonModel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "sequential_forward"]], "fl4health.model_bases.parallel_split_models": [[110, 1, 1, "", "ParallelFeatureJoinMode"], [110, 1, 1, "", "ParallelSplitHeadModule"], [110, 1, 1, "", "ParallelSplitModel"]], "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode": [[110, 3, 1, "", "CONCATENATE"], [110, 3, 1, "", "SUM"]], "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "forward"], [110, 2, 1, "", "head_forward"], [110, 2, 1, "", "parallel_output_join"]], "fl4health.model_bases.parallel_split_models.ParallelSplitModel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "forward"]], "fl4health.model_bases.partial_layer_exchange_model": [[111, 1, 1, "", "PartialLayerExchangeModel"]], "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel": [[111, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.pca": [[112, 1, 1, "", "PcaModule"]], "fl4health.model_bases.pca.PcaModule": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "center_data"], [112, 2, 1, "", "compute_cumulative_explained_variance"], [112, 2, 1, "", "compute_explained_variance_ratios"], [112, 2, 1, "", "compute_projection_variance"], [112, 2, 1, "", "compute_reconstruction_error"], [112, 2, 1, "", "forward"], [112, 2, 1, "", "maybe_reshape"], [112, 2, 1, "", "prepare_data_forward"], [112, 2, 1, "", "project_back"], [112, 2, 1, "", "project_lower_dim"], [112, 2, 1, "", "set_data_mean"], [112, 2, 1, "", "set_principal_components"]], "fl4health.model_bases.perfcl_base": [[113, 1, 1, "", "PerFclModel"]], "fl4health.model_bases.perfcl_base.PerFclModel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "forward"], [113, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models": [[114, 1, 1, "", "SequentiallySplitExchangeBaseModel"], [114, 1, 1, "", "SequentiallySplitModel"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel": [[114, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitModel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "features_forward"], [114, 2, 1, "", "forward"], [114, 2, 1, "", "sequential_forward"]], "fl4health.parameter_exchange": [[116, 0, 0, "-", "fedpm_exchanger"], [117, 0, 0, "-", "full_exchanger"], [118, 0, 0, "-", "layer_exchanger"], [119, 0, 0, "-", "packing_exchanger"], [120, 0, 0, "-", "parameter_exchanger_base"], [121, 0, 0, "-", "parameter_packer"], [122, 0, 0, "-", "parameter_selection_criteria"], [123, 0, 0, "-", "partial_parameter_exchanger"], [124, 0, 0, "-", "sparse_coo_parameter_exchanger"]], "fl4health.parameter_exchange.fedpm_exchanger": [[116, 1, 1, "", "FedPmExchanger"]], "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "pull_parameters"]], "fl4health.parameter_exchange.full_exchanger": [[117, 1, 1, "", "FullParameterExchanger"]], "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger": [[117, 2, 1, "", "pull_parameters"], [117, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger": [[118, 1, 1, "", "DynamicLayerExchanger"], [118, 1, 1, "", "FixedLayerExchanger"], [118, 1, 1, "", "LayerExchangerWithExclusions"]], "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "pull_parameters"], [118, 2, 1, "", "push_parameters"], [118, 2, 1, "", "select_parameters"]], "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "apply_layer_filter"], [118, 2, 1, "", "pull_parameters"], [118, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "apply_layer_filter"], [118, 2, 1, "", "get_layers_to_transfer"], [118, 2, 1, "", "pull_parameters"], [118, 2, 1, "", "push_parameters"], [118, 2, 1, "", "should_layer_be_excluded"], [118, 2, 1, "", "should_module_be_excluded"]], "fl4health.parameter_exchange.packing_exchanger": [[119, 1, 1, "", "FullParameterExchangerWithPacking"]], "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_exchanger_base": [[120, 1, 1, "", "ParameterExchanger"]], "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger": [[120, 2, 1, "", "pull_parameters"], [120, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.parameter_packer": [[121, 1, 1, "", "ParameterPacker"], [121, 1, 1, "", "ParameterPackerAdaptiveConstraint"], [121, 1, 1, "", "ParameterPackerWithClippingBit"], [121, 1, 1, "", "ParameterPackerWithControlVariates"], [121, 1, 1, "", "ParameterPackerWithLayerNames"], [121, 1, 1, "", "SparseCooParameterPacker"]], "fl4health.parameter_exchange.parameter_packer.ParameterPacker": [[121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint": [[121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit": [[121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames": [[121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker": [[121, 2, 1, "", "extract_coo_info_from_dense"], [121, 2, 1, "", "pack_parameters"], [121, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_selection_criteria": [[122, 1, 1, "", "LayerSelectionFunctionConstructor"], [122, 4, 1, "", "largest_final_magnitude_scores"], [122, 4, 1, "", "largest_increase_in_magnitude_scores"], [122, 4, 1, "", "largest_magnitude_change_scores"], [122, 4, 1, "", "select_layers_by_percentage"], [122, 4, 1, "", "select_layers_by_threshold"], [122, 4, 1, "", "select_scores_and_sample_masks"], [122, 4, 1, "", "smallest_final_magnitude_scores"], [122, 4, 1, "", "smallest_increase_in_magnitude_scores"], [122, 4, 1, "", "smallest_magnitude_change_scores"]], "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "select_by_percentage"], [122, 2, 1, "", "select_by_threshold"]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[123, 1, 1, "", "PartialParameterExchanger"]], "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "pack_parameters"], [123, 2, 1, "", "select_parameters"], [123, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[124, 1, 1, "", "SparseCooParameterExchanger"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "generate_parameter_scores"], [124, 2, 1, "", "pull_parameters"], [124, 2, 1, "", "push_parameters"], [124, 2, 1, "", "select_parameters"]], "fl4health.preprocessing": [[126, 0, 0, "-", "autoencoders"], [129, 0, 0, "-", "pca_preprocessor"], [130, 0, 0, "-", "warmed_up_module"]], "fl4health.preprocessing.autoencoders": [[127, 0, 0, "-", "dim_reduction"], [128, 0, 0, "-", "loss"]], "fl4health.preprocessing.autoencoders.dim_reduction": [[127, 1, 1, "", "AeProcessor"], [127, 1, 1, "", "AutoEncoderProcessing"], [127, 1, 1, "", "CvaeFixedConditionProcessor"], [127, 1, 1, "", "CvaeVariableConditionProcessor"], [127, 1, 1, "", "VaeProcessor"]], "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "load_autoencoder"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor": [[127, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor": [[127, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor": [[127, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.loss": [[128, 1, 1, "", "VaeLoss"]], "fl4health.preprocessing.autoencoders.loss.VaeLoss": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "forward"], [128, 2, 1, "", "standard_normal_kl_divergence_loss"], [128, 2, 1, "", "unpack_model_output"]], "fl4health.preprocessing.pca_preprocessor": [[129, 1, 1, "", "PcaPreprocessor"]], "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "load_pca_module"], [129, 2, 1, "", "reduce_dimension"]], "fl4health.preprocessing.warmed_up_module": [[130, 1, 1, "", "WarmedUpModule"]], "fl4health.preprocessing.warmed_up_module.WarmedUpModule": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "get_matching_component"], [130, 2, 1, "", "load_from_pretrained"]], "fl4health.privacy": [[132, 0, 0, "-", "fl_accountants"], [133, 0, 0, "-", "moments_accountant"]], "fl4health.privacy.fl_accountants": [[132, 1, 1, "", "ClientLevelAccountant"], [132, 1, 1, "", "FlClientLevelAccountantFixedSamplingNoReplacement"], [132, 1, 1, "", "FlClientLevelAccountantPoissonSampling"], [132, 1, 1, "", "FlInstanceLevelAccountant"]], "fl4health.privacy.fl_accountants.ClientLevelAccountant": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "get_delta"], [132, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "get_delta"], [132, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "get_delta"], [132, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "get_delta"], [132, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant": [[133, 1, 1, "", "FixedSamplingWithoutReplacement"], [133, 1, 1, "", "MomentsAccountant"], [133, 1, 1, "", "PoissonSampling"], [133, 1, 1, "", "SamplingStrategy"]], "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.MomentsAccountant": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "get_delta"], [133, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant.PoissonSampling": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.SamplingStrategy": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "get_dp_event"]], "fl4health.reporting": [[134, 1, 1, "", "JsonReporter"], [134, 1, 1, "", "WandBReporter"], [134, 1, 1, "", "WandBStepType"], [135, 0, 0, "-", "base_reporter"], [136, 0, 0, "-", "json_reporter"], [137, 0, 0, "-", "reports_manager"], [138, 0, 0, "-", "wandb_reporter"]], "fl4health.reporting.JsonReporter": [[134, 2, 1, "", "dump"]], "fl4health.reporting.WandBReporter": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "define_metrics"], [134, 2, 1, "", "initialize"], [134, 2, 1, "", "report"], [134, 2, 1, "", "shutdown"], [134, 2, 1, "", "start_run"]], "fl4health.reporting.WandBStepType": [[134, 3, 1, "", "EPOCH"], [134, 3, 1, "", "ROUND"], [134, 3, 1, "", "STEP"]], "fl4health.reporting.base_reporter": [[135, 1, 1, "", "BaseReporter"]], "fl4health.reporting.base_reporter.BaseReporter": [[135, 2, 1, "", "initialize"], [135, 2, 1, "", "report"], [135, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter": [[136, 1, 1, "", "FileReporter"], [136, 1, 1, "", "JsonReporter"]], "fl4health.reporting.json_reporter.FileReporter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "dump"], [136, 2, 1, "", "initialize"], [136, 2, 1, "", "report"], [136, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter.JsonReporter": [[136, 2, 1, "", "dump"]], "fl4health.reporting.reports_manager": [[137, 1, 1, "", "ReportsManager"]], "fl4health.reporting.reports_manager.ReportsManager": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "initialize"], [137, 2, 1, "", "report"], [137, 2, 1, "", "shutdown"]], "fl4health.reporting.wandb_reporter": [[138, 1, 1, "", "WandBReporter"], [138, 1, 1, "", "WandBStepType"]], "fl4health.reporting.wandb_reporter.WandBReporter": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "define_metrics"], [138, 2, 1, "", "initialize"], [138, 2, 1, "", "report"], [138, 2, 1, "", "shutdown"], [138, 2, 1, "", "start_run"]], "fl4health.reporting.wandb_reporter.WandBStepType": [[138, 3, 1, "", "EPOCH"], [138, 3, 1, "", "ROUND"], [138, 3, 1, "", "STEP"]], "fl4health.servers": [[140, 0, 0, "-", "adaptive_constraint_servers"], [144, 0, 0, "-", "base_server"], [145, 0, 0, "-", "client_level_dp_fed_avg_server"], [146, 0, 0, "-", "evaluate_server"], [147, 0, 0, "-", "fedpm_server"], [148, 0, 0, "-", "instance_level_dp_server"], [149, 0, 0, "-", "model_merge_server"], [150, 0, 0, "-", "nnunet_server"], [151, 0, 0, "-", "polling"], [152, 0, 0, "-", "scaffold_server"]], "fl4health.servers.adaptive_constraint_servers": [[141, 0, 0, "-", "ditto_server"], [142, 0, 0, "-", "fedprox_server"], [143, 0, 0, "-", "mrmtl_server"]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[141, 1, 1, "", "DittoServer"]], "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer": [[141, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[142, 1, 1, "", "FedProxServer"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer": [[142, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[143, 1, 1, "", "MrMtlServer"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer": [[143, 2, 1, "", "__init__"]], "fl4health.servers.base_server": [[144, 1, 1, "", "FlServer"]], "fl4health.servers.base_server.FlServer": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "evaluate_round"], [144, 2, 1, "", "fit"], [144, 2, 1, "", "fit_round"], [144, 2, 1, "", "fit_with_per_round_checkpointing"], [144, 2, 1, "", "poll_clients_for_sample_counts"], [144, 2, 1, "", "report_centralized_eval"], [144, 2, 1, "", "shutdown"], [144, 2, 1, "", "update_before_fit"]], "fl4health.servers.client_level_dp_fed_avg_server": [[145, 1, 1, "", "ClientLevelDPFedAvgServer"]], "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.evaluate_server": [[146, 1, 1, "", "EvaluateServer"]], "fl4health.servers.evaluate_server.EvaluateServer": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "aggregate_evaluate"], [146, 2, 1, "", "configure_evaluate"], [146, 2, 1, "", "federated_evaluate"], [146, 2, 1, "", "fit"], [146, 2, 1, "", "load_model_checkpoint_to_parameters"]], "fl4health.servers.fedpm_server": [[147, 1, 1, "", "FedPmServer"]], "fl4health.servers.fedpm_server.FedPmServer": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "fit_round"]], "fl4health.servers.instance_level_dp_server": [[148, 1, 1, "", "InstanceLevelDpServer"]], "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "fit"], [148, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.model_merge_server": [[149, 1, 1, "", "ModelMergeServer"]], "fl4health.servers.model_merge_server.ModelMergeServer": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "fit"]], "fl4health.servers.nnunet_server": [[150, 1, 1, "", "NnunetServer"], [150, 4, 1, "", "add_items_to_config_fn"]], "fl4health.servers.nnunet_server.NnunetServer": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "initialize_server_model"], [150, 2, 1, "", "update_before_fit"]], "fl4health.servers.polling": [[151, 4, 1, "", "poll_client"], [151, 4, 1, "", "poll_clients"]], "fl4health.servers.scaffold_server": [[152, 1, 1, "", "DPScaffoldServer"], [152, 1, 1, "", "ScaffoldServer"]], "fl4health.servers.scaffold_server.DPScaffoldServer": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "fit"]], "fl4health.servers.scaffold_server.ScaffoldServer": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "fit"]], "fl4health.strategies": [[155, 0, 0, "-", "aggregate_utils"], [156, 0, 0, "-", "basic_fedavg"], [157, 0, 0, "-", "client_dp_fedavgm"], [158, 0, 0, "-", "fedavg_dynamic_layer"], [159, 0, 0, "-", "fedavg_sparse_coo_tensor"], [160, 0, 0, "-", "fedavg_with_adaptive_constraint"], [161, 0, 0, "-", "feddg_ga"], [162, 0, 0, "-", "feddg_ga_with_adaptive_constraint"], [163, 0, 0, "-", "fedpca"], [164, 0, 0, "-", "fedpm"], [165, 0, 0, "-", "flash"], [166, 0, 0, "-", "model_merge_strategy"], [167, 0, 0, "-", "noisy_aggregate"], [168, 0, 0, "-", "scaffold"], [169, 0, 0, "-", "strategy_with_poll"]], "fl4health.strategies.aggregate_utils": [[155, 4, 1, "", "aggregate_losses"], [155, 4, 1, "", "aggregate_results"]], "fl4health.strategies.basic_fedavg": [[156, 1, 1, "", "BasicFedAvg"], [156, 1, 1, "", "OpacusBasicFedAvg"]], "fl4health.strategies.basic_fedavg.BasicFedAvg": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "add_auxiliary_information"], [156, 2, 1, "", "aggregate_evaluate"], [156, 2, 1, "", "aggregate_fit"], [156, 2, 1, "", "configure_evaluate"], [156, 2, 1, "", "configure_fit"], [156, 2, 1, "", "configure_poll"]], "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg": [[156, 2, 1, "", "__init__"]], "fl4health.strategies.client_dp_fedavgm": [[157, 1, 1, "", "ClientLevelDPFedAvgM"]], "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "add_auxiliary_information"], [157, 2, 1, "", "aggregate_fit"], [157, 2, 1, "", "calculate_update_with_momentum"], [157, 2, 1, "", "configure_evaluate"], [157, 2, 1, "", "configure_fit"], [157, 2, 1, "", "modify_noise_multiplier"], [157, 2, 1, "", "split_model_weights_and_clipping_bits"], [157, 2, 1, "", "update_clipping_bound"], [157, 2, 1, "", "update_current_weights"]], "fl4health.strategies.fedavg_dynamic_layer": [[158, 1, 1, "", "FedAvgDynamicLayer"]], "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "aggregate"], [158, 2, 1, "", "aggregate_fit"], [158, 2, 1, "", "unweighted_aggregate"], [158, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[159, 1, 1, "", "FedAvgSparseCooTensor"]], "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "aggregate"], [159, 2, 1, "", "aggregate_fit"], [159, 2, 1, "", "unweighted_aggregate"], [159, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[160, 1, 1, "", "FedAvgWithAdaptiveConstraint"]], "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "add_auxiliary_information"], [160, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.feddg_ga": [[161, 1, 1, "", "FairnessMetric"], [161, 1, 1, "", "FairnessMetricType"], [161, 1, 1, "", "FedDgGa"], [161, 6, 1, "", "SignalForTypeError"]], "fl4health.strategies.feddg_ga.FairnessMetric": [[161, 2, 1, "", "__init__"]], "fl4health.strategies.feddg_ga.FairnessMetricType": [[161, 3, 1, "", "ACCURACY"], [161, 3, 1, "", "CUSTOM"], [161, 3, 1, "", "LOSS"], [161, 2, 1, "", "signal_for_type"]], "fl4health.strategies.feddg_ga.FedDgGa": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "aggregate_evaluate"], [161, 2, 1, "", "aggregate_fit"], [161, 2, 1, "", "configure_evaluate"], [161, 2, 1, "", "configure_fit"], [161, 2, 1, "", "get_current_weight_step_size"], [161, 2, 1, "", "update_weights_by_ga"], [161, 2, 1, "", "weight_and_aggregate_results"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[162, 1, 1, "", "FedDgGaAdaptiveConstraint"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "add_auxiliary_information"], [162, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.fedpca": [[163, 1, 1, "", "FedPCA"]], "fl4health.strategies.fedpca.FedPCA": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "aggregate_fit"], [163, 2, 1, "", "merge_subspaces_qr"], [163, 2, 1, "", "merge_subspaces_svd"], [163, 2, 1, "", "merge_two_subspaces_qr"]], "fl4health.strategies.fedpm": [[164, 1, 1, "", "FedPm"]], "fl4health.strategies.fedpm.FedPm": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "aggregate"], [164, 2, 1, "", "aggregate_bayesian"], [164, 2, 1, "", "reset_beta_priors"]], "fl4health.strategies.flash": [[165, 1, 1, "", "Flash"]], "fl4health.strategies.flash.Flash": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "add_auxiliary_information"], [165, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.model_merge_strategy": [[166, 1, 1, "", "ModelMergeStrategy"]], "fl4health.strategies.model_merge_strategy.ModelMergeStrategy": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "aggregate_evaluate"], [166, 2, 1, "", "aggregate_fit"], [166, 2, 1, "", "configure_evaluate"], [166, 2, 1, "", "configure_fit"], [166, 2, 1, "", "evaluate"], [166, 2, 1, "", "initialize_parameters"]], "fl4health.strategies.noisy_aggregate": [[167, 4, 1, "", "add_noise_to_array"], [167, 4, 1, "", "add_noise_to_ndarrays"], [167, 4, 1, "", "gaussian_noisy_aggregate_clipping_bits"], [167, 4, 1, "", "gaussian_noisy_unweighted_aggregate"], [167, 4, 1, "", "gaussian_noisy_weighted_aggregate"]], "fl4health.strategies.scaffold": [[168, 1, 1, "", "OpacusScaffold"], [168, 1, 1, "", "Scaffold"]], "fl4health.strategies.scaffold.OpacusScaffold": [[168, 2, 1, "", "__init__"]], "fl4health.strategies.scaffold.Scaffold": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "aggregate"], [168, 2, 1, "", "aggregate_fit"], [168, 2, 1, "", "compute_parameter_delta"], [168, 2, 1, "", "compute_updated_control_variates"], [168, 2, 1, "", "compute_updated_parameters"], [168, 2, 1, "", "compute_updated_weights"], [168, 2, 1, "", "configure_fit_all"], [168, 2, 1, "", "initialize_control_variates"]], "fl4health.strategies.strategy_with_poll": [[169, 1, 1, "", "StrategyWithPolling"]], "fl4health.strategies.strategy_with_poll.StrategyWithPolling": [[169, 2, 1, "", "configure_poll"]], "fl4health.utils": [[171, 0, 0, "-", "client"], [172, 0, 0, "-", "config"], [173, 0, 0, "-", "data_generation"], [174, 0, 0, "-", "dataset"], [175, 0, 0, "-", "dataset_converter"], [176, 0, 0, "-", "early_stopper"], [177, 0, 0, "-", "functions"], [178, 0, 0, "-", "load_data"], [179, 0, 0, "-", "logging"], [180, 0, 0, "-", "losses"], [181, 0, 0, "-", "metrics"], [182, 0, 0, "-", "msd_dataset_sources"], [183, 0, 0, "-", "nnunet_utils"], [184, 0, 0, "-", "parameter_extraction"], [185, 0, 0, "-", "partitioners"], [186, 0, 0, "-", "peft_parameter_extraction"], [187, 0, 0, "-", "privacy_utilities"], [188, 0, 0, "-", "random"], [189, 0, 0, "-", "sampler"], [190, 0, 0, "-", "snapshotter"], [191, 0, 0, "-", "typing"]], "fl4health.utils.client": [[171, 4, 1, "", "check_if_batch_is_empty_and_verify_input"], [171, 4, 1, "", "clone_and_freeze_model"], [171, 4, 1, "", "fold_loss_dict_into_metrics"], [171, 4, 1, "", "maybe_progress_bar"], [171, 4, 1, "", "move_data_to_device"], [171, 4, 1, "", "process_and_check_validation_steps"], [171, 4, 1, "", "set_pack_losses_with_val_metrics"]], "fl4health.utils.config": [[172, 6, 1, "", "InvalidConfigError"], [172, 4, 1, "", "check_config"], [172, 4, 1, "", "load_config"], [172, 4, 1, "", "make_dict_with_epochs_or_steps"], [172, 4, 1, "", "narrow_dict_type"], [172, 4, 1, "", "narrow_dict_type_and_set_attribute"]], "fl4health.utils.data_generation": [[173, 1, 1, "", "SyntheticFedProxDataset"], [173, 1, 1, "", "SyntheticIidFedProxDataset"], [173, 1, 1, "", "SyntheticNonIidFedProxDataset"]], "fl4health.utils.data_generation.SyntheticFedProxDataset": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "construct_covariance_matrix"], [173, 2, 1, "", "generate"], [173, 2, 1, "", "generate_client_tensors"], [173, 2, 1, "", "one_layer_map_inputs_to_outputs"], [173, 2, 1, "", "two_layer_map_inputs_to_outputs"]], "fl4health.utils.data_generation.SyntheticIidFedProxDataset": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "generate_client_tensors"], [173, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "generate_client_tensors"], [173, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.dataset": [[174, 1, 1, "", "BaseDataset"], [174, 1, 1, "", "DictionaryDataset"], [174, 1, 1, "", "SslTensorDataset"], [174, 1, 1, "", "SyntheticDataset"], [174, 1, 1, "", "TensorDataset"], [174, 4, 1, "", "select_by_indices"]], "fl4health.utils.dataset.BaseDataset": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "update_target_transform"], [174, 2, 1, "", "update_transform"]], "fl4health.utils.dataset.DictionaryDataset": [[174, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SslTensorDataset": [[174, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SyntheticDataset": [[174, 2, 1, "", "__init__"]], "fl4health.utils.dataset.TensorDataset": [[174, 2, 1, "", "__init__"]], "fl4health.utils.dataset_converter": [[175, 1, 1, "", "AutoEncoderDatasetConverter"], [175, 1, 1, "", "DatasetConverter"]], "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "convert_dataset"], [175, 2, 1, "", "get_condition_vector_size"], [175, 2, 1, "", "get_unpacking_function"], [175, 2, 1, "", "unpack_input_condition"]], "fl4health.utils.dataset_converter.DatasetConverter": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "convert_dataset"]], "fl4health.utils.early_stopper": [[176, 1, 1, "", "EarlyStopper"]], "fl4health.utils.early_stopper.EarlyStopper": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "load_snapshot"], [176, 2, 1, "", "should_stop"]], "fl4health.utils.functions": [[177, 1, 1, "", "BernoulliSample"], [177, 4, 1, "", "decode_and_pseudo_sort_results"], [177, 4, 1, "", "pseudo_sort_scoring_function"], [177, 4, 1, "", "select_zeroeth_element"], [177, 4, 1, "", "sigmoid_inverse"]], "fl4health.utils.functions.BernoulliSample": [[177, 2, 1, "", "backward"], [177, 2, 1, "", "forward"], [177, 2, 1, "", "setup_context"]], "fl4health.utils.load_data": [[178, 1, 1, "", "ToNumpy"], [178, 4, 1, "", "get_cifar10_data_and_target_tensors"], [178, 4, 1, "", "get_mnist_data_and_target_tensors"], [178, 4, 1, "", "get_train_and_val_cifar10_datasets"], [178, 4, 1, "", "get_train_and_val_mnist_datasets"], [178, 4, 1, "", "load_cifar10_data"], [178, 4, 1, "", "load_cifar10_test_data"], [178, 4, 1, "", "load_mnist_data"], [178, 4, 1, "", "load_mnist_test_data"], [178, 4, 1, "", "load_msd_dataset"], [178, 4, 1, "", "split_data_and_targets"]], "fl4health.utils.logging": [[179, 1, 1, "", "LoggingMode"]], "fl4health.utils.logging.LoggingMode": [[179, 3, 1, "", "EARLY_STOP_VALIDATION"], [179, 3, 1, "", "TEST"], [179, 3, 1, "", "TRAIN"], [179, 3, 1, "", "VALIDATION"]], "fl4health.utils.losses": [[180, 1, 1, "", "EvaluationLosses"], [180, 1, 1, "", "LossMeter"], [180, 1, 1, "", "LossMeterType"], [180, 1, 1, "", "Losses"], [180, 1, 1, "", "TrainingLosses"]], "fl4health.utils.losses.EvaluationLosses": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "aggregate"], [180, 2, 1, "", "as_dict"]], "fl4health.utils.losses.LossMeter": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "aggregate_losses_dict"], [180, 2, 1, "", "clear"], [180, 2, 1, "", "compute"], [180, 2, 1, "", "update"]], "fl4health.utils.losses.LossMeterType": [[180, 3, 1, "", "ACCUMULATION"], [180, 3, 1, "", "AVERAGE"]], "fl4health.utils.losses.Losses": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "aggregate"], [180, 2, 1, "", "as_dict"]], "fl4health.utils.losses.TrainingLosses": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "aggregate"], [180, 2, 1, "", "as_dict"]], "fl4health.utils.msd_dataset_sources": [[182, 1, 1, "", "MsdDataset"], [182, 4, 1, "", "get_msd_dataset_enum"]], "fl4health.utils.msd_dataset_sources.MsdDataset": [[182, 3, 1, "", "TASK01_BRAINTUMOUR"], [182, 3, 1, "", "TASK02_HEART"], [182, 3, 1, "", "TASK03_LIVER"], [182, 3, 1, "", "TASK04_HIPPOCAMPUS"], [182, 3, 1, "", "TASK05_PROSTATE"], [182, 3, 1, "", "TASK06_LUNG"], [182, 3, 1, "", "TASK07_PANCREAS"], [182, 3, 1, "", "TASK08_HEPATICVESSEL"], [182, 3, 1, "", "TASK09_SPLEEN"], [182, 3, 1, "", "TASK10_COLON"]], "fl4health.utils.nnunet_utils": [[183, 1, 1, "", "Module2LossWrapper"], [183, 1, 1, "", "NnUNetDataLoaderWrapper"], [183, 1, 1, "", "NnunetConfig"], [183, 1, 1, "", "PolyLRSchedulerWrapper"], [183, 1, 1, "", "StreamToLogger"], [183, 4, 1, "", "collapse_one_hot_tensor"], [183, 4, 1, "", "convert_deep_supervision_dict_to_list"], [183, 4, 1, "", "convert_deep_supervision_list_to_dict"], [183, 4, 1, "", "get_dataset_n_voxels"], [183, 4, 1, "", "get_segs_from_probs"], [183, 4, 1, "", "prepare_loss_arg"], [183, 4, 1, "", "reload_modules"], [183, 4, 1, "", "set_nnunet_env"], [183, 4, 1, "", "set_nnunet_env_and_reload_modules"], [183, 4, 1, "", "use_default_signal_handlers"]], "fl4health.utils.nnunet_utils.Module2LossWrapper": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "forward"]], "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "reset"], [183, 2, 1, "", "shutdown"]], "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "get_lr"]], "fl4health.utils.nnunet_utils.StreamToLogger": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "flush"], [183, 2, 1, "", "write"]], "fl4health.utils.parameter_extraction": [[184, 4, 1, "", "check_shape_match"], [184, 4, 1, "", "get_all_model_parameters"]], "fl4health.utils.partitioners": [[185, 1, 1, "", "DirichletLabelBasedAllocation"]], "fl4health.utils.partitioners.DirichletLabelBasedAllocation": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "partition_dataset"], [185, 2, 1, "", "partition_label_indices"]], "fl4health.utils.peft_parameter_extraction": [[186, 4, 1, "", "get_all_peft_parameters_from_model"]], "fl4health.utils.privacy_utilities": [[187, 4, 1, "", "convert_model_to_opacus_model"], [187, 4, 1, "", "map_model_to_opacus_model"], [187, 4, 1, "", "privacy_validate_and_fix_modules"]], "fl4health.utils.random": [[188, 4, 1, "", "generate_hash"], [188, 4, 1, "", "restore_random_state"], [188, 4, 1, "", "save_random_state"], [188, 4, 1, "", "set_all_random_seeds"], [188, 4, 1, "", "unset_all_random_seeds"]], "fl4health.utils.sampler": [[189, 1, 1, "", "DirichletLabelBasedSampler"], [189, 1, 1, "", "LabelBasedSampler"], [189, 1, 1, "", "MinorityLabelBasedSampler"]], "fl4health.utils.sampler.DirichletLabelBasedSampler": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "subsample"]], "fl4health.utils.sampler.LabelBasedSampler": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "subsample"]], "fl4health.utils.sampler.MinorityLabelBasedSampler": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "subsample"]], "fl4health.utils.snapshotter": [[190, 1, 1, "", "AbstractSnapshotter"], [190, 1, 1, "", "BytesSnapshotter"], [190, 1, 1, "", "EnumSnapshotter"], [190, 1, 1, "", "HistorySnapshotter"], [190, 1, 1, "", "LRSchedulerSnapshotter"], [190, 1, 1, "", "OptimizerSnapshotter"], [190, 1, 1, "", "SerializableObjectSnapshotter"], [190, 1, 1, "", "SingletonSnapshotter"], [190, 1, 1, "", "StringSnapshotter"], [190, 1, 1, "", "TorchModuleSnapshotter"]], "fl4health.utils.snapshotter.AbstractSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.BytesSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.EnumSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.HistorySnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.LRSchedulerSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.OptimizerSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SerializableObjectSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SingletonSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.StringSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.TorchModuleSnapshotter": [[190, 2, 1, "", "load_attribute"], [190, 2, 1, "", "save_attribute"]], "fl4health.utils.typing": [[191, 1, 1, "", "LogLevel"]], "fl4health.utils.typing.LogLevel": [[191, 3, 1, "", "CRITICAL"], [191, 3, 1, "", "DEBUG"], [191, 3, 1, "", "ERROR"], [191, 3, 1, "", "INFO"], [191, 3, 1, "", "NOTSET"], [191, 3, 1, "", "WARNING"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [1, 10, 11, 13, 14, 17, 21, 22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 43, 46, 47, 49, 50, 51, 53, 54, 82, 91, 92, 93, 99, 103, 118, 122, 124, 134, 138, 144, 150, 156, 158, 159, 161, 163, 164, 165, 168, 169, 171, 173, 183, 185], "0": [7, 24, 27, 42, 43, 46, 47, 48, 49, 51, 53, 58, 61, 71, 73, 74, 76, 78, 80, 81, 82, 85, 86, 87, 96, 97, 98, 105, 107, 108, 112, 124, 134, 138, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 173, 177, 178, 183, 185, 189, 191], "000": [42, 51], "000local": [42, 51], "001": [7, 73], "00818": 34, "01": [43, 96], "03075": 62, "03871": 157, "05": [75, 108], "05206": 36, "05629": [156, 160], "05709": [71, 101], "06127": 173, "06378": [54, 152, 168], "06963": [157, 167], "07": [78, 85], "07078": [36, 100], "07623": 33, "07978313": [185, 189], "08857052": [185, 189], "09": 165, "09158": [71, 101], "09278": [54, 152], "1": [16, 24, 27, 42, 46, 47, 49, 51, 53, 54, 65, 71, 72, 73, 75, 78, 80, 81, 82, 85, 86, 87, 96, 98, 103, 105, 107, 108, 112, 114, 124, 134, 138, 144, 145, 146, 147, 148, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 173, 176, 177, 178, 183, 185, 189], "10": [1, 27, 46, 47, 73, 87, 112, 173, 178, 183, 185, 189, 191], "100": 189, "1000": [173, 185, 189], "10000": 185, "10020518": 76, "10279": [43, 103], "12": [42, 51], "1308": 177, "13461": 22, "15": 61, "15328": [35, 147, 164], "1602": [156, 160], "16825": 37, "1710": [157, 167], "1812": 173, "19": 75, "1905": 157, "1910": [54, 152, 168], "1912": 34, "19619462": [185, 189], "19644968": [185, 189], "19992536": [185, 189], "1d": [86, 105, 173, 185], "1e": [75, 78, 85, 108, 165], "2": [7, 23, 27, 28, 31, 38, 42, 46, 47, 50, 51, 54, 71, 75, 78, 81, 82, 85, 86, 87, 91, 93, 103, 112, 122, 133, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 173, 177, 178, 183, 185, 189], "20": [7, 27, 46, 47, 62, 191], "2002": [71, 101], "2003": 22, "20080513": [185, 189], "2016": [71, 133], "2019": 62, "2023": [161, 162], "2066252": [185, 189], "2102": [33, 36, 100], "2111": [54, 152], "2207": [62, 71, 101], "2209": [35, 147, 164], "2303": 36, "2308": [43, 103], "2309": 37, "23645891": [185, 189], "250": [42, 51, 183], "29519184": [185, 189], "2999956": [185, 189], "2d": [33, 42, 51, 81, 99, 105, 108, 112, 173], "2i": 75, "2n": 71, "3": [1, 7, 42, 51, 65, 78, 81, 82, 85, 87, 185], "30": 191, "32": [133, 151, 188], "333": 80, "3432": 177, "3837": 183, "3d": [78, 85, 105, 108], "3d_fullr": [42, 51], "4": [42, 51, 54, 75, 78, 81, 82, 85, 87, 177], "40": 191, "4096": 188, "42": 188, "4d": 108, "5": [42, 49, 51, 53, 71, 73, 74, 76, 78, 80, 81, 85, 96, 97, 108, 112, 157, 160, 162, 173, 176, 183, 185, 189], "50": [73, 189, 191], "5d": 108, "6": 112, "60": 173, "64": [7, 87, 183], "667": 80, "6b180037abbebea991d8b1232f8a8ca9": 71, "7": [61, 87], "8": [31, 58, 61, 81, 82, 188, 189], "80": 1, "8080": 7, "8222": 81, "9": [1, 7, 80, 87, 157, 165, 183], "99": 165, "A": [1, 4, 10, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 96, 98, 99, 101, 102, 103, 108, 109, 110, 112, 122, 124, 134, 135, 136, 138, 141, 143, 145, 146, 147, 148, 149, 150, 152, 155, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 174, 175, 178, 180, 183, 188, 190], "AND": [10, 36, 38, 81, 150, 168, 174], "AS": 53, "AT": [81, 82, 174], "As": [1, 10, 11, 13, 28, 41, 78, 85, 87, 91, 92, 112, 173, 177], "At": [1, 23, 30, 38, 48, 176], "BE": 174, "By": [13, 21, 23, 27, 41, 42, 46, 47, 51, 73, 88, 89, 110, 144, 168], "For": [1, 11, 13, 14, 17, 22, 23, 25, 27, 28, 32, 33, 36, 38, 42, 46, 47, 48, 49, 50, 51, 53, 68, 78, 80, 81, 82, 85, 87, 91, 92, 96, 97, 103, 105, 108, 112, 114, 118, 121, 124, 130, 133, 134, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 157, 158, 159, 160, 161, 162, 163, 167, 173, 174, 177, 183, 187, 188, 189], "If": [1, 7, 10, 11, 12, 13, 14, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 74, 75, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 96, 97, 101, 105, 107, 108, 112, 127, 130, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 160, 161, 162, 163, 168, 171, 172, 173, 176, 177, 183, 185, 188], "In": [1, 4, 10, 21, 22, 23, 27, 28, 30, 36, 38, 42, 43, 46, 50, 51, 52, 53, 75, 81, 82, 87, 88, 89, 91, 92, 93, 103, 105, 107, 108, 112, 122, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 163, 164, 166, 173, 180, 185, 189], "It": [1, 12, 13, 14, 32, 42, 43, 50, 51, 71, 76, 82, 91, 93, 97, 99, 100, 103, 118, 122, 128, 133, 134, 135, 138, 144, 156, 157, 161, 162, 168, 173, 177, 185, 187, 188], "NOT": [10, 38, 102, 113, 160, 162], "No": [18, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 132], "Not": [42, 48, 50, 51, 65, 91, 93, 117, 146, 149, 166], "OR": 150, "On": [50, 82, 91, 93], "One": [4, 22, 82, 113, 148, 152, 178], "Or": 171, "TO": [53, 174], "That": [1, 11, 30, 36, 81, 82, 96, 97, 109, 157, 168, 173, 185], "The": [1, 4, 7, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 65, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 118, 121, 124, 128, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 180, 183, 185, 187, 188, 189, 190], "Their": 82, "Then": [23, 24, 27, 28, 29, 33, 38, 42, 46, 47, 50, 51, 54, 91, 92, 93, 103, 164, 168, 173], "There": [38, 82, 103, 177, 185], "These": [1, 4, 23, 28, 30, 31, 38, 43, 48, 52, 75, 81, 82, 91, 92, 96, 100, 103, 109, 110, 113, 114, 118, 145, 146, 148, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 173, 174, 184, 186], "To": [1, 7, 23, 29, 31, 38, 42, 48, 51, 54, 78, 79, 80, 85, 88, 89, 97, 149, 180], "Will": [10, 14, 161, 174], "With": 7, "_": [7, 10, 12, 54, 76], "_1": 54, "_2": 54, "__call__": [78, 82, 85], "__get_item__": 174, "__init__": [1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 173, 174, 175, 176, 180, 183, 185, 189], "_config": [42, 51], "_description_": 183, "_f": 112, "_hydrate_model_for_checkpoint": [13, 149], "_i": [43, 103], "_loss": [7, 23, 42, 51, 90, 92, 93, 128, 183], "_lrschedul": [42, 51, 183], "_maskedbatchnorm": 108, "_modul": 105, "_p": 76, "_post_process_count_tensor": 81, "_state": 14, "_train_step_with_model_and_optim": 41, "_val_step_with_model": 41, "ab": [22, 33, 34, 36, 43, 54, 62, 103, 152, 156, 157, 160, 173], "ab8068dbc96804a5c1a8b898fd115175cfebfe75": 96, "abadi": 133, "abc": [1, 10, 14, 78, 79, 82, 85, 97, 110, 111, 120, 121, 132, 133, 144, 169, 173, 174, 180, 189, 190], "abil": [38, 41, 88, 89], "abl": [1, 49], "ablat": [4, 37], "about": [21, 23, 24, 28, 30, 38, 48, 50, 54, 59, 88, 89, 91, 92, 93, 133], "abov": [1, 4, 27, 38, 46, 47, 75, 78, 81, 82, 85, 86, 112, 124, 132, 133, 134, 138, 157, 159, 163, 173], "absenc": 4, "absolut": [72, 183], "abstract": [10, 14, 48, 71, 78, 79, 82, 85, 97, 110, 111, 120, 121, 123, 127, 132, 133, 169, 173, 174, 180, 189, 190], "abstracta": [8, 95, 97], "abstractsnapshott": [8, 14, 170, 190], "accept": [80, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 177], "accept_failur": [141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "access": [134, 138], "accessor": [91, 92], "accomplish": [81, 144, 189], "accord": [24, 42, 51, 54, 87, 112, 124, 156, 159, 160, 166, 168, 180, 185], "accordingli": 97, "account": [44, 87, 132, 133, 134, 138, 145, 148, 152, 157, 163], "accumul": [27, 46, 47, 78, 79, 80, 82, 84, 85, 99, 170, 180], "accumulate_featur": 99, "accuraci": [7, 8, 78, 80, 85, 154, 161, 166, 168], "achiev": [23, 41], "across": [38, 48, 50, 51, 72, 76, 81, 82, 83, 91, 93, 99, 132, 134, 135, 138, 158, 159, 163, 164, 167, 168, 173, 177, 183, 185], "act": [43, 98, 108, 110, 114, 171], "activ": [1, 7, 23, 25, 27, 28, 38, 41, 46, 47, 49, 53, 103], "actual": [11, 50, 91, 93, 112], "ad": [1, 4, 10, 14, 21, 23, 24, 27, 28, 30, 38, 41, 46, 47, 48, 50, 54, 65, 88, 89, 91, 92, 93, 99, 105, 108, 110, 112, 133, 134, 138, 145, 148, 150, 152, 157, 160, 162, 167, 175], "adap": 183, "adapt": [4, 13, 21, 28, 39, 41, 50, 62, 88, 89, 91, 93, 96, 157, 160, 162, 165], "adapt_loss_weight": [160, 162], "adaptive_alpha": 96, "adaptive_clip": [24, 157], "adaptive_constraint_serv": [8, 139], "adaptive_drift_constrain": [8, 88], "adaptive_drift_constraint_cli": [8, 20], "adaptiveconstraintservercheckpointandstatemodul": [8, 9, 13, 141, 142, 143], "adaptivedriftconstrainedmixin": [8, 88, 89, 91, 92, 93], "adaptivedriftconstrainedprotocol": [8, 88, 89, 91, 92, 93], "adaptivedriftconstraintcli": [8, 20, 21, 28, 32, 50, 88, 89], "add": [4, 10, 14, 21, 27, 28, 35, 38, 46, 47, 50, 78, 85, 88, 89, 91, 92, 93, 105, 112, 128, 134, 135, 138, 144, 147, 156, 157, 167, 177], "add_auxiliary_inform": [154, 156, 157, 160, 162, 165], "add_items_to_config_fn": [8, 139, 150], "add_mean": 112, "add_noise_to_arrai": [8, 154, 167], "add_noise_to_ndarrai": [8, 154, 167], "add_to_snapshot_attr": [9, 14], "addit": [1, 4, 13, 21, 22, 23, 25, 27, 28, 29, 38, 39, 42, 43, 46, 47, 49, 50, 51, 53, 81, 82, 91, 92, 93, 99, 105, 107, 108, 144, 150, 156, 160, 173, 175, 180, 188], "addition": [28, 42, 51], "additional_dim": 183, "additional_loss": 180, "additional_paramet": [119, 121, 123], "adher": 1, "adjust": [4, 160, 161, 162], "adjustment_weight": 161, "adjustment_weight_step_s": [161, 162], "advanc": [22, 23], "aeprocessor": [125, 126, 127], "affect": [81, 150, 188], "affin": [43, 103, 108, 173], "aforement": 177, "after": [4, 7, 10, 11, 13, 14, 21, 22, 23, 25, 27, 32, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 82, 88, 89, 96, 97, 103, 108, 112, 122, 129, 134, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 157, 160, 162, 163, 164, 165, 166, 173, 174, 175, 178, 183], "again": 17, "against": [21, 22, 23, 25, 27, 28, 29, 38, 43, 46, 47, 49, 50, 53, 78, 79, 80, 85, 91, 92, 93, 161, 162], "agglom": 163, "aggreg": [4, 11, 13, 21, 22, 23, 25, 28, 30, 31, 32, 33, 38, 42, 47, 48, 49, 50, 51, 52, 53, 54, 76, 81, 82, 83, 88, 89, 91, 92, 93, 96, 98, 100, 102, 113, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 177, 180], "aggregate_bayesian": [154, 164], "aggregate_evalu": [139, 146, 154, 156, 161, 166], "aggregate_fit": [154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168], "aggregate_loss": [8, 154, 155], "aggregate_losses_dict": [170, 180], "aggregate_result": [8, 154, 155], "aggregate_util": [8, 154], "aggregated_metr": 83, "aggregation_mod": 98, "ai": [58, 134, 138], "aim": [4, 33, 53, 71, 75, 76, 97, 141, 142, 143, 144, 145, 147, 148, 150, 152], "akin": [11, 28, 50, 91, 93], "al": [62, 133, 161, 162], "algorithm": [4, 22, 23, 28, 30, 32, 35, 38, 49, 50, 91, 92, 93, 112, 122, 141, 143, 147, 152, 157, 161, 162, 163, 165, 188], "alia": [25, 28, 29, 36, 49, 53, 65, 82, 91, 92], "align": [73, 81, 82, 156, 158, 159, 163, 164, 168], "align_pred_and_target_shap": [8, 78, 87], "all": [1, 4, 11, 14, 16, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 38, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 59, 65, 68, 74, 81, 82, 83, 84, 86, 88, 89, 91, 92, 93, 97, 99, 105, 112, 117, 118, 122, 124, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 171, 173, 175, 176, 177, 180, 183, 184, 186], "all_client_metr": 83, "all_h_u_per_sampl": 75, "all_h_u_per_v_i": 75, "alloc": [178, 185], "allow": [4, 10, 11, 13, 14, 21, 23, 24, 28, 30, 31, 36, 38, 39, 41, 44, 48, 50, 54, 65, 75, 80, 88, 89, 91, 92, 93, 99, 109, 112, 130, 134, 138, 144, 147, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 174, 176, 177, 188], "almost": [144, 167], "along": [1, 4, 13, 22, 23, 29, 30, 31, 36, 38, 41, 43, 48, 51, 54, 81, 82, 83, 84, 87, 99, 102, 113, 146, 157, 158, 159, 160, 163, 164, 180], "alongsid": [43, 119], "alpha": [23, 27, 46, 47, 96, 164, 173], "alpha_lr": 96, "alpha_new": 164, "alreadi": [1, 7, 10, 11, 12, 22, 23, 29, 41, 42, 43, 48, 51, 112, 118, 134, 138, 163, 178], "also": [1, 4, 13, 21, 23, 24, 25, 27, 28, 29, 35, 38, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 75, 82, 88, 89, 91, 92, 93, 100, 102, 103, 109, 121, 122, 124, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 158, 159, 160, 161, 162, 163, 164, 168, 173, 175, 177, 183, 188], "alter": 1, "altern": [112, 173], "alwai": [10, 12, 21, 24, 30, 42, 48, 50, 51, 81, 82, 88, 89, 91, 93, 109, 122, 134, 135, 138, 144, 166, 183], "always_preprocess": [42, 51], "ambigu": 87, "among": 159, "amount": [144, 145, 148, 152, 160, 162], "an": [1, 4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 61, 65, 69, 79, 80, 81, 82, 86, 88, 89, 91, 92, 93, 97, 98, 101, 103, 105, 107, 108, 109, 110, 112, 121, 122, 124, 134, 135, 136, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 169, 171, 173, 174, 177, 179, 180, 182, 183, 185, 187, 189, 191], "analysi": [1, 112, 163], "analyt": 128, "analyz": 58, "ani": [1, 10, 11, 13, 14, 22, 23, 24, 25, 27, 29, 31, 33, 36, 41, 42, 43, 46, 47, 49, 51, 53, 59, 61, 62, 82, 89, 90, 94, 96, 99, 100, 110, 118, 119, 120, 121, 122, 123, 124, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 158, 159, 161, 162, 163, 169, 172, 173, 174, 175, 177, 183, 184, 187, 188, 189, 190], "announc": [23, 42, 51], "anoth": [4, 7, 105, 107, 108, 124, 168, 173, 185, 187], "anticip": 4, "anyth": [4, 23, 27, 28, 29, 43, 91, 92, 105, 144, 156], "apfl": [4, 22, 23, 27, 42, 46, 47, 51, 96], "apfl_bas": [8, 95], "apfl_client": [8, 20], "apflclient": [8, 20, 22], "apflmodul": [8, 95, 96], "api": 4, "app": 146, "appear": [1, 82], "append": [23, 42, 51, 65, 78, 79, 80, 85, 180], "appendix": 173, "appli": [1, 4, 16, 17, 18, 21, 23, 25, 27, 29, 41, 42, 46, 47, 51, 54, 58, 61, 65, 71, 80, 88, 89, 91, 92, 96, 103, 105, 107, 108, 112, 129, 132, 133, 150, 164, 167, 174, 175, 177, 178, 183], "applic": [4, 10, 65, 94, 106, 129, 133, 160, 162, 183], "apply_adaptive_drift_to_cli": [8, 88, 89], "apply_layer_filt": [115, 118], "approach": [11, 33, 35, 37, 43, 52, 53, 73, 96, 100, 113, 156, 157, 160, 163, 164, 187], "appropri": [21, 23, 30, 33, 36, 49, 53, 81, 88, 89, 91, 92, 97, 155, 173], "approv": 1, "approx": 157, "approxim": [27, 46, 47, 75, 112, 132, 163], "ar": [1, 4, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 71, 72, 73, 75, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 118, 121, 122, 124, 130, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 189], "arbitrari": [23, 121, 124, 135, 136, 158, 159, 177], "architectur": [4, 13, 28, 38, 91, 92, 93, 96, 97, 100, 150, 156, 168], "area": [78, 85, 158, 159], "aren": 39, "arg": [88, 89, 90, 91, 92, 93, 94, 111, 177, 187, 189], "argmax": 173, "argument": [7, 10, 12, 23, 27, 41, 46, 47, 80, 81, 82, 86, 112, 134, 135, 136, 138, 144, 150, 171, 174, 177, 183], "around": [1, 103, 142], "arrai": [21, 88, 89, 117, 121, 149, 155, 164, 167, 168, 177, 184, 185, 186, 189], "arrang": 163, "art": 4, "articl": [53, 76], "artifact": [141, 142, 143, 144, 145, 147, 148, 150, 152], "arxiv": [22, 33, 34, 35, 36, 37, 43, 54, 62, 71, 100, 101, 103, 147, 152, 156, 157, 160, 164, 167, 168, 173, 177], "as_dict": [170, 180], "ask": [38, 141, 142, 143, 144, 145, 147, 148, 150, 152, 165], "assert": 14, "assertionerror": [48, 78, 85, 87], "assess": 73, "assign": [185, 189], "assist": 14, "associ": [1, 10, 12, 14, 17, 23, 24, 30, 31, 37, 39, 43, 49, 53, 58, 68, 74, 76, 78, 79, 80, 81, 82, 84, 85, 88, 89, 94, 96, 97, 113, 114, 121, 124, 134, 138, 146, 151, 152, 156, 157, 168, 173, 174, 184, 185, 186, 187], "assum": [13, 21, 22, 23, 24, 27, 28, 29, 30, 38, 41, 43, 46, 47, 48, 51, 52, 54, 72, 75, 78, 81, 82, 85, 87, 88, 89, 91, 92, 97, 101, 105, 107, 108, 112, 113, 117, 118, 132, 133, 146, 157, 161, 163, 164, 166, 168, 171, 173, 174, 177, 183, 185], "assumpt": [87, 97, 99], "astral": 1, "attach": 43, "attempt": [4, 10, 12, 30, 39, 53, 81, 82, 87, 185, 187], "attent": 174, "attribut": [10, 11, 14, 22, 23, 24, 25, 27, 28, 29, 30, 33, 38, 42, 46, 47, 48, 50, 51, 54, 78, 79, 80, 82, 85, 91, 92, 93, 99, 145, 148, 161, 172, 176, 177, 190], "attribute_nam": 172, "attribute_snapshot": 190, "auc": [78, 85], "aucroc": [78, 85], "augment": [32, 42, 51, 174, 183], "auto": 97, "autocast": 51, "autodocstr": 1, "autoencod": [8, 97, 125, 175], "autoencoderdatasetconvert": [8, 170, 175], "autoencoderprocess": [125, 126, 127], "autoencoders_bas": [8, 95], "autograd": 177, "autom": 1, "automat": [1, 7, 11, 41, 101, 177], "auxiliari": [21, 88, 89, 119, 156, 162], "avail": [1, 4, 11, 13, 16, 18, 144, 152, 156, 166, 168, 175], "available_cli": [156, 166], "averag": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 78, 80, 81, 82, 85, 95, 98, 145, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 180, 183], "avoid": [14, 78, 85, 134, 138, 183, 188], "awai": [27, 46, 47, 112, 122], "awar": 39, "axi": [81, 82, 98], "b": [23, 42, 51, 163, 173], "b_1": 173, "b_2": 173, "b_i": 173, "b_k": [133, 173], "back": [10, 12, 23, 30, 31, 48, 52, 105, 107, 108, 112, 157, 168, 183], "background": [81, 82, 91, 92, 183], "backprop": [22, 23, 41, 43, 51], "backpropag": 29, "backward": [21, 23, 27, 28, 29, 38, 41, 43, 46, 47, 49, 50, 54, 91, 93, 170, 177, 180, 183], "balanc": [78, 85], "balanced_accuraci": [78, 85], "balanced_accuracy_scor": [78, 85], "balancedaccuraci": [8, 78, 85], "bar": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 171], "base": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 189, 190, 191], "base_loss": 128, "base_metr": [8, 78], "base_model": 114, "base_modul": [100, 103, 109, 114], "base_report": [8, 134], "base_sampling_manag": [8, 15], "base_serv": [7, 8, 139], "basecli": [88, 89], "basedataset": [8, 129, 170, 174, 189], "baseestim": 65, "baseexcept": [146, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168], "basefractionsamplingmanag": [8, 15, 16, 18, 19, 157, 168], "basereport": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152], "baseservercheckpointandstatemodul": [8, 9, 13, 144, 145], "basi": [75, 82, 132], "basic": [10, 13, 23, 42, 51, 52, 54, 89, 91, 127, 137, 141, 143, 150, 161, 174], "basic_cli": [7, 8, 20], "basic_exampl": 7, "basic_fedavg": [8, 154], "basica": [8, 95, 97], "basiccli": [7, 8, 10, 11, 14, 20, 21, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 39, 41, 43, 44, 49, 51, 52, 53, 54, 90, 134, 138, 176], "basicfedavg": [8, 148, 154, 156, 157, 158, 159, 160, 163, 165, 168], "batch": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 71, 72, 80, 81, 82, 97, 98, 99, 108, 121, 132, 133, 148, 152, 157, 171, 178, 183], "batch_dim": [81, 82], "batch_siz": [7, 42, 51, 58, 61, 71, 72, 76, 78, 82, 85, 99, 102, 109, 113, 114, 148, 152, 178, 183], "batchnorm": 187, "batchnorm2d": 33, "bayesian": [147, 164], "bayesian_aggreg": 164, "becaus": [11, 36, 42, 51, 81, 112, 117, 144, 149, 157, 174, 183], "becom": 16, "been": [1, 4, 7, 11, 13, 21, 23, 25, 30, 31, 35, 48, 54, 82, 83, 86, 88, 89, 91, 92, 97, 99, 105, 110, 112, 118, 121, 144, 149, 150, 157, 171, 173, 175, 177, 185], "befor": [1, 7, 11, 13, 16, 23, 25, 27, 28, 32, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 75, 80, 91, 92, 109, 110, 132, 134, 138, 141, 142, 143, 144, 145, 147, 149, 151, 152, 158, 159, 160, 162, 163, 174, 175, 176, 183], "begin": [23, 38, 42, 51, 52, 103, 144, 147, 164], "behavior": [21, 30, 31, 44, 51, 80, 81, 88, 89, 141, 142, 143, 144, 145, 147, 148, 152, 161, 183], "behind": 163, "being": [4, 12, 13, 14, 21, 23, 24, 25, 28, 30, 34, 37, 38, 39, 48, 49, 50, 52, 53, 54, 77, 80, 81, 82, 87, 88, 89, 91, 92, 93, 114, 123, 132, 144, 145, 148, 150, 152, 156, 168, 183], "believ": 112, "belong": [94, 114, 121, 124, 159, 163], "below": [1, 24, 78, 80, 81, 82, 85, 86, 117, 173], "benchmark": 188, "bernoulli": [105, 107, 108, 164, 177], "bernoulli_prob": 177, "bernoullisampl": [8, 170, 177], "best": [4, 176], "bestlossopacuscheckpoint": [8, 9, 12], "bestlosstorchmodulecheckpoint": [8, 9, 10], "bestmetrictorchmodulecheckpoint": [8, 9, 10], "beta": [23, 27, 46, 47, 75, 103, 147, 157, 164, 173, 185, 189], "beta_1": 165, "beta_2": 165, "beta_global_update_interv": [46, 47], "beta_new": 164, "beta_with_extreme_kernel_base_valu": [70, 75], "better": [1, 4, 10], "between": [4, 22, 23, 24, 25, 27, 28, 32, 34, 36, 37, 38, 43, 46, 47, 49, 50, 52, 54, 71, 72, 73, 74, 75, 76, 77, 80, 81, 87, 91, 93, 103, 105, 107, 108, 116, 119, 122, 124, 128, 164, 178], "bia": [105, 107, 108, 173], "bias": [108, 134, 138], "bias_scor": 122, "bin": 1, "binar": [81, 82], "binari": [42, 51, 63, 69, 78, 81, 82, 85, 87, 105, 107, 108, 122, 157, 164, 183], "binaryclassificationmetr": [8, 78, 81, 82], "binarydic": [8, 78, 81], "binarysoftdicecoeffici": [8, 78, 85], "bit": [13, 24, 144, 147, 157, 167, 183], "blank": [141, 142, 143, 144, 145, 147, 148, 152], "blob": [42, 51, 96, 103, 133], "block": [80, 105, 163, 183], "blur": 174, "bool": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 65, 68, 73, 74, 75, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 103, 105, 106, 107, 108, 112, 114, 118, 122, 127, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 175, 176, 183, 187, 188, 190], "boolean": [21, 23, 24, 28, 30, 38, 50, 52, 88, 89, 91, 92, 93, 99, 108, 177, 187, 190], "both": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 80, 81, 82, 87, 91, 92, 96, 97, 98, 102, 105, 108, 113, 141, 142, 143, 144, 145, 147, 148, 150, 152, 168, 172, 174], "bound": [24, 105, 107, 108, 132, 133, 157, 167, 189], "branch": 1, "break": [1, 4, 36, 185], "buf": 183, "buffer": [27, 46, 47, 99, 183], "bug": 173, "built": [1, 4, 157, 168], "byte": [30, 68, 90, 162, 165, 190], "bytessnapshott": [8, 170, 190], "c": [1, 24, 54, 108, 168, 173], "c_": 168, "c_i": 54, "c_t": 157, "c_updat": 168, "cach": [42, 51], "calcul": [4, 22, 23, 25, 30, 38, 43, 49, 53, 54, 78, 80, 81, 82, 85, 103, 109, 122, 128, 157, 161, 168, 171, 183], "calculate_class_sample_proport": [20, 43], "calculate_parameters_norm": [20, 24], "calculate_update_with_momentum": [154, 157], "call": [1, 7, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 32, 36, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 88, 89, 91, 92, 93, 97, 99, 124, 134, 135, 136, 137, 138, 144, 147, 156, 157, 158, 159, 160, 162, 164, 177, 187, 189], "callabl": [1, 58, 61, 62, 80, 94, 97, 99, 122, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 174, 175, 178, 183], "can": [1, 7, 14, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 41, 42, 43, 46, 47, 48, 50, 51, 54, 71, 73, 75, 81, 82, 88, 89, 91, 93, 97, 99, 101, 112, 121, 123, 127, 130, 132, 134, 138, 144, 149, 150, 157, 158, 159, 161, 162, 163, 164, 166, 168, 169, 171, 175, 177, 183, 188], "cancer": 61, "cannot": [87, 134, 138], "capabl": 97, "carri": 145, "case": [21, 22, 23, 27, 28, 31, 46, 48, 53, 81, 82, 88, 89, 91, 92, 124, 134, 135, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 163, 164, 166, 167, 171, 180, 183], "categor": [68, 86], "categori": [43, 68], "caus": [141, 142, 143, 144, 145, 147, 148, 150, 152], "cc": 71, "cdot": [24, 54, 80, 81, 86, 96, 97, 103, 112, 168, 173], "cell": 59, "cell_typ": 59, "center": [112, 167, 173], "center_data": [95, 112], "central": [132, 156, 157, 158, 159, 160, 163, 164, 166, 168], "certain": [12, 114, 159, 188], "certainli": 144, "cfg_fn": 150, "chang": [1, 7, 14, 35, 65, 123, 134, 138, 160, 161, 162], "channel": [78, 81, 82, 85, 105, 108, 150], "charact": 183, "check": [14, 23, 29, 30, 39, 42, 51, 99, 106, 134, 136, 138, 161, 171, 172, 183, 184], "check_config": [8, 170, 172], "check_if_batch_is_empty_and_verify_input": [8, 170, 171], "check_shape_match": [8, 170, 184], "check_target_prediction_keys_equ": [78, 84], "checker": 1, "checkpoint": [1, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 99, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 161, 176, 180], "checkpoint_and_state_modul": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 141, 142, 143, 144, 145, 147, 148, 150, 152], "checkpoint_dict": 14, "checkpoint_dir": [10, 11, 12, 14], "checkpoint_exist": [9, 14], "checkpoint_nam": [10, 11, 12, 14], "checkpoint_path": [10, 12, 13, 14], "checkpoint_score_funct": [10, 12], "checkpoint_score_nam": [10, 12], "checkpointing_path": [127, 129], "checkpointmod": [8, 9, 11], "checkpointscorefunctiontyp": 10, "child": [13, 23, 29, 31, 38, 42, 48, 51, 110, 144, 180, 183], "choic": 1, "choos": 112, "chosen": [112, 144, 147, 175], "cid": [16, 161, 177], "cifar10": 178, "cifarcli": 7, "circular": 105, "clarifi": 1, "class": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 189, 190, 191], "classif": [37, 38, 43, 78, 82, 85, 87, 102, 109, 113, 114], "classifi": [4, 34, 36, 78, 85, 114], "classificationmetr": [8, 78, 82], "classificationoutcom": [8, 78, 82], "classmethod": [105, 107, 108, 161], "clear": [8, 78, 79, 80, 82, 84, 85, 99, 170, 180], "clear_buff": [95, 99], "client": [4, 8, 10, 11, 13, 14, 16, 17, 18, 19, 58, 59, 62, 76, 83, 88, 89, 91, 92, 93, 97, 102, 103, 113, 116, 118, 119, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 175, 176, 177, 183, 185, 188], "client_": 14, "client_base_typ": [89, 91], "client_batch_s": 132, "client_dataset_s": 132, "client_dp_fedavgm": [8, 154], "client_instruct": 151, "client_level_dp_fed_avg_serv": [8, 139], "client_manag": [7, 8, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 161, 166, 168, 169], "client_model_upd": 167, "client_modul": [8, 9], "client_nam": [14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62], "client_num": [58, 59], "client_result": 177, "client_sampling_r": 132, "client_singular_valu": 163, "client_singular_vector": 163, "clientcheckpointandstatemodul": [8, 9, 11, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54], "clientlevelaccount": [8, 131, 132], "clientleveldpfedavgm": [8, 145, 154, 157], "clientleveldpfedavgserv": [8, 139, 145], "clientmanag": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 161, 166, 168], "clientproxi": [16, 17, 18, 19, 146, 151, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 177], "clientstatecheckpoint": [8, 9, 11, 14], "clip": [4, 13, 23, 24, 41, 42, 51, 132, 133, 157, 167], "clip_paramet": [20, 24], "clipping_bit": 157, "clipping_bound": [24, 44, 157, 167], "clipping_cli": [8, 20], "clipping_learning_r": 157, "clipping_noise_multipli": 157, "clipping_quantil": 157, "clippingbitservercheckpointandstatemodul": [8, 9, 13], "clone": [49, 171], "clone_and_freeze_model": [8, 170, 171], "close": [4, 37], "cnn_model": 7, "code": [4, 62, 73, 80, 173, 177], "codebas": 1, "codecov": 1, "codestyl": 1, "coeffici": [4, 21, 75, 78, 81, 85, 160, 168], "coincid": 75, "collabor": 7, "collaps": 183, "collapse_one_hot_tensor": [8, 170, 183], "collat": 31, "collect": [1, 161, 162, 180], "column": [62, 65, 112, 163], "com": [28, 42, 51, 53, 62, 71, 73, 76, 91, 92, 96, 103, 133, 173, 183, 188], "combin": [4, 22, 38, 43, 76, 96, 110, 157, 162, 177], "come": [1, 82, 177], "comm": 96, "command": 1, "commenc": 7, "comment": 1, "commit": 1, "common": 7, "commun": [13, 35, 48, 52, 144, 157], "compar": [1, 52, 74, 82, 112, 122, 124], "comparison": [74, 122], "compat": [35, 38, 44, 78, 80, 85, 96, 97, 109, 110, 114, 134, 138, 174, 177, 183, 187], "compil": [42, 51], "complement": 81, "complet": [4, 22, 23, 27, 46, 47, 49, 99, 130, 132], "complex": [13, 156], "compliant": 187, "complic": 123, "compon": [4, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 76, 81, 91, 93, 101, 103, 109, 112, 129, 130, 144, 147, 150, 163, 173], "compos": [82, 128], "composit": 110, "compound_metr": [8, 78], "compress": [4, 35], "comput": [8, 10, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 101, 103, 105, 107, 108, 112, 128, 129, 132, 144, 145, 148, 155, 157, 163, 166, 167, 168, 170, 177, 180, 183], "compute_all_h_u_all_sampl": [70, 75], "compute_all_h_u_from_inner_product": [70, 75], "compute_all_h_u_from_inner_products_linear": [70, 75], "compute_all_h_u_linear": [70, 75], "compute_conditional_input": [20, 43], "compute_contrastive_loss": [70, 74], "compute_cosine_similarity_loss": [70, 74], "compute_cumulative_explained_vari": [95, 112], "compute_dice_on_count_tensor": [8, 78, 86], "compute_euclidean_inner_product": [70, 75], "compute_euclidean_inner_products_linear": [70, 75], "compute_evaluation_loss": [20, 23, 25, 26, 27, 28, 29, 49, 53, 88, 90, 91, 92], "compute_explained_variance_ratio": [95, 112], "compute_from_count": [78, 81, 82], "compute_h_u_from_inner_product": [70, 75], "compute_h_u_from_inner_products_linear": [70, 75], "compute_hat_d_per_kernel": [70, 75], "compute_hat_q_k": [70, 75], "compute_hat_q_k_linear": [70, 75], "compute_kernel": [70, 73], "compute_loss_and_additional_loss": [20, 22, 23, 25, 26, 27, 28, 40, 42, 45, 46, 47, 49, 51, 53, 88, 90], "compute_magnitude_level_loss": [20, 43], "compute_mkmmd": [70, 75], "compute_negative_similar": [70, 71], "compute_parameter_delta": [154, 168], "compute_parameters_delta": [20, 54], "compute_penalty_loss": [8, 20, 21, 88, 89], "compute_perfcl_loss": [70, 74], "compute_projection_vari": [95, 112], "compute_reconstruction_error": [95, 112], "compute_training_loss": [20, 21, 23, 26, 27, 28, 29, 38, 43, 45, 46, 47, 49, 50, 88, 90, 91, 93], "compute_updated_control_vari": [20, 54, 154, 168], "compute_updated_paramet": [154, 168], "compute_updated_weight": [154, 168], "compute_vertic": [70, 75], "compute_weight_update_and_clip": [20, 24], "concaten": [21, 28, 54, 65, 88, 89, 91, 92, 95, 97, 110], "concept": [13, 39, 165], "conclud": [25, 53], "concret": 82, "concurr": 151, "cond_vec_s": 175, "conda": 1, "condit": [43, 97, 103, 108, 127, 175, 177], "condition_vector_s": 175, "conditional_beta": 103, "conditional_gamma": 103, "conditionalva": [8, 95, 97], "config": [1, 7, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 88, 89, 90, 91, 92, 93, 116, 117, 118, 120, 124, 134, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 170, 171, 183], "config_path": 172, "configur": [1, 21, 23, 25, 31, 35, 39, 42, 44, 48, 51, 52, 53, 74, 78, 82, 85, 88, 89, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172], "configure_evalu": [139, 146, 150, 154, 156, 157, 161, 166], "configure_fit": [150, 154, 156, 157, 161, 166], "configure_fit_al": [154, 168], "configure_pol": [144, 154, 156, 169], "conform": 1, "conjug": 164, "conjunct": [78, 79, 80, 82, 85], "connect": [4, 35, 105, 161], "consequ": 112, "consid": [1, 4, 13, 71, 80, 87, 171], "consist": [29, 38, 103, 124, 129, 158, 159, 168], "constant": [8, 21, 63, 132, 157, 160, 162, 183], "constitut": [159, 185], "constrain": [4, 27, 28, 38, 46, 49, 50, 53, 74, 77, 88, 89, 91, 92, 93], "constrained_fenda_cli": [8, 20], "constrainedfendacli": [8, 20, 25], "constrainedfendalosscontain": [8, 25, 70, 74], "constraint": [13, 25, 28, 38, 50, 88, 89, 91, 92, 93, 160, 162], "constraint_tensor": 77, "construct": [14, 58, 61, 62, 68, 75, 103, 118, 122, 159, 168, 185, 189], "construct_covariance_matrix": [170, 173], "construct_quadrupl": [70, 75], "construct_rxrx1_tensor_dataset": [56, 57, 58], "construct_skin_cancer_tensor_dataset": [56, 60, 61], "constructor": [42, 51, 118], "contain": [4, 21, 23, 24, 25, 27, 28, 29, 30, 36, 38, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 61, 62, 74, 76, 81, 82, 84, 88, 89, 91, 92, 93, 103, 117, 121, 124, 128, 129, 130, 135, 136, 144, 145, 146, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 183, 184, 186, 188, 189, 190], "content": [1, 87], "context": [10, 14, 91, 92, 103, 177], "continu": [1, 4, 78, 81, 82, 85, 86, 87], "contrast": [4, 23, 25, 41, 49, 53, 71, 74, 76, 101, 109, 114, 163], "contrastive_loss": [8, 25, 49, 70], "contrastive_loss_config": 74, "contrastive_loss_minim": 25, "contrastive_loss_weight": 74, "contrastive_weight": 49, "contribut": [4, 10, 82, 83, 158, 159, 164], "control": [1, 4, 23, 43, 52, 54, 121, 152, 165, 168, 183, 185, 189], "control_variates_upd": 168, "conv": 105, "conv1d": 105, "conv2d": 105, "conv3d": 105, "conv_modul": 105, "conveni": [91, 92], "convent": 1, "converg": 68, "convers": [175, 183, 187], "convert": [35, 61, 86, 87, 91, 105, 106, 108, 121, 159, 175, 177, 178, 183, 184, 185, 186, 187], "convert_dataset": [170, 175], "convert_deep_supervision_dict_to_list": [8, 170, 183], "convert_deep_supervision_list_to_dict": [8, 170, 183], "convert_model_to_opacus_model": [8, 170, 187], "convert_to_masked_model": [95, 104, 106], "converter_funct": 175, "convex": [4, 22], "convolut": 105, "convolv": 105, "convtranspose1d": 105, "convtranspose2d": 105, "convtranspose3d": 105, "coo": [13, 121, 124, 159], "coordin": [23, 30, 36, 48, 52, 159], "copi": [38, 42, 51, 52, 106, 107, 108], "core": 1, "core_protocol": [8, 88], "correct": [1, 4, 54, 82, 87, 151, 157], "correctli": [11, 13, 36, 161], "correspond": [10, 13, 21, 22, 23, 28, 29, 41, 42, 43, 50, 51, 52, 54, 68, 76, 77, 78, 81, 82, 85, 87, 88, 89, 91, 92, 93, 96, 103, 112, 113, 118, 121, 122, 133, 157, 163, 164, 167, 172, 174, 177, 180, 185], "cos_sim_loss": 25, "cos_sim_loss_weight": 74, "cosin": [25, 71, 72, 74, 103], "cosine_similarity_loss": [8, 25, 70], "cosine_similarity_loss_config": 74, "cosinesimilarityloss": [8, 70, 72], "cosinesimilaritylosscontain": [8, 70, 74], "could": [82, 88, 89, 103, 175, 190], "count": [23, 42, 48, 51, 58, 81, 82, 83, 86, 144, 145, 148, 155, 156, 157, 158, 159, 160, 163, 164, 168, 177, 178], "count_tp_fp_tn_fn": [78, 82], "cov": [8, 43, 95, 103], "covari": [75, 121, 173], "cover": 164, "cpu": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 127, 171], "creat": [1, 10, 12, 14, 42, 51, 58, 84, 89, 96, 129, 134, 138, 171, 172, 174, 178, 189], "create_plan": [20, 40, 42, 51], "create_split": [56, 57, 58], "creation": [1, 13, 175], "criteria": [112, 118, 160, 162, 176], "criterion": [11, 16, 17, 18, 19, 21, 49, 52, 53, 88, 90, 91, 92, 93, 123, 124], "critic": [170, 191], "cross": [50, 71, 91, 93], "crossentropyloss": 7, "csv": 59, "ctx": 177, "cubla": 188, "cublas_workspace_config": 188, "cuda": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 171, 188], "current": [1, 11, 13, 21, 23, 24, 25, 27, 28, 30, 32, 36, 38, 39, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 76, 82, 88, 89, 91, 92, 93, 110, 122, 124, 134, 135, 136, 138, 144, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 171, 177, 180, 183, 185], "current_epoch": [23, 42, 51], "current_round": [22, 23, 27, 36, 39, 42, 46, 47, 51], "current_server_round": [7, 23, 25, 27, 28, 32, 36, 38, 39, 42, 43, 46, 47, 49, 50, 51, 53, 90, 91, 92, 93], "curv": [78, 85], "custom": [21, 22, 23, 24, 25, 28, 30, 31, 34, 36, 37, 38, 39, 41, 42, 44, 48, 50, 51, 54, 88, 89, 91, 92, 93, 144, 146, 147, 150, 152, 154, 156, 161, 162, 168, 175, 177, 187], "custom_converter_funct": 175, "customtemplatepath": 1, "cvae": [97, 127, 128], "cvaefixedconditionprocessor": [125, 126, 127], "cvaevariableconditionprocessor": [125, 126, 127], "cycl": [157, 160, 176], "d": [112, 163, 174, 185, 189], "data": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 68, 73, 75, 84, 91, 92, 93, 97, 98, 103, 112, 127, 129, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 163, 164, 171, 173, 174, 175, 177, 178, 183, 185, 189], "data_dir": [61, 178], "data_gener": [8, 170], "data_identifi": [42, 51], "data_load": 31, "data_path": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 58, 62, 178], "data_shap": 175, "datafram": [58, 59, 62, 65, 68], "dataload": [7, 23, 24, 27, 28, 29, 30, 31, 33, 38, 42, 43, 44, 46, 47, 48, 50, 51, 54, 58, 61, 90, 91, 92, 93, 129, 175, 178, 183], "datapoint": [58, 133, 174, 185, 189], "dataset": [7, 8, 23, 27, 28, 30, 31, 36, 42, 43, 48, 50, 51, 78, 81, 83, 85, 91, 92, 93, 129, 132, 133, 150, 156, 157, 158, 159, 160, 163, 164, 166, 168, 170, 173, 175, 178, 183, 185, 189], "dataset_convert": [8, 61, 170, 178], "dataset_dir": 59, "dataset_fingerprint": [42, 51], "dataset_id": [42, 51], "dataset_json": [42, 51], "dataset_nam": [42, 51, 61, 182], "dataset_path": 7, "dataset_typ": 58, "datasetconvert": [8, 61, 170, 175, 178], "ddp": 4, "deal": [86, 174], "debug": [1, 42, 51, 134, 138, 170, 191], "decai": [43, 183], "decathelon": 178, "decid": [10, 11, 13, 97], "decis": [10, 12], "decod": [95, 97], "decode_and_pseudo_sort_result": [8, 170, 177], "decomposit": [112, 163], "decor": 183, "decreas": [160, 162, 183], "deep": [27, 42, 51, 73, 133, 150, 177, 183], "deep_mmd_client": [8, 20], "deep_mmd_loss": [8, 70], "deep_mmd_loss_weight": 27, "deepmmdloss": [8, 70, 73], "def": [7, 177], "default": [10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 58, 61, 65, 68, 69, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 87, 88, 89, 96, 97, 101, 102, 103, 105, 107, 108, 109, 110, 112, 114, 117, 122, 127, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 175, 176, 178, 183, 185, 187, 188, 189], "defaultdict": 83, "defin": [1, 7, 10, 11, 12, 13, 14, 22, 23, 25, 29, 30, 31, 36, 38, 39, 42, 43, 48, 51, 75, 78, 79, 80, 81, 82, 85, 96, 97, 103, 110, 112, 128, 134, 138, 144, 148, 149, 150, 152, 161, 163, 175, 176, 177, 178, 183, 187], "define_metr": [8, 134, 138], "definit": [10, 13, 166], "degre": [73, 165], "deleg": 41, "delet": [14, 134, 138], "delete_from_snapshot_attr": [9, 14], "delta": [24, 132, 133, 145, 148, 152, 168], "delta_control_vari": 54, "delta_model_weight": 54, "denomin": [78, 85, 108, 167], "denot": [76, 163], "dens": [121, 159], "depend": [1, 7, 23, 30, 36, 52, 81, 82, 97, 101, 110, 114, 134, 138, 156, 187], "depth": 99, "deriv": [14, 23, 24, 27, 28, 29, 33, 38, 42, 46, 47, 50, 51, 53, 54, 91, 92, 93, 141, 143, 174], "derm7pt": 62, "derm7pt_image_path_func": [56, 60, 62], "derm7pt_label_map_func": [56, 60, 62], "descent": 183, "describ": [1, 37, 39, 43, 75, 103, 134, 138, 157, 173], "descript": [133, 173], "design": [4, 39, 156, 174, 175], "desir": [1, 21, 23, 24, 28, 30, 38, 48, 50, 54, 82, 88, 89, 91, 92, 93, 99, 102, 105, 124, 133, 155, 172], "despit": [50, 91, 93], "detach": [28, 38, 91, 92], "detail": [1, 112, 118, 124, 159, 164, 173, 177, 188], "determin": [10, 11, 12, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 86, 88, 89, 91, 92, 101, 103, 110, 124, 134, 135, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 176, 177, 183, 187, 188, 189], "determinist": [177, 188], "dev": [1, 132, 167], "develop": 4, "deviat": [122, 133, 167, 173], "devic": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 71, 72, 73, 74, 75, 76, 77, 88, 90, 91, 92, 93, 105, 107, 108, 127, 171], "diagon": [163, 173], "dice": [78, 81, 85, 86], "dict": [1, 10, 11, 12, 13, 14, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 68, 88, 89, 90, 91, 92, 93, 96, 98, 99, 102, 103, 110, 113, 114, 122, 124, 130, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 174, 178, 180, 183, 185, 188, 190], "dictionari": [10, 12, 14, 21, 22, 23, 25, 27, 28, 29, 30, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 58, 61, 62, 78, 79, 80, 82, 84, 85, 88, 89, 91, 92, 93, 96, 98, 99, 103, 110, 113, 114, 121, 124, 130, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 171, 172, 174, 178, 180, 183, 190], "dictionary_kei": 172, "dictionarydataset": [8, 170, 174, 189], "differ": [4, 13, 23, 29, 30, 32, 36, 38, 39, 42, 48, 50, 51, 54, 74, 81, 82, 87, 91, 93, 121, 122, 123, 133, 146, 158, 159, 164, 168, 173, 183, 185], "differenti": [4, 12, 24, 44, 54, 77, 97, 133, 145, 148, 152, 157, 177], "dilat": 105, "dim": [72, 183], "dim_reduct": [125, 126], "dimens": [43, 72, 73, 75, 78, 81, 82, 85, 86, 87, 97, 98, 99, 103, 105, 108, 129, 173, 174, 177, 183], "dimension": [31, 97, 112, 128, 129], "dir": [14, 31], "direct": [4, 168], "directli": [1, 163, 177], "directori": [1, 10, 11, 12, 13, 14, 58, 59, 61, 176, 178], "dirichlet": [185, 189], "dirichletlabelbasedalloc": [8, 170, 185], "dirichletlabelbasedsampl": [8, 170, 189], "disabl": [28, 50, 91, 93, 99, 188], "disable_accumulating_featur": [95, 99], "disable_torch_benchmark": 188, "discard": [82, 159, 189], "disconnect": 144, "discrep": [73, 75], "discuss": [38, 157], "disk": [14, 31, 42, 51], "displai": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 49, 50, 52, 53, 54, 134, 138, 171, 184], "display_progress_bar": 171, "distanc": [27, 46, 47, 73, 75], "distinct": [11, 36, 38, 113, 141, 142, 143, 144, 145, 147, 148, 150, 152], "distribut": [4, 7, 27, 46, 47, 73, 97, 128, 150, 163, 164, 173, 185, 189], "ditto": [4, 11, 23, 27, 28, 38, 46, 47, 50, 88, 91, 93, 141], "ditto_cli": [8, 20], "ditto_deep_mmd_cli": [20, 26], "ditto_mkmmd_cli": [20, 45], "ditto_serv": [139, 140], "dittocli": [8, 20, 27, 28, 38, 46], "dittodeepmmdcli": [20, 26, 27], "dittomkmmdcli": [20, 45, 46], "dittopersonalizedmixin": [8, 88, 91, 92], "dittopersonalizedprotocol": [8, 88, 91, 92], "dittoserv": [139, 140, 141], "diverg": 128, "divid": [78, 83, 85, 122, 165], "divis": [75, 81, 86], "dk": 73, "dkfz": [42, 51, 183], "dl_name": [42, 51], "do": [1, 4, 7, 12, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 82, 105, 107, 108, 123, 134, 138, 144, 149, 150, 161, 163, 169, 184, 189], "do_one_hot_encod": 175, "doc": [1, 105, 112, 121, 124, 133, 134, 138, 159, 188], "docstr": [1, 118], "docstringformat": 1, "document": [4, 42, 51, 74, 76, 81, 82, 112, 134, 138, 162, 188], "doe": [1, 10, 12, 14, 48, 51, 88, 89, 91, 92, 96, 108, 134, 138, 150, 159, 163, 166, 178, 185], "doesn": [11, 87], "domain": [4, 75, 81, 161, 162], "don": [28, 31, 38, 81, 91, 92, 165, 174, 183], "done": [1, 4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 82, 91, 92, 112, 132, 133, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 156, 157, 158, 159, 163, 173], "down": [23, 42, 51, 137, 167], "download": [7, 178], "downsampl": 189, "downsampling_ratio": 189, "downstream": 31, "dp": [4, 13, 44, 132, 133, 145, 148, 152, 157, 187], "dpevent": 133, "dpscaffoldcli": [8, 20, 54], "dpscaffoldserv": [8, 139, 152], "dpscaffoldservercheckpointandstatemodul": [8, 9, 13, 152], "draw": 173, "drawn": [73, 173, 185], "drift": [4, 21, 27, 28, 32, 38, 39, 46, 47, 50, 54, 88, 89, 91, 93, 122, 160, 165], "drift_penalty_tensor": [88, 89, 91, 92, 93], "drift_penalty_weight": [32, 88, 89, 91, 92, 93], "drop": [81, 86], "dtype": [24, 81, 82, 89, 90, 105, 107, 108, 118, 119, 120, 121, 122, 123, 124, 163], "due": [4, 42, 51, 157, 164], "dummi": [10, 146], "dump": [8, 134, 136], "dure": [4, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 76, 80, 81, 82, 88, 89, 91, 92, 93, 96, 97, 99, 103, 105, 107, 108, 121, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 175, 177], "dynam": [52, 53, 89, 123, 158, 171], "dynamiclayerexchang": [8, 115, 116, 118, 122], "e": [10, 13, 14, 21, 22, 23, 24, 29, 41, 42, 43, 49, 51, 54, 65, 81, 82, 84, 87, 102, 105, 107, 112, 133, 134, 135, 136, 138, 152, 157, 166, 168, 175, 177], "each": [1, 4, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 61, 65, 71, 73, 80, 81, 82, 83, 84, 86, 91, 92, 93, 97, 99, 102, 103, 105, 107, 112, 113, 118, 123, 124, 127, 132, 133, 136, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 173, 176, 177, 180, 183, 185, 189], "earli": [14, 39, 176], "early_stop_valid": [170, 179], "early_stopp": [8, 170], "earlystopp": [8, 170, 176], "easi": 4, "easiest": [1, 7], "effect": [1, 4, 35, 65, 164, 188], "effici": [4, 35, 82, 112, 163, 187], "efficient_metr": [8, 78], "efficient_metrics_bas": [8, 78], "eg": [82, 183], "eigenvector": 112, "either": [10, 11, 12, 43, 51, 69, 81, 82, 87, 101, 112, 114, 133, 134, 138, 150, 156, 168, 177, 183, 185, 190], "elaps": [144, 145, 146, 148, 149, 152], "element": [23, 25, 27, 28, 38, 41, 42, 46, 47, 49, 51, 53, 54, 81, 82, 86, 103, 105, 108, 122, 144, 145, 146, 148, 149, 152, 167, 168, 173, 177], "elementwis": 86, "elementwise_affin": 108, "elig": 1, "ell": [27, 28, 38, 46, 47, 50, 91, 93, 122, 160], "ema": 80, "ema_": 80, "emametr": [8, 78, 80], "embed": [43, 103], "empti": [28, 38, 42, 48, 51, 78, 82, 85, 87, 110, 166, 171, 172, 180], "empty_cach": [20, 40, 42, 51], "enabl": [29, 42, 51, 65, 99, 103, 105, 106, 107, 108, 157, 160, 180, 183], "enable_accumulating_featur": [95, 99], "enable_metadata_rout": 65, "encod": [13, 42, 43, 51, 81, 82, 87, 95, 97, 101, 127, 173, 175, 183], "encourag": 1, "end": [23, 27, 30, 42, 46, 47, 51, 76, 82, 118, 134, 135, 136, 138, 157, 173, 189], "enforc": [1, 49, 134, 138, 142, 177], "engin": [4, 44], "enhanc": [71, 76], "ensembl": [29, 98], "ensemble_averag": [95, 98], "ensemble_bas": [8, 95], "ensemble_cli": [8, 20], "ensemble_model": [98, 180], "ensemble_vot": [95, 98], "ensembleaggregationmod": [8, 95, 98], "ensemblecli": [8, 20, 29], "ensemblemodel": [8, 29, 95, 98], "ensur": [1, 4, 13, 23, 28, 29, 33, 35, 36, 39, 43, 53, 73, 82, 87, 91, 92, 94, 141, 143, 148, 152, 156, 157, 159, 161, 168, 169, 183, 185, 187], "ensure_protocol_compli": [88, 91, 94], "entir": [13, 23, 27, 28, 30, 50, 59, 91, 92, 93, 96, 119, 159, 183, 189], "entiti": [134, 138], "entri": [23, 24, 42, 51, 81, 82, 86, 146, 157, 168, 173], "entropi": 71, "enum": [11, 36, 69, 79, 82, 91, 98, 110, 134, 138, 161, 178, 179, 180, 182, 183, 190, 191], "enumer": [11, 36, 69, 79, 82, 91, 98, 110, 134, 138, 179, 180, 182, 191], "enumsnapshott": [8, 170, 190], "env_path": 1, "environ": [1, 7, 42, 51, 183, 188], "ep": 108, "epoch": [8, 23, 36, 39, 42, 51, 132, 133, 134, 135, 136, 137, 138, 148, 152, 172, 183], "epochs_per_round": 132, "epsilon": [73, 78, 85, 97, 132, 133, 145, 148, 152], "equal": [124, 129, 176, 183], "equat": [54, 164], "equival": [4, 133, 177], "error": [1, 10, 11, 13, 14, 65, 75, 91, 92, 94, 112, 134, 138, 157, 161, 168, 170, 174, 183, 184, 185, 188, 191], "error_messag": 184, "especi": [42, 51], "essenti": [10, 37, 76, 90, 102, 146, 150], "establish": 87, "estim": [65, 73, 75, 128, 133, 152, 157, 177, 183], "et": [62, 133, 161, 162], "eta": [103, 165], "eta_i": 103, "eta_l": 165, "etc": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 157, 160, 162, 168, 171, 174], "eval": [7, 13, 23, 41, 146, 156, 157, 166], "evalu": [13, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 92, 93, 103, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 180], "evaluate_after_fit": [23, 36, 39, 161], "evaluate_cli": [8, 20], "evaluate_config": 146, "evaluate_fn": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "evaluate_fn_typ": [163, 165], "evaluate_metrics_aggregation_fn": [7, 8, 78, 83, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "evaluate_round": [139, 144], "evaluate_serv": [8, 139], "evaluatecli": [8, 20, 30], "evaluatein": [146, 156, 157, 161, 166], "evaluater": [146, 156, 166], "evaluateresultsandfailur": [144, 146], "evaluateserv": [8, 139, 146], "evaluationloss": [8, 23, 25, 27, 28, 29, 30, 41, 43, 49, 53, 90, 91, 92, 170, 180], "even": [4, 42, 50, 51, 91, 93, 135, 136, 157, 160, 162, 168], "evenli": 189, "event": [11, 133], "everi": [10, 42, 43, 51, 71, 96, 106, 124, 133, 134, 136, 138, 159, 164, 171], "everyth": 156, "ex": [97, 133], "exact": [23, 88, 89], "exactli": [16, 39, 42, 51, 87, 118, 130, 171], "exampl": [1, 4, 7, 10, 12, 17, 21, 23, 27, 32, 33, 42, 46, 47, 48, 50, 51, 61, 68, 80, 81, 82, 83, 86, 87, 114, 121, 122, 123, 130, 133, 134, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 159, 160, 174, 177, 185, 187, 189], "exce": 122, "exceed": 185, "except": [4, 10, 11, 13, 14, 34, 35, 42, 51, 105, 112, 118, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 163, 166, 168, 171, 172, 183], "exchang": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 88, 89, 91, 92, 93, 96, 100, 102, 103, 113, 114, 116, 118, 119, 121, 122, 123, 124, 149, 158, 159, 161], "exchange_percentag": 122, "exchangertyp": [13, 149], "exclud": [33, 81, 118, 134, 138], "exclus": [37, 118, 130, 185], "execut": [1, 27, 28, 31, 46, 49, 91, 92, 183], "executor": 151, "exhaust": 185, "exist": [4, 7, 10, 11, 12, 13, 14, 22, 23, 29, 30, 41, 42, 43, 51, 65, 74, 82, 101, 134, 138, 172, 174, 175, 178, 180, 185], "exp": 97, "expand": 87, "expect": [14, 16, 21, 30, 42, 51, 81, 82, 98, 102, 108, 109, 112, 113, 114, 134, 138, 157, 169, 172, 175, 183], "experi": [59, 134, 138], "experienc": [156, 157, 158, 159, 160, 163, 166], "experiment": [4, 75, 134, 138], "explicitli": [10, 14, 28, 91, 92, 93, 134, 138, 188, 189], "explor": 4, "expon": 183, "exponenti": 80, "ext": [43, 103], "extend": [4, 23, 25, 43, 54, 78, 79, 80, 85, 156, 177, 189], "extens": [1, 4, 21, 156, 168], "extent": 19, "extra": [42, 43, 51, 118], "extra_adaptive_vari": 121, "extract": [13, 23, 25, 27, 34, 36, 38, 46, 47, 52, 53, 54, 75, 99, 101, 102, 103, 110, 113, 114, 118, 121, 124, 151, 172, 174, 178, 184, 186], "extract_coo_info_from_dens": [115, 121], "extracted_features_buff": 99, "extractor": [4, 25, 34, 36, 37, 38, 43, 53, 76, 99, 102, 103, 109, 110, 113, 114], "extrem": [141, 142, 143, 144, 145, 147, 148, 150, 151, 152], "f": [14, 103, 174], "f1": [8, 78, 85], "f1_score": [78, 85], "f_g": 43, "f_p": 43, "facilit": [1, 4, 7, 11, 13, 14, 17, 31, 35, 52, 123, 124, 144, 146, 149, 157, 161], "fact": 31, "factor": [80, 81, 183], "factori": 91, "fail": [1, 134, 138, 144, 161, 168], "failur": [141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "fair": [28, 38, 91, 92, 161], "fairli": [32, 100, 173], "fairness_metr": [161, 162], "fairness_metric_typ": 161, "fairnessmetr": [8, 154, 161, 162], "fairnessmetrictyp": [8, 154, 161, 162], "fall": [10, 12, 122], "fals": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 65, 75, 81, 82, 86, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 106, 107, 108, 112, 114, 127, 141, 142, 143, 144, 145, 147, 148, 150, 152, 157, 160, 162, 165, 171, 175, 176, 183, 188], "false_neg": [78, 81, 82, 86], "false_posit": [78, 81, 82, 86], "faq": 1, "far": [21, 23, 88, 89, 112, 122, 176], "feasibl": 185, "featur": [1, 4, 21, 22, 23, 25, 27, 28, 29, 34, 36, 37, 38, 41, 42, 43, 46, 47, 49, 50, 51, 53, 65, 68, 69, 71, 72, 73, 74, 75, 76, 90, 91, 92, 93, 99, 101, 102, 103, 108, 109, 110, 113, 114, 173], "feature_align": 8, "feature_dim": 103, "feature_dimens": 71, "feature_extraction_lay": [46, 47], "feature_extraction_layers_with_s": 27, "feature_extractor_buff": [8, 95], "feature_l2_norm_weight": [46, 47], "feature_nam": 68, "feature_s": 99, "feature_tensor": [43, 103], "feature_typ": 68, "featureextractorbuff": [8, 95, 99], "features_forward": [95, 114], "features_org": 73, "fed": [22, 23, 25, 27, 28, 29, 38, 41, 43, 46, 47, 49, 51, 53, 71, 103, 175], "fed_pca_cli": [8, 20], "fed_prox_cli": [8, 20], "fedadagrad": 4, "fedadam": 4, "fedavg": [4, 7, 34, 36, 37, 53, 100, 144, 150, 156, 157, 158, 159, 160, 161, 163, 164, 168], "fedavg_dynamic_lay": [8, 154], "fedavg_sparse_coo_tensor": [8, 154], "fedavg_with_adaptive_constraint": [8, 154], "fedavgdynamiclay": [8, 154, 158, 159, 164], "fedavgm": 157, "fedavgsparsecootensor": [8, 154, 159], "fedavgwithadaptiveconstraint": [8, 21, 88, 89, 141, 142, 143, 154, 160, 162], "fedbn": [4, 33], "fedbn_client": [8, 20], "fedbnclient": [8, 20, 33], "feddg": [4, 17, 161, 162], "feddg_ga": [8, 154], "feddg_ga_with_adaptive_constraint": [8, 154], "feddgga": [8, 154, 161, 162], "feddggaadaptiveconstraint": [8, 154, 162], "feder": [4, 7, 11, 13, 14, 21, 23, 24, 28, 29, 30, 31, 32, 35, 37, 38, 39, 44, 48, 49, 50, 52, 54, 88, 89, 91, 92, 93, 98, 101, 103, 133, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 177], "federated_evalu": [139, 146], "federated_learning_with_differential_privaci": 133, "fedopt": 4, "fedpca": [8, 31, 154], "fedpcacli": [8, 20, 31], "fedper": [4, 34, 36], "fedper_cli": [8, 20], "fedpercli": [8, 20, 34], "fedpm": [4, 8, 35, 105, 106, 107, 108, 116, 122, 147, 154], "fedpm_client": [8, 20], "fedpm_exchang": [8, 115], "fedpm_serv": [8, 139], "fedpmclient": [8, 20, 35], "fedpmexchang": [8, 35, 115, 116], "fedpmserv": [8, 139, 147], "fedprox": [4, 21, 23, 28, 32, 50, 91, 92, 93, 142, 160, 162, 173], "fedprox_serv": [139, 140], "fedproxcli": [8, 20, 32], "fedproxserv": [139, 140, 142], "fedrep": [4, 36, 100], "fedrep_bas": [8, 95], "fedrep_cli": [8, 20], "fedrepcli": [8, 20, 36], "fedrepmodel": [8, 95, 100], "fedreptrainmod": [8, 20, 36], "fedsimclr": [23, 71], "fedsimclr_bas": [8, 95], "fedsimclrmodel": [8, 95, 101], "fedtorch": 96, "fedyogi": 4, "fenda": [4, 23, 25, 27, 32, 37, 38, 42, 46, 47, 50, 51, 53, 74, 100, 102], "fenda_bas": [8, 95], "fenda_cli": [8, 20], "fenda_ditto_cli": [8, 20], "fenda_loss_config": [8, 70], "fendacli": [8, 20, 25, 37], "fendaditto": 38, "fendadittocli": [8, 20, 38], "fendamodel": [8, 38, 95, 102], "fendamodelwithfeaturest": [8, 95, 102], "fengliu90": 73, "fetch": [145, 148, 149], "few": [4, 43], "fhook": 99, "field": [42, 51], "file": [1, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 59, 61, 62, 130, 134, 135, 136, 138, 150, 183], "filereport": [8, 134, 136], "fill": [1, 68], "fill_valu": 68, "filter": [16, 17, 18, 59, 99, 105, 118, 122], "filter_and_save_data": [56, 57, 59], "filtrat": 16, "final": [11, 31, 42, 49, 51, 76, 81, 82, 96, 101, 103, 105, 107, 108, 110, 124, 159, 183, 188], "find": [1, 10], "find_last_common_prefix": [95, 99], "fine": [11, 101], "finetun": 101, "first": [4, 7, 11, 17, 21, 23, 24, 25, 27, 28, 30, 36, 38, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 65, 72, 73, 74, 75, 76, 80, 81, 82, 88, 89, 91, 92, 93, 97, 99, 100, 103, 110, 114, 122, 124, 144, 145, 146, 147, 148, 149, 152, 156, 157, 159, 168, 171, 173, 174, 177, 183, 184], "first_featur": 74, "first_feature_extractor": 110, "first_tensor": 110, "fit": [1, 7, 13, 20, 21, 23, 24, 28, 30, 31, 36, 38, 48, 50, 52, 54, 63, 65, 83, 88, 89, 90, 91, 92, 93, 139, 144, 145, 146, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 175], "fit_config": 7, "fit_config_fn": 7, "fit_metrics_aggregation_fn": [7, 8, 78, 83, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "fit_round": [139, 144, 147], "fit_with_per_round_checkpoint": [139, 144], "fitin": [156, 157, 161, 166, 168], "fitr": [156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 177], "fitresultsandfailur": [144, 147], "fitting_round": [21, 23, 24, 28, 30, 38, 50, 52, 54, 88, 89, 90, 91, 92, 93], "fix": [1, 4, 12, 16, 17, 18, 19, 34, 43, 44, 58, 96, 97, 100, 113, 122, 127, 132, 133, 152, 157, 173, 175, 183, 187], "fixed_sampling_client_manag": [8, 15], "fixed_without_replacement_manag": [8, 15], "fixedlayerexchang": [8, 43, 53, 103, 114, 115, 118, 123], "fixedsamplingbyfractionclientmanag": [8, 15, 18], "fixedsamplingclientmanag": [8, 15, 17, 161], "fixedsamplingwithoutreplac": [8, 131, 133], "fl": [4, 11, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 41, 42, 46, 47, 48, 50, 51, 54, 88, 89, 91, 92, 93, 102, 103, 118, 121, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 163, 168, 169, 172, 183], "fl4health": [0, 7], "fl_account": [8, 131], "fl_config": [141, 142, 143, 144, 145, 147, 148, 150, 152], "flag": [99, 188], "flake8": 1, "flash": [4, 8, 39, 154], "flash_client": [8, 20], "flashclient": [8, 20, 39], "flat": 24, "flatten": [46, 47, 86, 95, 97, 99, 101, 102, 103, 109, 112, 113, 114], "flatten_featur": [100, 102, 103, 114], "flatten_feature_extraction_lay": 99, "flattened_output": 97, "flclientlevelaccountantfixedsamplingnoreplac": [8, 131, 132], "flclientlevelaccountantpoissonsampl": [8, 131, 132], "flcore": 103, "flexibl": [4, 8, 10, 12, 20, 38, 156], "flexiblecli": [20, 40, 41, 42, 88, 89, 91, 92, 94], "flexibleclientprotocol": [8, 88, 89, 90], "flexibleclientprotocolpresetup": [8, 88, 89, 90, 91, 92], "flexiblennunetcli": [20, 40, 42], "flinstancelevelaccount": [8, 131, 132], "float": [10, 11, 12, 13, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 36, 39, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 58, 61, 68, 71, 73, 74, 76, 77, 78, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 96, 108, 112, 121, 122, 124, 132, 133, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 177, 178, 180, 183, 185, 189, 190], "float32": [81, 82], "flow": [1, 13, 30, 33, 38, 39, 44, 52, 58, 97, 144, 147, 156, 157, 168], "flow_util": 96, "flower": [4, 16, 18, 19, 141, 142, 143, 144, 145, 147, 148, 152, 156, 177, 183, 184, 186], "flserver": [7, 8, 13, 14, 139, 141, 142, 143, 144, 145, 147, 148, 150, 152], "flush": [170, 183], "flwr": [7, 141, 142, 143, 144, 145, 147, 148, 150, 152, 183], "fn": [81, 82, 86, 150, 183], "focu": 4, "focus": 90, "fold": [42, 51], "fold_loss_dict_into_metr": [8, 170, 171], "folder": [1, 136, 178], "follow": [1, 23, 24, 28, 30, 31, 36, 38, 39, 42, 51, 62, 80, 91, 92, 96, 103, 112, 121, 124, 133, 156, 157, 159, 163, 164, 166, 168, 177, 183], "footprint": 82, "forc": [35, 156, 161, 168, 188], "foreground_intensity_properties_per_channel": [42, 51], "form": [14, 16, 28, 38, 50, 75, 81, 82, 91, 92, 93, 101, 117, 133, 168, 174], "form_and_solve_qp": [70, 75], "form_h_u_delta_w_i": [70, 75], "form_kernel_samples_minus_expect": [70, 75], "format": [1, 13, 68, 98, 121, 124, 159, 175], "former": [81, 82, 141, 142, 143, 144, 145, 147, 148, 150, 152], "formula": [168, 177], "forward": [23, 27, 28, 38, 41, 46, 47, 70, 71, 72, 73, 75, 76, 77, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 126, 128, 170, 177, 183], "forward_hook": [95, 99], "found": [1, 75, 188], "foundat": 4, "four": [105, 159], "fp": [81, 82, 86], "frac": [24, 54, 81, 86, 168, 173], "fraction": [18, 19, 58, 146, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168], "fraction_evalu": [146, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168], "fraction_fit": [156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168], "framework": [27, 46, 47, 148], "free": 49, "freez": [38, 171], "freeze_base_modul": [95, 100], "freeze_global_feature_extractor": 38, "freeze_head_modul": [95, 100], "frequenc": [58, 59, 147, 176], "frequent": [135, 136], "from": [1, 4, 7, 10, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 65, 68, 73, 74, 75, 76, 80, 81, 82, 84, 88, 89, 91, 92, 93, 96, 97, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 118, 121, 122, 123, 129, 130, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 175, 176, 177, 184, 185, 186, 189], "from_json": [63, 68], "from_pretrain": [104, 105, 107, 108], "frozen": [4, 36, 38, 43, 77, 121, 171], "full": [1, 13, 21, 22, 23, 24, 25, 30, 34, 36, 37, 38, 48, 52, 54, 58, 88, 89, 96, 97, 99, 112, 132, 144, 145, 148, 152, 189], "full_exchang": [8, 115], "full_svd": 112, "fullparameterexchang": [8, 21, 23, 24, 28, 30, 38, 48, 52, 54, 88, 89, 91, 92, 115, 117, 119], "fullparameterexchangerwithpack": [8, 13, 89, 92, 93, 115, 119], "func": [94, 172], "function": [1, 4, 7, 8, 10, 11, 12, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 62, 68, 69, 71, 73, 74, 75, 76, 78, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 99, 101, 105, 107, 108, 109, 110, 114, 118, 121, 122, 124, 128, 130, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 183, 184, 186, 187, 188], "functiontorchcheckpoint": 12, "functiontorchmodulecheckpoint": [8, 9, 10, 12], "functool": [7, 122], "further": [11, 37, 82, 122, 132], "furthermor": 1, "futur": 122, "g": [42, 43, 51, 65, 134, 135, 136, 138, 157, 166, 174, 177], "ga": [4, 17, 161, 162], "gamma": [39, 53, 75, 103], "gamma_i": 103, "gather": 74, "gaussian": [73, 133, 148, 152, 167], "gaussian_degre": 73, "gaussian_noisy_aggregate_clipping_bit": [8, 154, 167], "gaussian_noisy_unweighted_aggreg": [8, 154, 167], "gaussian_noisy_weighted_aggreg": [8, 154, 167], "gce": [8, 43, 95, 103], "gce_softmax_loss": 43, "gener": [1, 4, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 73, 78, 80, 85, 87, 97, 99, 103, 112, 119, 121, 123, 124, 128, 134, 137, 138, 144, 147, 150, 158, 159, 160, 161, 162, 170, 173, 174, 180, 183, 185, 188, 189, 190], "generate_client_tensor": [170, 173], "generate_hash": [8, 20, 31, 170, 188], "generate_parameter_scor": [115, 124], "generatedocstringonent": 1, "get": [1, 4, 14, 48, 80, 81, 99, 130, 134, 138, 151, 173, 183], "get_all_model_paramet": [7, 8, 170, 184], "get_all_peft_parameters_from_model": [8, 170, 186], "get_attribut": [9, 14], "get_best_vertex_for_objective_funct": [70, 75], "get_cifar10_data_and_target_tensor": [8, 170, 178], "get_client_specific_log": [20, 23, 40, 42, 51], "get_client_specific_report": [20, 23, 40, 42, 51], "get_condition_vector_s": [170, 175], "get_criterion": [7, 20, 23, 40, 41, 42, 51, 88, 90], "get_current_weight_step_s": [154, 161], "get_data_load": [7, 20, 23, 30, 31, 40, 41, 42, 51, 88, 90], "get_data_tensor": [20, 31], "get_dataset_n_voxel": [8, 170, 183], "get_default_fill_valu": [63, 69], "get_delta": [131, 132, 133], "get_dp_ev": [131, 133], "get_epsilon": [131, 132, 133], "get_extracted_featur": [95, 99], "get_feature_nam": [63, 68], "get_feature_typ": [63, 68], "get_fill_valu": [63, 68], "get_global_model": [20, 28, 38, 88, 91, 92, 93], "get_hierarchical_attr": [95, 99], "get_input_output_tensor": [170, 173], "get_layers_to_transf": [115, 118], "get_local_model": [20, 30], "get_lr": [170, 183], "get_lr_schedul": [20, 23, 40, 42, 51], "get_matching_compon": [125, 130], "get_metadata": [63, 68], "get_metadata_dimens": [63, 68], "get_mnist_data_and_target_tensor": [8, 170, 178], "get_model": [7, 20, 23, 28, 31, 38, 40, 41, 42, 48, 51, 88, 90, 91, 92, 93], "get_msd_dataset_enum": [8, 170, 178, 182], "get_optim": [7, 20, 22, 23, 28, 29, 36, 40, 41, 42, 43, 51, 88, 90, 91, 92], "get_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 48, 52, 54, 88, 89, 90, 91, 92], "get_parameter_exchang": [8, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 43, 48, 52, 53, 54, 88, 89], "get_properti": [20, 23, 40, 42, 51, 150], "get_segs_from_prob": [8, 170, 183], "get_test_data_load": [20, 23, 48], "get_train_and_val_cifar10_dataset": [8, 170, 178], "get_train_and_val_mnist_dataset": [8, 170, 178], "get_unpacking_funct": [170, 175], "getpropertiesin": [151, 156, 169], "getpropertiesr": 151, "git": [1, 62], "github": [1, 4, 28, 42, 51, 62, 71, 73, 91, 92, 96, 103, 133, 173, 183], "give": 185, "given": [10, 14, 21, 22, 23, 24, 25, 27, 28, 29, 36, 38, 41, 42, 43, 46, 47, 49, 50, 51, 53, 59, 61, 65, 71, 78, 80, 81, 82, 84, 85, 86, 87, 91, 92, 93, 97, 98, 99, 101, 103, 106, 110, 132, 133, 144, 157, 161, 167, 168, 172, 174, 175, 177, 180, 183, 185], "global": [4, 11, 13, 22, 23, 25, 27, 28, 30, 32, 34, 36, 37, 38, 42, 43, 46, 47, 49, 50, 51, 53, 74, 76, 82, 91, 92, 93, 96, 100, 102, 103, 110, 113, 141, 144, 146, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "global_conditional_input": [43, 103], "global_deep_supervis": 150, "global_featur": [43, 74, 76, 102, 103, 113], "global_feature_contrastive_loss": 53, "global_feature_contrastive_loss_weight": [53, 74], "global_feature_loss_temperatur": [53, 74, 76], "global_forward": [95, 96], "global_logit": 96, "global_loss": [22, 27, 28, 38, 46, 47], "global_metr": 30, "global_model": [49, 88, 91, 92, 96, 130], "global_modul": [102, 113], "global_tensor": 110, "go": [13, 134, 138, 183, 187], "goal": 103, "good": [4, 35, 112], "googl": 1, "gpfl": [43, 103], "gpfl_base": [8, 95], "gpfl_client": [8, 20], "gpflbaseandheadmodul": [8, 95, 103], "gpflclient": [8, 20, 43], "gpflmodel": [8, 43, 95, 103], "grab": [156, 157, 168], "gracefulli": [42, 51, 137, 183], "grad": 177, "grad_output": 177, "grad_sample_mod": 187, "gradient": [4, 23, 28, 38, 41, 42, 51, 54, 91, 92, 105, 107, 108, 148, 152, 157, 177], "gradsamplemodul": [156, 168, 187], "gradsamplingmodul": 168, "greater": 124, "ground": [21, 22, 23, 25, 27, 28, 29, 38, 42, 43, 46, 47, 49, 50, 51, 53, 78, 79, 80, 84, 85, 91, 92, 93], "group": [105, 134, 138, 183], "groupnorm": 187, "guarante": [18, 102, 112, 185], "guess": 157, "guesstyp": 1, "guid": [1, 4, 65], "h1_mean_var_gram": [70, 73], "ha": [1, 4, 7, 11, 13, 21, 23, 25, 29, 30, 33, 35, 36, 38, 42, 43, 48, 49, 51, 65, 71, 84, 87, 88, 89, 91, 92, 97, 102, 105, 107, 108, 110, 112, 116, 118, 134, 138, 149, 156, 157, 159, 161, 162, 163, 166, 168, 171, 172, 173, 175, 177, 183, 189], "ham10000": 62, "ham_image_path_func": [56, 60, 62], "ham_label_map_func": [56, 60, 62], "handl": [10, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 82, 88, 89, 99, 110, 116, 121, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 158, 159, 164, 168, 175, 177, 183], "handler": 183, "happen": [21, 48, 88, 89, 103, 141, 142, 143, 144, 145, 147, 148, 150, 152, 157, 177], "hard": 86, "hardcod": 136, "has_contrastive_loss": [70, 74], "has_cosine_similarity_loss": [70, 74], "has_perfcl_loss": [70, 74], "has_region": 183, "hash": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 71, 178, 188], "hash_kei": [178, 189], "hat": [76, 157, 173], "hat_d_per_kernel": 75, "hat_q_k": 75, "have": [1, 4, 7, 13, 21, 23, 24, 25, 28, 29, 30, 31, 35, 36, 38, 42, 43, 48, 50, 51, 53, 54, 65, 71, 75, 78, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 97, 99, 102, 105, 107, 108, 113, 121, 122, 127, 133, 134, 138, 144, 146, 150, 157, 158, 159, 164, 167, 168, 171, 173, 174, 177, 185], "he": 162, "head": [1, 20, 36, 37, 38, 43, 101, 102, 103, 109, 110, 113, 114, 146], "head_epoch": 36, "head_forward": [95, 110], "head_modul": [100, 103, 109, 114], "head_step": 36, "header": [23, 42, 51], "health": 4, "healthcar": 4, "heavili": [80, 144], "held": [13, 48, 82, 144, 158, 159, 164], "help": [1, 13, 17, 18, 21, 23, 24, 28, 30, 38, 52, 88, 89, 91, 92, 151, 183], "helper": [23, 41, 88, 89, 168, 177], "henc": [31, 163], "here": [1, 4, 28, 31, 36, 49, 50, 81, 91, 92, 93, 129, 134, 138, 156, 163, 164, 173, 174, 185, 188], "heterogen": [4, 32, 39, 173, 185, 189], "heterogeneous_partition": 185, "heurist": [28, 50, 91, 93], "hidden": [73, 173], "hidden_dim": [73, 173], "hidden_s": 73, "hierarch": 99, "hierarchi": 183, "high": [135, 136, 185], "higher": [173, 183], "highest": [81, 82, 86], "hinder": 75, "hint": 1, "histori": [144, 145, 146, 148, 149, 152, 190], "historysnapshott": [8, 170, 190], "hold": [11, 13, 58, 74, 87, 103, 133, 144, 147, 151, 161], "hood": [42, 51, 187], "hook": [1, 23, 27, 32, 41, 42, 46, 47, 50, 51, 54, 99, 144, 150, 187], "hope": 10, "hot": [42, 43, 51, 81, 82, 87, 103, 173, 175, 183], "hous": [1, 173], "how": [1, 10, 11, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 78, 81, 82, 83, 85, 86, 97, 110, 134, 138, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 164, 173, 175, 183, 187], "howev": [1, 4, 21, 28, 30, 36, 41, 42, 48, 50, 51, 81, 88, 89, 91, 92, 93, 105, 107, 141, 143], "html": [71, 78, 85, 105, 112, 121, 124, 159, 188], "http": [1, 22, 28, 33, 34, 35, 36, 37, 39, 42, 43, 51, 53, 54, 58, 62, 71, 73, 76, 78, 85, 91, 92, 96, 100, 101, 103, 105, 112, 121, 124, 133, 134, 138, 147, 152, 156, 157, 159, 160, 164, 165, 167, 168, 173, 177, 183, 188], "huge": 112, "hydrat": [13, 30, 149], "hyperparamet": [43, 134, 138], "hypothesi": [4, 35], "i": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 65, 68, 69, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 127, 129, 130, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 185, 187, 188, 189], "id": [1, 31, 42, 51, 134, 136, 138, 144, 146, 161, 174, 188], "idea": [4, 28, 32, 38, 49, 50, 91, 92, 93], "idempot": [28, 91, 92, 93], "ident": [11, 23, 28, 34, 38, 50, 91, 92, 93, 101, 156], "identifi": [21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 84, 136, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 163, 166, 168], "ie": 183, "ieee": 76, "ieeexplor": 76, "ignor": [31, 42, 51, 65, 112, 136, 146, 185], "ignore_background": [81, 82], "ignore_label": [42, 51], "ii": 75, "iid": [49, 173, 189], "imag": [23, 58, 59, 61, 62, 78, 81, 82, 85, 105, 183], "image_path_func": 62, "imbalanc": [78, 85], "immedi": [23, 32, 42, 47, 49, 50, 51], "implement": [1, 10, 12, 13, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 46, 47, 49, 50, 52, 54, 71, 73, 76, 82, 88, 89, 91, 92, 93, 96, 97, 100, 102, 103, 105, 107, 108, 110, 112, 118, 122, 133, 144, 156, 157, 160, 163, 164, 165, 167, 168, 169, 173, 177, 180, 183, 190], "impli": [81, 86, 133, 173], "implicit": 81, "import": [1, 7, 80, 123, 133, 166, 183], "importantli": 48, "impos": 1, "imput": 69, "in_channel": 105, "in_featur": 107, "includ": [1, 4, 14, 21, 23, 25, 27, 28, 30, 38, 41, 43, 46, 47, 49, 50, 51, 53, 88, 89, 91, 92, 93, 96, 132, 141, 142, 143, 144, 145, 147, 148, 150, 152, 157, 160, 162, 168, 173, 175, 184], "include_loss_in_metr": 30, "include_losses_in_metr": [23, 27, 28, 30, 50, 90, 91, 92, 93], "includeextendedsummari": 1, "includenam": 1, "incompat": 187, "incorpor": [1, 4], "increas": 80, "increment": 163, "indefinit": [144, 146, 147, 149, 150, 185], "independ": [1, 82, 158, 159, 173], "index": [21, 22, 23, 25, 27, 28, 29, 38, 41, 42, 43, 46, 47, 49, 50, 51, 53, 81, 82, 86, 87, 91, 92, 93, 98, 103, 177, 183, 188], "indic": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 81, 82, 87, 88, 89, 91, 92, 93, 99, 103, 112, 121, 122, 124, 127, 134, 135, 136, 138, 144, 147, 150, 156, 157, 158, 159, 160, 163, 164, 166, 168, 171, 174, 185, 187], "individu": [27, 29, 46, 47, 49, 81, 82, 98, 134, 138, 144, 147], "infer": [87, 99, 134, 138, 150], "infer_label_dim": [8, 78, 87], "infimum": 133, "infinit": 183, "info": [1, 42, 51, 170, 191], "inform": [4, 13, 21, 23, 24, 28, 30, 35, 38, 42, 48, 50, 51, 54, 59, 68, 78, 85, 88, 89, 91, 92, 93, 97, 103, 105, 116, 119, 121, 123, 124, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 159, 160, 161, 162, 165, 188], "infti": [185, 189], "inherit": [23, 42, 51, 82, 88, 89, 91, 92, 97, 144, 174, 183], "ini": 1, "init": [134, 138, 168], "initi": [8, 13, 16, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 36, 38, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 76, 82, 84, 88, 89, 90, 91, 92, 93, 96, 108, 124, 130, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 180, 183], "initial_clipping_bound": 157, "initial_control_vari": 168, "initial_global_featur": [74, 76], "initial_global_model": [27, 46, 47, 88, 91, 93], "initial_loss_weight": [160, 162], "initial_lr": 183, "initial_model": [117, 118, 120, 122, 123, 124], "initial_paramet": [7, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168], "initialize_all_model_weight": [20, 23, 28, 88, 90, 91, 92], "initialize_control_vari": [154, 168], "initialize_global_model": [20, 30], "initialize_paramet": [154, 156, 166, 168], "initialize_server_model": [139, 150], "inject": [13, 23, 25, 28, 38, 41, 49, 53, 86, 91, 92, 97, 106, 109, 117, 157], "inner": [27, 28, 38, 46, 47, 50, 77, 91, 93], "inner_product": 75, "inner_product_all_sampl": 75, "inner_product_quadrupl": 75, "input": [22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 43, 46, 47, 49, 51, 53, 59, 71, 73, 74, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 118, 121, 124, 128, 130, 134, 138, 150, 161, 163, 171, 173, 174, 175, 177, 178, 183, 185], "input_dim": 173, "input_dir": 59, "input_s": 73, "input_tensor": 110, "input_typ": 14, "ins": 151, "insert": [107, 149, 158, 159], "insid": [65, 124, 177], "inspir": 73, "instal": 1, "instanc": [4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 29, 31, 38, 43, 44, 46, 47, 49, 50, 53, 54, 91, 92, 93, 94, 105, 107, 108, 132, 133, 148, 152, 161, 180], "instance_level_dp_cli": [8, 20], "instance_level_dp_serv": [8, 139], "instanceleveldpcli": [8, 20, 44, 54, 156, 168], "instanceleveldpserv": [8, 139, 148, 152], "instanti": [30, 52, 150, 161], "instead": [10, 12, 23, 39, 41, 50, 65, 91, 93, 99, 105, 107, 108, 177], "instruct": [1, 146, 151, 156], "int": [1, 7, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 38, 39, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 61, 68, 72, 73, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 103, 105, 107, 112, 121, 128, 129, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 183, 185, 188, 189, 190], "integ": [22, 23, 27, 46, 47, 81, 82, 86, 108, 161, 177, 183], "integr": [1, 177], "intend": [150, 177], "interact": 12, "interest": 1, "interestingli": [4, 35], "interfac": [33, 78, 85], "intermedi": [23, 25, 27, 28, 38, 41, 46, 47, 49, 53, 99, 103], "intern": [10, 11, 12, 134, 138], "interrupt": [11, 13, 14, 141, 142, 143, 144, 145, 147, 148, 150, 152, 183], "interv": [27, 46, 47, 81, 82, 135, 136, 176], "interval_step": 176, "introduc": [1, 42, 51, 76], "invalidconfigerror": [8, 170, 172], "invok": 1, "involv": [23, 42, 51], "ipynb": 133, "is_glob": 30, "is_masked_modul": [95, 104, 106], "is_smooth": 73, "is_start_of_local_train": [20, 22], "is_unbias": 73, "is_var_comput": 73, "isic": 62, "isn": [1, 74, 141, 143, 185], "issu": [1, 4, 10, 12, 14, 156, 157, 158, 159, 160, 163, 166, 183], "item": [1, 23, 42, 51, 61, 84, 150, 159], "iter": [1, 25, 31, 53, 129, 171, 184, 185], "its": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 71, 78, 79, 80, 81, 82, 85, 103, 106, 112, 121, 134, 138, 161, 163, 164, 171, 172, 175, 183, 185, 187], "itself": [1, 23, 102, 110, 121, 177, 178], "j": [87, 173], "jit": [42, 51], "job": [42, 51, 134, 138], "job_typ": [134, 138], "join": 110, "json": [1, 42, 51, 62, 68, 130, 134, 136], "json_report": [8, 134], "json_str": 68, "jsonreport": [8, 134, 136], "just": [11, 12, 13, 21, 38, 42, 51, 81, 82, 88, 89, 90, 123, 144, 150, 152, 157, 165, 171, 174, 177, 183], "justif": 163, "jvp": 177, "k": [54, 87, 112, 164], "k_x": 73, "k_xy": 73, "k_y": 73, "keep": [17, 42, 51, 135], "kei": [10, 14, 22, 23, 25, 27, 28, 29, 36, 41, 42, 43, 46, 47, 49, 50, 51, 78, 79, 80, 82, 84, 85, 91, 92, 93, 96, 99, 102, 110, 113, 117, 130, 134, 138, 161, 172, 178, 180, 183], "kept": 164, "kernel": [27, 73, 75, 105], "kernel_s": 105, "keyword": [23, 27, 41, 46, 47, 134, 135, 136, 138, 183], "kind": [25, 82, 106, 133, 174, 185], "kl": 128, "know": [13, 121], "known": [13, 75], "kwarg": [42, 51, 88, 89, 90, 91, 92, 93, 94, 111, 134, 135, 136, 137, 138, 177, 183, 187], "l": [43, 108, 112, 133, 189], "l2": [4, 24, 43, 46, 47], "l240": 96, "l_2": 77, "label": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 62, 81, 82, 84, 86, 87, 103, 171, 173, 174, 175, 178, 185, 189], "label_dim": [81, 82, 87], "label_frequ": [56, 57, 58], "label_index_tensor": 87, "label_indic": 185, "label_map_func": 62, "labelbasedsampl": [8, 61, 170, 178, 189], "lam": 43, "lambda": [28, 50, 91, 93, 133], "lambda_m": 75, "languag": 174, "laplacian": 133, "larg": [75, 112, 151, 163, 185], "larger": [27, 42, 46, 47, 51, 122, 134, 138, 156, 166, 173, 185, 189], "largest_final_magnitude_scor": [8, 115, 122], "largest_increase_in_magnitude_scor": [8, 115, 122], "largest_magnitude_change_scor": [8, 115, 122], "last": [24, 44, 99, 100, 108, 134, 138, 157, 183], "latent": [27, 37, 46, 47, 53, 97, 101, 102, 113, 128, 163, 173], "latent_dim": 128, "latent_vector": 97, "later": [13, 14, 31, 82, 97, 112, 114, 150, 188], "latestopacuscheckpoint": [8, 9, 12], "latesttorchcheckpoint": 149, "latesttorchmodulecheckpoint": [8, 9, 10], "latter": [81, 82, 141, 142, 143, 144, 145, 147, 148, 150, 152, 171], "law": 173, "layer": [4, 12, 13, 27, 33, 34, 43, 46, 47, 53, 75, 96, 97, 99, 100, 103, 105, 106, 107, 108, 113, 114, 118, 121, 122, 123, 124, 157, 158, 159, 163, 164, 167, 173, 187, 188], "layer1": 130, "layer_exchang": [8, 115], "layer_hierarchi": 99, "layer_nam": [75, 99, 118], "layer_norm_modul": 108, "layer_selection_funct": 118, "layerexchangerwithexclus": [8, 33, 115, 118], "layernamesservercheckpointandstatemodul": [8, 9, 13, 147], "layernorm": 108, "layers_nam": 99, "layers_to_exchang": [95, 96, 102, 103, 111, 113, 114], "layers_to_transf": 118, "layerselectionfunct": 118, "layerselectionfunctionconstructor": [8, 115, 118, 122], "lazi": 129, "lead": [177, 183], "learn": [4, 7, 21, 23, 24, 28, 30, 35, 38, 39, 49, 50, 52, 54, 73, 78, 85, 88, 89, 91, 92, 93, 96, 100, 103, 107, 108, 112, 133, 144, 146, 157, 165, 168, 174, 175, 183, 190], "learnabl": [105, 108], "learning_r": [54, 168], "least": [1, 16, 42, 51, 81, 82, 122, 168], "leav": [33, 75, 81, 82, 134, 138], "left": [24, 42, 51, 80, 81, 82, 87, 97, 110, 136, 163], "len": 185, "len_": 73, "len_old_models_buff": 49, "length": [23, 31, 42, 48, 51, 73, 75, 87, 108, 168, 171, 183, 185, 188], "leq": 112, "less": [4, 122, 124], "let": 43, "level": [1, 4, 24, 42, 43, 44, 51, 54, 124, 132, 133, 135, 136, 145, 148, 152, 157, 183, 189], "leverag": [1, 33, 122, 124, 129, 165], "librari": [1, 4, 144, 174, 177], "light": [4, 175], "like": [1, 13, 23, 42, 51, 81, 91, 92, 105, 107, 121, 134, 138, 144, 145, 148, 152, 162, 164, 171, 175, 183, 188], "limit": [177, 185], "line": [4, 168], "linear": [75, 107, 173], "linear_modul": 107, "linearli": [156, 157, 158, 159, 160, 163, 164, 165, 166, 168], "link": [1, 173], "list": [1, 14, 16, 17, 18, 19, 21, 23, 24, 42, 46, 47, 49, 51, 52, 54, 58, 59, 61, 62, 68, 75, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 98, 99, 102, 103, 105, 108, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 132, 133, 134, 138, 144, 145, 146, 148, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 173, 174, 176, 177, 180, 183, 185, 189], "litian96": [28, 91, 92, 173], "ll": [157, 185], "load": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 58, 59, 61, 101, 130, 134, 138, 144, 146, 166, 172, 174, 175, 176, 178, 183, 190], "load_attribut": [170, 190], "load_autoencod": [126, 127], "load_best_checkpoint_into_model": [9, 12], "load_checkpoint": [9, 10, 12, 14], "load_cifar10_data": [7, 8, 170, 178], "load_cifar10_test_data": [8, 170, 178], "load_config": [8, 170, 172], "load_data": [7, 8, 56, 57, 60, 170], "load_from_pretrain": [125, 130], "load_imag": [56, 57, 59, 60, 61], "load_mnist_data": [8, 170, 178], "load_mnist_test_data": [8, 170, 178], "load_model_checkpoint_to_paramet": [139, 146], "load_msd_dataset": [8, 170, 178], "load_pca_modul": [125, 129], "load_pretrained_model": [95, 101], "load_rxrx1_data": [56, 57, 58], "load_rxrx1_test_data": [56, 57, 58], "load_skin_cancer_data": [56, 60, 61], "load_snapshot": [170, 176], "load_stat": [9, 14], "loader": [23, 31, 42, 48, 51, 58, 178], "local": [1, 4, 7, 11, 21, 22, 23, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 74, 76, 88, 89, 91, 92, 93, 96, 102, 103, 110, 113, 146, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 176, 178, 183], "local_epoch": [7, 23, 30, 36, 39, 148, 152, 172], "local_featur": [74, 76, 102, 103, 113], "local_feature_contrastive_loss": 53, "local_feature_contrastive_loss_weight": [53, 74], "local_feature_loss_temperatur": [53, 74, 76], "local_forward": [95, 96], "local_logit": 96, "local_loss": [22, 28], "local_metr": 30, "local_model": [27, 46, 47], "local_modul": [102, 113], "local_prediction_head": 100, "local_step": [21, 23, 25, 30, 36, 39, 49, 53, 54, 88, 89, 90, 148, 152, 172], "local_tensor": 110, "locat": [134, 138, 178], "lock": 1, "log": [7, 8, 10, 13, 23, 41, 42, 51, 97, 103, 128, 134, 138, 144, 147, 170, 183, 185], "logger": 183, "logging_mod": [23, 42, 51, 171], "loggingmod": [8, 23, 42, 51, 170, 179], "logic": [23, 41], "logit": [71, 78, 85], "logits_threshold": [78, 85], "loglevel": [1, 8, 23, 42, 51, 170, 183, 191], "logvar": [97, 128], "long": [42, 51, 144, 151, 177], "longer": [14, 177, 183], "look": [1, 41, 42, 87, 103, 134, 138], "lookup": [43, 95, 103], "loop": [14, 27, 28, 36, 46, 91, 92, 175], "loss": [4, 7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 88, 89, 90, 91, 92, 93, 101, 103, 109, 112, 114, 125, 126, 134, 138, 144, 145, 146, 147, 148, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 176, 183], "loss_contain": 25, "loss_dict": [21, 23, 25, 49, 53, 54, 88, 89, 90, 171], "loss_for_adapt": [21, 88, 89, 91, 92, 93], "loss_list": 180, "loss_met": [30, 180], "loss_meter_typ": [21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 180], "loss_weight": [160, 162], "loss_weight_delta": [160, 162], "loss_weight_pati": [160, 162], "losses_list": 180, "losses_typ": 180, "lossestyp": 180, "lossmet": [8, 170, 180, 190], "lossmetertyp": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 170, 180], "lotteri": [4, 35], "low": [112, 185], "low_rank": 112, "lower": [42, 51, 112], "lr": [7, 23, 42, 51, 54, 73, 183], "lrschedul": [23, 190], "lrschedulersnapshott": [8, 170, 190], "m": [1, 7, 112, 164], "m_": 80, "m_t": [80, 157], "machineri": 144, "made": [4, 22, 136, 156], "magnitud": [43, 145, 161, 162], "magnitude_level_loss": 43, "mai": [1, 13, 21, 23, 25, 30, 38, 48, 52, 82, 88, 89, 97, 109, 112, 114, 133, 141, 142, 143, 144, 145, 147, 148, 150, 152, 158, 159, 164, 174, 177, 187, 188], "main": [1, 7, 43, 56, 57, 59, 71, 103, 133], "main_modul": 103, "mainli": [31, 87, 103], "maintain": [4, 35, 81, 82, 105, 107, 108, 117, 164, 174, 183], "major": 11, "make": [41, 42, 44, 51, 78, 82, 85, 97, 98, 134, 138, 183, 185, 187], "make_dict_with_epochs_or_step": [8, 170, 172], "make_it_person": [8, 88, 91], "manag": [1, 10, 17, 23, 42, 51, 84, 137, 146, 151, 156, 157, 161, 166, 168], "mandatori": 161, "manger": 156, "mani": [1, 21, 83, 144, 173, 177], "manipul": [42, 51, 53, 109], "manner": [29, 98, 101, 112, 164], "manual": 1, "map": [1, 13, 42, 43, 51, 58, 62, 78, 81, 82, 85, 86, 87, 97, 101, 102, 103, 105, 107, 108, 110, 113, 124, 130, 158, 159, 164, 173], "map_label_index_tensor_to_one_hot": [8, 78, 87], "map_model_to_opacus_model": [8, 170, 187], "mark": 1, "mask": [35, 42, 51, 105, 106, 107, 108, 122, 164, 174], "mask_data": [20, 40, 42, 51], "masked_conv": [95, 104], "masked_lay": [8, 95], "masked_layers_util": [95, 104], "masked_linear": [95, 104], "masked_normalization_lay": [95, 104], "maskedbatchnorm1d": [95, 104, 108], "maskedbatchnorm2d": [95, 104, 108], "maskedbatchnorm3d": [95, 104, 108], "maskedconv1d": [95, 104, 105], "maskedconv2d": [95, 104, 105], "maskedconv3d": [95, 104, 105], "maskedconvtranspose1d": [95, 104, 105], "maskedconvtranspose2d": [95, 104, 105], "maskedconvtranspose3d": [95, 104, 105], "maskedlayernorm": [95, 104, 108], "maskedlinear": [95, 104, 107], "master": [42, 51, 173], "match": [13, 23, 27, 41, 42, 46, 47, 51, 99, 118, 130, 150, 184, 185], "mathbf": [32, 97, 103], "mathcal": [43, 97, 173], "matric": [112, 163], "matrix": [24, 73, 75, 103, 112, 163, 173], "matter": [1, 117], "max": [42, 51], "max_grad_norm": [42, 51], "max_retri": 185, "max_step": 183, "max_work": 151, "maxim": [10, 12, 75], "maximum": [42, 51, 73, 75, 151, 157, 167, 183, 188], "mayb": [13, 135, 136], "maybe_checkpoint": [9, 10, 11, 12, 13], "maybe_extract_fingerprint": [20, 40, 42, 51], "maybe_load_client_st": [9, 14], "maybe_load_server_st": [9, 14], "maybe_load_st": [9, 11, 13], "maybe_preprocess": [20, 40, 42, 51], "maybe_progress_bar": [8, 170, 171], "maybe_reshap": [95, 112], "maybe_set_default_checkpoint_nam": [9, 14], "md": [42, 51], "mean": [1, 21, 50, 72, 73, 75, 81, 88, 89, 91, 93, 97, 112, 128, 173, 183], "meant": [4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 58, 110, 122, 123, 146, 157, 160, 162], "measur": [24, 27, 46, 47, 75, 81, 132], "mechan": [11, 12, 28, 36, 44, 65, 91, 92, 110, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 176, 187], "median": 183, "median_image_size_in_voxel": [42, 51], "medic": 178, "medical_feder": 62, "member": [1, 157, 167], "memori": 82, "mention": 1, "merg": [1, 4, 31, 48, 73, 110, 149, 163, 166], "merge_metr": [20, 30], "merge_subspaces_qr": [154, 163], "merge_subspaces_svd": [154, 163], "merge_two_subspaces_qr": [154, 163], "merger": 1, "messag": [23, 42, 51, 184], "met": [168, 185], "meta": 65, "metadata": [58, 59, 65, 68], "metadata_rout": 65, "meter": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 180], "method": [1, 4, 10, 11, 13, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 65, 76, 78, 79, 80, 81, 82, 85, 87, 90, 91, 92, 94, 99, 110, 112, 121, 124, 134, 135, 136, 138, 142, 144, 150, 159, 163, 165, 168, 173, 180, 183, 188, 189, 190], "metric": [7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 134, 136, 138, 144, 145, 146, 147, 148, 149, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171], "metric_aggreg": [7, 8, 78], "metric_manag": [8, 23, 42, 51, 78], "metric_manager_nam": 84, "metric_met": 30, "metric_nam": 161, "metric_typ": 161, "metric_valu": [23, 30, 31], "metricmanag": [8, 23, 42, 51, 78, 84, 190], "metricoutcom": [8, 78, 82], "metricprefix": [8, 78, 79], "metrics_util": [8, 78], "metricsaggregationfn": [146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "mic": [42, 51, 183], "middl": 97, "might": [1, 10, 11, 21, 42, 51, 52, 81, 82, 87, 122, 135, 136, 146, 160], "mimic": 187, "min": [24, 112], "min_available_cli": [7, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "min_evaluate_cli": [7, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166], "min_fit_cli": [7, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166], "min_label_exampl": 185, "min_num_cli": [16, 17, 18, 19], "mini": 108, "minim": [10, 12, 73, 75, 90, 141, 142, 143, 144, 145, 147, 148, 150, 152], "minimize_type_two_error": 75, "minimum": [16, 17, 18, 19, 23, 30, 48, 146, 149, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 185], "minor": 189, "minority_label": 189, "minoritylabelbasedsampl": [8, 170, 189], "misalign": 87, "mismatch": [87, 187], "miss": 68, "mix": [42, 51, 89, 91, 92, 96], "mixin": [8, 41], "mixtur": 96, "mk": [23, 27, 46, 47, 75], "mkmmd_client": [8, 20], "mkmmd_loss": [8, 70], "mkmmd_loss_weight": [46, 47], "mkmmdloss": [8, 70, 75], "mlg": 43, "mloptpsu": 96, "mlr": [39, 165], "mmd": [23, 27, 46, 47, 73, 75], "mmd_kernel_train_interv": 27, "mmdu": [70, 73], "mnist": [175, 178], "mode": [11, 22, 23, 29, 36, 38, 41, 42, 43, 50, 51, 91, 93, 98, 105, 110, 177], "model": [4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 74, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 106, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 176, 180, 183, 184, 186, 187], "model_bas": 8, "model_checkpoint": 13, "model_checkpoint_path": [30, 146], "model_head": [102, 110, 113], "model_merge_cli": [8, 20], "model_merge_serv": [8, 139], "model_merge_strategi": [8, 154], "model_paramet": 121, "model_path": [48, 101], "model_save_dir": 31, "model_weight": [119, 121, 123], "modelcheckpoint": [11, 13], "modellatentf": [8, 70, 73], "modelmergecli": [8, 20, 48], "modelmergeserv": [8, 139, 149], "modelmergestrategi": [8, 149, 154, 166], "modern": 1, "modif": [4, 122, 156, 160, 162, 187], "modifi": [4, 14, 23, 42, 51, 54, 82, 87, 134, 138, 148, 157, 160, 162, 171, 183, 187, 189], "modify_grad": [20, 54], "modify_noise_multipli": [154, 157], "modul": [4, 7, 8, 9, 15, 20, 26, 40, 45, 56, 57, 60, 63, 70, 78, 88, 91, 95, 104, 115, 125, 126, 131, 134, 139, 140, 154, 170], "modular": 4, "module2losswrapp": [8, 170, 183], "module_exclus": 118, "modulelist": 99, "modulu": 75, "moment": [132, 133, 165], "moment_ord": [132, 133], "moments_account": [8, 131], "momentsaccount": [8, 131, 133], "momentum": [7, 108, 157, 165], "monitor": 176, "monolith": 31, "moon": [4, 23, 27, 32, 41, 42, 46, 47, 49, 50, 51, 71, 74, 76, 100, 109, 114], "moon_bas": [8, 95], "moon_client": [8, 20], "moonclient": [8, 20, 49], "mooncontrastiveloss": [8, 70, 71], "mooncontrastivelosscontain": [8, 70, 74], "moonmodel": [8, 95, 109], "more": [4, 13, 22, 23, 29, 30, 32, 36, 39, 48, 51, 78, 80, 84, 85, 87, 105, 112, 118, 121, 123, 124, 135, 156, 159, 162, 163, 164, 173, 177, 183, 185, 187, 188, 189], "moreov": [81, 82], "most": [22, 23, 27, 46, 47, 81, 82, 122, 124, 141, 142, 143, 144, 145, 147, 148, 150, 152, 155, 172], "mostli": 52, "move": [1, 73, 75, 80, 151, 152, 168, 171], "move_data_to_devic": [8, 170, 171], "mp": [42, 51], "mr": [4, 11, 47, 50, 91, 93, 141, 143], "mr_mtl": [88, 91], "mr_mtl_client": [8, 20], "mr_mtl_mkmmd_client": [20, 45], "mrmtl_server": [139, 140], "mrmtlclient": [8, 20, 47, 50], "mrmtlmkmmdclient": [20, 45, 47], "mrmtlpersonalizedmixin": [8, 88, 91, 93], "mrmtlpersonalizedprotocol": [8, 88, 91, 93], "mrmtlserver": [139, 140, 143], "msd": 178, "msd_dataset_nam": 178, "msd_dataset_sourc": [8, 170], "msddataset": [8, 170, 178, 182], "mtl": [4, 11, 47, 50, 91, 93, 141, 143], "mu": [21, 32, 43, 49, 53, 97, 127, 128, 160, 162, 173], "much": [13, 163], "multi": [75, 81, 82], "multiclassdic": [8, 78, 81], "multiclassificationmetr": [8, 78, 81, 82], "multidimension": 173, "multinomi": [185, 189], "multipl": [13, 23, 29, 42, 51, 65, 71, 81, 82, 99, 130, 155, 163, 183], "multipli": [132, 157, 167], "multiprocess": [42, 51], "multithread": 183, "multithreadedaugment": 183, "multivari": 173, "must": [1, 10, 13, 22, 23, 42, 51, 52, 78, 80, 81, 82, 85, 87, 110, 124, 133, 134, 138, 141, 143, 147, 148, 149, 150, 152, 156, 158, 159, 160, 161, 162, 168, 174, 177, 183, 185], "mutual": [72, 130, 185], "mypi": 1, "n": [23, 27, 46, 47, 54, 71, 97, 108, 112, 133, 163, 168, 173], "n_1": 163, "n_2": 163, "n_case": 183, "n_client": 167, "n_clients_sampl": 132, "n_dataload_process": [42, 51], "n_featur": [71, 72, 75, 76], "n_i": 163, "n_k": 133, "n_n": 163, "n_pair": 71, "n_sampl": [75, 173], "n_server_round": 161, "n_total_cli": 132, "name": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 65, 68, 75, 78, 79, 80, 81, 82, 84, 85, 91, 92, 93, 96, 99, 103, 114, 118, 121, 122, 124, 130, 134, 136, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 158, 159, 161, 164, 172, 175, 178, 183], "named_modul": 99, "nan": 81, "narrow": 172, "narrow_dict_typ": [8, 170, 172], "narrow_dict_type_and_set_attribut": [8, 170, 172], "narrow_type_to": 172, "navig": 1, "ndarrai": [21, 23, 24, 28, 30, 31, 36, 38, 48, 50, 52, 54, 88, 89, 90, 91, 92, 93, 117, 118, 119, 120, 121, 122, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 177, 185], "nearli": [4, 34], "necessari": [13, 31, 39, 49, 52, 68, 87, 114, 150, 183, 187], "necessarili": [13, 87], "need": [1, 4, 7, 10, 12, 13, 14, 23, 28, 30, 31, 34, 36, 38, 41, 42, 43, 48, 51, 78, 82, 85, 87, 91, 92, 97, 110, 112, 116, 118, 130, 144, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 177, 183, 187, 188], "needs_input_grad": 177, "neg": [71, 74, 76, 81, 82, 86, 157], "negative_pair": [71, 74], "neighbor": 133, "neighbor_rel": 133, "neighborrel": 133, "neither": [82, 168], "net": 7, "network": [32, 38, 73, 99, 163, 183], "neural": 99, "neuron": 177, "never": [11, 50, 91, 93, 134, 138, 176], "new": [1, 14, 17, 24, 43, 58, 62, 80, 82, 87, 101, 106, 107, 108, 129, 134, 138, 150, 161, 163, 165, 175, 180, 185, 187, 189], "new_dimens": 129, "new_tag": [134, 138], "newli": 168, "next": [7, 25, 36, 53, 82, 87, 124, 146, 161, 162, 183, 185], "nice": 177, "nip": 71, "nn": [7, 10, 11, 12, 13, 14, 23, 27, 28, 33, 41, 42, 46, 47, 48, 51, 77, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 122, 124, 130, 149, 168, 171, 183, 184, 186, 187, 190], "nnunet": [13, 14, 20, 40, 51, 144, 150, 183], "nnunet_augment": 183, "nnunet_cli": [8, 20], "nnunet_config": [42, 51, 183], "nnunet_plan": [42, 51, 150], "nnunet_serv": [8, 139], "nnunet_trainer_class": [42, 51, 150], "nnunet_trainer_class_kwarg": [42, 51], "nnunet_util": [8, 170], "nnunetcli": [8, 20, 51, 150, 183], "nnunetconfig": [8, 170, 183], "nnunetdataloaderwrapp": [8, 170, 183], "nnunetserv": [8, 13, 42, 51, 139, 144, 150], "nnunetservercheckpointandstatemodul": [8, 9, 13, 150], "nnunetserverstatecheckpoint": [8, 9, 13, 14], "nnunettrain": [42, 51, 150], "nnunetv2": [42, 51, 150, 183], "node": 7, "nois": [24, 132, 133, 145, 148, 152, 157, 167], "noise_ev": 133, "noise_multipli": [44, 132, 133, 148, 152, 167], "noise_std_dev": 167, "noisi": 167, "noisy_aggreg": [8, 154], "non": [1, 4, 21, 48, 49, 73, 78, 85, 87, 133, 144, 147, 171, 172, 173, 174, 175, 177, 180, 183, 189], "nondetmultithreadedaugment": 183, "none": [1, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 68, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 112, 116, 117, 118, 120, 122, 123, 124, 127, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 188, 189, 190], "nonneg": 122, "nonzero": [121, 159], "nor": [96, 168], "norm": [4, 24, 32, 42, 43, 46, 47, 51, 75, 118, 122], "norm_threshold": 122, "normal": [4, 33, 70, 71, 75, 83, 97, 108, 121, 122, 128, 167, 173, 180], "normalize_featur": 75, "normalize_metr": [8, 78, 83], "normalized_shap": 108, "notabl": 71, "notat": 173, "note": [1, 4, 7, 11, 13, 23, 28, 32, 38, 41, 42, 47, 48, 50, 51, 52, 65, 75, 80, 81, 82, 87, 88, 89, 91, 93, 94, 97, 101, 105, 107, 108, 112, 117, 118, 121, 122, 129, 132, 133, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 177, 185, 187, 188, 189], "notebook": 133, "noth": [7, 87, 96], "notimplementederror": [10, 23, 29, 31, 38, 42, 48, 51, 78, 79, 80, 82, 85, 97, 110, 180], "notset": [170, 191], "now": [1, 7, 87, 112, 135, 171], "np": [177, 185, 189], "nt": 71, "ntxentloss": [8, 70, 71], "num": [42, 51, 190], "num_accumulating_batch": [27, 46, 47], "num_class": 103, "num_client": [16, 17, 173], "num_featur": 108, "num_input_channel": 150, "num_label": [81, 82], "num_round": [7, 144, 145, 146, 148, 149, 150, 152], "num_sampl": [81, 82, 183], "num_segmentation_head": 150, "num_server_round": [145, 148, 152], "num_spatial_dim": 183, "num_validation_step": [23, 30], "num_work": [58, 61], "number": [1, 4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 39, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 61, 73, 75, 82, 83, 87, 88, 89, 91, 92, 102, 103, 105, 108, 112, 121, 122, 129, 132, 133, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 176, 177, 183, 185, 188, 189, 190], "number_of_partit": 185, "numer": [63, 69, 108, 177], "numpi": [21, 88, 89, 117, 121, 149, 155, 167, 168, 177, 184, 186, 188], "numpy_st": 188, "numpycli": [23, 31, 48, 90], "numpyclientminimalprotocol": [8, 88, 90], "numpyclippingcli": [8, 20, 24], "nutshel": 163, "nvidia": 188, "object": [11, 13, 14, 16, 18, 19, 21, 22, 23, 25, 29, 30, 36, 39, 41, 43, 48, 51, 52, 65, 68, 74, 82, 84, 88, 89, 91, 92, 99, 101, 118, 122, 127, 129, 130, 132, 133, 134, 135, 137, 138, 144, 145, 146, 148, 149, 151, 152, 158, 159, 161, 163, 164, 172, 176, 177, 178, 180, 183, 184, 186, 189, 190], "observ": 163, "obtain": [11, 13, 24, 31, 155, 163], "obviou": 1, "occur": [4, 23, 27, 28, 38, 41, 46, 47, 48, 91, 92, 144, 166, 173], "odot": 103, "off": [48, 75, 144, 146, 157, 160, 162], "offer": [156, 188], "offici": [62, 103, 112], "official_column": 62, "often": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 155, 171], "old": [24, 25, 49, 53, 76], "old_global_featur": [74, 76], "old_local_featur": [74, 76], "old_model": 49, "omit": 1, "on_evaluate_config_fn": [7, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "on_fit_config_fn": [7, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "on_init_parameters_config_fn": [141, 142, 143, 144, 145, 147, 148, 150, 152], "onc": [7, 48, 135, 136, 183], "one": [1, 11, 13, 16, 23, 28, 29, 30, 31, 33, 35, 36, 39, 42, 43, 51, 76, 81, 82, 84, 87, 91, 92, 99, 102, 103, 105, 106, 107, 108, 109, 110, 130, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 161, 164, 166, 168, 171, 172, 173, 175, 178, 180, 183, 188], "one_layer_map_inputs_to_output": [170, 173], "ones": [86, 108, 134, 138, 164, 168], "onli": [1, 4, 10, 11, 12, 13, 16, 23, 27, 28, 30, 31, 34, 36, 38, 39, 41, 46, 47, 48, 52, 53, 54, 65, 81, 82, 84, 94, 96, 102, 103, 108, 110, 112, 114, 118, 127, 134, 138, 144, 146, 149, 150, 156, 157, 159, 160, 162, 163, 166, 167, 168, 174, 183], "onlin": 1, "onto": [73, 75, 76, 112, 129], "op": [144, 188], "opacu": [12, 13, 44, 148, 156, 168, 187], "opacus_checkpoint": [8, 9], "opacusbasicfedavg": [8, 148, 154, 156], "opacuscheckpoint": [8, 9, 12], "opacusscaffold": [8, 154, 168], "opacusservercheckpointandstatemodul": [8, 9, 13, 148], "open": 4, "oper": [38, 78, 85, 124, 144, 172, 177, 187], "oppos": 177, "optim": [4, 7, 22, 23, 24, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 54, 73, 74, 75, 88, 90, 91, 92, 93, 96, 103, 168, 180, 183, 187, 190], "optimization_step": 73, "optimize_beta": [70, 75], "optimizer_kei": [23, 42, 51, 88, 91, 92], "optimizersnapshott": [8, 170, 190], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 65, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 91, 93, 96, 97, 101, 102, 103, 105, 107, 108, 109, 112, 114, 117, 122, 127, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 175, 176, 178, 180, 183, 185, 187, 188, 189], "orchestr": [52, 97, 137], "order": [1, 14, 36, 49, 80, 88, 89, 91, 92, 99, 117, 118, 121, 124, 132, 133, 146, 150, 152, 155, 157, 161, 162, 177, 183], "ordin": [63, 69], "ordinari": 35, "org": [22, 33, 34, 35, 36, 37, 43, 54, 62, 71, 76, 78, 85, 100, 101, 103, 105, 112, 121, 124, 147, 152, 156, 157, 159, 160, 164, 167, 168, 173, 177, 188], "organ": [134, 138], "origin": [4, 28, 42, 49, 50, 51, 53, 58, 62, 65, 73, 76, 91, 92, 93, 96, 106, 112, 114, 150, 156, 157, 160, 162, 164, 165, 171, 173, 175, 185], "original_column": 62, "original_dataset": 185, "original_label_map": 58, "original_median_shape_after_transp": [42, 51], "original_median_spacing_after_transp": [42, 51], "original_model": 106, "original_param": 168, "original_paramet": [156, 157, 160, 162, 165], "orthonorm": 163, "other": [1, 4, 21, 22, 23, 24, 27, 28, 29, 30, 33, 38, 41, 42, 46, 47, 50, 51, 52, 54, 65, 80, 81, 87, 88, 89, 91, 92, 93, 102, 105, 109, 113, 114, 116, 124, 133, 141, 142, 143, 144, 145, 147, 148, 150, 152, 163, 165, 167, 175, 177, 183, 187], "otherwis": [7, 11, 13, 14, 23, 30, 38, 39, 52, 65, 81, 82, 106, 130, 134, 136, 138, 176, 185], "our": [1, 4, 7, 34, 41, 78, 85, 174], "out": [1, 33, 122, 145, 156, 157, 163], "out_channel": 105, "out_featur": 107, "outcom": [81, 82], "output": [23, 28, 36, 42, 43, 51, 59, 73, 78, 81, 82, 85, 91, 92, 96, 97, 99, 101, 102, 103, 105, 107, 108, 110, 113, 114, 128, 150, 173, 177, 183], "output_dim": 173, "output_dir": 59, "output_fold": [134, 136], "output_pad": 105, "output_path": 59, "output_s": [73, 105], "outsid": [4, 134, 135, 136, 138, 188], "over": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 72, 73, 78, 79, 80, 81, 85, 88, 89, 108, 133, 134, 138, 141, 143, 156, 157, 168, 175, 183, 189], "overal": 1, "overestim": 112, "overfit": 176, "overflow": [81, 82], "overhead": [42, 51], "overrid": [12, 16, 18, 19, 22, 23, 24, 25, 34, 36, 37, 41, 42, 51, 52, 54, 82, 109, 146, 152, 156, 161, 177, 183], "overridden": [21, 23, 30, 33, 41, 42, 48, 51, 82, 88, 89, 144, 149, 161, 168, 177], "overwrit": [10, 12, 99, 134, 138], "own": [4, 42, 51, 183, 187], "p": [1, 81, 82, 157], "p_i": 43, "pack": [1, 21, 27, 28, 38, 46, 47, 54, 88, 89, 97, 119, 121, 123, 124, 146, 157, 158, 159, 160, 162, 163, 164, 165, 175], "pack_losses_with_val_metr": [23, 39, 161], "pack_paramet": [115, 119, 121, 123], "packag": [0, 1, 7, 21, 124, 156, 157, 166, 168, 183], "packed_data": 175, "packed_paramet": [119, 121, 123], "packer": [13, 119, 121, 123, 157], "packing_exchang": [8, 115], "packingservercheckpointandandstatemodul": [8, 9, 13], "pad": [62, 105], "pad_image_path_func": [56, 60, 62], "pad_label_map_func": [56, 60, 62], "padding_mod": 105, "page": [1, 121, 124, 159], "pair": [71, 73, 74, 76, 78, 79, 80, 81, 85, 134, 138, 173], "pairwise_distance_squar": [70, 73], "panchal23a": [39, 165], "panda": 65, "paper": [28, 36, 43, 49, 50, 53, 54, 62, 71, 73, 76, 91, 93, 103, 133, 156, 157, 160, 163, 168, 173, 177], "paper_fil": 71, "paradigm": 164, "parallel": [37, 53, 61, 100, 102, 110], "parallel_output_join": [95, 110], "parallel_split_model": [8, 95], "parallelfeaturejoinmod": [8, 95, 110], "parallelsplitheadmodul": [8, 95, 102, 110, 113], "parallelsplitmodel": [8, 95, 102, 110, 113], "param": [54, 121, 168], "paramet": [4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190], "parameter_exchang": [8, 13, 52, 88, 89, 91, 92, 93, 149], "parameter_exchanger_bas": [8, 115], "parameter_extract": [7, 8, 170], "parameter_pack": [8, 115, 119, 123], "parameter_selection_criteria": [8, 115], "parameter_upd": 168, "parameterexchang": [8, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 43, 52, 53, 54, 88, 89, 115, 117, 118, 120, 123], "parameterpack": [8, 115, 119, 121, 123], "parameterpackeradaptiveconstraint": [8, 115, 121], "parameterpackerwithclippingbit": [8, 115, 121], "parameterpackerwithcontrolvari": [8, 115, 121], "parameterpackerwithlayernam": [8, 115, 121], "parametr": 73, "params1": 184, "params2": 184, "params_1": [54, 168], "params_2": [54, 168], "parent": [13, 29, 38, 51, 81, 109, 166], "part": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 80, 103, 110, 133, 141, 142, 143, 144, 145, 147, 148, 150, 152, 159, 183, 189], "parti": 49, "partial": [7, 30, 52, 80, 100, 122, 123, 130, 161, 168], "partial_layer_exchange_model": [8, 95], "partial_parameter_exchang": [8, 115], "partial_weight_exchange_cli": [8, 20], "partiallayerexchangemodel": [8, 95, 96, 102, 103, 111, 113, 114], "partialparameterexchang": [8, 52, 115, 118, 123, 124], "partialweightexchangecli": [8, 20, 52], "particip": [141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 158, 159, 161, 168], "particular": [11, 81, 164, 185, 189], "partit": 185, "partition": [8, 170], "partition_dataset": [170, 185], "partition_label_indic": [170, 185], "partitioned_dataset": 185, "pass": [1, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 73, 78, 79, 80, 81, 82, 85, 88, 89, 91, 92, 93, 94, 97, 99, 101, 103, 105, 107, 108, 109, 110, 112, 114, 134, 135, 136, 138, 144, 146, 150, 151, 152, 160, 162, 172, 175, 177, 183, 185, 189], "past": [10, 12, 30, 77], "patch": 183, "path": [7, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 58, 59, 61, 62, 101, 127, 129, 130, 136, 146, 176, 178], "path_to_checkpoint": [10, 12], "pathlib": 7, "patienc": 176, "pc": 163, "pca": [8, 31, 95, 163], "pca_lowrank": 112, "pca_preprocessor": [8, 125], "pcamodul": [8, 31, 95, 112, 129, 163], "pcapreprocessor": [8, 125, 129], "pd": [59, 62, 65], "pdf": [35, 36, 37, 39, 54, 71, 100, 101, 147, 157, 164, 165, 167, 168, 177], "peft": 186, "peft_parameter_extract": [8, 170], "penal": [21, 27, 46, 47], "penalti": [4, 21, 27, 28, 32, 38, 46, 47, 50, 88, 89, 91, 92, 93, 160, 162], "penalty_loss_funct": [88, 89, 91, 92, 93], "per": [43, 51, 71, 81, 82, 83, 108, 112, 132, 133, 148, 152, 157, 167, 173, 183, 185], "per_client_example_cap": [157, 167], "per_round_checkpoint": [23, 30], "percentag": [58, 61, 118, 122, 189], "perfcl": [4, 25, 37, 53, 74, 76, 113], "perfcl_bas": [8, 95], "perfcl_client": [8, 20], "perfcl_loss": [8, 25, 70], "perfcl_loss_config": 74, "perfclclient": [8, 20, 53], "perfclloss": [8, 70, 76], "perfcllosscontain": [8, 70, 74], "perfclmodel": [8, 53, 95, 113], "perform": [4, 11, 16, 21, 23, 24, 25, 29, 30, 31, 32, 35, 36, 37, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 53, 54, 78, 85, 88, 89, 103, 112, 124, 129, 132, 133, 144, 148, 149, 150, 152, 156, 157, 158, 159, 163, 164, 166, 168, 172, 174, 175, 180, 185, 187], "perform_linear_approxim": 75, "perhap": [13, 23, 31, 42, 51, 97], "persist": 10, "person": [4, 8, 22, 28, 38, 41, 43, 50, 88, 96, 103, 143], "personalized_conditional_input": [43, 103], "personalizedmod": [8, 88, 91], "perspect": [81, 168], "phase": [4, 13, 36, 101, 158, 159, 168], "pickl": [42, 51, 59], "piec": [53, 68, 74, 97], "pii": [53, 76], "pinnabl": 177, "pip": [1, 7], "pipelin": [65, 97], "pixel": 82, "place": [13, 49, 65, 82, 158, 159, 183, 185], "placehold": 12, "plan": [42, 51, 144, 150, 183], "plans_identifi": [42, 51], "plans_nam": [42, 51], "plansnam": [42, 51], "plate": 59, "pleas": [1, 65, 105, 118, 121, 124, 159, 177], "plu": [49, 180], "plugin": 176, "poetri": 1, "point": [1, 48, 58, 112, 132, 133, 146, 163, 185, 189], "poisson": [19, 132, 133], "poisson_sampling_manag": [8, 15], "poissonsampl": [8, 131, 133], "poissonsamplingclientmanag": [8, 15, 19], "poll": [8, 48, 139, 144, 145, 148, 150, 156, 169], "poll_client": [8, 139, 151], "poll_clients_for_sample_count": [139, 144], "pollresultsandfailur": 151, "polylrschedulerwrapp": [8, 170, 183], "polynomi": 183, "pool": [144, 151], "popul": [133, 134, 138], "population_s": 133, "pos_label": [81, 82], "posit": [71, 74, 76, 81, 82, 86, 87], "positive_pair": [71, 74], "posixpath": [134, 136], "possibl": [1, 35, 74, 81, 82, 183, 187], "possibli": [39, 50, 91, 93, 187], "post": [11, 13, 82, 144, 147], "post_aggreg": [9, 11], "posterior": 164, "potenti": [4, 10, 11, 12, 13, 14, 23, 27, 28, 29, 30, 44, 50, 91, 92, 93, 97, 114, 119, 141, 142, 143, 144, 145, 147, 148, 150, 152, 160, 175, 185, 187], "power": [75, 173], "pr": 1, "pre": [1, 11, 13, 101, 118, 127, 129, 175], "pre_aggreg": [9, 11], "preced": [110, 168], "precis": [42, 51, 112, 159, 163, 164], "pred": [21, 22, 23, 25, 27, 28, 29, 38, 42, 43, 46, 47, 49, 50, 51, 53, 80, 81, 82, 84, 87, 90, 91, 92, 93, 128, 183], "pred_1": 80, "pred_2": 80, "pred_transform": 80, "predict": [4, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 79, 80, 81, 82, 84, 85, 86, 87, 91, 92, 93, 96, 98, 101, 102, 103, 109, 110, 113, 114, 128, 161, 183], "predict_with_model": [40, 41, 42, 88, 90], "prediction_head": 101, "prediction_loss": 43, "preds_1": 80, "preds_2": 80, "preds_list": 98, "preemption": 144, "prefix": [1, 10, 42, 51, 99, 130], "preform": 103, "prepar": 112, "prepare_data_forward": [95, 112], "prepare_loss_arg": [8, 170, 183], "prepend": 10, "preprocess": [8, 42, 51, 56, 57, 62, 82], "preprocess_derm7pt": [56, 60, 62], "preprocess_ham10000": [56, 60, 62], "preprocess_isic_2019": [56, 60, 62], "preprocess_pad_ufes_20": [56, 60, 62], "preprocess_skin": [56, 60], "prescrib": 1, "present": [4, 11, 23, 30, 36, 81, 82, 87, 101, 161, 172, 185], "preserv": [11, 13, 49, 114, 141, 142, 143, 144, 145, 147, 148, 150, 152, 171], "press": [39, 165], "pretrain": [101, 130], "pretrained_model": 130, "pretrained_model_path": 130, "prevent": [1, 81, 82, 99], "previou": [4, 10, 49, 76, 77, 80, 134, 138, 157], "previous": [80, 188], "primari": 112, "princip": [4, 31, 112, 129, 163], "principal_compon": 112, "print": [42, 51, 58, 171], "prior": [23, 25, 48, 53, 54, 80, 81, 82, 99, 112, 144, 147, 148, 150, 167, 172, 183, 185], "prior_distribut": 185, "priorit": [4, 172], "prioriti": [134, 138], "privaci": [8, 12, 24, 44, 50, 91, 93, 145, 148, 152, 157, 187], "privacy_util": [8, 170], "privacy_validate_and_fix_modul": [8, 170, 187], "privat": [4, 34, 36, 44, 54, 152, 157], "probabilist": 164, "probabl": [19, 105, 107, 108, 132, 133, 164, 173, 177, 183, 185, 189], "problem": [81, 87], "proce": [141, 142, 143, 144, 145, 147, 148, 150, 152], "procedur": [4, 27, 28, 46, 91, 92, 110, 133, 163], "proceed": [13, 27, 28, 39, 46, 91, 92, 152, 165], "process": [11, 13, 19, 23, 30, 36, 37, 39, 42, 44, 51, 58, 59, 61, 62, 82, 103, 105, 122, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 175, 176, 177, 183, 188], "process_and_check_validation_step": [8, 170, 171], "process_client_data": [56, 60, 62], "process_config": [20, 23, 39], "process_data": [56, 57, 59], "process_fed_rep_config": [20, 36], "processor": 127, "produc": [1, 10, 17, 18, 22, 23, 29, 36, 41, 43, 49, 51, 76, 81, 96, 97, 98, 102, 103, 105, 107, 108, 109, 110, 113, 124, 141, 142, 143, 144, 145, 147, 148, 150, 152, 156, 157, 163, 168, 173, 174, 180], "product": [27, 28, 38, 46, 47, 50, 77, 91, 93], "progress": [1, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 171], "progress_bar": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 171], "project": [1, 4, 101, 109, 112, 129, 134, 138], "project_back": [95, 112], "project_lower_dim": [95, 112], "projection_head": 101, "projection_modul": 109, "propag": [105, 107, 108, 177], "proper": [10, 11, 12, 13, 28, 36, 43, 91, 92, 101, 118, 133, 148, 157, 158, 159, 160, 162, 183], "properli": [1, 11, 13, 33, 35, 52, 123], "properti": [23, 42, 51, 52, 88, 89, 91, 92, 118, 150, 151, 156], "proport": [43, 168, 178], "propos": [71, 73], "protocol": [89, 90, 91, 92, 93], "provid": [4, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 68, 69, 71, 72, 74, 75, 81, 82, 83, 87, 88, 89, 96, 97, 101, 103, 106, 107, 108, 117, 118, 130, 132, 133, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 174, 177, 183, 185, 187], "proxi": [151, 177], "proxim": [160, 162], "prune": 164, "pseudo": 177, "pseudo_sort_scoring_funct": [8, 170, 177], "pt": 14, "pull": [21, 23, 24, 28, 30, 38, 52, 88, 89, 91, 92], "pull_paramet": [115, 116, 117, 118, 120, 124], "purpos": [10, 42, 51, 65, 112, 141, 143], "push": [1, 183], "push_paramet": [115, 117, 118, 120, 124], "put": 58, "py": [1, 62, 96, 103], "pypi": [1, 4], "pyproject": 1, "pytest": 1, "pytestarg": 1, "pytesten": 1, "python": [1, 4, 7, 134, 138, 183, 188], "python3": 1, "pytorch": [10, 12, 23, 28, 30, 31, 42, 44, 48, 51, 82, 91, 92, 93, 105, 112, 118, 121, 124, 129, 159, 174, 183, 184, 186, 187, 188], "q": [112, 133], "q_1": 133, "q_2": 133, "qinbinli": 71, "qr": 163, "quadrupl": 75, "quantil": 157, "quantiti": 168, "queri": 152, "quickli": 183, "quickstart": 4, "quintessenti": 160, "quotat": 1, "quotestyl": 1, "r": 177, "rais": [10, 11, 13, 14, 23, 28, 29, 30, 31, 36, 38, 39, 41, 42, 46, 47, 48, 51, 65, 69, 78, 79, 80, 82, 85, 87, 88, 89, 91, 92, 94, 97, 105, 110, 146, 157, 161, 168, 171, 172, 174, 180, 183, 185], "rand": 185, "randint": 185, "random": [8, 51, 58, 61, 75, 112, 134, 138, 150, 170, 183, 185, 189], "random_st": 188, "randomli": [16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54], "rang": [4, 80, 185, 189], "rank": 112, "rank_estim": 112, "rapid": 183, "rate": [4, 23, 54, 73, 96, 133, 157, 165, 168, 183, 190], "rather": [1, 13, 19, 38, 88, 89, 100, 157, 174, 183, 185], "ratio": [132, 133, 183], "raw": [146, 157, 168], "rbf": 75, "rdp": 132, "re": [1, 10, 21, 23, 28, 36, 38, 54, 75, 88, 89, 91, 92, 101, 134, 138, 144, 156, 157, 158, 159, 160, 163, 166, 168, 175, 180], "read": 183, "readi": [144, 183], "real": [13, 122, 129], "realiti": 129, "reason": [10, 12, 112, 150, 168], "recal": [13, 82], "receiv": [17, 21, 23, 25, 32, 42, 47, 50, 51, 53, 78, 85, 105, 107, 108, 151, 158, 159, 160, 168, 173], "recent": [4, 22, 23, 27, 35, 46, 47, 144], "recogn": 11, "recommend": [1, 7, 42, 51, 160, 168], "recomput": 43, "reconstitut": 117, "reconstruct": [68, 97, 112, 128], "record": [44, 144], "recov": 112, "redirect": 183, "redistribut": [149, 166], "reduc": [42, 51, 71, 73, 76, 81, 82, 112, 129, 160, 162], "reduce_dimens": [125, 129], "reduct": [31, 82, 112, 129], "ref": [134, 138], "ref_image_shap": 183, "refer": [4, 23, 43, 49, 53, 77, 87, 164, 173], "reflect": [105, 168], "reformat": [42, 51], "regardless": [10, 81, 82, 156, 175], "regist": 99, "regular": [43, 50, 91, 93, 105, 107, 159], "regularized_q_k": 75, "reiniti": 187, "rel": [71, 81, 82, 112, 189], "relat": [4, 37, 53, 87, 133, 157, 164], "releas": [1, 183], "relev": [21, 23, 24, 28, 30, 38, 48, 50, 53, 54, 65, 88, 89, 91, 92, 93, 108, 155], "reli": [13, 34, 117, 118, 175], "reload": [31, 183], "reload_modul": [8, 170, 183], "relu": 103, "remain": [11, 14, 71, 82, 102, 113, 157, 160, 162], "remaind": [58, 81, 109], "rememb": [1, 7], "remot": 1, "remov": [4, 14, 81, 82, 99], "removablehandl": 99, "remove_hook": [95, 99], "rep_epoch": 36, "rep_step": 36, "repack": 168, "reparameter": 97, "repeat": 185, "repeatedli": 177, "replac": [16, 18, 19, 50, 86, 91, 93, 132, 133, 183, 187], "replic": 105, "report": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 81, 82, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152], "report_centralized_ev": [139, 144], "reports_manag": [8, 134], "reportsmanag": [8, 134, 137, 190], "repositori": [1, 62], "repres": [13, 14, 16, 18, 19, 22, 23, 25, 27, 30, 31, 36, 39, 43, 46, 47, 48, 53, 68, 78, 79, 80, 82, 85, 86, 97, 98, 100, 103, 112, 114, 121, 124, 128, 151, 155, 159, 167, 168, 173, 174, 177, 180, 183], "represent": [4, 20, 36, 49, 73, 97, 101, 112, 173, 180], "reproduc": [178, 188], "request": [21, 65, 88, 89, 105, 141, 142, 143, 144, 145, 147, 148, 150, 152, 155, 156, 157, 160, 162, 171, 185], "requir": [11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 28, 29, 34, 35, 36, 37, 42, 49, 51, 52, 53, 54, 73, 82, 88, 89, 91, 92, 102, 103, 112, 114, 121, 124, 133, 142, 144, 150, 151, 156, 157, 158, 159, 161, 163, 166, 174, 177, 185, 187], "requires_grad": 100, "resampl": [17, 185], "research": [1, 4], "resembl": 100, "reserv": 58, "reset": [17, 23, 27, 46, 47, 78, 79, 80, 82, 84, 85, 147, 164, 170, 180, 183], "reset_beta_prior": [154, 164], "reset_frequ": 147, "reset_sampl": [15, 17], "reshap": 112, "resili": 144, "resolut": 183, "respect": [7, 22, 25, 27, 28, 36, 38, 43, 78, 79, 80, 81, 82, 85, 87, 91, 92, 102, 103, 105, 107, 108, 113, 132, 178], "respond": [146, 149], "respons": [13, 23, 41, 110, 118, 121, 124, 144, 146, 147, 151, 163], "rest": 71, "restart": [11, 13, 14, 141, 142, 143, 144, 145, 147, 148, 150, 152], "restor": [97, 176, 188], "restore_random_st": [8, 170, 188], "restrict": [14, 103, 157, 168], "result": [31, 80, 81, 82, 112, 121, 134, 138, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 177, 187, 188, 189], "resum": [134, 138], "retain": [65, 124, 159], "retri": 185, "retriev": [13, 145, 148, 151, 177], "return": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190], "return_mu_onli": 127, "reus": [28, 36, 91, 92, 93, 97, 134, 138], "right": [4, 13, 24, 36, 97, 112, 142, 163], "robust": [28, 38, 91, 92], "roc_auc": [78, 85], "rocauc": [8, 78, 85], "root": [58, 59], "round": [7, 8, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 32, 36, 38, 39, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 76, 82, 88, 89, 91, 92, 93, 96, 103, 118, 123, 132, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 177, 183], "rout": [13, 28, 38, 50, 65, 91, 92, 93, 101], "row": [59, 62, 112, 163], "rpc": 150, "rtype": 177, "ruff": 1, "rule": 1, "run": [1, 13, 17, 28, 31, 36, 42, 51, 91, 92, 96, 109, 114, 133, 134, 136, 138, 144, 145, 146, 148, 151, 152, 161, 168, 177, 187, 188], "run_id": [134, 136], "runtim": [42, 51], "runtimeerror": [88, 89, 91, 92], "rxrx": 58, "rxrx1": [8, 56], "s0031320323002078": [53, 76], "s_1": 163, "s_2": 163, "s_i": 163, "s_n": 163, "safe_global_model": [88, 91, 92], "said": 1, "same": [7, 17, 28, 35, 38, 39, 42, 44, 51, 73, 75, 81, 82, 84, 87, 91, 92, 93, 97, 105, 106, 107, 108, 109, 118, 130, 133, 134, 138, 144, 147, 150, 159, 160, 164, 167, 171, 173, 174, 177, 183, 185], "sampl": [15, 16, 17, 18, 19, 23, 30, 31, 36, 42, 43, 48, 51, 58, 73, 81, 82, 83, 95, 97, 98, 101, 105, 107, 108, 122, 127, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 164, 166, 167, 168, 173, 175, 177, 178, 183, 185, 189], "sample_al": [15, 16], "sample_count": [145, 148], "sample_fract": [15, 16, 18, 19, 157], "sample_on": [15, 16], "sample_percentag": 189, "sample_s": 133, "sampler": [8, 61, 170, 178], "samples_per_cli": 173, "sampling_ratio": 133, "sampling_strategi": 133, "samplingstrategi": [8, 131, 133], "satisfi": [88, 89, 91, 92, 185], "save": [10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 59, 62, 76, 82, 91, 92, 101, 127, 129, 134, 136, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 165, 175, 176, 177, 188, 190], "save_attribut": [170, 190], "save_checkpoint": [9, 14], "save_client_st": [9, 14], "save_for_backward": 177, "save_for_forward": 177, "save_model": [20, 31], "save_random_st": [8, 170, 188], "save_server_st": [9, 14], "save_st": [9, 11, 13, 14], "save_to_json": [56, 60, 62], "save_to_pkl": [56, 57, 59], "scaffold": [4, 8, 13, 23, 54, 121, 152, 154], "scaffold_cli": [8, 20], "scaffold_serv": [8, 139], "scaffoldcli": [8, 20, 54], "scaffoldserv": [8, 139, 152], "scaffoldservercheckpointandstatemodul": [8, 9, 13, 152], "scalar": [10, 11, 12, 13, 23, 27, 28, 30, 31, 36, 39, 42, 48, 50, 51, 68, 69, 78, 79, 80, 82, 85, 91, 92, 93, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "scale": [51, 71, 75, 77, 167, 168, 183], "scaling_coeffici": 168, "scenario": [23, 38, 99], "schedul": [23, 42, 51, 183, 190], "scheme": [158, 159, 163, 164, 175], "scienc": [53, 76], "sciencedirect": [53, 76], "scikit": [78, 85], "scope": [134, 135, 136, 138, 183], "score": [10, 12, 13, 78, 80, 81, 82, 85, 86, 105, 107, 108, 122, 124, 164, 177], "score_gen_funct": 124, "scoregenfunct": 124, "script": [7, 58, 62], "second": [11, 23, 25, 27, 28, 35, 38, 41, 42, 46, 47, 49, 51, 53, 54, 72, 74, 75, 76, 81, 103, 110, 114, 144, 145, 146, 147, 148, 149, 152, 156, 157, 164, 165, 173, 184], "second_featur": 74, "second_feature_extractor": [110, 113], "second_tensor": 110, "section": [1, 173, 177], "secur": 4, "see": [1, 51, 65, 74, 78, 81, 82, 85, 105, 112, 118, 121, 124, 133, 134, 138, 144, 149, 159, 160, 162, 163, 173, 177, 183, 188], "seed": [58, 61, 177, 188, 189], "seem": [10, 14, 42, 51], "seen": [10, 80, 160, 162, 176], "segment": [42, 51, 82, 178, 183], "select": [16, 17, 18, 19, 52, 58, 118, 121, 122, 123, 124, 133, 144, 145, 146, 148, 151, 174, 177, 189], "select_by_indic": [8, 170, 174], "select_by_percentag": [115, 122], "select_by_threshold": [115, 122], "select_drift_mor": 122, "select_layers_by_percentag": [8, 115, 122], "select_layers_by_threshold": [8, 115, 122], "select_paramet": [115, 118, 123, 124], "select_scores_and_sample_mask": [8, 115, 122], "select_zeroeth_el": [8, 170, 177], "selected_indic": 174, "self": [7, 10, 12, 14, 17, 21, 22, 23, 24, 27, 29, 33, 38, 41, 43, 44, 46, 47, 48, 51, 52, 65, 81, 82, 88, 89, 110, 112, 114, 122, 134, 138, 161, 168, 171, 172, 173, 174, 175, 185], "semant": 163, "send": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 117, 119, 122, 127, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 158, 159, 163, 171, 176], "sens": [31, 82], "sensibl": 14, "sent": [21, 23, 24, 28, 29, 30, 31, 38, 42, 44, 48, 50, 51, 52, 54, 74, 88, 89, 91, 92, 93, 105, 107, 108, 117, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 160, 161, 162, 164, 166, 168], "sentri": 1, "seongjun": 62, "separ": [4, 7, 23, 27, 41, 46, 47, 50, 76, 81, 82, 91, 93, 121, 135, 158, 177, 183], "sequenc": [1, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 80, 84, 108, 132, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 183], "sequenti": [38, 43, 99, 103, 109, 114], "sequential_forward": [95, 109, 114], "sequential_split_model": [8, 95], "sequentiallysplitexchangebasemodel": [8, 34, 95, 100, 103, 114], "sequentiallysplitmodel": [8, 38, 95, 109, 114], "seri": 62, "serial": [42, 51, 68], "serializ": 190, "serializableobjectsnapshott": [8, 170, 190], "serv": [21, 28, 33, 91, 92, 93], "server": [4, 8, 11, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 76, 88, 89, 91, 92, 93, 96, 100, 102, 103, 113, 114, 116, 118, 119, 122, 132, 133, 134, 135, 136, 138, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 176, 177], "server_": 14, "server_address": 7, "server_control_vari": 168, "server_learning_r": 157, "server_model": 149, "server_model_weight": 168, "server_modul": [8, 9], "server_nam": [14, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152], "server_noise_multipli": 145, "server_paramet": 13, "server_round": [144, 147, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169], "server_upd": [132, 133], "serverconfig": 7, "servergp": 103, "serverstatecheckpoint": [8, 9, 13, 14], "set": [1, 4, 7, 10, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 71, 72, 74, 75, 77, 80, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 96, 99, 100, 101, 107, 108, 110, 112, 113, 116, 117, 118, 119, 121, 123, 124, 129, 133, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 172, 173, 174, 177, 178, 183, 185, 188, 189], "set_all_random_se": [8, 170, 188], "set_attribut": [9, 14], "set_checkpoint_path": [9, 14], "set_config": 65, "set_data_mean": [95, 112], "set_fit_request": [63, 65], "set_initial_global_tensor": [20, 28, 38, 88, 91, 92], "set_len": 183, "set_nnunet_env": [8, 170, 183], "set_nnunet_env_and_reload_modul": [8, 170, 183], "set_optim": [20, 22, 23, 28, 29, 36, 43, 88, 91, 92], "set_pack_losses_with_val_metr": [8, 170, 171], "set_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 48, 50, 52, 54, 88, 89, 90, 91, 92, 93], "set_principal_compon": [95, 112], "set_transform_request": [63, 65], "setup": [1, 7, 23, 28, 31, 35, 36, 43, 44, 50, 52, 88, 89, 91, 92, 93, 141, 142, 143, 144, 145, 147, 148, 150, 152, 173], "setup_cli": [20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 88, 90, 91, 92, 93], "setup_client_and_return_all_model_paramet": [8, 20, 23, 88, 89], "setup_context": [170, 177], "setup_opacus_object": [20, 44, 187], "setup_privacy_account": [139, 145, 148], "sever": [4, 82], "sgd": [7, 133, 148, 152, 187], "sh": 1, "shape": [42, 51, 71, 72, 75, 76, 78, 81, 82, 85, 87, 97, 99, 102, 105, 108, 109, 113, 114, 121, 124, 159, 164, 173, 175, 183, 184], "share": [4, 22, 32, 34, 36, 43, 130, 141, 163, 173], "shift": 4, "short": [122, 134, 138], "should": [1, 7, 10, 11, 12, 13, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 65, 72, 73, 75, 76, 77, 81, 82, 87, 88, 89, 91, 92, 93, 94, 97, 99, 102, 103, 105, 107, 108, 112, 114, 118, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160, 161, 162, 167, 169, 173, 174, 175, 176, 177, 180, 183, 185, 190], "should_layer_be_exclud": [115, 118], "should_module_be_exclud": [115, 118], "should_stop": [170, 176], "shouldn": [134, 138], "show": 1, "shown": [4, 35], "shuffl": 61, "shut": [23, 42, 51, 137], "shutdown": [7, 8, 20, 23, 40, 42, 51, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 152, 170, 183], "shutdown_dataload": [20, 40, 42, 51], "side": [1, 4, 11, 13, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 76, 88, 89, 91, 92, 93, 96, 105, 119, 133, 142, 144, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 168], "sigint": 183, "sigma": [133, 167, 173], "sigma_phi": 73, "sigma_q": 73, "sigmoid": [105, 107, 108, 164], "sigmoid_invers": [8, 170, 177], "signal": [17, 161, 183], "signal_for_typ": [154, 161], "signalfortypeerror": [8, 154, 161], "signalfortypeexcept": 161, "signatur": 177, "signific": 4, "significantli": [4, 42, 51], "sigterm": 183, "silo": [50, 91, 93], "sim": [72, 97, 173], "simclr": [71, 101], "similar": [4, 25, 36, 41, 42, 49, 51, 71, 72, 74, 76, 97, 101, 103, 163, 185], "similarli": 163, "simpl": [4, 21, 43, 135, 149, 156, 168, 173], "simpleclientmanag": [7, 16, 17], "simplemetr": [8, 78, 85], "simplest": [22, 23], "simpli": [7, 11, 13, 25, 27, 28, 29, 33, 36, 38, 39, 43, 46, 48, 49, 53, 86, 91, 92, 93, 97, 102, 113, 117, 144, 147, 157, 160, 162, 164, 168, 174, 177], "simultan": [28, 38, 43, 91, 92, 103], "sinc": [29, 31, 48, 52, 130, 146, 158, 163, 164, 176, 183], "singl": [13, 21, 22, 23, 29, 31, 41, 42, 43, 51, 54, 65, 81, 82, 88, 89, 97, 108, 110, 132, 151, 167, 180, 183, 190], "singlethreadedaugment": 183, "singleton": [108, 190], "singletonsnapshott": [8, 170, 190], "singular": [112, 163], "singular_valu": 112, "sirna_id": 59, "sit": [144, 147], "site": 59, "six": 105, "size": [27, 58, 61, 72, 73, 75, 81, 82, 87, 103, 105, 107, 108, 121, 132, 133, 148, 152, 157, 161, 162, 163, 167, 171, 173, 175, 178, 183, 185, 189], "size_of_model_param": 121, "skew": [173, 185, 189], "skin": 61, "skin_canc": [8, 56], "skin_cancer_feder": 62, "sklearn": [65, 78, 85], "slice": 174, "slight": 112, "slightli": 36, "small": [78, 85, 112, 185], "smaller": [80, 163, 185, 189], "smallest_final_magnitude_scor": [8, 115, 122], "smallest_increase_in_magnitude_scor": [8, 115, 122], "smallest_magnitude_change_scor": [8, 115, 122], "smoke": 1, "smoke_test": 1, "smooth": [73, 80], "smoothing_factor": 80, "snapshot": [14, 176, 190], "snapshot_attr": [11, 13, 14], "snapshott": [8, 14, 170], "so": [1, 10, 12, 13, 14, 17, 21, 23, 28, 31, 33, 38, 39, 42, 48, 51, 52, 88, 89, 91, 92, 93, 112, 118, 129, 134, 138, 144, 150, 156, 158, 159, 164, 171, 172, 176, 177, 183, 185, 189], "soft": [78, 82, 85, 86, 87], "softmax": [103, 173], "solver": [50, 91, 93], "some": [1, 11, 19, 29, 31, 42, 44, 51, 65, 87, 97, 110, 124, 133, 134, 138, 144, 150, 157, 158, 159, 163, 167, 168, 183, 185], "someth": [1, 23, 28, 38, 41, 46, 47, 105, 188], "sometim": [135, 136], "soon": 4, "sophist": 164, "sort": [99, 177], "sourc": [1, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "source_plan": 183, "source_plans_nam": [42, 51], "space": [37, 53, 97, 102, 105, 112, 128], "spars": [4, 13, 33, 35, 112, 121, 124, 159], "sparse_coo_parameter_exchang": [8, 115], "sparse_coo_tensor": [121, 124, 159], "sparsecooparameterexchang": [8, 115, 124], "sparsecooparameterpack": [8, 115, 121], "sparsecooservercheckpointandstatemodul": [8, 9, 13], "sparsiti": 124, "sparsity_level": 124, "spatial": [78, 85, 183], "spatial_dimens": [78, 85], "spawn": [42, 51, 183], "special": [13, 41, 116, 158, 159], "specif": [1, 4, 10, 12, 13, 14, 22, 23, 25, 33, 42, 43, 49, 51, 53, 62, 82, 99, 108, 109, 114, 116, 117, 118, 124, 127, 133, 156, 163, 166, 168, 174, 175, 183], "specifi": [7, 10, 12, 14, 23, 30, 35, 36, 42, 51, 54, 58, 59, 69, 81, 82, 86, 96, 97, 99, 109, 110, 112, 114, 118, 133, 134, 138, 147, 150, 152, 161, 162, 171, 176, 178, 183, 189], "split": [37, 43, 53, 58, 61, 102, 109, 110, 114, 121, 130, 157, 178], "split_data_and_target": [8, 170, 178], "split_model_weights_and_clipping_bit": [154, 157], "split_perc": 61, "sqrt": 157, "squar": 24, "ssltensordataset": [8, 170, 174], "stabil": 108, "stabl": [78, 85, 105, 112, 121, 124, 159, 188], "stack": [31, 38], "stage": [30, 101, 114, 173], "stai": [4, 28, 38, 91, 92, 109], "standalon": 94, "standard": [1, 4, 42, 48, 51, 53, 97, 114, 128, 133, 150, 156, 157, 167, 168, 173, 187], "standard_normal_kl_divergence_loss": [126, 128], "start": [1, 4, 25, 42, 43, 49, 51, 52, 53, 76, 99, 122, 134, 138, 144, 163, 173, 176, 183], "start_client": 7, "start_run": [8, 134, 138], "start_serv": 7, "startonnewlin": 1, "state": [1, 4, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 79, 80, 84, 85, 88, 89, 91, 92, 93, 96, 113, 121, 130, 133, 141, 142, 143, 144, 145, 147, 148, 150, 152, 155, 171, 176, 184, 186, 188, 190], "state_checkpoint": [8, 9, 11, 13, 176], "state_dict": [12, 117, 118, 122], "statecheckpoint": [8, 9, 14], "static": [1, 30, 68, 69, 101, 118, 121, 175, 177, 180], "staticmethod": 177, "statist": [13, 39, 75, 133], "std": [73, 132, 167], "stdout": [42, 51, 183], "step": [7, 8, 13, 21, 22, 23, 25, 27, 28, 29, 36, 39, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 73, 80, 88, 89, 91, 92, 93, 134, 135, 136, 137, 138, 148, 152, 159, 161, 162, 168, 172, 175, 176, 183], "steps_per_lr": 183, "steptyp": [134, 138], "still": [141, 143, 156, 164, 166, 176], "stochast": 177, "stop": [14, 39, 176], "stopiter": 183, "stopper": 176, "storag": [52, 102], "store": [13, 14, 21, 23, 24, 27, 28, 29, 32, 38, 43, 46, 47, 49, 52, 80, 81, 82, 88, 89, 91, 92, 96, 99, 102, 103, 109, 110, 112, 113, 114, 133, 177, 180], "store_initial_model": 52, "str": [1, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 68, 69, 75, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 98, 99, 102, 103, 105, 110, 111, 113, 114, 118, 121, 122, 124, 130, 134, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 180, 183, 184, 185, 187, 188, 190], "straight": 177, "straightforward": [32, 100], "strap": [38, 39, 44, 144], "strategi": [4, 7, 8, 12, 21, 28, 33, 50, 52, 54, 88, 89, 91, 93, 133, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152], "strategy_with_pol": [8, 154], "strategywithpol": [8, 144, 154, 156, 169], "stream": 183, "streamtologg": [8, 170, 183], "strict": 1, "strictli": [1, 4, 22, 173, 174], "stride": 105, "string": [1, 14, 22, 23, 28, 36, 42, 43, 51, 63, 65, 68, 69, 78, 79, 80, 82, 84, 85, 91, 92, 134, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 172, 183, 185, 190], "string_columns_transform": [8, 63], "stringio": 183, "stringsnapshott": [8, 170, 190], "strongli": 1, "structur": [14, 81, 97, 100], "stuff": 183, "style": [1, 173], "sub": [43, 65, 103], "subclass": [22, 23, 24, 25, 34, 36, 37, 41, 42, 51, 52, 54, 82, 88, 89, 173, 177, 180, 183], "subfold": 178, "subject": 189, "submit": [1, 4], "submodul": [8, 38, 56], "subpackag": 183, "subprocess": 183, "subsampl": [170, 174, 178, 185, 189], "subsequ": [17, 31, 48, 49, 80, 150, 183], "subset": [1, 13, 23, 30, 52, 53, 58, 118, 122, 123, 124, 133, 158, 159, 174], "subspac": [112, 163], "subspace1": 163, "subspace2": 163, "subtract": [54, 112, 168], "success": [144, 146, 147, 168], "successfulli": 14, "suffici": [112, 133], "suggest": [28, 50, 91, 93, 163], "suit": 1, "sum": [24, 76, 82, 95, 110, 161, 162, 164, 167, 177], "summari": [134, 135, 136, 138], "summat": 110, "super": [135, 161], "supervis": [23, 42, 51, 150, 174, 175, 183], "support": [4, 48, 65, 98, 106, 122, 166, 173, 174, 175, 185], "suppos": 164, "sure": [134, 138, 185], "surfac": [10, 14], "svd": [112, 163], "svd_lowrank": 112, "svd_merg": 163, "swallow": [10, 14], "switch": 36, "sync": [38, 50, 91, 93], "synthet": [173, 174], "synthetic_1_1": 173, "syntheticdataset": [8, 170, 174, 185], "syntheticfedproxdataset": [8, 170, 173], "syntheticiidfedproxdataset": [8, 170, 173], "syntheticnoniidfedproxdataset": [8, 170, 173], "system": [4, 7, 103, 146, 156, 160, 161, 162, 165, 166, 168], "t": [1, 11, 14, 28, 31, 32, 38, 39, 80, 81, 82, 87, 91, 92, 112, 119, 121, 123, 134, 138, 141, 143, 163, 165, 171, 172, 173, 174, 177, 183, 185, 189, 190], "t_1": 133, "t_2": 133, "tab_features_info_encod": [8, 63], "tab_features_preprocessor": [8, 63], "tabl": [1, 43, 103], "tabular": [68, 69], "tabular_data_cli": [8, 20], "tabular_featur": [8, 63], "tabular_feature_alignment_serv": [8, 139], "tabular_typ": [8, 63], "tabularfeatur": [8, 63, 68], "tabulartyp": [8, 63, 68, 69], "tag": [134, 138], "tailor": 116, "take": [10, 43, 99, 102, 103, 110, 112, 113, 117, 118, 121, 124, 134, 138, 158, 159, 163, 166, 168, 173], "taken": [54, 103, 133], "tandem": [28, 91, 92], "target": [1, 11, 12, 14, 21, 22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 43, 46, 47, 49, 50, 51, 53, 61, 73, 75, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 107, 108, 128, 130, 141, 143, 151, 171, 174, 178, 183, 184, 186], "target_is_grad_sample_modul": 12, "target_model": [12, 77], "target_shap": 87, "target_transform": [80, 174, 178], "targets_1": 80, "targets_2": 80, "task": [4, 31, 78, 85, 166, 175, 177], "task01_braintumour": [170, 182], "task02_heart": [170, 182], "task03_liv": [170, 182], "task04_hippocampu": [170, 182], "task05_prost": [170, 182], "task06_lung": [170, 182], "task07_pancrea": [170, 182], "task08_hepaticvessel": [170, 182], "task09_spleen": [170, 182], "task10_colon": [170, 182], "tau": 165, "team": [1, 134, 138], "temperatur": [49, 53, 71, 74, 76, 173], "templat": 1, "tensor": [21, 22, 23, 24, 25, 27, 28, 29, 31, 36, 38, 41, 42, 43, 46, 47, 49, 50, 51, 53, 59, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 121, 122, 124, 127, 128, 159, 164, 171, 173, 174, 175, 177, 178, 180, 183, 184, 185, 188], "tensor1": 87, "tensor2": 87, "tensor_dict": 183, "tensor_list": 183, "tensordataset": [8, 58, 61, 170, 173, 174, 175, 178, 189], "tensorflow": 133, "term": [4, 28, 38, 50, 91, 92, 93, 176], "termin": [7, 42, 51, 144, 183], "test": [23, 30, 31, 42, 48, 51, 58, 59, 61, 73, 79, 84, 112, 149, 166, 170, 174, 178, 179, 183, 185], "test_": 1, "test_best_checkpoint": 1, "test_load": [48, 88, 90, 91, 92, 93], "test_prefix": [78, 79], "test_transform": 61, "text": [24, 54, 65, 80, 96, 97, 168, 173], "textcolumntransform": [8, 63, 65], "textfeaturetransform": 65, "textmulticolumntransform": [8, 63, 65], "than": [1, 10, 13, 19, 23, 27, 28, 29, 30, 38, 41, 46, 47, 48, 84, 88, 89, 100, 105, 123, 124, 150, 156, 157, 163, 166, 174, 183, 185], "thank": 1, "thei": [1, 4, 11, 13, 21, 22, 23, 24, 28, 29, 30, 31, 41, 42, 43, 48, 51, 54, 81, 82, 88, 89, 91, 92, 97, 109, 114, 121, 124, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 159, 160, 162, 168, 171, 173, 174, 175, 177, 180, 183], "them": [4, 14, 16, 22, 23, 27, 28, 38, 44, 46, 47, 53, 88, 89, 91, 92, 99, 110, 117, 121, 124, 157, 159, 161, 162, 164, 175, 177, 183, 190], "themselv": [164, 174, 177, 183], "theorem": 133, "theoret": 163, "thereaft": [24, 168], "therebi": [156, 168], "therefor": [1, 42, 51, 134, 136, 138, 168, 177, 183], "therein": 81, "thereof": [23, 30], "theta": 164, "theta_cli": 157, "theta_serv": 157, "thi": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 105, 107, 108, 110, 112, 114, 116, 118, 121, 122, 123, 124, 128, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 185, 187, 188, 189, 190], "thin": [78, 80, 85], "thing": [1, 23, 42, 51, 121, 144, 145, 148, 150, 152], "third": [144, 146, 147], "thorough": 4, "those": [1, 4, 16, 28, 38, 50, 78, 85, 87, 91, 92, 93, 105, 107, 108, 110, 114, 118, 121, 122, 156, 168, 173, 183], "though": [1, 177], "thought": 168, "thread": 58, "three": [11, 43, 103, 159, 175], "threshold": [39, 78, 81, 82, 85, 86, 118, 122, 124, 157, 168, 183, 185], "threshold_tensor": [8, 78, 86], "through": [1, 4, 10, 24, 28, 31, 32, 33, 34, 36, 38, 39, 41, 43, 49, 91, 92, 96, 97, 101, 102, 103, 105, 110, 113, 123, 129, 134, 138, 150, 157, 168, 177, 183, 185, 189], "throughout": [1, 23, 30, 31, 36, 132], "throw": [10, 11, 13, 14, 39, 105, 134, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 174, 185], "thrown": [11, 14, 51, 69, 105, 112, 161, 172], "thu": [48, 161, 163], "ticket": [4, 35], "time": [1, 14, 17, 23, 28, 42, 51, 52, 54, 80, 91, 92, 129, 133, 144, 145, 146, 147, 148, 149, 152, 171, 174, 183, 185, 188], "timeout": [144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 163, 166, 168], "tmetric": [78, 85], "tn": [81, 82], "to_client": 7, "to_json": [63, 68], "togeth": [21, 28, 31, 52, 54, 82, 88, 89, 91, 92, 97, 110, 155, 168], "token": 174, "toml": 1, "ton": 177, "tonumpi": [8, 170, 178], "too": [29, 112], "tool": 1, "top": [1, 59, 82, 112], "top_sirna_id": 59, "torch": [7, 10, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 118, 121, 124, 127, 128, 130, 159, 171, 173, 174, 175, 177, 180, 183, 184, 185, 188], "torch_stat": 188, "torchcheckpoint": 10, "torchfeaturetyp": [21, 23, 27, 28, 38, 41, 43, 46, 47, 50, 91, 92, 93], "torchinputtyp": [22, 23, 25, 27, 28, 29, 36, 38, 41, 42, 43, 46, 47, 49, 51, 53, 91, 92, 171], "torchmetr": [8, 78, 85], "torchmodul": 118, "torchmodulecheckpoint": [8, 9, 10], "torchmodulesnapshott": [8, 170, 190], "torchpredtyp": [21, 22, 23, 27, 28, 38, 41, 42, 43, 46, 47, 50, 51, 84, 91, 92, 93], "torchshap": 108, "torchtargettyp": [21, 22, 23, 27, 28, 41, 42, 43, 46, 47, 50, 51, 84, 91, 92, 93, 171], "torchtransformfunct": 80, "total": [25, 42, 49, 50, 51, 53, 83, 91, 93, 128, 132, 133, 134, 135, 136, 138, 145, 146, 148, 156, 160, 161, 162, 165, 166, 167, 168, 183, 185, 189], "total_client_count_by_metr": 83, "total_client_weight": 167, "total_exampl": 83, "total_loss": [25, 49, 53], "total_sampl": [145, 148, 152], "total_step": 23, "toward": 1, "tp": [81, 82, 86], "tqdm": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 49, 50, 52, 53, 54], "track": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 163], "track_running_stat": 108, "tradit": 11, "train": [4, 7, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 73, 76, 81, 82, 84, 88, 89, 91, 92, 93, 96, 97, 98, 101, 102, 103, 105, 107, 108, 112, 113, 118, 122, 127, 128, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 185, 188], "train_by_epoch": [20, 23, 39], "train_by_step": [20, 23], "train_data_tensor": 31, "train_fedrep_by_epoch": [20, 36], "train_fedrep_by_step": [20, 36], "train_fract": 58, "train_kernel": [70, 73], "train_load": [7, 88, 90, 91, 92, 93], "train_loop_checkpoint_dir": 176, "train_step": [8, 20, 22, 23, 28, 29, 36, 40, 41, 43, 51, 88, 89, 91, 92], "train_transform": 61, "train_val_split": 58, "trainer": 51, "trainingloss": [8, 21, 22, 23, 27, 28, 29, 36, 38, 41, 43, 46, 47, 49, 50, 51, 54, 88, 89, 90, 91, 92, 93, 170, 180], "trajectori": [21, 160], "transfer": [23, 28, 30, 31, 38, 48, 52, 76, 91, 92, 118, 132], "transform": [23, 41, 43, 51, 54, 58, 61, 63, 65, 71, 80, 87, 101, 103, 105, 107, 108, 127, 129, 173, 174, 178], "transform_gradi": [20, 23, 40, 41, 51, 54, 88, 90], "transform_input": [20, 43], "transform_target": [20, 23, 88, 90], "transformed_featur": 71, "transformermixin": 65, "transformsmetr": [8, 78, 80], "transpar": 185, "transpos": [82, 105, 163], "travers": 99, "treat": [81, 108, 132, 135, 136, 183], "treatment": [13, 148, 158, 159], "tree": [173, 183], "trick": 97, "tripl": 1, "trivial": [1, 174], "true": [1, 10, 11, 14, 23, 24, 27, 28, 29, 33, 38, 42, 46, 47, 48, 50, 51, 54, 65, 73, 75, 81, 82, 86, 91, 92, 93, 96, 99, 100, 101, 103, 105, 106, 107, 108, 112, 122, 127, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 176, 177, 183, 188], "true_neg": [78, 81, 82], "true_posit": [78, 81, 82, 86], "truth": [21, 22, 23, 25, 27, 28, 29, 38, 42, 43, 46, 47, 49, 50, 51, 53, 78, 79, 80, 84, 85, 91, 92, 93, 141, 142, 143, 144, 145, 147, 148, 150, 152], "try": [1, 10, 14, 39, 75, 133, 134, 138, 157], "tsingz0": 103, "tst": 73, "tune": [11, 101], "tupl": [1, 7, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 58, 61, 73, 74, 76, 78, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 97, 102, 103, 105, 109, 110, 112, 113, 114, 118, 119, 121, 122, 123, 124, 128, 144, 145, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 177, 178, 185, 187, 188], "turn": [157, 160, 162, 163, 168], "tutori": 133, "twin": [4, 22, 96], "two": [4, 7, 11, 23, 28, 35, 36, 38, 42, 43, 44, 51, 54, 72, 73, 76, 81, 82, 87, 91, 92, 102, 103, 105, 107, 108, 110, 114, 118, 121, 124, 134, 138, 146, 150, 156, 159, 163, 168, 172, 173, 177, 184], "two_layer_map_inputs_to_output": [170, 173], "type": [1, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190], "type_data": 59, "typeerror": [23, 41, 46, 47, 94, 171, 174], "typevar": [119, 121, 123, 189], "typic": [23, 42, 51, 99], "typing1": 1, "typing2": 1, "typing_stuff": 1, "u": [112, 163], "u_1": 163, "u_2": 163, "u_i": 163, "u_k": 173, "u_n": 163, "uf": 62, "ui": [134, 138], "un": 97, "unaffect": 188, "unbias": 73, "uncategor": [134, 138], "unchang": [65, 81, 82], "undefin": [81, 86], "under": [1, 14, 27, 28, 38, 42, 46, 47, 51, 78, 85, 96, 102, 108, 110, 112, 113, 134, 138, 187], "underli": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 78, 80, 85, 96, 177], "underpin": 178, "undo": 188, "unfreeze_base_modul": [95, 100], "unfreeze_head_modul": [95, 100], "unfrozen": 100, "unifi": 175, "uniform": [155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 183, 185], "uniform_evaluate_metrics_aggregation_fn": [8, 78, 83], "uniform_metric_aggreg": [8, 78, 83], "uniform_normalize_metr": [8, 78, 83], "uniformli": [83, 167, 168], "unintend": 1, "unintention": 1, "union": [1, 25, 28, 29, 30, 36, 49, 53, 68, 90, 91, 92, 162, 165], "uniqu": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 134, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 183, 188], "unique_label": [185, 189], "unit": [1, 75], "unitari": 163, "unittestarg": 1, "unittesten": 1, "unknown": 69, "unless": [30, 42, 51, 149], "unlik": [4, 12, 13, 38, 41, 50, 91, 93, 165, 185], "unpack": [13, 21, 24, 28, 54, 88, 89, 91, 92, 97, 119, 121, 128, 175], "unpack_input_condit": [97, 170, 175], "unpack_model_output": [126, 128], "unpack_paramet": [115, 119, 121, 123], "unrespons": 152, "unseen": 4, "unset_all_random_se": [8, 170, 188], "unspecifi": [82, 134, 138], "unstructur": 13, "unsuccess": [144, 147], "until": [1, 17, 54, 185], "unus": [42, 51, 81, 166], "unweight": [4, 49, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 168], "unweighted_aggreg": [154, 158, 159], "unwound": 52, "up": [1, 4, 11, 21, 23, 27, 28, 36, 39, 43, 44, 46, 48, 52, 82, 88, 89, 91, 92, 93, 98, 103, 135, 144, 145, 148, 157, 163, 173, 177, 185, 189], "updat": [1, 4, 8, 14, 21, 22, 23, 24, 27, 28, 29, 38, 41, 42, 43, 46, 47, 50, 51, 54, 65, 78, 79, 80, 81, 82, 84, 85, 91, 92, 93, 96, 105, 107, 108, 132, 133, 134, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 157, 160, 161, 162, 164, 167, 168, 170, 171, 180], "update_after_step": [20, 22, 23, 26, 27, 45, 46, 47], "update_after_train": [8, 20, 21, 23, 25, 49, 53, 54, 88, 89, 90], "update_alpha": [95, 96], "update_before_epoch": [20, 23], "update_before_fit": [139, 144, 150], "update_before_step": [20, 23], "update_before_train": [20, 23, 25, 26, 27, 28, 32, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 88, 90, 91, 92, 93], "update_buff": [26, 27, 45, 46, 47], "update_clipping_bound": [154, 157], "update_control_vari": [20, 54], "update_current_weight": [154, 157], "update_lr_schedul": [20, 23], "update_metric_manag": [20, 23, 40, 42, 51], "update_target_transform": [170, 174], "update_transform": [170, 174], "update_weights_by_ga": [154, 161], "updated_param": 168, "upgrad": 1, "upload": [134, 138, 149], "upon": [13, 117], "us": [1, 4, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 65, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 121, 122, 123, 124, 127, 128, 130, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 177, 178, 180, 183, 185, 187, 188, 189, 190], "usag": [42, 51, 103, 177, 185], "use_default_signal_handl": [8, 170, 183], "use_deterministic_algorithm": 188, "use_deterministic_torch_algo": 188, "user": [10, 12, 22, 23, 28, 29, 30, 31, 33, 36, 38, 39, 41, 42, 43, 48, 51, 52, 53, 65, 78, 82, 85, 91, 92, 97, 99, 102, 110, 112, 128, 129, 130, 156, 161, 174, 175, 185], "usernam": [134, 138], "usual": [10, 50, 91, 93, 133, 183], "util": [7, 8, 10, 23, 42, 51, 65, 78, 88, 91, 96, 112], "uuid": [136, 177], "v": [1, 36, 82, 103, 156, 163, 173], "v2": 183, "v202": [39, 165], "v_i": 75, "v_i_quadrupl": 75, "v_k": 173, "vae": [97, 127, 128], "vaeloss": [125, 126, 128], "vaeprocessor": [125, 126, 127], "val": [10, 23, 41, 43, 61, 79, 84, 161], "val_load": [7, 88, 90, 91, 92, 93, 171], "val_prefix": [78, 79], "val_step": [20, 23, 40, 41, 43, 88, 91, 92], "val_transform": 61, "valid": [11, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 88, 90, 91, 92, 93, 112, 144, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 176, 178, 179, 183, 187], "validate_on_model": [20, 30], "validation_proport": 178, "valu": [10, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 32, 36, 42, 43, 46, 47, 49, 51, 53, 59, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 91, 92, 96, 97, 98, 99, 103, 105, 107, 108, 110, 112, 121, 122, 124, 128, 132, 133, 134, 138, 144, 145, 146, 148, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191], "valueerror": [11, 13, 23, 28, 30, 36, 38, 39, 41, 46, 47, 51, 69, 91, 92, 105, 157, 168, 171, 172, 185], "vanilla": [12, 27, 28, 38, 46, 47, 50, 91, 92, 93], "vari": [1, 81], "variabl": [42, 44, 51, 81, 127, 172, 175, 183, 188], "varianc": [73, 97, 112, 128, 173], "variat": [4, 23, 54, 97, 121, 152, 168], "variationala": [8, 95, 97], "varieti": 23, "variou": [1, 4, 11, 25, 52, 53, 82], "vector": [72, 81, 87, 97, 101, 103, 112, 163, 175], "venv": 1, "verbos": [42, 51, 183], "veri": [1, 4, 21, 23, 24, 28, 30, 38, 52, 80, 88, 89, 91, 92, 141, 143, 177, 185], "verifi": [171, 172, 173], "version": [4, 23, 28, 42, 50, 51, 65, 73, 77, 91, 92, 93, 96, 157, 183], "vert": [24, 157, 168], "vert_2": 24, "vertic": 100, "via": [7, 10, 13, 21, 33, 43, 88, 89, 98, 105, 107, 108, 112, 124, 132, 185, 187], "view": [163, 164], "violat": 185, "virtual": 1, "virtualenv": 1, "vjp": 177, "vote": [95, 98], "voxel": 183, "vram": [42, 51], "vscode": 1, "w": [23, 32, 42, 51, 133, 157, 173, 177], "w_1": 173, "w_2": 173, "w_i": 173, "wa": [10, 22, 23, 24, 27, 46, 47, 82, 91, 92, 97, 101, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 157, 158, 159, 164, 183], "wai": [1, 7, 31, 48, 77, 87, 108, 110, 156, 173, 177, 183, 189, 190], "wait": [7, 16, 144, 145, 146, 147, 148, 149, 151, 152, 168, 176], "wait_and_filt": [15, 16], "wandb": [134, 138], "wandb_init_kwarg": [134, 138], "wandb_report": [8, 23, 42, 51, 134], "wandb_step": [134, 138], "wandb_step_typ": [134, 138], "wandbreport": [8, 134, 138], "wandbsteptyp": [8, 134, 138], "want": [1, 11, 21, 23, 28, 33, 38, 42, 50, 51, 58, 81, 87, 88, 89, 91, 92, 93, 99, 134, 138, 141, 143, 144, 160, 161, 168, 169, 171, 183, 185], "warm": [4, 152], "warm_start": 152, "warmed_up_modul": [8, 125], "warmedupmodul": [8, 125, 130], "warn": [170, 191], "we": [1, 4, 7, 10, 11, 12, 13, 14, 21, 23, 24, 27, 28, 29, 30, 31, 35, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 73, 75, 80, 81, 87, 88, 89, 91, 92, 93, 94, 97, 99, 101, 109, 114, 118, 122, 133, 134, 135, 138, 144, 146, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 171, 173, 174, 177, 183, 185, 189], "weigh": [161, 162], "weight": [4, 13, 21, 23, 24, 25, 27, 28, 30, 32, 38, 41, 43, 46, 47, 49, 50, 52, 53, 54, 74, 76, 77, 78, 80, 83, 85, 88, 89, 91, 92, 93, 100, 101, 105, 107, 108, 117, 119, 124, 130, 132, 133, 134, 138, 145, 149, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 177], "weight_and_aggregate_result": [154, 161], "weight_drift_loss": [8, 70], "weight_noise_multipli": 157, "weight_scor": 122, "weightdriftloss": [8, 70, 77, 89, 92, 93], "weighted_aggreg": [154, 156, 157, 158, 159, 160, 163, 164, 165, 166], "weighted_eval_loss": [156, 157, 158, 159, 160, 163, 164, 165, 168], "weighted_train_loss": [160, 162], "weights_mapping_path": 130, "weights_nam": 121, "weights_upd": 157, "well": [1, 4, 7, 12, 59, 98, 112, 119, 144, 149, 157, 161, 164, 173, 177], "were": [54, 80, 82, 97, 133, 158, 159, 168, 177], "what": [1, 23, 36, 42, 51, 81, 134, 135, 138, 168], "whatev": [1, 10, 12, 33], "when": [1, 10, 12, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 68, 81, 87, 88, 89, 96, 102, 108, 110, 112, 114, 119, 121, 122, 123, 132, 134, 135, 138, 144, 150, 156, 157, 160, 161, 162, 168, 169, 174, 175, 177, 183, 187], "whenev": 10, "where": [11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 72, 73, 78, 81, 82, 85, 87, 97, 98, 99, 102, 108, 109, 112, 114, 123, 127, 132, 134, 138, 144, 147, 155, 156, 157, 158, 159, 163, 164, 168, 171, 173, 174, 180, 183, 189], "wherein": 4, "whether": [7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 73, 75, 78, 82, 85, 88, 89, 91, 92, 93, 96, 99, 101, 102, 103, 106, 112, 114, 122, 133, 134, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 177, 183, 187, 188], "which": [1, 4, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 97, 98, 99, 103, 105, 107, 108, 112, 113, 116, 121, 122, 124, 129, 132, 133, 134, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 183, 185, 187, 188, 189, 190], "while": [4, 35, 43, 71, 76, 87, 96, 102, 112, 113, 124], "who": 158, "whole": [27, 46, 47, 98], "whose": [37, 105, 107, 108, 112, 118, 122, 124, 129, 163, 168, 184, 186], "wide": 4, "window": 183, "wise": [13, 39, 54, 167, 168], "wish": 112, "within": [12, 13, 78, 82, 85, 94, 118, 121, 124, 134, 135, 136, 138, 159, 171, 174, 183], "without": [1, 16, 18, 19, 21, 71, 80, 87, 133, 134, 138, 152, 157, 171, 177], "wns823": 62, "word": [43, 134, 138, 183], "work": [1, 31, 39, 42, 51, 65, 118, 127, 135, 136, 144, 161, 164, 177], "worker": [58, 61, 151], "workflow": [1, 12], "would": [1, 23, 68, 81, 86, 112, 177, 188], "woven": 52, "wrap": [12, 94, 150, 171, 183, 187], "wrap_model": 187, "wrapper": [78, 80, 85, 94, 98, 103, 141, 142, 143], "write": [170, 183], "written": 183, "wrong": [23, 36, 172], "www": [53, 58, 76], "wx": 173, "x": [42, 51, 54, 65, 71, 73, 75, 112, 121, 173, 177, 183], "x1": 72, "x2": 72, "x_": [73, 75, 173], "x_in_dim": 73, "x_lower_dim": 112, "x_out_dim": 73, "x_t": [73, 75], "xent": 71, "xxyxz": 183, "y": [42, 51, 65, 73, 75, 173, 183], "y_": 75, "y_i": 54, "yaml": [1, 134, 138], "yang": 62, "yet": [23, 88, 89, 91, 92], "yield": [4, 187], "you": [1, 10, 12, 58, 65, 81, 82, 99, 134, 138, 144, 177, 185, 188], "your": [1, 4, 7, 42, 51, 82, 134, 138, 144, 187], "z": [42, 51, 76, 133, 183], "z_": 76, "z_1": 133, "z_2": 133, "z_g": 76, "z_p": 76, "zero": [81, 86, 105, 108, 122, 124, 159, 168, 171], "zero_divis": [81, 86], "zeroeth": 177, "zhang": [161, 162]}, "titles": ["API Reference", "Contributing to FL4Health", "Basic Example", "Examples", "Welcome to FL4Health \u2728", "Checkpointing", "Module Guides", "Quickstart", "fl4health package", "fl4health.checkpointing package", "fl4health.checkpointing.checkpointer module", "fl4health.checkpointing.client_module module", "fl4health.checkpointing.opacus_checkpointer module", "fl4health.checkpointing.server_module module", "fl4health.checkpointing.state_checkpointer module", "fl4health.client_managers package", "fl4health.client_managers.base_sampling_manager module", "fl4health.client_managers.fixed_sampling_client_manager module", "fl4health.client_managers.fixed_without_replacement_manager module", "fl4health.client_managers.poisson_sampling_manager module", "fl4health.clients package", "fl4health.clients.adaptive_drift_constraint_client module", "fl4health.clients.apfl_client module", "fl4health.clients.basic_client module", "fl4health.clients.clipping_client module", "fl4health.clients.constrained_fenda_client module", "fl4health.clients.deep_mmd_clients package", "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module", "fl4health.clients.ditto_client module", "fl4health.clients.ensemble_client module", "fl4health.clients.evaluate_client module", "fl4health.clients.fed_pca_client module", "fl4health.clients.fed_prox_client module", "fl4health.clients.fedbn_client module", "fl4health.clients.fedper_client module", "fl4health.clients.fedpm_client module", "fl4health.clients.fedrep_client module", "fl4health.clients.fenda_client module", "fl4health.clients.fenda_ditto_client module", "fl4health.clients.flash_client module", "fl4health.clients.flexible package", "fl4health.clients.flexible.base module", "fl4health.clients.flexible.nnunet module", "fl4health.clients.gpfl_client module", "fl4health.clients.instance_level_dp_client module", "fl4health.clients.mkmmd_clients package", "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module", "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module", "fl4health.clients.model_merge_client module", "fl4health.clients.moon_client module", "fl4health.clients.mr_mtl_client module", "fl4health.clients.nnunet_client module", "fl4health.clients.partial_weight_exchange_client module", "fl4health.clients.perfcl_client module", "fl4health.clients.scaffold_client module", "fl4health.clients.tabular_data_client module", "fl4health.datasets package", "fl4health.datasets.rxrx1 package", "fl4health.datasets.rxrx1.load_data module", "fl4health.datasets.rxrx1.preprocess module", "fl4health.datasets.skin_cancer package", "fl4health.datasets.skin_cancer.load_data module", "fl4health.datasets.skin_cancer.preprocess_skin module", "fl4health.feature_alignment package", "fl4health.feature_alignment.constants module", "fl4health.feature_alignment.string_columns_transformer module", "fl4health.feature_alignment.tab_features_info_encoder module", "fl4health.feature_alignment.tab_features_preprocessor module", "fl4health.feature_alignment.tabular_feature module", "fl4health.feature_alignment.tabular_type module", "fl4health.losses package", "fl4health.losses.contrastive_loss module", "fl4health.losses.cosine_similarity_loss module", "fl4health.losses.deep_mmd_loss module", "fl4health.losses.fenda_loss_config module", "fl4health.losses.mkmmd_loss module", "fl4health.losses.perfcl_loss module", "fl4health.losses.weight_drift_loss module", "fl4health.metrics package", "fl4health.metrics.base_metrics module", "fl4health.metrics.compound_metrics module", "fl4health.metrics.efficient_metrics module", "fl4health.metrics.efficient_metrics_base module", "fl4health.metrics.metric_aggregation module", "fl4health.metrics.metric_managers module", "fl4health.metrics.metrics module", "fl4health.metrics.metrics_utils module", "fl4health.metrics.utils module", "fl4health.mixins package", "fl4health.mixins.adaptive_drift_constrained module", "fl4health.mixins.core_protocols module", "fl4health.mixins.personalized package", "fl4health.mixins.personalized.ditto module", "fl4health.mixins.personalized.mr_mtl module", "fl4health.mixins.personalized.utils module", "fl4health.model_bases package", "fl4health.model_bases.apfl_base module", "fl4health.model_bases.autoencoders_base module", "fl4health.model_bases.ensemble_base module", "fl4health.model_bases.feature_extractor_buffer module", "fl4health.model_bases.fedrep_base module", "fl4health.model_bases.fedsimclr_base module", "fl4health.model_bases.fenda_base module", "fl4health.model_bases.gpfl_base module", "fl4health.model_bases.masked_layers package", "fl4health.model_bases.masked_layers.masked_conv module", "fl4health.model_bases.masked_layers.masked_layers_utils module", "fl4health.model_bases.masked_layers.masked_linear module", "fl4health.model_bases.masked_layers.masked_normalization_layers module", "fl4health.model_bases.moon_base module", "fl4health.model_bases.parallel_split_models module", "fl4health.model_bases.partial_layer_exchange_model module", "fl4health.model_bases.pca module", "fl4health.model_bases.perfcl_base module", "fl4health.model_bases.sequential_split_models module", "fl4health.parameter_exchange package", "fl4health.parameter_exchange.fedpm_exchanger module", "fl4health.parameter_exchange.full_exchanger module", "fl4health.parameter_exchange.layer_exchanger module", "fl4health.parameter_exchange.packing_exchanger module", "fl4health.parameter_exchange.parameter_exchanger_base module", "fl4health.parameter_exchange.parameter_packer module", "fl4health.parameter_exchange.parameter_selection_criteria module", "fl4health.parameter_exchange.partial_parameter_exchanger module", "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module", "fl4health.preprocessing package", "fl4health.preprocessing.autoencoders package", "fl4health.preprocessing.autoencoders.dim_reduction module", "fl4health.preprocessing.autoencoders.loss module", "fl4health.preprocessing.pca_preprocessor module", "fl4health.preprocessing.warmed_up_module module", "fl4health.privacy package", "fl4health.privacy.fl_accountants module", "fl4health.privacy.moments_accountant module", "fl4health.reporting package", "fl4health.reporting.base_reporter module", "fl4health.reporting.json_reporter module", "fl4health.reporting.reports_manager module", "fl4health.reporting.wandb_reporter module", "fl4health.servers package", "fl4health.servers.adaptive_constraint_servers package", "fl4health.servers.adaptive_constraint_servers.ditto_server module", "fl4health.servers.adaptive_constraint_servers.fedprox_server module", "fl4health.servers.adaptive_constraint_servers.mrmtl_server module", "fl4health.servers.base_server module", "fl4health.servers.client_level_dp_fed_avg_server module", "fl4health.servers.evaluate_server module", "fl4health.servers.fedpm_server module", "fl4health.servers.instance_level_dp_server module", "fl4health.servers.model_merge_server module", "fl4health.servers.nnunet_server module", "fl4health.servers.polling module", "fl4health.servers.scaffold_server module", "fl4health.servers.tabular_feature_alignment_server module", "fl4health.strategies package", "fl4health.strategies.aggregate_utils module", "fl4health.strategies.basic_fedavg module", "fl4health.strategies.client_dp_fedavgm module", "fl4health.strategies.fedavg_dynamic_layer module", "fl4health.strategies.fedavg_sparse_coo_tensor module", "fl4health.strategies.fedavg_with_adaptive_constraint module", "fl4health.strategies.feddg_ga module", "fl4health.strategies.feddg_ga_with_adaptive_constraint module", "fl4health.strategies.fedpca module", "fl4health.strategies.fedpm module", "fl4health.strategies.flash module", "fl4health.strategies.model_merge_strategy module", "fl4health.strategies.noisy_aggregate module", "fl4health.strategies.scaffold module", "fl4health.strategies.strategy_with_poll module", "fl4health.utils package", "fl4health.utils.client module", "fl4health.utils.config module", "fl4health.utils.data_generation module", "fl4health.utils.dataset module", "fl4health.utils.dataset_converter module", "fl4health.utils.early_stopper module", "fl4health.utils.functions module", "fl4health.utils.load_data module", "fl4health.utils.logging module", "fl4health.utils.losses module", "fl4health.utils.metrics module", "fl4health.utils.msd_dataset_sources module", "fl4health.utils.nnunet_utils module", "fl4health.utils.parameter_extraction module", "fl4health.utils.partitioners module", "fl4health.utils.peft_parameter_extraction module", "fl4health.utils.privacy_utilities module", "fl4health.utils.random module", "fl4health.utils.sampler module", "fl4health.utils.snapshotter module", "fl4health.utils.typing module"], "titleterms": {"": 4, "A": 7, "adaptive_constraint_serv": [140, 141, 142, 143], "adaptive_drift_constrain": 89, "adaptive_drift_constraint_cli": 21, "aggregate_util": 155, "apfl_bas": 96, "apfl_client": 22, "api": 0, "approach": 4, "autoencod": [126, 127, 128], "autoencoders_bas": 97, "base": 41, "base_metr": 79, "base_report": 135, "base_sampling_manag": 16, "base_serv": 144, "basic": 2, "basic_cli": 23, "basic_fedavg": 156, "capabl": 4, "check": 1, "checkpoint": [5, 9, 10, 11, 12, 13, 14], "client": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 171], "client_dp_fedavgm": 157, "client_level_dp_fed_avg_serv": 145, "client_manag": [15, 16, 17, 18, 19], "client_modul": 11, "clipping_cli": 24, "code": 1, "commun": 4, "compound_metr": 80, "config": 172, "constant": 64, "constrained_fenda_cli": 25, "contrastive_loss": 71, "contribut": 1, "core_protocol": 90, "cosine_similarity_loss": 72, "coverag": 1, "current": 4, "data_gener": 173, "dataset": [56, 57, 58, 59, 60, 61, 62, 174], "dataset_convert": 175, "deep_mmd_client": [26, 27], "deep_mmd_loss": 73, "develop": 1, "dim_reduct": 127, "ditto": 92, "ditto_cli": 28, "ditto_deep_mmd_cli": 27, "ditto_mkmmd_cli": 46, "ditto_serv": 141, "document": 1, "early_stopp": 176, "efficient_metr": 81, "efficient_metrics_bas": 82, "ensemble_bas": 98, "ensemble_cli": 29, "evaluate_cli": 30, "evaluate_serv": 146, "exampl": [2, 3], "feature_align": [63, 64, 65, 66, 67, 68, 69], "feature_extractor_buff": 99, "fed_pca_cli": 31, "fed_prox_cli": 32, "fedavg_dynamic_lay": 158, "fedavg_sparse_coo_tensor": 159, "fedavg_with_adaptive_constraint": 160, "fedbn_client": 33, "feddg_ga": 161, "feddg_ga_with_adaptive_constraint": 162, "fedpca": 163, "fedper_cli": 34, "fedpm": 164, "fedpm_client": 35, "fedpm_exchang": 116, "fedpm_serv": 147, "fedprox_serv": 142, "fedrep_bas": 100, "fedrep_cli": 36, "fedsimclr_bas": 101, "fenda_bas": 102, "fenda_cli": 37, "fenda_ditto_cli": 38, "fenda_loss_config": 74, "fixed_sampling_client_manag": 17, "fixed_without_replacement_manag": 18, "fl": 7, "fl4health": [1, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "fl_account": 132, "flash": 165, "flash_client": 39, "flexibl": [40, 41, 42], "formatt": 1, "full_exchang": 117, "function": 177, "gpfl_base": 103, "gpfl_client": 43, "guid": 6, "guidelin": 1, "implement": 4, "instal": 7, "instance_level_dp_cli": 44, "instance_level_dp_serv": 148, "introduct": 4, "json_report": 136, "layer_exchang": 118, "load_data": [58, 61, 178], "log": 179, "loss": [70, 71, 72, 73, 74, 75, 76, 77, 128, 180], "masked_conv": 105, "masked_lay": [104, 105, 106, 107, 108], "masked_layers_util": 106, "masked_linear": 107, "masked_normalization_lay": 108, "metric": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 181], "metric_aggreg": 83, "metric_manag": 84, "metrics_util": 86, "mixin": [88, 89, 90, 91, 92, 93, 94], "mkmmd_client": [45, 46, 47], "mkmmd_loss": 75, "model_bas": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "model_merge_cli": 48, "model_merge_serv": 149, "model_merge_strategi": 166, "modul": [6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "moments_account": 133, "moon_bas": 109, "moon_client": 49, "mr_mtl": 93, "mr_mtl_client": 50, "mr_mtl_mkmmd_client": 47, "mrmtl_server": 143, "msd_dataset_sourc": 182, "next": 4, "nnunet": 42, "nnunet_cli": 51, "nnunet_serv": 150, "nnunet_util": 183, "noisy_aggreg": 167, "opacus_checkpoint": 12, "packag": [8, 9, 15, 20, 26, 40, 45, 56, 57, 60, 63, 70, 78, 88, 91, 95, 104, 115, 125, 126, 131, 134, 139, 140, 154, 170], "packing_exchang": 119, "parallel_split_model": 110, "parameter_exchang": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "parameter_exchanger_bas": 120, "parameter_extract": 184, "parameter_pack": 121, "parameter_selection_criteria": 122, "partial_layer_exchange_model": 111, "partial_parameter_exchang": 123, "partial_weight_exchange_cli": 52, "partition": 185, "pca": 112, "pca_preprocessor": 129, "peft_parameter_extract": 186, "perfcl_bas": 113, "perfcl_client": 53, "perfcl_loss": 76, "person": [91, 92, 93, 94], "poisson_sampling_manag": 19, "poll": 151, "practic": 1, "preprocess": [59, 125, 126, 127, 128, 129, 130], "preprocess_skin": 62, "privaci": [4, 131, 132, 133], "privacy_util": 187, "py": 7, "quickstart": 7, "random": 188, "refer": 0, "report": [134, 135, 136, 137, 138], "reports_manag": 137, "requir": 1, "run": 7, "rxrx1": [57, 58, 59], "sampler": 189, "scaffold": 168, "scaffold_cli": 54, "scaffold_serv": 152, "sequential_split_model": 114, "server": [7, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "server_modul": 13, "simpl": 7, "skin_canc": [60, 61, 62], "snapshott": 190, "sparse_coo_parameter_exchang": 124, "start": 7, "state_checkpoint": 14, "strategi": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "strategy_with_pol": 169, "string_columns_transform": 65, "submodul": [9, 15, 20, 26, 40, 45, 57, 60, 63, 70, 78, 88, 91, 95, 104, 115, 125, 126, 131, 134, 139, 140, 154, 170], "subpackag": [8, 20, 56, 88, 95, 125, 139], "summari": 4, "tab_features_info_encod": 66, "tab_features_preprocessor": 67, "tabular_data_cli": 55, "tabular_featur": 68, "tabular_feature_alignment_serv": 153, "tabular_typ": 69, "task": 7, "test": 1, "type": 191, "util": [87, 94, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "wandb_report": 138, "warmed_up_modul": 130, "weight_drift_loss": 77, "welcom": 4, "what": 4}})