Search.setIndex({"alltitles": {"A simple FL task": [[6, "a-simple-fl-task"]], "API Reference": [[0, null]], "Basic Example": [[1, null]], "Checkpointing": [[4, null]], "Community": [[3, "community"]], "Examples": [[2, null]], "Installation": [[6, "installation"]], "Introduction": [[3, "introduction"]], "Module Guides": [[5, null]], "Privacy Capabilities": [[3, "privacy-capabilities"]], "Quickstart": [[6, null]], "Running the FL task": [[6, "running-the-fl-task"]], "Starting Clients": [[6, "starting-clients"]], "Starting Server": [[6, "starting-server"]], "Submodules": [[8, "submodules"], [13, "submodules"], [18, "submodules"], [24, "submodules"], [38, "submodules"], [50, "submodules"], [53, "submodules"], [56, "submodules"], [63, "submodules"], [71, "submodules"], [79, "submodules"], [90, "submodules"], [100, "submodules"], [101, "submodules"], [106, "submodules"], [109, "submodules"], [114, "submodules"], [115, "submodules"], [129, "submodules"], [145, "submodules"]], "Subpackages": [[7, "subpackages"], [18, "subpackages"], [49, "subpackages"], [71, "subpackages"], [100, "subpackages"], [114, "subpackages"]], "Summary of Currently Implemented Approaches": [[3, "summary-of-currently-implemented-approaches"]], "Welcome to FL4Health \u2728": [[3, null]], "What\u2019s Next?": [[3, "what-s-next"]], "client.py": [[6, "client-py"]], "fl4health package": [[7, null]], "fl4health.checkpointing package": [[8, null]], "fl4health.checkpointing.checkpointer module": [[9, null]], "fl4health.checkpointing.client_module module": [[10, null]], "fl4health.checkpointing.opacus_checkpointer module": [[11, null]], "fl4health.checkpointing.server_module module": [[12, null]], "fl4health.client_managers package": [[13, null]], "fl4health.client_managers.base_sampling_manager module": [[14, null]], "fl4health.client_managers.fixed_sampling_client_manager module": [[15, null]], "fl4health.client_managers.fixed_without_replacement_manager module": [[16, null]], "fl4health.client_managers.poisson_sampling_manager module": [[17, null]], "fl4health.clients package": [[18, null]], "fl4health.clients.adaptive_drift_constraint_client module": [[19, null]], "fl4health.clients.apfl_client module": [[20, null]], "fl4health.clients.basic_client module": [[21, null]], "fl4health.clients.clipping_client module": [[22, null]], "fl4health.clients.constrained_fenda_client module": [[23, null]], "fl4health.clients.deep_mmd_clients namespace": [[24, null]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module": [[25, null]], "fl4health.clients.ditto_client module": [[26, null]], "fl4health.clients.ensemble_client module": [[27, null]], "fl4health.clients.evaluate_client module": [[28, null]], "fl4health.clients.fed_pca_client module": [[29, null]], "fl4health.clients.fed_prox_client module": [[30, null]], "fl4health.clients.fedper_client module": [[31, null]], "fl4health.clients.fedpm_client module": [[32, null]], "fl4health.clients.fedrep_client module": [[33, null]], "fl4health.clients.fenda_client module": [[34, null]], "fl4health.clients.fenda_ditto_client module": [[35, null]], "fl4health.clients.flash_client module": [[36, null]], "fl4health.clients.instance_level_dp_client module": [[37, null]], "fl4health.clients.mkmmd_clients namespace": [[38, null]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module": [[39, null]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module": [[40, null]], "fl4health.clients.model_merge_client module": [[41, null]], "fl4health.clients.moon_client module": [[42, null]], "fl4health.clients.mr_mtl_client module": [[43, null]], "fl4health.clients.nnunet_client module": [[44, null]], "fl4health.clients.partial_weight_exchange_client module": [[45, null]], "fl4health.clients.perfcl_client module": [[46, null]], "fl4health.clients.scaffold_client module": [[47, null]], "fl4health.clients.tabular_data_client module": [[48, null]], "fl4health.datasets namespace": [[49, null]], "fl4health.datasets.rxrx1 namespace": [[50, null]], "fl4health.datasets.rxrx1.load_data module": [[51, null]], "fl4health.datasets.rxrx1.preprocess module": [[52, null]], "fl4health.datasets.skin_cancer package": [[53, null]], "fl4health.datasets.skin_cancer.load_data module": [[54, null]], "fl4health.datasets.skin_cancer.preprocess_skin module": [[55, null]], "fl4health.feature_alignment namespace": [[56, null]], "fl4health.feature_alignment.constants module": [[57, null]], "fl4health.feature_alignment.string_columns_transformer module": [[58, null]], "fl4health.feature_alignment.tab_features_info_encoder module": [[59, null]], "fl4health.feature_alignment.tab_features_preprocessor module": [[60, null]], "fl4health.feature_alignment.tabular_feature module": [[61, null]], "fl4health.feature_alignment.tabular_type module": [[62, null]], "fl4health.losses package": [[63, null]], "fl4health.losses.contrastive_loss module": [[64, null]], "fl4health.losses.cosine_similarity_loss module": [[65, null]], "fl4health.losses.deep_mmd_loss module": [[66, null]], "fl4health.losses.fenda_loss_config module": [[67, null]], "fl4health.losses.mkmmd_loss module": [[68, null]], "fl4health.losses.perfcl_loss module": [[69, null]], "fl4health.losses.weight_drift_loss module": [[70, null]], "fl4health.model_bases package": [[71, null]], "fl4health.model_bases.apfl_base module": [[72, null]], "fl4health.model_bases.autoencoders_base module": [[73, null]], "fl4health.model_bases.ensemble_base module": [[74, null]], "fl4health.model_bases.feature_extractor_buffer module": [[75, null]], "fl4health.model_bases.fedrep_base module": [[76, null]], "fl4health.model_bases.fedsimclr_base module": [[77, null]], "fl4health.model_bases.fenda_base module": [[78, null]], "fl4health.model_bases.masked_layers namespace": [[79, null]], "fl4health.model_bases.masked_layers.masked_conv module": [[80, null]], "fl4health.model_bases.masked_layers.masked_layers_utils module": [[81, null]], "fl4health.model_bases.masked_layers.masked_linear module": [[82, null]], "fl4health.model_bases.masked_layers.masked_normalization_layers module": [[83, null]], "fl4health.model_bases.moon_base module": [[84, null]], "fl4health.model_bases.parallel_split_models module": [[85, null]], "fl4health.model_bases.partial_layer_exchange_model module": [[86, null]], "fl4health.model_bases.pca module": [[87, null]], "fl4health.model_bases.perfcl_base module": [[88, null]], "fl4health.model_bases.sequential_split_models module": [[89, null]], "fl4health.parameter_exchange package": [[90, null]], "fl4health.parameter_exchange.fedpm_exchanger module": [[91, null]], "fl4health.parameter_exchange.full_exchanger module": [[92, null]], "fl4health.parameter_exchange.layer_exchanger module": [[93, null]], "fl4health.parameter_exchange.packing_exchanger module": [[94, null]], "fl4health.parameter_exchange.parameter_exchanger_base module": [[95, null]], "fl4health.parameter_exchange.parameter_packer module": [[96, null]], "fl4health.parameter_exchange.parameter_selection_criteria module": [[97, null]], "fl4health.parameter_exchange.partial_parameter_exchanger module": [[98, null]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module": [[99, null]], "fl4health.preprocessing package": [[100, null]], "fl4health.preprocessing.autoencoders package": [[101, null]], "fl4health.preprocessing.autoencoders.dim_reduction module": [[102, null]], "fl4health.preprocessing.autoencoders.loss module": [[103, null]], "fl4health.preprocessing.pca_preprocessor module": [[104, null]], "fl4health.preprocessing.warmed_up_module module": [[105, null]], "fl4health.privacy package": [[106, null]], "fl4health.privacy.fl_accountants module": [[107, null]], "fl4health.privacy.moments_accountant module": [[108, null]], "fl4health.reporting package": [[109, null]], "fl4health.reporting.base_reporter module": [[110, null]], "fl4health.reporting.json_reporter module": [[111, null]], "fl4health.reporting.reports_manager module": [[112, null]], "fl4health.reporting.wandb_reporter module": [[113, null]], "fl4health.servers package": [[114, null]], "fl4health.servers.adaptive_constraint_servers package": [[115, null]], "fl4health.servers.adaptive_constraint_servers.ditto_server module": [[116, null]], "fl4health.servers.adaptive_constraint_servers.fedprox_server module": [[117, null]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server module": [[118, null]], "fl4health.servers.base_server module": [[119, null]], "fl4health.servers.client_level_dp_fed_avg_server module": [[120, null]], "fl4health.servers.evaluate_server module": [[121, null]], "fl4health.servers.fedpm_server module": [[122, null]], "fl4health.servers.instance_level_dp_server module": [[123, null]], "fl4health.servers.model_merge_server module": [[124, null]], "fl4health.servers.nnunet_server module": [[125, null]], "fl4health.servers.polling module": [[126, null]], "fl4health.servers.scaffold_server module": [[127, null]], "fl4health.servers.tabular_feature_alignment_server module": [[128, null]], "fl4health.strategies package": [[129, null]], "fl4health.strategies.aggregate_utils module": [[130, null]], "fl4health.strategies.basic_fedavg module": [[131, null]], "fl4health.strategies.client_dp_fedavgm module": [[132, null]], "fl4health.strategies.fedavg_dynamic_layer module": [[133, null]], "fl4health.strategies.fedavg_sparse_coo_tensor module": [[134, null]], "fl4health.strategies.fedavg_with_adaptive_constraint module": [[135, null]], "fl4health.strategies.feddg_ga module": [[136, null]], "fl4health.strategies.feddg_ga_with_adaptive_constraint module": [[137, null]], "fl4health.strategies.fedpca module": [[138, null]], "fl4health.strategies.fedpm module": [[139, null]], "fl4health.strategies.flash module": [[140, null]], "fl4health.strategies.model_merge_strategy module": [[141, null]], "fl4health.strategies.noisy_aggregate module": [[142, null]], "fl4health.strategies.scaffold module": [[143, null]], "fl4health.strategies.strategy_with_poll module": [[144, null]], "fl4health.utils package": [[145, null]], "fl4health.utils.client module": [[146, null]], "fl4health.utils.config module": [[147, null]], "fl4health.utils.data_generation module": [[148, null]], "fl4health.utils.dataset module": [[149, null]], "fl4health.utils.dataset_converter module": [[150, null]], "fl4health.utils.early_stopper module": [[151, null]], "fl4health.utils.functions module": [[152, null]], "fl4health.utils.load_data module": [[153, null]], "fl4health.utils.logging module": [[154, null]], "fl4health.utils.losses module": [[155, null]], "fl4health.utils.metric_aggregation module": [[156, null]], "fl4health.utils.metrics module": [[157, null]], "fl4health.utils.msd_dataset_sources module": [[158, null]], "fl4health.utils.nnunet_utils module": [[159, null]], "fl4health.utils.parameter_extraction module": [[160, null]], "fl4health.utils.partitioners module": [[161, null]], "fl4health.utils.privacy_utilities module": [[162, null]], "fl4health.utils.random module": [[163, null]], "fl4health.utils.sampler module": [[164, null]], "fl4health.utils.snapshotter module": [[165, null]], "fl4health.utils.typing module": [[166, null]], "server.py": [[6, "server-py"]]}, "docnames": ["api", "examples/basic/index", "examples/index", "index", "module_guides/checkpointing/index", "module_guides/index", "quickstart", "reference/api/fl4health", "reference/api/fl4health.checkpointing", "reference/api/fl4health.checkpointing.checkpointer", "reference/api/fl4health.checkpointing.client_module", "reference/api/fl4health.checkpointing.opacus_checkpointer", "reference/api/fl4health.checkpointing.server_module", "reference/api/fl4health.client_managers", "reference/api/fl4health.client_managers.base_sampling_manager", "reference/api/fl4health.client_managers.fixed_sampling_client_manager", "reference/api/fl4health.client_managers.fixed_without_replacement_manager", "reference/api/fl4health.client_managers.poisson_sampling_manager", "reference/api/fl4health.clients", "reference/api/fl4health.clients.adaptive_drift_constraint_client", "reference/api/fl4health.clients.apfl_client", "reference/api/fl4health.clients.basic_client", "reference/api/fl4health.clients.clipping_client", "reference/api/fl4health.clients.constrained_fenda_client", "reference/api/fl4health.clients.deep_mmd_clients", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", "reference/api/fl4health.clients.ditto_client", "reference/api/fl4health.clients.ensemble_client", "reference/api/fl4health.clients.evaluate_client", "reference/api/fl4health.clients.fed_pca_client", "reference/api/fl4health.clients.fed_prox_client", "reference/api/fl4health.clients.fedper_client", "reference/api/fl4health.clients.fedpm_client", "reference/api/fl4health.clients.fedrep_client", "reference/api/fl4health.clients.fenda_client", "reference/api/fl4health.clients.fenda_ditto_client", "reference/api/fl4health.clients.flash_client", "reference/api/fl4health.clients.instance_level_dp_client", "reference/api/fl4health.clients.mkmmd_clients", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", "reference/api/fl4health.clients.model_merge_client", "reference/api/fl4health.clients.moon_client", "reference/api/fl4health.clients.mr_mtl_client", "reference/api/fl4health.clients.nnunet_client", "reference/api/fl4health.clients.partial_weight_exchange_client", "reference/api/fl4health.clients.perfcl_client", "reference/api/fl4health.clients.scaffold_client", "reference/api/fl4health.clients.tabular_data_client", "reference/api/fl4health.datasets", "reference/api/fl4health.datasets.rxrx1", "reference/api/fl4health.datasets.rxrx1.load_data", "reference/api/fl4health.datasets.rxrx1.preprocess", "reference/api/fl4health.datasets.skin_cancer", "reference/api/fl4health.datasets.skin_cancer.load_data", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin", "reference/api/fl4health.feature_alignment", "reference/api/fl4health.feature_alignment.constants", "reference/api/fl4health.feature_alignment.string_columns_transformer", "reference/api/fl4health.feature_alignment.tab_features_info_encoder", "reference/api/fl4health.feature_alignment.tab_features_preprocessor", "reference/api/fl4health.feature_alignment.tabular_feature", "reference/api/fl4health.feature_alignment.tabular_type", "reference/api/fl4health.losses", "reference/api/fl4health.losses.contrastive_loss", "reference/api/fl4health.losses.cosine_similarity_loss", "reference/api/fl4health.losses.deep_mmd_loss", "reference/api/fl4health.losses.fenda_loss_config", "reference/api/fl4health.losses.mkmmd_loss", "reference/api/fl4health.losses.perfcl_loss", "reference/api/fl4health.losses.weight_drift_loss", "reference/api/fl4health.model_bases", "reference/api/fl4health.model_bases.apfl_base", "reference/api/fl4health.model_bases.autoencoders_base", "reference/api/fl4health.model_bases.ensemble_base", "reference/api/fl4health.model_bases.feature_extractor_buffer", "reference/api/fl4health.model_bases.fedrep_base", "reference/api/fl4health.model_bases.fedsimclr_base", "reference/api/fl4health.model_bases.fenda_base", "reference/api/fl4health.model_bases.masked_layers", "reference/api/fl4health.model_bases.masked_layers.masked_conv", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils", "reference/api/fl4health.model_bases.masked_layers.masked_linear", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers", "reference/api/fl4health.model_bases.moon_base", "reference/api/fl4health.model_bases.parallel_split_models", "reference/api/fl4health.model_bases.partial_layer_exchange_model", "reference/api/fl4health.model_bases.pca", "reference/api/fl4health.model_bases.perfcl_base", "reference/api/fl4health.model_bases.sequential_split_models", "reference/api/fl4health.parameter_exchange", "reference/api/fl4health.parameter_exchange.fedpm_exchanger", "reference/api/fl4health.parameter_exchange.full_exchanger", "reference/api/fl4health.parameter_exchange.layer_exchanger", "reference/api/fl4health.parameter_exchange.packing_exchanger", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base", "reference/api/fl4health.parameter_exchange.parameter_packer", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger", "reference/api/fl4health.preprocessing", "reference/api/fl4health.preprocessing.autoencoders", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction", "reference/api/fl4health.preprocessing.autoencoders.loss", "reference/api/fl4health.preprocessing.pca_preprocessor", "reference/api/fl4health.preprocessing.warmed_up_module", "reference/api/fl4health.privacy", "reference/api/fl4health.privacy.fl_accountants", "reference/api/fl4health.privacy.moments_accountant", "reference/api/fl4health.reporting", "reference/api/fl4health.reporting.base_reporter", "reference/api/fl4health.reporting.json_reporter", "reference/api/fl4health.reporting.reports_manager", "reference/api/fl4health.reporting.wandb_reporter", "reference/api/fl4health.servers", "reference/api/fl4health.servers.adaptive_constraint_servers", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server", "reference/api/fl4health.servers.base_server", "reference/api/fl4health.servers.client_level_dp_fed_avg_server", "reference/api/fl4health.servers.evaluate_server", "reference/api/fl4health.servers.fedpm_server", "reference/api/fl4health.servers.instance_level_dp_server", "reference/api/fl4health.servers.model_merge_server", "reference/api/fl4health.servers.nnunet_server", "reference/api/fl4health.servers.polling", "reference/api/fl4health.servers.scaffold_server", "reference/api/fl4health.servers.tabular_feature_alignment_server", "reference/api/fl4health.strategies", "reference/api/fl4health.strategies.aggregate_utils", "reference/api/fl4health.strategies.basic_fedavg", "reference/api/fl4health.strategies.client_dp_fedavgm", "reference/api/fl4health.strategies.fedavg_dynamic_layer", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint", "reference/api/fl4health.strategies.feddg_ga", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint", "reference/api/fl4health.strategies.fedpca", "reference/api/fl4health.strategies.fedpm", "reference/api/fl4health.strategies.flash", "reference/api/fl4health.strategies.model_merge_strategy", "reference/api/fl4health.strategies.noisy_aggregate", "reference/api/fl4health.strategies.scaffold", "reference/api/fl4health.strategies.strategy_with_poll", "reference/api/fl4health.utils", "reference/api/fl4health.utils.client", "reference/api/fl4health.utils.config", "reference/api/fl4health.utils.data_generation", "reference/api/fl4health.utils.dataset", "reference/api/fl4health.utils.dataset_converter", "reference/api/fl4health.utils.early_stopper", "reference/api/fl4health.utils.functions", "reference/api/fl4health.utils.load_data", "reference/api/fl4health.utils.logging", "reference/api/fl4health.utils.losses", "reference/api/fl4health.utils.metric_aggregation", "reference/api/fl4health.utils.metrics", "reference/api/fl4health.utils.msd_dataset_sources", "reference/api/fl4health.utils.nnunet_utils", "reference/api/fl4health.utils.parameter_extraction", "reference/api/fl4health.utils.partitioners", "reference/api/fl4health.utils.privacy_utilities", "reference/api/fl4health.utils.random", "reference/api/fl4health.utils.sampler", "reference/api/fl4health.utils.snapshotter", "reference/api/fl4health.utils.typing"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "examples/basic/index.md", "examples/index.md", "index.md", "module_guides/checkpointing/index.md", "module_guides/index.md", "quickstart.md", "reference/api/fl4health.rst", "reference/api/fl4health.checkpointing.rst", "reference/api/fl4health.checkpointing.checkpointer.rst", "reference/api/fl4health.checkpointing.client_module.rst", "reference/api/fl4health.checkpointing.opacus_checkpointer.rst", "reference/api/fl4health.checkpointing.server_module.rst", "reference/api/fl4health.client_managers.rst", "reference/api/fl4health.client_managers.base_sampling_manager.rst", "reference/api/fl4health.client_managers.fixed_sampling_client_manager.rst", "reference/api/fl4health.client_managers.fixed_without_replacement_manager.rst", "reference/api/fl4health.client_managers.poisson_sampling_manager.rst", "reference/api/fl4health.clients.rst", "reference/api/fl4health.clients.adaptive_drift_constraint_client.rst", "reference/api/fl4health.clients.apfl_client.rst", "reference/api/fl4health.clients.basic_client.rst", "reference/api/fl4health.clients.clipping_client.rst", "reference/api/fl4health.clients.constrained_fenda_client.rst", "reference/api/fl4health.clients.deep_mmd_clients.rst", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.rst", "reference/api/fl4health.clients.ditto_client.rst", "reference/api/fl4health.clients.ensemble_client.rst", "reference/api/fl4health.clients.evaluate_client.rst", "reference/api/fl4health.clients.fed_pca_client.rst", "reference/api/fl4health.clients.fed_prox_client.rst", "reference/api/fl4health.clients.fedper_client.rst", "reference/api/fl4health.clients.fedpm_client.rst", "reference/api/fl4health.clients.fedrep_client.rst", "reference/api/fl4health.clients.fenda_client.rst", "reference/api/fl4health.clients.fenda_ditto_client.rst", "reference/api/fl4health.clients.flash_client.rst", "reference/api/fl4health.clients.instance_level_dp_client.rst", "reference/api/fl4health.clients.mkmmd_clients.rst", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client.rst", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.rst", "reference/api/fl4health.clients.model_merge_client.rst", "reference/api/fl4health.clients.moon_client.rst", "reference/api/fl4health.clients.mr_mtl_client.rst", "reference/api/fl4health.clients.nnunet_client.rst", "reference/api/fl4health.clients.partial_weight_exchange_client.rst", "reference/api/fl4health.clients.perfcl_client.rst", "reference/api/fl4health.clients.scaffold_client.rst", "reference/api/fl4health.clients.tabular_data_client.rst", "reference/api/fl4health.datasets.rst", "reference/api/fl4health.datasets.rxrx1.rst", "reference/api/fl4health.datasets.rxrx1.load_data.rst", "reference/api/fl4health.datasets.rxrx1.preprocess.rst", "reference/api/fl4health.datasets.skin_cancer.rst", "reference/api/fl4health.datasets.skin_cancer.load_data.rst", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin.rst", "reference/api/fl4health.feature_alignment.rst", "reference/api/fl4health.feature_alignment.constants.rst", "reference/api/fl4health.feature_alignment.string_columns_transformer.rst", "reference/api/fl4health.feature_alignment.tab_features_info_encoder.rst", "reference/api/fl4health.feature_alignment.tab_features_preprocessor.rst", "reference/api/fl4health.feature_alignment.tabular_feature.rst", "reference/api/fl4health.feature_alignment.tabular_type.rst", "reference/api/fl4health.losses.rst", "reference/api/fl4health.losses.contrastive_loss.rst", "reference/api/fl4health.losses.cosine_similarity_loss.rst", "reference/api/fl4health.losses.deep_mmd_loss.rst", "reference/api/fl4health.losses.fenda_loss_config.rst", "reference/api/fl4health.losses.mkmmd_loss.rst", "reference/api/fl4health.losses.perfcl_loss.rst", "reference/api/fl4health.losses.weight_drift_loss.rst", "reference/api/fl4health.model_bases.rst", "reference/api/fl4health.model_bases.apfl_base.rst", "reference/api/fl4health.model_bases.autoencoders_base.rst", "reference/api/fl4health.model_bases.ensemble_base.rst", "reference/api/fl4health.model_bases.feature_extractor_buffer.rst", "reference/api/fl4health.model_bases.fedrep_base.rst", "reference/api/fl4health.model_bases.fedsimclr_base.rst", "reference/api/fl4health.model_bases.fenda_base.rst", "reference/api/fl4health.model_bases.masked_layers.rst", "reference/api/fl4health.model_bases.masked_layers.masked_conv.rst", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils.rst", "reference/api/fl4health.model_bases.masked_layers.masked_linear.rst", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers.rst", "reference/api/fl4health.model_bases.moon_base.rst", "reference/api/fl4health.model_bases.parallel_split_models.rst", "reference/api/fl4health.model_bases.partial_layer_exchange_model.rst", "reference/api/fl4health.model_bases.pca.rst", "reference/api/fl4health.model_bases.perfcl_base.rst", "reference/api/fl4health.model_bases.sequential_split_models.rst", "reference/api/fl4health.parameter_exchange.rst", "reference/api/fl4health.parameter_exchange.fedpm_exchanger.rst", "reference/api/fl4health.parameter_exchange.full_exchanger.rst", "reference/api/fl4health.parameter_exchange.layer_exchanger.rst", "reference/api/fl4health.parameter_exchange.packing_exchanger.rst", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base.rst", "reference/api/fl4health.parameter_exchange.parameter_packer.rst", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria.rst", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger.rst", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger.rst", "reference/api/fl4health.preprocessing.rst", "reference/api/fl4health.preprocessing.autoencoders.rst", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction.rst", "reference/api/fl4health.preprocessing.autoencoders.loss.rst", "reference/api/fl4health.preprocessing.pca_preprocessor.rst", "reference/api/fl4health.preprocessing.warmed_up_module.rst", "reference/api/fl4health.privacy.rst", "reference/api/fl4health.privacy.fl_accountants.rst", "reference/api/fl4health.privacy.moments_accountant.rst", "reference/api/fl4health.reporting.rst", "reference/api/fl4health.reporting.base_reporter.rst", "reference/api/fl4health.reporting.json_reporter.rst", "reference/api/fl4health.reporting.reports_manager.rst", "reference/api/fl4health.reporting.wandb_reporter.rst", "reference/api/fl4health.servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server.rst", "reference/api/fl4health.servers.base_server.rst", "reference/api/fl4health.servers.client_level_dp_fed_avg_server.rst", "reference/api/fl4health.servers.evaluate_server.rst", "reference/api/fl4health.servers.fedpm_server.rst", "reference/api/fl4health.servers.instance_level_dp_server.rst", "reference/api/fl4health.servers.model_merge_server.rst", "reference/api/fl4health.servers.nnunet_server.rst", "reference/api/fl4health.servers.polling.rst", "reference/api/fl4health.servers.scaffold_server.rst", "reference/api/fl4health.servers.tabular_feature_alignment_server.rst", "reference/api/fl4health.strategies.rst", "reference/api/fl4health.strategies.aggregate_utils.rst", "reference/api/fl4health.strategies.basic_fedavg.rst", "reference/api/fl4health.strategies.client_dp_fedavgm.rst", "reference/api/fl4health.strategies.fedavg_dynamic_layer.rst", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor.rst", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.feddg_ga.rst", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.fedpca.rst", "reference/api/fl4health.strategies.fedpm.rst", "reference/api/fl4health.strategies.flash.rst", "reference/api/fl4health.strategies.model_merge_strategy.rst", "reference/api/fl4health.strategies.noisy_aggregate.rst", "reference/api/fl4health.strategies.scaffold.rst", "reference/api/fl4health.strategies.strategy_with_poll.rst", "reference/api/fl4health.utils.rst", "reference/api/fl4health.utils.client.rst", "reference/api/fl4health.utils.config.rst", "reference/api/fl4health.utils.data_generation.rst", "reference/api/fl4health.utils.dataset.rst", "reference/api/fl4health.utils.dataset_converter.rst", "reference/api/fl4health.utils.early_stopper.rst", "reference/api/fl4health.utils.functions.rst", "reference/api/fl4health.utils.load_data.rst", "reference/api/fl4health.utils.logging.rst", "reference/api/fl4health.utils.losses.rst", "reference/api/fl4health.utils.metric_aggregation.rst", "reference/api/fl4health.utils.metrics.rst", "reference/api/fl4health.utils.msd_dataset_sources.rst", "reference/api/fl4health.utils.nnunet_utils.rst", "reference/api/fl4health.utils.parameter_extraction.rst", "reference/api/fl4health.utils.partitioners.rst", "reference/api/fl4health.utils.privacy_utilities.rst", "reference/api/fl4health.utils.random.rst", "reference/api/fl4health.utils.sampler.rst", "reference/api/fl4health.utils.snapshotter.rst", "reference/api/fl4health.utils.typing.rst"], "indexentries": {"__init__() (abstractae method)": [[73, "fl4health.model_bases.autoencoders_base.AbstractAe.__init__", false]], "__init__() (abstractsnapshotter method)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter.__init__", false]], "__init__() (accuracy method)": [[157, "fl4health.utils.metrics.Accuracy.__init__", false]], "__init__() (adaptiveconstraintservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule.__init__", false]], "__init__() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.__init__", false]], "__init__() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.__init__", false]], "__init__() (autoencoderdatasetconverter method)": [[150, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.__init__", false]], "__init__() (autoencoderprocessing method)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.__init__", false]], "__init__() (balancedaccuracy method)": [[157, "fl4health.utils.metrics.BalancedAccuracy.__init__", false]], "__init__() (baseservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.__init__", false]], "__init__() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.__init__", false]], "__init__() (basicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg.__init__", false]], "__init__() (bestlossopacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.__init__", false]], "__init__() (bestlosstorchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.__init__", false]], "__init__() (binarysoftdicecoefficient method)": [[157, "fl4health.utils.metrics.BinarySoftDiceCoefficient.__init__", false]], "__init__() (clientcheckpointandstatemodule method)": [[10, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.__init__", false]], "__init__() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.__init__", false]], "__init__() (clientleveldpfedavgserver method)": [[120, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.__init__", false]], "__init__() (clippingbitservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule.__init__", false]], "__init__() (conditionalvae method)": [[73, "fl4health.model_bases.autoencoders_base.ConditionalVae.__init__", false]], "__init__() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.__init__", false]], "__init__() (cvaefixedconditionprocessor method)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor.__init__", false]], "__init__() (cvaevariableconditionprocessor method)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor.__init__", false]], "__init__() (datasetconverter method)": [[150, "fl4health.utils.dataset_converter.DatasetConverter.__init__", false]], "__init__() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.__init__", false]], "__init__() (dictionarydataset method)": [[149, "fl4health.utils.dataset.DictionaryDataset.__init__", false]], "__init__() (dirichletlabelbasedallocation method)": [[161, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.__init__", false]], "__init__() (dirichletlabelbasedsampler method)": [[164, "fl4health.utils.sampler.DirichletLabelBasedSampler.__init__", false]], "__init__() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.__init__", false]], "__init__() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.__init__", false]], "__init__() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.__init__", false]], "__init__() (dittoserver method)": [[116, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer.__init__", false]], "__init__() (dpscaffoldserver method)": [[127, "fl4health.servers.scaffold_server.DPScaffoldServer.__init__", false]], "__init__() (dpscaffoldservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (dynamiclayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.__init__", false]], "__init__() (earlystopper method)": [[151, "fl4health.utils.early_stopper.EarlyStopper.__init__", false]], "__init__() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.__init__", false]], "__init__() (ensemblemodel method)": [[74, "fl4health.model_bases.ensemble_base.EnsembleModel.__init__", false]], "__init__() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.__init__", false]], "__init__() (evaluateserver method)": [[121, "fl4health.servers.evaluate_server.EvaluateServer.__init__", false]], "__init__() (evaluationlosses method)": [[155, "fl4health.utils.losses.EvaluationLosses.__init__", false]], "__init__() (f1 method)": [[157, "fl4health.utils.metrics.F1.__init__", false]], "__init__() (fairnessmetric method)": [[136, "fl4health.strategies.feddg_ga.FairnessMetric.__init__", false]], "__init__() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.__init__", false]], "__init__() (fedavgdynamiclayer method)": [[133, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.__init__", false]], "__init__() (fedavgsparsecootensor method)": [[134, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.__init__", false]], "__init__() (fedavgwithadaptiveconstraint method)": [[135, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.__init__", false]], "__init__() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.__init__", false]], "__init__() (feddggaadaptiveconstraint method)": [[137, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.__init__", false]], "__init__() (fedpca method)": [[138, "fl4health.strategies.fedpca.FedPCA.__init__", false]], "__init__() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.__init__", false]], "__init__() (fedpm method)": [[139, "fl4health.strategies.fedpm.FedPm.__init__", false]], "__init__() (fedpmclient method)": [[32, "fl4health.clients.fedpm_client.FedPmClient.__init__", false]], "__init__() (fedpmserver method)": [[122, "fl4health.servers.fedpm_server.FedPmServer.__init__", false]], "__init__() (fedproxserver method)": [[117, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer.__init__", false]], "__init__() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.__init__", false]], "__init__() (fedsimclrmodel method)": [[77, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.__init__", false]], "__init__() (fendaclient method)": [[34, "fl4health.clients.fenda_client.FendaClient.__init__", false]], "__init__() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.__init__", false]], "__init__() (fendamodel method)": [[78, "fl4health.model_bases.fenda_base.FendaModel.__init__", false]], "__init__() (fendamodelwithfeaturestate method)": [[78, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.__init__", false]], "__init__() (filereporter method)": [[111, "fl4health.reporting.json_reporter.FileReporter.__init__", false]], "__init__() (flash method)": [[140, "fl4health.strategies.flash.Flash.__init__", false]], "__init__() (flashclient method)": [[36, "fl4health.clients.flash_client.FlashClient.__init__", false]], "__init__() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.__init__", false]], "__init__() (flclientlevelaccountantpoissonsampling method)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.__init__", false]], "__init__() (flinstancelevelaccountant method)": [[107, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.__init__", false]], "__init__() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.__init__", false]], "__init__() (functiontorchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.__init__", false]], "__init__() (instanceleveldpclient method)": [[37, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.__init__", false]], "__init__() (instanceleveldpserver method)": [[123, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.__init__", false]], "__init__() (labelbasedsampler method)": [[164, "fl4health.utils.sampler.LabelBasedSampler.__init__", false]], "__init__() (latestopacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.__init__", false]], "__init__() (latesttorchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.__init__", false]], "__init__() (layernamesservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule.__init__", false]], "__init__() (layerselectionfunctionconstructor method)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.__init__", false]], "__init__() (losses method)": [[155, "fl4health.utils.losses.Losses.__init__", false]], "__init__() (lossmeter method)": [[155, "fl4health.utils.losses.LossMeter.__init__", false]], "__init__() (maskedconv1d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.__init__", false]], "__init__() (maskedconv2d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.__init__", false]], "__init__() (maskedconv3d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.__init__", false]], "__init__() (maskedconvtranspose1d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.__init__", false]], "__init__() (maskedconvtranspose2d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.__init__", false]], "__init__() (maskedconvtranspose3d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.__init__", false]], "__init__() (maskedlayernorm method)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.__init__", false]], "__init__() (maskedlinear method)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.__init__", false]], "__init__() (metric method)": [[157, "fl4health.utils.metrics.Metric.__init__", false]], "__init__() (metricmanager method)": [[157, "fl4health.utils.metrics.MetricManager.__init__", false]], "__init__() (minoritylabelbasedsampler method)": [[164, "fl4health.utils.sampler.MinorityLabelBasedSampler.__init__", false]], "__init__() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.__init__", false]], "__init__() (modellatentf method)": [[66, "fl4health.losses.deep_mmd_loss.ModelLatentF.__init__", false]], "__init__() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.__init__", false]], "__init__() (modelmergeserver method)": [[124, "fl4health.servers.model_merge_server.ModelMergeServer.__init__", false]], "__init__() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.__init__", false]], "__init__() (momentsaccountant method)": [[108, "fl4health.privacy.moments_accountant.MomentsAccountant.__init__", false]], "__init__() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.__init__", false]], "__init__() (mooncontrastiveloss method)": [[64, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.__init__", false]], "__init__() (moonmodel method)": [[84, "fl4health.model_bases.moon_base.MoonModel.__init__", false]], "__init__() (mrmtlclient method)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient.__init__", false]], "__init__() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.__init__", false]], "__init__() (mrmtlserver method)": [[118, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer.__init__", false]], "__init__() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.__init__", false]], "__init__() (nnunetdataloaderwrapper method)": [[159, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper.__init__", false]], "__init__() (nnunetserver method)": [[125, "fl4health.servers.nnunet_server.NnunetServer.__init__", false]], "__init__() (nnunetservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule.__init__", false]], "__init__() (ntxentloss method)": [[64, "fl4health.losses.contrastive_loss.NtXentLoss.__init__", false]], "__init__() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.__init__", false]], "__init__() (opacusbasicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg.__init__", false]], "__init__() (opacusscaffold method)": [[143, "fl4health.strategies.scaffold.OpacusScaffold.__init__", false]], "__init__() (opacusservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule.__init__", false]], "__init__() (packingservercheckpointandandstatemodule method)": [[12, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule.__init__", false]], "__init__() (parallelsplitheadmodule method)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.__init__", false]], "__init__() (parallelsplitmodel method)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.__init__", false]], "__init__() (partialweightexchangeclient method)": [[45, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.__init__", false]], "__init__() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.__init__", false]], "__init__() (pcapreprocessor method)": [[104, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.__init__", false]], "__init__() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.__init__", false]], "__init__() (perfclmodel method)": [[88, "fl4health.model_bases.perfcl_base.PerFclModel.__init__", false]], "__init__() (perroundstatecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.__init__", false]], "__init__() (polylrschedulerwrapper method)": [[159, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.__init__", false]], "__init__() (roc_auc method)": [[157, "fl4health.utils.metrics.ROC_AUC.__init__", false]], "__init__() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.__init__", false]], "__init__() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.__init__", false]], "__init__() (scaffoldserver method)": [[127, "fl4health.servers.scaffold_server.ScaffoldServer.__init__", false]], "__init__() (scaffoldservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (sequentiallysplitmodel method)": [[89, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.__init__", false]], "__init__() (simplemetric method)": [[157, "fl4health.utils.metrics.SimpleMetric.__init__", false]], "__init__() (sparsecooparameterexchanger method)": [[99, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.__init__", false]], "__init__() (sparsecooservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule.__init__", false]], "__init__() (streamtologger method)": [[159, "fl4health.utils.nnunet_utils.StreamToLogger.__init__", false]], "__init__() (syntheticdataset method)": [[149, "fl4health.utils.dataset.SyntheticDataset.__init__", false]], "__init__() (syntheticfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticFedProxDataset.__init__", false]], "__init__() (syntheticiidfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.__init__", false]], "__init__() (syntheticnoniidfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.__init__", false]], "__init__() (tabulardataclient method)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient.__init__", false]], "__init__() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.__init__", false]], "__init__() (tabularfeaturealignmentserver method)": [[128, "fl4health.servers.tabular_feature_alignment_server.TabularFeatureAlignmentServer.__init__", false]], "__init__() (torchmetric method)": [[157, "fl4health.utils.metrics.TorchMetric.__init__", false]], "__init__() (torchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.__init__", false]], "__init__() (traininglosses method)": [[155, "fl4health.utils.losses.TrainingLosses.__init__", false]], "__init__() (transformsmetric method)": [[157, "fl4health.utils.metrics.TransformsMetric.__init__", false]], "__init__() (vaeloss method)": [[103, "fl4health.preprocessing.autoencoders.loss.VaeLoss.__init__", false]], "__init__() (vaeprocessor method)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor.__init__", false]], "__init__() (variationalae method)": [[73, "fl4health.model_bases.autoencoders_base.VariationalAe.__init__", false]], "__init__() (wandbreporter method)": [[109, "fl4health.reporting.WandBReporter.__init__", false], [113, "fl4health.reporting.wandb_reporter.WandBReporter.__init__", false]], "__init__() (warmedupmodule method)": [[105, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.__init__", false]], "abstractae (class in fl4health.model_bases.autoencoders_base)": [[73, "fl4health.model_bases.autoencoders_base.AbstractAe", false]], "abstractsnapshotter (class in fl4health.utils.snapshotter)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter", false]], "accumulate_features (featureextractorbuffer attribute)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.accumulate_features", false]], "accumulation (lossmetertype attribute)": [[155, "fl4health.utils.losses.LossMeterType.ACCUMULATION", false]], "accuracy (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.Accuracy", false]], "accuracy (fairnessmetrictype attribute)": [[136, "fl4health.strategies.feddg_ga.FairnessMetricType.ACCURACY", false]], "adaptiveconstraintservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule", false]], "adaptivedriftconstraintclient (class in fl4health.clients.adaptive_drift_constraint_client)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient", false]], "add_default_snapshot_attr() (earlystopper method)": [[151, "fl4health.utils.early_stopper.EarlyStopper.add_default_snapshot_attr", false]], "add_items_to_config_fn() (in module fl4health.servers.nnunet_server)": [[125, "fl4health.servers.nnunet_server.add_items_to_config_fn", false]], "add_noise_to_array() (in module fl4health.strategies.noisy_aggregate)": [[142, "fl4health.strategies.noisy_aggregate.add_noise_to_array", false]], "add_noise_to_ndarrays() (in module fl4health.strategies.noisy_aggregate)": [[142, "fl4health.strategies.noisy_aggregate.add_noise_to_ndarrays", false]], "aeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.AeProcessor", false]], "aggregate() (evaluationlosses static method)": [[155, "fl4health.utils.losses.EvaluationLosses.aggregate", false]], "aggregate() (fedavgdynamiclayer method)": [[133, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate", false]], "aggregate() (fedavgsparsecootensor method)": [[134, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate", false]], "aggregate() (fedpm method)": [[139, "fl4health.strategies.fedpm.FedPm.aggregate", false]], "aggregate() (losses static method)": [[155, "fl4health.utils.losses.Losses.aggregate", false]], "aggregate() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.aggregate", false]], "aggregate() (traininglosses static method)": [[155, "fl4health.utils.losses.TrainingLosses.aggregate", false]], "aggregate_bayesian() (fedpm method)": [[139, "fl4health.strategies.fedpm.FedPm.aggregate_bayesian", false]], "aggregate_evaluate() (basicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_evaluate", false]], "aggregate_evaluate() (evaluateserver method)": [[121, "fl4health.servers.evaluate_server.EvaluateServer.aggregate_evaluate", false]], "aggregate_evaluate() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_evaluate", false]], "aggregate_evaluate() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_evaluate", false]], "aggregate_fit() (basicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_fit", false]], "aggregate_fit() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.aggregate_fit", false]], "aggregate_fit() (fedavgdynamiclayer method)": [[133, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate_fit", false]], "aggregate_fit() (fedavgsparsecootensor method)": [[134, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate_fit", false]], "aggregate_fit() (fedavgwithadaptiveconstraint method)": [[135, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_fit", false]], "aggregate_fit() (feddggaadaptiveconstraint method)": [[137, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (fedpca method)": [[138, "fl4health.strategies.fedpca.FedPCA.aggregate_fit", false]], "aggregate_fit() (flash method)": [[140, "fl4health.strategies.flash.Flash.aggregate_fit", false]], "aggregate_fit() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_fit", false]], "aggregate_fit() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.aggregate_fit", false]], "aggregate_losses() (in module fl4health.strategies.aggregate_utils)": [[130, "fl4health.strategies.aggregate_utils.aggregate_losses", false]], "aggregate_losses_dict() (lossmeter static method)": [[155, "fl4health.utils.losses.LossMeter.aggregate_losses_dict", false]], "aggregate_results() (in module fl4health.strategies.aggregate_utils)": [[130, "fl4health.strategies.aggregate_utils.aggregate_results", false]], "apflclient (class in fl4health.clients.apfl_client)": [[20, "fl4health.clients.apfl_client.ApflClient", false]], "apflmodule (class in fl4health.model_bases.apfl_base)": [[72, "fl4health.model_bases.apfl_base.ApflModule", false]], "apply_layer_filter() (fixedlayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.apply_layer_filter", false]], "apply_layer_filter() (layerexchangerwithexclusions method)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.apply_layer_filter", false]], "as_dict() (evaluationlosses method)": [[155, "fl4health.utils.losses.EvaluationLosses.as_dict", false]], "as_dict() (losses method)": [[155, "fl4health.utils.losses.Losses.as_dict", false]], "as_dict() (traininglosses method)": [[155, "fl4health.utils.losses.TrainingLosses.as_dict", false]], "autoencoderdatasetconverter (class in fl4health.utils.dataset_converter)": [[150, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter", false]], "autoencoderprocessing (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing", false]], "average (ensembleaggregationmode attribute)": [[74, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.AVERAGE", false]], "average (lossmetertype attribute)": [[155, "fl4health.utils.losses.LossMeterType.AVERAGE", false]], "backward() (bernoullisample static method)": [[152, "fl4health.utils.functions.BernoulliSample.backward", false]], "balancedaccuracy (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.BalancedAccuracy", false]], "basedataset (class in fl4health.utils.dataset)": [[149, "fl4health.utils.dataset.BaseDataset", false]], "basefractionsamplingmanager (class in fl4health.client_managers.base_sampling_manager)": [[14, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager", false]], "basereporter (class in fl4health.reporting.base_reporter)": [[110, "fl4health.reporting.base_reporter.BaseReporter", false]], "baseservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule", false]], "basicae (class in fl4health.model_bases.autoencoders_base)": [[73, "fl4health.model_bases.autoencoders_base.BasicAe", false]], "basicclient (class in fl4health.clients.basic_client)": [[21, "fl4health.clients.basic_client.BasicClient", false]], "basicfedavg (class in fl4health.strategies.basic_fedavg)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg", false]], "bernoullisample (class in fl4health.utils.functions)": [[152, "fl4health.utils.functions.BernoulliSample", false]], "bestlossopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[11, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer", false]], "bestlosstorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[9, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer", false]], "beta_with_extreme_kernel_base_values() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.beta_with_extreme_kernel_base_values", false]], "bias (maskedconv1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.bias", false]], "bias (maskedconv2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.bias", false]], "bias (maskedconv3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.bias", false]], "bias (maskedconvtranspose1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.bias", false]], "bias (maskedconvtranspose2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.bias", false]], "bias (maskedconvtranspose3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.bias", false]], "bias (maskedlayernorm attribute)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.bias", false]], "bias (maskedlinear attribute)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.bias", false]], "bias_score (maskedconv1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.bias_score", false]], "bias_score (maskedconv2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.bias_score", false]], "bias_score (maskedconv3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.bias_score", false]], "bias_score (maskedconvtranspose1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.bias_score", false]], "bias_score (maskedconvtranspose2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.bias_score", false]], "bias_score (maskedconvtranspose3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.bias_score", false]], "bias_score (maskedlayernorm attribute)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.bias_score", false]], "bias_score (maskedlinear attribute)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.bias_score", false]], "binary (tabulartype attribute)": [[62, "fl4health.feature_alignment.tabular_type.TabularType.BINARY", false]], "binarysoftdicecoefficient (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.BinarySoftDiceCoefficient", false]], "calculate_parameters_norm() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.calculate_parameters_norm", false]], "calculate_update_with_momentum() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.calculate_update_with_momentum", false]], "center_data() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.center_data", false]], "check_config() (in module fl4health.utils.config)": [[147, "fl4health.utils.config.check_config", false]], "check_if_batch_is_empty_and_verify_input() (in module fl4health.utils.client)": [[146, "fl4health.utils.client.check_if_batch_is_empty_and_verify_input", false]], "check_shape_match() (in module fl4health.utils.parameter_extraction)": [[160, "fl4health.utils.parameter_extraction.check_shape_match", false]], "check_target_prediction_keys_equal() (metricmanager method)": [[157, "fl4health.utils.metrics.MetricManager.check_target_prediction_keys_equal", false]], "checkpoint_exists() (perroundstatecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.checkpoint_exists", false]], "checkpointmode (class in fl4health.checkpointing.client_module)": [[10, "fl4health.checkpointing.client_module.CheckpointMode", false]], "clear() (lossmeter method)": [[155, "fl4health.utils.losses.LossMeter.clear", false]], "clear() (metric method)": [[157, "fl4health.utils.metrics.Metric.clear", false]], "clear() (metricmanager method)": [[157, "fl4health.utils.metrics.MetricManager.clear", false]], "clear() (simplemetric method)": [[157, "fl4health.utils.metrics.SimpleMetric.clear", false]], "clear() (torchmetric method)": [[157, "fl4health.utils.metrics.TorchMetric.clear", false]], "clear() (transformsmetric method)": [[157, "fl4health.utils.metrics.TransformsMetric.clear", false]], "clear_buffers() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.clear_buffers", false]], "clientcheckpointandstatemodule (class in fl4health.checkpointing.client_module)": [[10, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule", false]], "clientlevelaccountant (class in fl4health.privacy.fl_accountants)": [[107, "fl4health.privacy.fl_accountants.ClientLevelAccountant", false]], "clientleveldpfedavgm (class in fl4health.strategies.client_dp_fedavgm)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM", false]], "clientleveldpfedavgserver (class in fl4health.servers.client_level_dp_fed_avg_server)": [[120, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer", false]], "clip_parameters() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.clip_parameters", false]], "clippingbitservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule", false]], "clone_and_freeze_model() (in module fl4health.utils.client)": [[146, "fl4health.utils.client.clone_and_freeze_model", false]], "collapse_one_hot_tensor() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.collapse_one_hot_tensor", false]], "compute() (lossmeter method)": [[155, "fl4health.utils.losses.LossMeter.compute", false]], "compute() (metric method)": [[157, "fl4health.utils.metrics.Metric.compute", false]], "compute() (metricmanager method)": [[157, "fl4health.utils.metrics.MetricManager.compute", false]], "compute() (simplemetric method)": [[157, "fl4health.utils.metrics.SimpleMetric.compute", false]], "compute() (torchmetric method)": [[157, "fl4health.utils.metrics.TorchMetric.compute", false]], "compute() (transformsmetric method)": [[157, "fl4health.utils.metrics.TransformsMetric.compute", false]], "compute_all_h_u_all_samples() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_all_samples", false]], "compute_all_h_u_from_inner_products() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products", false]], "compute_all_h_u_from_inner_products_linear() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products_linear", false]], "compute_all_h_u_linear() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_linear", false]], "compute_contrastive_loss() (constrainedfendalosscontainer method)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_contrastive_loss", false]], "compute_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_cosine_similarity_loss", false]], "compute_cumulative_explained_variance() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.compute_cumulative_explained_variance", false]], "compute_euclidean_inner_products() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products", false]], "compute_euclidean_inner_products_linear() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products_linear", false]], "compute_evaluation_loss() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.compute_evaluation_loss", false]], "compute_explained_variance_ratios() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.compute_explained_variance_ratios", false]], "compute_h_u_from_inner_products() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products", false]], "compute_h_u_from_inner_products_linear() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products_linear", false]], "compute_hat_d_per_kernel() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_d_per_kernel", false]], "compute_hat_q_k() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_Q_k", false]], "compute_hat_q_k_linear() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_Q_k_linear", false]], "compute_kernel() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.compute_kernel", false]], "compute_loss_and_additional_losses() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.compute_loss_and_additional_losses", false]], "compute_mkmmd() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_mkmmd", false]], "compute_negative_similarities() (mooncontrastiveloss method)": [[64, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.compute_negative_similarities", false]], "compute_parameter_delta() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.compute_parameter_delta", false]], "compute_parameters_delta() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.compute_parameters_delta", false]], "compute_penalty_loss() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_penalty_loss", false]], "compute_perfcl_loss() (constrainedfendalosscontainer method)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_perfcl_loss", false]], "compute_projection_variance() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.compute_projection_variance", false]], "compute_reconstruction_error() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.compute_reconstruction_error", false]], "compute_training_loss() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_training_loss", false]], "compute_training_loss() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.compute_training_loss", false]], "compute_training_loss() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.compute_training_loss", false]], "compute_training_loss() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_training_loss", false]], "compute_training_loss() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_training_loss", false]], "compute_training_loss() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.compute_training_loss", false]], "compute_training_loss() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.compute_training_loss", false]], "compute_training_loss() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.compute_training_loss", false]], "compute_training_loss() (mrmtlclient method)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient.compute_training_loss", false]], "compute_training_loss() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_training_loss", false]], "compute_updated_control_variates() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.compute_updated_control_variates", false]], "compute_updated_control_variates() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.compute_updated_control_variates", false]], "compute_updated_parameters() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.compute_updated_parameters", false]], "compute_updated_weights() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.compute_updated_weights", false]], "compute_vertices() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_vertices", false]], "compute_weight_update_and_clip() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.compute_weight_update_and_clip", false]], "concatenate (parallelfeaturejoinmode attribute)": [[85, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.CONCATENATE", false]], "conditionalvae (class in fl4health.model_bases.autoencoders_base)": [[73, "fl4health.model_bases.autoencoders_base.ConditionalVae", false]], "configure_evaluate() (basicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_evaluate", false]], "configure_evaluate() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_evaluate", false]], "configure_evaluate() (evaluateserver method)": [[121, "fl4health.servers.evaluate_server.EvaluateServer.configure_evaluate", false]], "configure_evaluate() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.configure_evaluate", false]], "configure_evaluate() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_evaluate", false]], "configure_fit() (basicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_fit", false]], "configure_fit() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_fit", false]], "configure_fit() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.configure_fit", false]], "configure_fit() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_fit", false]], "configure_fit_all() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.configure_fit_all", false]], "configure_poll() (basicfedavg method)": [[131, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_poll", false]], "configure_poll() (strategywithpolling method)": [[144, "fl4health.strategies.strategy_with_poll.StrategyWithPolling.configure_poll", false]], "constrainedfendaclient (class in fl4health.clients.constrained_fenda_client)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient", false]], "constrainedfendalosscontainer (class in fl4health.losses.fenda_loss_config)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer", false]], "construct_covariance_matrix() (syntheticfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticFedProxDataset.construct_covariance_matrix", false]], "construct_quadruples() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.construct_quadruples", false]], "construct_rxrx1_tensor_dataset() (in module fl4health.datasets.rxrx1.load_data)": [[51, "fl4health.datasets.rxrx1.load_data.construct_rxrx1_tensor_dataset", false]], "construct_skin_cancer_tensor_dataset() (in module fl4health.datasets.skin_cancer.load_data)": [[54, "fl4health.datasets.skin_cancer.load_data.construct_skin_cancer_tensor_dataset", false]], "convert_dataset() (autoencoderdatasetconverter method)": [[150, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.convert_dataset", false]], "convert_dataset() (datasetconverter method)": [[150, "fl4health.utils.dataset_converter.DatasetConverter.convert_dataset", false]], "convert_deep_supervision_dict_to_list() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.convert_deep_supervision_dict_to_list", false]], "convert_deep_supervision_list_to_dict() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.convert_deep_supervision_list_to_dict", false]], "convert_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[162, "fl4health.utils.privacy_utilities.convert_model_to_opacus_model", false]], "convert_to_masked_model() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[81, "fl4health.model_bases.masked_layers.masked_layers_utils.convert_to_masked_model", false]], "cosinesimilarityloss (class in fl4health.losses.cosine_similarity_loss)": [[65, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss", false]], "cosinesimilaritylosscontainer (class in fl4health.losses.fenda_loss_config)": [[67, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer", false]], "create_plans() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.create_plans", false]], "create_splits() (in module fl4health.datasets.rxrx1.load_data)": [[51, "fl4health.datasets.rxrx1.load_data.create_splits", false]], "critical (loglevel attribute)": [[166, "fl4health.utils.typing.LogLevel.CRITICAL", false]], "custom (fairnessmetrictype attribute)": [[136, "fl4health.strategies.feddg_ga.FairnessMetricType.CUSTOM", false]], "cvaefixedconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor", false]], "cvaevariableconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor", false]], "datasetconverter (class in fl4health.utils.dataset_converter)": [[150, "fl4health.utils.dataset_converter.DatasetConverter", false]], "debug (loglevel attribute)": [[166, "fl4health.utils.typing.LogLevel.DEBUG", false]], "decode() (basicae method)": [[73, "fl4health.model_bases.autoencoders_base.BasicAe.decode", false]], "decode() (conditionalvae method)": [[73, "fl4health.model_bases.autoencoders_base.ConditionalVae.decode", false]], "decode() (variationalae method)": [[73, "fl4health.model_bases.autoencoders_base.VariationalAe.decode", false]], "decode_and_pseudo_sort_results() (in module fl4health.utils.functions)": [[152, "fl4health.utils.functions.decode_and_pseudo_sort_results", false]], "deepmmdloss (class in fl4health.losses.deep_mmd_loss)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss", false]], "define_metrics() (wandbreporter method)": [[109, "fl4health.reporting.WandBReporter.define_metrics", false], [113, "fl4health.reporting.wandb_reporter.WandBReporter.define_metrics", false]], "delete_default_snapshot_attr() (earlystopper method)": [[151, "fl4health.utils.early_stopper.EarlyStopper.delete_default_snapshot_attr", false]], "derm7pt_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_image_path_func", false]], "derm7pt_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_label_map_func", false]], "dict_wrap_attr() (abstractsnapshotter method)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter.dict_wrap_attr", false]], "dictionarydataset (class in fl4health.utils.dataset)": [[149, "fl4health.utils.dataset.DictionaryDataset", false]], "dirichletlabelbasedallocation (class in fl4health.utils.partitioners)": [[161, "fl4health.utils.partitioners.DirichletLabelBasedAllocation", false]], "dirichletlabelbasedsampler (class in fl4health.utils.sampler)": [[164, "fl4health.utils.sampler.DirichletLabelBasedSampler", false]], "disable_accumulating_features() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.disable_accumulating_features", false]], "dittoclient (class in fl4health.clients.ditto_client)": [[26, "fl4health.clients.ditto_client.DittoClient", false]], "dittodeepmmdclient (class in fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient", false]], "dittomkmmdclient (class in fl4health.clients.mkmmd_clients.ditto_mkmmd_client)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient", false]], "dittoserver (class in fl4health.servers.adaptive_constraint_servers.ditto_server)": [[116, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer", false]], "dpscaffoldclient (class in fl4health.clients.scaffold_client)": [[47, "fl4health.clients.scaffold_client.DPScaffoldClient", false]], "dpscaffoldserver (class in fl4health.servers.scaffold_server)": [[127, "fl4health.servers.scaffold_server.DPScaffoldServer", false]], "dpscaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule", false]], "dump() (filereporter method)": [[111, "fl4health.reporting.json_reporter.FileReporter.dump", false]], "dump() (jsonreporter method)": [[109, "fl4health.reporting.JsonReporter.dump", false], [111, "fl4health.reporting.json_reporter.JsonReporter.dump", false]], "dynamiclayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[93, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger", false]], "early_stop_validation (loggingmode attribute)": [[154, "fl4health.utils.logging.LoggingMode.EARLY_STOP_VALIDATION", false]], "earlystopper (class in fl4health.utils.early_stopper)": [[151, "fl4health.utils.early_stopper.EarlyStopper", false]], "empty_cache() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.empty_cache", false]], "enable_accumulating_features() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.enable_accumulating_features", false]], "encode() (basicae method)": [[73, "fl4health.model_bases.autoencoders_base.BasicAe.encode", false]], "encode() (conditionalvae method)": [[73, "fl4health.model_bases.autoencoders_base.ConditionalVae.encode", false]], "encode() (variationalae method)": [[73, "fl4health.model_bases.autoencoders_base.VariationalAe.encode", false]], "encoder_from_dataframe() (tabularfeaturesinfoencoder static method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.encoder_from_dataframe", false]], "ensemble_average() (ensemblemodel method)": [[74, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_average", false]], "ensemble_vote() (ensemblemodel method)": [[74, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_vote", false]], "ensembleaggregationmode (class in fl4health.model_bases.ensemble_base)": [[74, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode", false]], "ensembleclient (class in fl4health.clients.ensemble_client)": [[27, "fl4health.clients.ensemble_client.EnsembleClient", false]], "ensemblemodel (class in fl4health.model_bases.ensemble_base)": [[74, "fl4health.model_bases.ensemble_base.EnsembleModel", false]], "epoch (steptype attribute)": [[113, "fl4health.reporting.wandb_reporter.StepType.EPOCH", false]], "error (loglevel attribute)": [[166, "fl4health.utils.typing.LogLevel.ERROR", false]], "evaluate() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.evaluate", false]], "evaluate() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.evaluate", false]], "evaluate() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.evaluate", false]], "evaluate() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.evaluate", false]], "evaluate() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.evaluate", false]], "evaluate_metrics_aggregation_fn() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.evaluate_metrics_aggregation_fn", false]], "evaluate_round() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.evaluate_round", false]], "evaluateclient (class in fl4health.clients.evaluate_client)": [[28, "fl4health.clients.evaluate_client.EvaluateClient", false]], "evaluateserver (class in fl4health.servers.evaluate_server)": [[121, "fl4health.servers.evaluate_server.EvaluateServer", false]], "evaluationlosses (class in fl4health.utils.losses)": [[155, "fl4health.utils.losses.EvaluationLosses", false]], "extract_coo_info_from_dense() (sparsecooparameterpacker static method)": [[96, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.extract_coo_info_from_dense", false]], "extracted_features_buffers (featureextractorbuffer attribute)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.extracted_features_buffers", false]], "f1 (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.F1", false]], "fairnessmetric (class in fl4health.strategies.feddg_ga)": [[136, "fl4health.strategies.feddg_ga.FairnessMetric", false]], "fairnessmetrictype (class in fl4health.strategies.feddg_ga)": [[136, "fl4health.strategies.feddg_ga.FairnessMetricType", false]], "featureextractorbuffer (class in fl4health.model_bases.feature_extractor_buffer)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer", false]], "features_by_type() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.features_by_type", false]], "fedavgdynamiclayer (class in fl4health.strategies.fedavg_dynamic_layer)": [[133, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer", false]], "fedavgsparsecootensor (class in fl4health.strategies.fedavg_sparse_coo_tensor)": [[134, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor", false]], "fedavgwithadaptiveconstraint (class in fl4health.strategies.fedavg_with_adaptive_constraint)": [[135, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint", false]], "feddgga (class in fl4health.strategies.feddg_ga)": [[136, "fl4health.strategies.feddg_ga.FedDgGa", false]], "feddggaadaptiveconstraint (class in fl4health.strategies.feddg_ga_with_adaptive_constraint)": [[137, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint", false]], "federated_evaluate() (evaluateserver method)": [[121, "fl4health.servers.evaluate_server.EvaluateServer.federated_evaluate", false]], "fedpca (class in fl4health.strategies.fedpca)": [[138, "fl4health.strategies.fedpca.FedPCA", false]], "fedpcaclient (class in fl4health.clients.fed_pca_client)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient", false]], "fedperclient (class in fl4health.clients.fedper_client)": [[31, "fl4health.clients.fedper_client.FedPerClient", false]], "fedpm (class in fl4health.strategies.fedpm)": [[139, "fl4health.strategies.fedpm.FedPm", false]], "fedpmclient (class in fl4health.clients.fedpm_client)": [[32, "fl4health.clients.fedpm_client.FedPmClient", false]], "fedpmexchanger (class in fl4health.parameter_exchange.fedpm_exchanger)": [[91, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger", false]], "fedpmserver (class in fl4health.servers.fedpm_server)": [[122, "fl4health.servers.fedpm_server.FedPmServer", false]], "fedproxclient (class in fl4health.clients.fed_prox_client)": [[30, "fl4health.clients.fed_prox_client.FedProxClient", false]], "fedproxserver (class in fl4health.servers.adaptive_constraint_servers.fedprox_server)": [[117, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer", false]], "fedrepclient (class in fl4health.clients.fedrep_client)": [[33, "fl4health.clients.fedrep_client.FedRepClient", false]], "fedrepmodel (class in fl4health.model_bases.fedrep_base)": [[76, "fl4health.model_bases.fedrep_base.FedRepModel", false]], "fedreptrainmode (class in fl4health.clients.fedrep_client)": [[33, "fl4health.clients.fedrep_client.FedRepTrainMode", false]], "fedsimclrmodel (class in fl4health.model_bases.fedsimclr_base)": [[77, "fl4health.model_bases.fedsimclr_base.FedSimClrModel", false]], "fendaclient (class in fl4health.clients.fenda_client)": [[34, "fl4health.clients.fenda_client.FendaClient", false]], "fendadittoclient (class in fl4health.clients.fenda_ditto_client)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient", false]], "fendamodel (class in fl4health.model_bases.fenda_base)": [[78, "fl4health.model_bases.fenda_base.FendaModel", false]], "fendamodelwithfeaturestate (class in fl4health.model_bases.fenda_base)": [[78, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState", false]], "fhooks (featureextractorbuffer attribute)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.fhooks", false]], "filereporter (class in fl4health.reporting.json_reporter)": [[111, "fl4health.reporting.json_reporter.FileReporter", false]], "fill_in_missing_columns() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.fill_in_missing_columns", false]], "filter_and_save_data() (in module fl4health.datasets.rxrx1.preprocess)": [[52, "fl4health.datasets.rxrx1.preprocess.filter_and_save_data", false]], "find_last_common_prefix() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.find_last_common_prefix", false]], "fit() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.fit", false]], "fit() (clientleveldpfedavgserver method)": [[120, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.fit", false]], "fit() (dpscaffoldserver method)": [[127, "fl4health.servers.scaffold_server.DPScaffoldServer.fit", false]], "fit() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.fit", false]], "fit() (evaluateserver method)": [[121, "fl4health.servers.evaluate_server.EvaluateServer.fit", false]], "fit() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.fit", false]], "fit() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.fit", false]], "fit() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.fit", false]], "fit() (instanceleveldpserver method)": [[123, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.fit", false]], "fit() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.fit", false]], "fit() (modelmergeserver method)": [[124, "fl4health.servers.model_merge_server.ModelMergeServer.fit", false]], "fit() (scaffoldserver method)": [[127, "fl4health.servers.scaffold_server.ScaffoldServer.fit", false]], "fit() (tabularfeaturealignmentserver method)": [[128, "fl4health.servers.tabular_feature_alignment_server.TabularFeatureAlignmentServer.fit", false]], "fit() (textcolumntransformer method)": [[58, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.fit", false]], "fit() (textmulticolumntransformer method)": [[58, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.fit", false]], "fit_config() (in module fl4health.servers.tabular_feature_alignment_server)": [[128, "fl4health.servers.tabular_feature_alignment_server.fit_config", false]], "fit_metrics_aggregation_fn() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.fit_metrics_aggregation_fn", false]], "fit_round() (fedpmserver method)": [[122, "fl4health.servers.fedpm_server.FedPmServer.fit_round", false]], "fit_round() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.fit_round", false]], "fit_with_per_round_checkpointing() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.fit_with_per_round_checkpointing", false]], "fixedlayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[93, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger", false]], "fixedsamplingbyfractionclientmanager (class in fl4health.client_managers.fixed_without_replacement_manager)": [[16, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager", false]], "fixedsamplingclientmanager (class in fl4health.client_managers.fixed_sampling_client_manager)": [[15, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager", false]], "fixedsamplingwithoutreplacement (class in fl4health.privacy.moments_accountant)": [[108, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement", false]], "fl4health": [[7, "module-fl4health", false]], "fl4health.checkpointing": [[8, "module-fl4health.checkpointing", false]], "fl4health.checkpointing.checkpointer": [[9, "module-fl4health.checkpointing.checkpointer", false]], "fl4health.checkpointing.client_module": [[10, "module-fl4health.checkpointing.client_module", false]], "fl4health.checkpointing.opacus_checkpointer": [[11, "module-fl4health.checkpointing.opacus_checkpointer", false]], "fl4health.checkpointing.server_module": [[12, "module-fl4health.checkpointing.server_module", false]], "fl4health.client_managers": [[13, "module-fl4health.client_managers", false]], "fl4health.client_managers.base_sampling_manager": [[14, "module-fl4health.client_managers.base_sampling_manager", false]], "fl4health.client_managers.fixed_sampling_client_manager": [[15, "module-fl4health.client_managers.fixed_sampling_client_manager", false]], "fl4health.client_managers.fixed_without_replacement_manager": [[16, "module-fl4health.client_managers.fixed_without_replacement_manager", false]], "fl4health.client_managers.poisson_sampling_manager": [[17, "module-fl4health.client_managers.poisson_sampling_manager", false]], "fl4health.clients": [[18, "module-fl4health.clients", false]], "fl4health.clients.adaptive_drift_constraint_client": [[19, "module-fl4health.clients.adaptive_drift_constraint_client", false]], "fl4health.clients.apfl_client": [[20, "module-fl4health.clients.apfl_client", false]], "fl4health.clients.basic_client": [[21, "module-fl4health.clients.basic_client", false]], "fl4health.clients.clipping_client": [[22, "module-fl4health.clients.clipping_client", false]], "fl4health.clients.constrained_fenda_client": [[23, "module-fl4health.clients.constrained_fenda_client", false]], "fl4health.clients.deep_mmd_clients": [[24, "module-fl4health.clients.deep_mmd_clients", false]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[25, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false]], "fl4health.clients.ditto_client": [[26, "module-fl4health.clients.ditto_client", false]], "fl4health.clients.ensemble_client": [[27, "module-fl4health.clients.ensemble_client", false]], "fl4health.clients.evaluate_client": [[28, "module-fl4health.clients.evaluate_client", false]], "fl4health.clients.fed_pca_client": [[29, "module-fl4health.clients.fed_pca_client", false]], "fl4health.clients.fed_prox_client": [[30, "module-fl4health.clients.fed_prox_client", false]], "fl4health.clients.fedper_client": [[31, "module-fl4health.clients.fedper_client", false]], "fl4health.clients.fedpm_client": [[32, "module-fl4health.clients.fedpm_client", false]], "fl4health.clients.fedrep_client": [[33, "module-fl4health.clients.fedrep_client", false]], "fl4health.clients.fenda_client": [[34, "module-fl4health.clients.fenda_client", false]], "fl4health.clients.fenda_ditto_client": [[35, "module-fl4health.clients.fenda_ditto_client", false]], "fl4health.clients.flash_client": [[36, "module-fl4health.clients.flash_client", false]], "fl4health.clients.instance_level_dp_client": [[37, "module-fl4health.clients.instance_level_dp_client", false]], "fl4health.clients.mkmmd_clients": [[38, "module-fl4health.clients.mkmmd_clients", false]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[39, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[40, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false]], "fl4health.clients.model_merge_client": [[41, "module-fl4health.clients.model_merge_client", false]], "fl4health.clients.moon_client": [[42, "module-fl4health.clients.moon_client", false]], "fl4health.clients.mr_mtl_client": [[43, "module-fl4health.clients.mr_mtl_client", false]], "fl4health.clients.nnunet_client": [[44, "module-fl4health.clients.nnunet_client", false]], "fl4health.clients.partial_weight_exchange_client": [[45, "module-fl4health.clients.partial_weight_exchange_client", false]], "fl4health.clients.perfcl_client": [[46, "module-fl4health.clients.perfcl_client", false]], "fl4health.clients.scaffold_client": [[47, "module-fl4health.clients.scaffold_client", false]], "fl4health.clients.tabular_data_client": [[48, "module-fl4health.clients.tabular_data_client", false]], "fl4health.datasets": [[49, "module-fl4health.datasets", false]], "fl4health.datasets.rxrx1": [[50, "module-fl4health.datasets.rxrx1", false]], "fl4health.datasets.rxrx1.load_data": [[51, "module-fl4health.datasets.rxrx1.load_data", false]], "fl4health.datasets.rxrx1.preprocess": [[52, "module-fl4health.datasets.rxrx1.preprocess", false]], "fl4health.datasets.skin_cancer": [[53, "module-fl4health.datasets.skin_cancer", false]], "fl4health.datasets.skin_cancer.load_data": [[54, "module-fl4health.datasets.skin_cancer.load_data", false]], "fl4health.datasets.skin_cancer.preprocess_skin": [[55, "module-fl4health.datasets.skin_cancer.preprocess_skin", false]], "fl4health.feature_alignment": [[56, "module-fl4health.feature_alignment", false]], "fl4health.feature_alignment.constants": [[57, "module-fl4health.feature_alignment.constants", false]], "fl4health.feature_alignment.string_columns_transformer": [[58, "module-fl4health.feature_alignment.string_columns_transformer", false]], "fl4health.feature_alignment.tab_features_info_encoder": [[59, "module-fl4health.feature_alignment.tab_features_info_encoder", false]], "fl4health.feature_alignment.tab_features_preprocessor": [[60, "module-fl4health.feature_alignment.tab_features_preprocessor", false]], "fl4health.feature_alignment.tabular_feature": [[61, "module-fl4health.feature_alignment.tabular_feature", false]], "fl4health.feature_alignment.tabular_type": [[62, "module-fl4health.feature_alignment.tabular_type", false]], "fl4health.losses": [[63, "module-fl4health.losses", false]], "fl4health.losses.contrastive_loss": [[64, "module-fl4health.losses.contrastive_loss", false]], "fl4health.losses.cosine_similarity_loss": [[65, "module-fl4health.losses.cosine_similarity_loss", false]], "fl4health.losses.deep_mmd_loss": [[66, "module-fl4health.losses.deep_mmd_loss", false]], "fl4health.losses.fenda_loss_config": [[67, "module-fl4health.losses.fenda_loss_config", false]], "fl4health.losses.mkmmd_loss": [[68, "module-fl4health.losses.mkmmd_loss", false]], "fl4health.losses.perfcl_loss": [[69, "module-fl4health.losses.perfcl_loss", false]], "fl4health.losses.weight_drift_loss": [[70, "module-fl4health.losses.weight_drift_loss", false]], "fl4health.model_bases": [[71, "module-fl4health.model_bases", false]], "fl4health.model_bases.apfl_base": [[72, "module-fl4health.model_bases.apfl_base", false]], "fl4health.model_bases.autoencoders_base": [[73, "module-fl4health.model_bases.autoencoders_base", false]], "fl4health.model_bases.ensemble_base": [[74, "module-fl4health.model_bases.ensemble_base", false]], "fl4health.model_bases.feature_extractor_buffer": [[75, "module-fl4health.model_bases.feature_extractor_buffer", false]], "fl4health.model_bases.fedrep_base": [[76, "module-fl4health.model_bases.fedrep_base", false]], "fl4health.model_bases.fedsimclr_base": [[77, "module-fl4health.model_bases.fedsimclr_base", false]], "fl4health.model_bases.fenda_base": [[78, "module-fl4health.model_bases.fenda_base", false]], "fl4health.model_bases.masked_layers": [[79, "module-fl4health.model_bases.masked_layers", false]], "fl4health.model_bases.masked_layers.masked_conv": [[80, "module-fl4health.model_bases.masked_layers.masked_conv", false]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[81, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false]], "fl4health.model_bases.masked_layers.masked_linear": [[82, "module-fl4health.model_bases.masked_layers.masked_linear", false]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[83, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false]], "fl4health.model_bases.moon_base": [[84, "module-fl4health.model_bases.moon_base", false]], "fl4health.model_bases.parallel_split_models": [[85, "module-fl4health.model_bases.parallel_split_models", false]], "fl4health.model_bases.partial_layer_exchange_model": [[86, "module-fl4health.model_bases.partial_layer_exchange_model", false]], "fl4health.model_bases.pca": [[87, "module-fl4health.model_bases.pca", false]], "fl4health.model_bases.perfcl_base": [[88, "module-fl4health.model_bases.perfcl_base", false]], "fl4health.model_bases.sequential_split_models": [[89, "module-fl4health.model_bases.sequential_split_models", false]], "fl4health.parameter_exchange": [[90, "module-fl4health.parameter_exchange", false]], "fl4health.parameter_exchange.fedpm_exchanger": [[91, "module-fl4health.parameter_exchange.fedpm_exchanger", false]], "fl4health.parameter_exchange.full_exchanger": [[92, "module-fl4health.parameter_exchange.full_exchanger", false]], "fl4health.parameter_exchange.layer_exchanger": [[93, "module-fl4health.parameter_exchange.layer_exchanger", false]], "fl4health.parameter_exchange.packing_exchanger": [[94, "module-fl4health.parameter_exchange.packing_exchanger", false]], "fl4health.parameter_exchange.parameter_exchanger_base": [[95, "module-fl4health.parameter_exchange.parameter_exchanger_base", false]], "fl4health.parameter_exchange.parameter_packer": [[96, "module-fl4health.parameter_exchange.parameter_packer", false]], "fl4health.parameter_exchange.parameter_selection_criteria": [[97, "module-fl4health.parameter_exchange.parameter_selection_criteria", false]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[98, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[99, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false]], "fl4health.preprocessing": [[100, "module-fl4health.preprocessing", false]], "fl4health.preprocessing.autoencoders": [[101, "module-fl4health.preprocessing.autoencoders", false]], "fl4health.preprocessing.autoencoders.dim_reduction": [[102, "module-fl4health.preprocessing.autoencoders.dim_reduction", false]], "fl4health.preprocessing.autoencoders.loss": [[103, "module-fl4health.preprocessing.autoencoders.loss", false]], "fl4health.preprocessing.pca_preprocessor": [[104, "module-fl4health.preprocessing.pca_preprocessor", false]], "fl4health.preprocessing.warmed_up_module": [[105, "module-fl4health.preprocessing.warmed_up_module", false]], "fl4health.privacy": [[106, "module-fl4health.privacy", false]], "fl4health.privacy.fl_accountants": [[107, "module-fl4health.privacy.fl_accountants", false]], "fl4health.privacy.moments_accountant": [[108, "module-fl4health.privacy.moments_accountant", false]], "fl4health.reporting": [[109, "module-fl4health.reporting", false]], "fl4health.reporting.base_reporter": [[110, "module-fl4health.reporting.base_reporter", false]], "fl4health.reporting.json_reporter": [[111, "module-fl4health.reporting.json_reporter", false]], "fl4health.reporting.reports_manager": [[112, "module-fl4health.reporting.reports_manager", false]], "fl4health.reporting.wandb_reporter": [[113, "module-fl4health.reporting.wandb_reporter", false]], "fl4health.servers": [[114, "module-fl4health.servers", false]], "fl4health.servers.adaptive_constraint_servers": [[115, "module-fl4health.servers.adaptive_constraint_servers", false]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[116, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[117, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[118, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false]], "fl4health.servers.base_server": [[119, "module-fl4health.servers.base_server", false]], "fl4health.servers.client_level_dp_fed_avg_server": [[120, "module-fl4health.servers.client_level_dp_fed_avg_server", false]], "fl4health.servers.evaluate_server": [[121, "module-fl4health.servers.evaluate_server", false]], "fl4health.servers.fedpm_server": [[122, "module-fl4health.servers.fedpm_server", false]], "fl4health.servers.instance_level_dp_server": [[123, "module-fl4health.servers.instance_level_dp_server", false]], "fl4health.servers.model_merge_server": [[124, "module-fl4health.servers.model_merge_server", false]], "fl4health.servers.nnunet_server": [[125, "module-fl4health.servers.nnunet_server", false]], "fl4health.servers.polling": [[126, "module-fl4health.servers.polling", false]], "fl4health.servers.scaffold_server": [[127, "module-fl4health.servers.scaffold_server", false]], "fl4health.servers.tabular_feature_alignment_server": [[128, "module-fl4health.servers.tabular_feature_alignment_server", false]], "fl4health.strategies": [[129, "module-fl4health.strategies", false]], "fl4health.strategies.aggregate_utils": [[130, "module-fl4health.strategies.aggregate_utils", false]], "fl4health.strategies.basic_fedavg": [[131, "module-fl4health.strategies.basic_fedavg", false]], "fl4health.strategies.client_dp_fedavgm": [[132, "module-fl4health.strategies.client_dp_fedavgm", false]], "fl4health.strategies.fedavg_dynamic_layer": [[133, "module-fl4health.strategies.fedavg_dynamic_layer", false]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[134, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[135, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false]], "fl4health.strategies.feddg_ga": [[136, "module-fl4health.strategies.feddg_ga", false]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[137, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false]], "fl4health.strategies.fedpca": [[138, "module-fl4health.strategies.fedpca", false]], "fl4health.strategies.fedpm": [[139, "module-fl4health.strategies.fedpm", false]], "fl4health.strategies.flash": [[140, "module-fl4health.strategies.flash", false]], "fl4health.strategies.model_merge_strategy": [[141, "module-fl4health.strategies.model_merge_strategy", false]], "fl4health.strategies.noisy_aggregate": [[142, "module-fl4health.strategies.noisy_aggregate", false]], "fl4health.strategies.scaffold": [[143, "module-fl4health.strategies.scaffold", false]], "fl4health.strategies.strategy_with_poll": [[144, "module-fl4health.strategies.strategy_with_poll", false]], "fl4health.utils": [[145, "module-fl4health.utils", false]], "fl4health.utils.client": [[146, "module-fl4health.utils.client", false]], "fl4health.utils.config": [[147, "module-fl4health.utils.config", false]], "fl4health.utils.data_generation": [[148, "module-fl4health.utils.data_generation", false]], "fl4health.utils.dataset": [[149, "module-fl4health.utils.dataset", false]], "fl4health.utils.dataset_converter": [[150, "module-fl4health.utils.dataset_converter", false]], "fl4health.utils.early_stopper": [[151, "module-fl4health.utils.early_stopper", false]], "fl4health.utils.functions": [[152, "module-fl4health.utils.functions", false]], "fl4health.utils.load_data": [[153, "module-fl4health.utils.load_data", false]], "fl4health.utils.logging": [[154, "module-fl4health.utils.logging", false]], "fl4health.utils.losses": [[155, "module-fl4health.utils.losses", false]], "fl4health.utils.metric_aggregation": [[156, "module-fl4health.utils.metric_aggregation", false]], "fl4health.utils.metrics": [[157, "module-fl4health.utils.metrics", false]], "fl4health.utils.msd_dataset_sources": [[158, "module-fl4health.utils.msd_dataset_sources", false]], "fl4health.utils.nnunet_utils": [[159, "module-fl4health.utils.nnunet_utils", false]], "fl4health.utils.parameter_extraction": [[160, "module-fl4health.utils.parameter_extraction", false]], "fl4health.utils.partitioners": [[161, "module-fl4health.utils.partitioners", false]], "fl4health.utils.privacy_utilities": [[162, "module-fl4health.utils.privacy_utilities", false]], "fl4health.utils.random": [[163, "module-fl4health.utils.random", false]], "fl4health.utils.sampler": [[164, "module-fl4health.utils.sampler", false]], "fl4health.utils.snapshotter": [[165, "module-fl4health.utils.snapshotter", false]], "fl4health.utils.typing": [[166, "module-fl4health.utils.typing", false]], "flash (class in fl4health.strategies.flash)": [[140, "fl4health.strategies.flash.Flash", false]], "flashclient (class in fl4health.clients.flash_client)": [[36, "fl4health.clients.flash_client.FlashClient", false]], "flatten() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten", false]], "flatten_feature_extraction_layers (featureextractorbuffer attribute)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten_feature_extraction_layers", false]], "flclientlevelaccountantfixedsamplingnoreplacement (class in fl4health.privacy.fl_accountants)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement", false]], "flclientlevelaccountantpoissonsampling (class in fl4health.privacy.fl_accountants)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling", false]], "flinstancelevelaccountant (class in fl4health.privacy.fl_accountants)": [[107, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant", false]], "flserver (class in fl4health.servers.base_server)": [[119, "fl4health.servers.base_server.FlServer", false]], "flush() (streamtologger method)": [[159, "fl4health.utils.nnunet_utils.StreamToLogger.flush", false]], "fold_loss_dict_into_metrics() (in module fl4health.utils.client)": [[146, "fl4health.utils.client.fold_loss_dict_into_metrics", false]], "form_and_solve_qp() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_and_solve_qp", false]], "form_h_u_delta_w_i() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_h_u_delta_w_i", false]], "form_kernel_samples_minus_expectation() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_kernel_samples_minus_expectation", false]], "forward() (abstractae method)": [[73, "fl4health.model_bases.autoencoders_base.AbstractAe.forward", false]], "forward() (apflmodule method)": [[72, "fl4health.model_bases.apfl_base.ApflModule.forward", false]], "forward() (basicae method)": [[73, "fl4health.model_bases.autoencoders_base.BasicAe.forward", false]], "forward() (bernoullisample static method)": [[152, "fl4health.utils.functions.BernoulliSample.forward", false]], "forward() (conditionalvae method)": [[73, "fl4health.model_bases.autoencoders_base.ConditionalVae.forward", false]], "forward() (cosinesimilarityloss method)": [[65, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.forward", false]], "forward() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.forward", false]], "forward() (ensemblemodel method)": [[74, "fl4health.model_bases.ensemble_base.EnsembleModel.forward", false]], "forward() (fedsimclrmodel method)": [[77, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.forward", false]], "forward() (fendamodelwithfeaturestate method)": [[78, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.forward", false]], "forward() (maskedconv1d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.forward", false]], "forward() (maskedconv2d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.forward", false]], "forward() (maskedconv3d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.forward", false]], "forward() (maskedconvtranspose1d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.forward", false]], "forward() (maskedconvtranspose2d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.forward", false]], "forward() (maskedconvtranspose3d method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.forward", false]], "forward() (maskedlayernorm method)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.forward", false]], "forward() (maskedlinear method)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.forward", false]], "forward() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.forward", false]], "forward() (modellatentf method)": [[66, "fl4health.losses.deep_mmd_loss.ModelLatentF.forward", false]], "forward() (module2losswrapper method)": [[159, "fl4health.utils.nnunet_utils.Module2LossWrapper.forward", false]], "forward() (mooncontrastiveloss method)": [[64, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.forward", false]], "forward() (ntxentloss method)": [[64, "fl4health.losses.contrastive_loss.NtXentLoss.forward", false]], "forward() (parallelsplitheadmodule method)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.forward", false]], "forward() (parallelsplitmodel method)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.forward", false]], "forward() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.forward", false]], "forward() (perfclloss method)": [[69, "fl4health.losses.perfcl_loss.PerFclLoss.forward", false]], "forward() (perfclmodel method)": [[88, "fl4health.model_bases.perfcl_base.PerFclModel.forward", false]], "forward() (sequentiallysplitmodel method)": [[89, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.forward", false]], "forward() (vaeloss method)": [[103, "fl4health.preprocessing.autoencoders.loss.VaeLoss.forward", false]], "forward() (variationalae method)": [[73, "fl4health.model_bases.autoencoders_base.VariationalAe.forward", false]], "forward() (weightdriftloss method)": [[70, "fl4health.losses.weight_drift_loss.WeightDriftLoss.forward", false]], "forward_hook() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.forward_hook", false]], "freeze_base_module() (fedrepmodel method)": [[76, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_base_module", false]], "freeze_head_module() (fedrepmodel method)": [[76, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_head_module", false]], "from_json() (tabularfeature static method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.from_json", false]], "from_json() (tabularfeaturesinfoencoder static method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.from_json", false]], "from_pretrained() (maskedconv1d class method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.from_pretrained", false]], "from_pretrained() (maskedconv2d class method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.from_pretrained", false]], "from_pretrained() (maskedconv3d class method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose1d class method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose2d class method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose3d class method)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.from_pretrained", false]], "from_pretrained() (maskedlayernorm class method)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.from_pretrained", false]], "from_pretrained() (maskedlinear class method)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.from_pretrained", false]], "fullparameterexchanger (class in fl4health.parameter_exchange.full_exchanger)": [[92, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger", false]], "fullparameterexchangerwithpacking (class in fl4health.parameter_exchange.packing_exchanger)": [[94, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking", false]], "functiontorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[9, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer", false]], "gaussian_noisy_aggregate_clipping_bits() (in module fl4health.strategies.noisy_aggregate)": [[142, "fl4health.strategies.noisy_aggregate.gaussian_noisy_aggregate_clipping_bits", false]], "gaussian_noisy_unweighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[142, "fl4health.strategies.noisy_aggregate.gaussian_noisy_unweighted_aggregate", false]], "gaussian_noisy_weighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[142, "fl4health.strategies.noisy_aggregate.gaussian_noisy_weighted_aggregate", false]], "generate() (syntheticfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate", false]], "generate_client_tensors() (syntheticfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticiidfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticnoniidfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.generate_client_tensors", false]], "generate_hash() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.generate_hash", false]], "generate_hash() (in module fl4health.utils.random)": [[163, "fl4health.utils.random.generate_hash", false]], "generate_parameter_scores() (sparsecooparameterexchanger method)": [[99, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.generate_parameter_scores", false]], "get_all_model_parameters() (in module fl4health.utils.parameter_extraction)": [[160, "fl4health.utils.parameter_extraction.get_all_model_parameters", false]], "get_best_vertex_for_objective_function() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.get_best_vertex_for_objective_function", false]], "get_categories_list() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.get_categories_list", false]], "get_cifar10_data_and_target_tensors() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.get_cifar10_data_and_target_tensors", false]], "get_client_specific_logs() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_client_specific_logs", false]], "get_client_specific_logs() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_logs", false]], "get_client_specific_reports() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_client_specific_reports", false]], "get_client_specific_reports() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_reports", false]], "get_condition_vector_size() (autoencoderdatasetconverter method)": [[150, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_condition_vector_size", false]], "get_criterion() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_criterion", false]], "get_criterion() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_criterion", false]], "get_current_weight_step_size() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.get_current_weight_step_size", false]], "get_data_frame() (tabulardataclient method)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient.get_data_frame", false]], "get_data_loader() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.get_data_loader", false]], "get_data_loaders() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_data_loaders", false]], "get_data_loaders() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_loaders", false]], "get_data_loaders() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_data_loaders", false]], "get_data_tensor() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_tensor", false]], "get_dataset_n_voxels() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.get_dataset_n_voxels", false]], "get_default_binary_pipeline() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.get_default_binary_pipeline", false]], "get_default_fill_value() (tabulartype static method)": [[62, "fl4health.feature_alignment.tabular_type.TabularType.get_default_fill_value", false]], "get_default_numeric_pipeline() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.get_default_numeric_pipeline", false]], "get_default_one_hot_pipeline() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.get_default_one_hot_pipeline", false]], "get_default_ordinal_pipeline() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.get_default_ordinal_pipeline", false]], "get_default_string_pipeline() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.get_default_string_pipeline", false]], "get_delta() (clientlevelaccountant method)": [[107, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_delta", false]], "get_delta() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_delta", false]], "get_delta() (flclientlevelaccountantpoissonsampling method)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_delta", false]], "get_delta() (flinstancelevelaccountant method)": [[107, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_delta", false]], "get_delta() (momentsaccountant method)": [[108, "fl4health.privacy.moments_accountant.MomentsAccountant.get_delta", false]], "get_dp_event() (fixedsamplingwithoutreplacement method)": [[108, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.get_dp_event", false]], "get_dp_event() (poissonsampling method)": [[108, "fl4health.privacy.moments_accountant.PoissonSampling.get_dp_event", false]], "get_dp_event() (samplingstrategy method)": [[108, "fl4health.privacy.moments_accountant.SamplingStrategy.get_dp_event", false]], "get_epsilon() (clientlevelaccountant method)": [[107, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantpoissonsampling method)": [[107, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_epsilon", false]], "get_epsilon() (flinstancelevelaccountant method)": [[107, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_epsilon", false]], "get_epsilon() (momentsaccountant method)": [[108, "fl4health.privacy.moments_accountant.MomentsAccountant.get_epsilon", false]], "get_extracted_features() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_extracted_features", false]], "get_feature_columns() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.get_feature_columns", false]], "get_feature_name() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_name", false]], "get_feature_type() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_type", false]], "get_fill_value() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_fill_value", false]], "get_global_model() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.get_global_model", false]], "get_global_model() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_global_model", false]], "get_hierarchical_attr() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_hierarchical_attr", false]], "get_input_output_tensors() (syntheticiidfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.get_input_output_tensors", false]], "get_input_output_tensors() (syntheticnoniidfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.get_input_output_tensors", false]], "get_layers_to_transfer() (layerexchangerwithexclusions method)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.get_layers_to_transfer", false]], "get_local_model() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.get_local_model", false]], "get_lr() (polylrschedulerwrapper method)": [[159, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.get_lr", false]], "get_lr_scheduler() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_lr_scheduler", false]], "get_lr_scheduler() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_lr_scheduler", false]], "get_matching_component() (warmedupmodule method)": [[105, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.get_matching_component", false]], "get_metadata() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata", false]], "get_metadata_dimension() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata_dimension", false]], "get_mnist_data_and_target_tensors() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.get_mnist_data_and_target_tensors", false]], "get_model() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_model", false]], "get_model() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.get_model", false]], "get_model() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_model", false]], "get_model() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.get_model", false]], "get_model() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_model", false]], "get_msd_dataset_enum() (in module fl4health.utils.msd_dataset_sources)": [[158, "fl4health.utils.msd_dataset_sources.get_msd_dataset_enum", false]], "get_optimizer() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.get_optimizer", false]], "get_optimizer() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_optimizer", false]], "get_optimizer() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.get_optimizer", false]], "get_optimizer() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.get_optimizer", false]], "get_optimizer() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.get_optimizer", false]], "get_optimizer() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_optimizer", false]], "get_parameter_exchanger() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedperclient method)": [[31, "fl4health.clients.fedper_client.FedPerClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedpmclient method)": [[32, "fl4health.clients.fedpm_client.FedPmClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fendaclient method)": [[34, "fl4health.clients.fenda_client.FendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (partialweightexchangeclient method)": [[45, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameter_exchanger", false]], "get_parameters() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameters", false]], "get_parameters() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_parameters", false]], "get_parameters() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.get_parameters", false]], "get_parameters() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.get_parameters", false]], "get_parameters() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.get_parameters", false]], "get_parameters() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_parameters", false]], "get_parameters() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameters", false]], "get_parameters() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameters", false]], "get_parameters() (partialweightexchangeclient method)": [[45, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameters", false]], "get_parameters() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameters", false]], "get_properties() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_properties", false]], "get_properties() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.get_properties", false]], "get_properties() (tabulardataclient method)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient.get_properties", false]], "get_segs_from_probs() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.get_segs_from_probs", false]], "get_tabular_features() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.get_tabular_features", false]], "get_tabular_targets() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.get_tabular_targets", false]], "get_target_columns() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.get_target_columns", false]], "get_target_dimension() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.get_target_dimension", false]], "get_test_data_loader() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.get_test_data_loader", false]], "get_test_data_loader() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.get_test_data_loader", false]], "get_train_and_val_cifar10_datasets() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.get_train_and_val_cifar10_datasets", false]], "get_train_and_val_mnist_datasets() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.get_train_and_val_mnist_datasets", false]], "get_unpacking_function() (autoencoderdatasetconverter method)": [[150, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_unpacking_function", false]], "global_forward() (apflmodule method)": [[72, "fl4health.model_bases.apfl_base.ApflModule.global_forward", false]], "h1_mean_var_gram() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.h1_mean_var_gram", false]], "ham_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.ham_image_path_func", false]], "ham_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.ham_label_map_func", false]], "has_contrastive_loss() (constrainedfendalosscontainer method)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_contrastive_loss", false]], "has_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_cosine_similarity_loss", false]], "has_perfcl_loss() (constrainedfendalosscontainer method)": [[67, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_perfcl_loss", false]], "head (fedreptrainmode attribute)": [[33, "fl4health.clients.fedrep_client.FedRepTrainMode.HEAD", false]], "head_forward() (parallelsplitheadmodule method)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.head_forward", false]], "info (loglevel attribute)": [[166, "fl4health.utils.typing.LogLevel.INFO", false]], "initialize() (basereporter method)": [[110, "fl4health.reporting.base_reporter.BaseReporter.initialize", false]], "initialize() (filereporter method)": [[111, "fl4health.reporting.json_reporter.FileReporter.initialize", false]], "initialize() (reportsmanager method)": [[112, "fl4health.reporting.reports_manager.ReportsManager.initialize", false]], "initialize() (wandbreporter method)": [[109, "fl4health.reporting.WandBReporter.initialize", false], [113, "fl4health.reporting.wandb_reporter.WandBReporter.initialize", false]], "initialize_all_model_weights() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.initialize_all_model_weights", false]], "initialize_control_variates() (scaffold method)": [[143, "fl4health.strategies.scaffold.Scaffold.initialize_control_variates", false]], "initialize_default_pipelines() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.initialize_default_pipelines", false]], "initialize_global_model() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.initialize_global_model", false]], "initialize_parameters() (modelmergestrategy method)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.initialize_parameters", false]], "initialize_server_model() (nnunetserver method)": [[125, "fl4health.servers.nnunet_server.NnunetServer.initialize_server_model", false]], "instanceleveldpclient (class in fl4health.clients.instance_level_dp_client)": [[37, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient", false]], "instanceleveldpserver (class in fl4health.servers.instance_level_dp_server)": [[123, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer", false]], "invalidconfigerror": [[147, "fl4health.utils.config.InvalidConfigError", false]], "is_masked_module() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[81, "fl4health.model_bases.masked_layers.masked_layers_utils.is_masked_module", false]], "is_start_of_local_training() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.is_start_of_local_training", false]], "jsonreporter (class in fl4health.reporting)": [[109, "fl4health.reporting.JsonReporter", false]], "jsonreporter (class in fl4health.reporting.json_reporter)": [[111, "fl4health.reporting.json_reporter.JsonReporter", false]], "label_frequency() (in module fl4health.datasets.rxrx1.load_data)": [[51, "fl4health.datasets.rxrx1.load_data.label_frequency", false]], "labelbasedsampler (class in fl4health.utils.sampler)": [[164, "fl4health.utils.sampler.LabelBasedSampler", false]], "largest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.largest_final_magnitude_scores", false]], "largest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.largest_increase_in_magnitude_scores", false]], "largest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.largest_magnitude_change_scores", false]], "latestopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[11, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer", false]], "latesttorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[9, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer", false]], "layerexchangerwithexclusions (class in fl4health.parameter_exchange.layer_exchanger)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions", false]], "layernamesservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule", false]], "layers_to_exchange() (apflmodule method)": [[72, "fl4health.model_bases.apfl_base.ApflModule.layers_to_exchange", false]], "layers_to_exchange() (fendamodel method)": [[78, "fl4health.model_bases.fenda_base.FendaModel.layers_to_exchange", false]], "layers_to_exchange() (partiallayerexchangemodel method)": [[86, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel.layers_to_exchange", false]], "layers_to_exchange() (perfclmodel method)": [[88, "fl4health.model_bases.perfcl_base.PerFclModel.layers_to_exchange", false]], "layers_to_exchange() (sequentiallysplitexchangebasemodel method)": [[89, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel.layers_to_exchange", false]], "layerselectionfunctionconstructor (class in fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor", false]], "load() (abstractsnapshotter method)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter.load", false]], "load_attribute() (abstractsnapshotter method)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter.load_attribute", false]], "load_attribute() (lrschedulersnapshotter method)": [[165, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.load_attribute", false]], "load_attribute() (numbersnapshotter method)": [[165, "fl4health.utils.snapshotter.NumberSnapshotter.load_attribute", false]], "load_attribute() (optimizersnapshotter method)": [[165, "fl4health.utils.snapshotter.OptimizerSnapshotter.load_attribute", false]], "load_attribute() (serializableobjectsnapshotter method)": [[165, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.load_attribute", false]], "load_attribute() (torchmodulesnapshotter method)": [[165, "fl4health.utils.snapshotter.TorchModuleSnapshotter.load_attribute", false]], "load_autoencoder() (autoencoderprocessing method)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.load_autoencoder", false]], "load_best_checkpoint_into_model() (opacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_best_checkpoint_into_model", false]], "load_checkpoint() (opacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_checkpoint", false]], "load_checkpoint() (perroundstatecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.load_checkpoint", false]], "load_checkpoint() (torchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.load_checkpoint", false]], "load_cifar10_data() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.load_cifar10_data", false]], "load_cifar10_test_data() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.load_cifar10_test_data", false]], "load_config() (in module fl4health.utils.config)": [[147, "fl4health.utils.config.load_config", false]], "load_from_pretrained() (warmedupmodule method)": [[105, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.load_from_pretrained", false]], "load_image() (in module fl4health.datasets.rxrx1.preprocess)": [[52, "fl4health.datasets.rxrx1.preprocess.load_image", false]], "load_image() (in module fl4health.datasets.skin_cancer.load_data)": [[54, "fl4health.datasets.skin_cancer.load_data.load_image", false]], "load_mnist_data() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.load_mnist_data", false]], "load_mnist_test_data() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.load_mnist_test_data", false]], "load_model_checkpoint_to_parameters() (evaluateserver method)": [[121, "fl4health.servers.evaluate_server.EvaluateServer.load_model_checkpoint_to_parameters", false]], "load_msd_dataset() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.load_msd_dataset", false]], "load_pca_module() (pcapreprocessor method)": [[104, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.load_pca_module", false]], "load_pretrained_model() (fedsimclrmodel static method)": [[77, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.load_pretrained_model", false]], "load_rxrx1_data() (in module fl4health.datasets.rxrx1.load_data)": [[51, "fl4health.datasets.rxrx1.load_data.load_rxrx1_data", false]], "load_rxrx1_test_data() (in module fl4health.datasets.rxrx1.load_data)": [[51, "fl4health.datasets.rxrx1.load_data.load_rxrx1_test_data", false]], "load_skin_cancer_data() (in module fl4health.datasets.skin_cancer.load_data)": [[54, "fl4health.datasets.skin_cancer.load_data.load_skin_cancer_data", false]], "load_snapshot() (earlystopper method)": [[151, "fl4health.utils.early_stopper.EarlyStopper.load_snapshot", false]], "local_forward() (apflmodule method)": [[72, "fl4health.model_bases.apfl_base.ApflModule.local_forward", false]], "loggingmode (class in fl4health.utils.logging)": [[154, "fl4health.utils.logging.LoggingMode", false]], "loglevel (class in fl4health.utils.typing)": [[166, "fl4health.utils.typing.LogLevel", false]], "loss (fairnessmetrictype attribute)": [[136, "fl4health.strategies.feddg_ga.FairnessMetricType.LOSS", false]], "losses (class in fl4health.utils.losses)": [[155, "fl4health.utils.losses.Losses", false]], "lossmeter (class in fl4health.utils.losses)": [[155, "fl4health.utils.losses.LossMeter", false]], "lossmetertype (class in fl4health.utils.losses)": [[155, "fl4health.utils.losses.LossMeterType", false]], "lrschedulersnapshotter (class in fl4health.utils.snapshotter)": [[165, "fl4health.utils.snapshotter.LRSchedulerSnapshotter", false]], "main() (in module fl4health.datasets.rxrx1.preprocess)": [[52, "fl4health.datasets.rxrx1.preprocess.main", false]], "map_inputs_to_outputs() (syntheticfedproxdataset method)": [[148, "fl4health.utils.data_generation.SyntheticFedProxDataset.map_inputs_to_outputs", false]], "map_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[162, "fl4health.utils.privacy_utilities.map_model_to_opacus_model", false]], "mask_data() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.mask_data", false]], "maskedbatchnorm1d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm1d", false]], "maskedbatchnorm2d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm2d", false]], "maskedbatchnorm3d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm3d", false]], "maskedconv1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d", false]], "maskedconv2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d", false]], "maskedconv3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d", false]], "maskedconvtranspose1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d", false]], "maskedconvtranspose2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d", false]], "maskedconvtranspose3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d", false]], "maskedlayernorm (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm", false]], "maskedlinear (class in fl4health.model_bases.masked_layers.masked_linear)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear", false]], "maybe_checkpoint() (baseservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (bestlossopacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (bestlosstorchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (clientcheckpointandstatemodule method)": [[10, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (functiontorchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latestopacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latesttorchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (opacuscheckpointer method)": [[11, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (torchmodulecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_extract_fingerprint() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.maybe_extract_fingerprint", false]], "maybe_load_state() (baseservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_load_state", false]], "maybe_load_state() (clientcheckpointandstatemodule method)": [[10, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_load_state", false]], "maybe_preprocess() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.maybe_preprocess", false]], "maybe_progress_bar() (in module fl4health.utils.client)": [[146, "fl4health.utils.client.maybe_progress_bar", false]], "maybe_reshape() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.maybe_reshape", false]], "merge_metrics() (evaluateclient static method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.merge_metrics", false]], "merge_subspaces_qr() (fedpca method)": [[138, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_qr", false]], "merge_subspaces_svd() (fedpca method)": [[138, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_svd", false]], "merge_two_subspaces_qr() (fedpca method)": [[138, "fl4health.strategies.fedpca.FedPCA.merge_two_subspaces_qr", false]], "metric (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.Metric", false]], "metric_aggregation() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.metric_aggregation", false]], "metricmanager (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.MetricManager", false]], "metricprefix (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.MetricPrefix", false]], "minoritylabelbasedsampler (class in fl4health.utils.sampler)": [[164, "fl4health.utils.sampler.MinorityLabelBasedSampler", false]], "mkmmdloss (class in fl4health.losses.mkmmd_loss)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss", false]], "mmdu() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.MMDu", false]], "model (featureextractorbuffer attribute)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.model", false]], "modellatentf (class in fl4health.losses.deep_mmd_loss)": [[66, "fl4health.losses.deep_mmd_loss.ModelLatentF", false]], "modelmergeclient (class in fl4health.clients.model_merge_client)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient", false]], "modelmergeserver (class in fl4health.servers.model_merge_server)": [[124, "fl4health.servers.model_merge_server.ModelMergeServer", false]], "modelmergestrategy (class in fl4health.strategies.model_merge_strategy)": [[141, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy", false]], "modify_grad() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.modify_grad", false]], "modify_noise_multiplier() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.modify_noise_multiplier", false]], "module": [[7, "module-fl4health", false], [8, "module-fl4health.checkpointing", false], [9, "module-fl4health.checkpointing.checkpointer", false], [10, "module-fl4health.checkpointing.client_module", false], [11, "module-fl4health.checkpointing.opacus_checkpointer", false], [12, "module-fl4health.checkpointing.server_module", false], [13, "module-fl4health.client_managers", false], [14, "module-fl4health.client_managers.base_sampling_manager", false], [15, "module-fl4health.client_managers.fixed_sampling_client_manager", false], [16, "module-fl4health.client_managers.fixed_without_replacement_manager", false], [17, "module-fl4health.client_managers.poisson_sampling_manager", false], [18, "module-fl4health.clients", false], [19, "module-fl4health.clients.adaptive_drift_constraint_client", false], [20, "module-fl4health.clients.apfl_client", false], [21, "module-fl4health.clients.basic_client", false], [22, "module-fl4health.clients.clipping_client", false], [23, "module-fl4health.clients.constrained_fenda_client", false], [24, "module-fl4health.clients.deep_mmd_clients", false], [25, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false], [26, "module-fl4health.clients.ditto_client", false], [27, "module-fl4health.clients.ensemble_client", false], [28, "module-fl4health.clients.evaluate_client", false], [29, "module-fl4health.clients.fed_pca_client", false], [30, "module-fl4health.clients.fed_prox_client", false], [31, "module-fl4health.clients.fedper_client", false], [32, "module-fl4health.clients.fedpm_client", false], [33, "module-fl4health.clients.fedrep_client", false], [34, "module-fl4health.clients.fenda_client", false], [35, "module-fl4health.clients.fenda_ditto_client", false], [36, "module-fl4health.clients.flash_client", false], [37, "module-fl4health.clients.instance_level_dp_client", false], [38, "module-fl4health.clients.mkmmd_clients", false], [39, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false], [40, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false], [41, "module-fl4health.clients.model_merge_client", false], [42, "module-fl4health.clients.moon_client", false], [43, "module-fl4health.clients.mr_mtl_client", false], [44, "module-fl4health.clients.nnunet_client", false], [45, "module-fl4health.clients.partial_weight_exchange_client", false], [46, "module-fl4health.clients.perfcl_client", false], [47, "module-fl4health.clients.scaffold_client", false], [48, "module-fl4health.clients.tabular_data_client", false], [49, "module-fl4health.datasets", false], [50, "module-fl4health.datasets.rxrx1", false], [51, "module-fl4health.datasets.rxrx1.load_data", false], [52, "module-fl4health.datasets.rxrx1.preprocess", false], [53, "module-fl4health.datasets.skin_cancer", false], [54, "module-fl4health.datasets.skin_cancer.load_data", false], [55, "module-fl4health.datasets.skin_cancer.preprocess_skin", false], [56, "module-fl4health.feature_alignment", false], [57, "module-fl4health.feature_alignment.constants", false], [58, "module-fl4health.feature_alignment.string_columns_transformer", false], [59, "module-fl4health.feature_alignment.tab_features_info_encoder", false], [60, "module-fl4health.feature_alignment.tab_features_preprocessor", false], [61, "module-fl4health.feature_alignment.tabular_feature", false], [62, "module-fl4health.feature_alignment.tabular_type", false], [63, "module-fl4health.losses", false], [64, "module-fl4health.losses.contrastive_loss", false], [65, "module-fl4health.losses.cosine_similarity_loss", false], [66, "module-fl4health.losses.deep_mmd_loss", false], [67, "module-fl4health.losses.fenda_loss_config", false], [68, "module-fl4health.losses.mkmmd_loss", false], [69, "module-fl4health.losses.perfcl_loss", false], [70, "module-fl4health.losses.weight_drift_loss", false], [71, "module-fl4health.model_bases", false], [72, "module-fl4health.model_bases.apfl_base", false], [73, "module-fl4health.model_bases.autoencoders_base", false], [74, "module-fl4health.model_bases.ensemble_base", false], [75, "module-fl4health.model_bases.feature_extractor_buffer", false], [76, "module-fl4health.model_bases.fedrep_base", false], [77, "module-fl4health.model_bases.fedsimclr_base", false], [78, "module-fl4health.model_bases.fenda_base", false], [79, "module-fl4health.model_bases.masked_layers", false], [80, "module-fl4health.model_bases.masked_layers.masked_conv", false], [81, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false], [82, "module-fl4health.model_bases.masked_layers.masked_linear", false], [83, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false], [84, "module-fl4health.model_bases.moon_base", false], [85, "module-fl4health.model_bases.parallel_split_models", false], [86, "module-fl4health.model_bases.partial_layer_exchange_model", false], [87, "module-fl4health.model_bases.pca", false], [88, "module-fl4health.model_bases.perfcl_base", false], [89, "module-fl4health.model_bases.sequential_split_models", false], [90, "module-fl4health.parameter_exchange", false], [91, "module-fl4health.parameter_exchange.fedpm_exchanger", false], [92, "module-fl4health.parameter_exchange.full_exchanger", false], [93, "module-fl4health.parameter_exchange.layer_exchanger", false], [94, "module-fl4health.parameter_exchange.packing_exchanger", false], [95, "module-fl4health.parameter_exchange.parameter_exchanger_base", false], [96, "module-fl4health.parameter_exchange.parameter_packer", false], [97, "module-fl4health.parameter_exchange.parameter_selection_criteria", false], [98, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false], [99, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false], [100, "module-fl4health.preprocessing", false], [101, "module-fl4health.preprocessing.autoencoders", false], [102, "module-fl4health.preprocessing.autoencoders.dim_reduction", false], [103, "module-fl4health.preprocessing.autoencoders.loss", false], [104, "module-fl4health.preprocessing.pca_preprocessor", false], [105, "module-fl4health.preprocessing.warmed_up_module", false], [106, "module-fl4health.privacy", false], [107, "module-fl4health.privacy.fl_accountants", false], [108, "module-fl4health.privacy.moments_accountant", false], [109, "module-fl4health.reporting", false], [110, "module-fl4health.reporting.base_reporter", false], [111, "module-fl4health.reporting.json_reporter", false], [112, "module-fl4health.reporting.reports_manager", false], [113, "module-fl4health.reporting.wandb_reporter", false], [114, "module-fl4health.servers", false], [115, "module-fl4health.servers.adaptive_constraint_servers", false], [116, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false], [117, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false], [118, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false], [119, "module-fl4health.servers.base_server", false], [120, "module-fl4health.servers.client_level_dp_fed_avg_server", false], [121, "module-fl4health.servers.evaluate_server", false], [122, "module-fl4health.servers.fedpm_server", false], [123, "module-fl4health.servers.instance_level_dp_server", false], [124, "module-fl4health.servers.model_merge_server", false], [125, "module-fl4health.servers.nnunet_server", false], [126, "module-fl4health.servers.polling", false], [127, "module-fl4health.servers.scaffold_server", false], [128, "module-fl4health.servers.tabular_feature_alignment_server", false], [129, "module-fl4health.strategies", false], [130, "module-fl4health.strategies.aggregate_utils", false], [131, "module-fl4health.strategies.basic_fedavg", false], [132, "module-fl4health.strategies.client_dp_fedavgm", false], [133, "module-fl4health.strategies.fedavg_dynamic_layer", false], [134, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false], [135, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false], [136, "module-fl4health.strategies.feddg_ga", false], [137, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false], [138, "module-fl4health.strategies.fedpca", false], [139, "module-fl4health.strategies.fedpm", false], [140, "module-fl4health.strategies.flash", false], [141, "module-fl4health.strategies.model_merge_strategy", false], [142, "module-fl4health.strategies.noisy_aggregate", false], [143, "module-fl4health.strategies.scaffold", false], [144, "module-fl4health.strategies.strategy_with_poll", false], [145, "module-fl4health.utils", false], [146, "module-fl4health.utils.client", false], [147, "module-fl4health.utils.config", false], [148, "module-fl4health.utils.data_generation", false], [149, "module-fl4health.utils.dataset", false], [150, "module-fl4health.utils.dataset_converter", false], [151, "module-fl4health.utils.early_stopper", false], [152, "module-fl4health.utils.functions", false], [153, "module-fl4health.utils.load_data", false], [154, "module-fl4health.utils.logging", false], [155, "module-fl4health.utils.losses", false], [156, "module-fl4health.utils.metric_aggregation", false], [157, "module-fl4health.utils.metrics", false], [158, "module-fl4health.utils.msd_dataset_sources", false], [159, "module-fl4health.utils.nnunet_utils", false], [160, "module-fl4health.utils.parameter_extraction", false], [161, "module-fl4health.utils.partitioners", false], [162, "module-fl4health.utils.privacy_utilities", false], [163, "module-fl4health.utils.random", false], [164, "module-fl4health.utils.sampler", false], [165, "module-fl4health.utils.snapshotter", false], [166, "module-fl4health.utils.typing", false]], "module2losswrapper (class in fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.Module2LossWrapper", false]], "momentsaccountant (class in fl4health.privacy.moments_accountant)": [[108, "fl4health.privacy.moments_accountant.MomentsAccountant", false]], "moonclient (class in fl4health.clients.moon_client)": [[42, "fl4health.clients.moon_client.MoonClient", false]], "mooncontrastiveloss (class in fl4health.losses.contrastive_loss)": [[64, "fl4health.losses.contrastive_loss.MoonContrastiveLoss", false]], "mooncontrastivelosscontainer (class in fl4health.losses.fenda_loss_config)": [[67, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer", false]], "moonmodel (class in fl4health.model_bases.moon_base)": [[84, "fl4health.model_bases.moon_base.MoonModel", false]], "move_data_to_device() (in module fl4health.utils.client)": [[146, "fl4health.utils.client.move_data_to_device", false]], "mrmtlclient (class in fl4health.clients.mr_mtl_client)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient", false]], "mrmtlmkmmdclient (class in fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient", false]], "mrmtlserver (class in fl4health.servers.adaptive_constraint_servers.mrmtl_server)": [[118, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer", false]], "msddataset (class in fl4health.utils.msd_dataset_sources)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset", false]], "narrow_dict_type() (in module fl4health.utils.config)": [[147, "fl4health.utils.config.narrow_dict_type", false]], "narrow_dict_type_and_set_attribute() (in module fl4health.utils.config)": [[147, "fl4health.utils.config.narrow_dict_type_and_set_attribute", false]], "nnunetclient (class in fl4health.clients.nnunet_client)": [[44, "fl4health.clients.nnunet_client.NnunetClient", false]], "nnunetconfig (class in fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.NnunetConfig", false]], "nnunetdataloaderwrapper (class in fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper", false]], "nnunetserver (class in fl4health.servers.nnunet_server)": [[125, "fl4health.servers.nnunet_server.NnunetServer", false]], "nnunetservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule", false]], "normalize() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.normalize", false]], "normalize_metrics() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.normalize_metrics", false]], "notset (loglevel attribute)": [[166, "fl4health.utils.typing.LogLevel.NOTSET", false]], "ntxentloss (class in fl4health.losses.contrastive_loss)": [[64, "fl4health.losses.contrastive_loss.NtXentLoss", false]], "numbersnapshotter (class in fl4health.utils.snapshotter)": [[165, "fl4health.utils.snapshotter.NumberSnapshotter", false]], "numeric (tabulartype attribute)": [[62, "fl4health.feature_alignment.tabular_type.TabularType.NUMERIC", false]], "numpyclippingclient (class in fl4health.clients.clipping_client)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient", false]], "opacusbasicfedavg (class in fl4health.strategies.basic_fedavg)": [[131, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg", false]], "opacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[11, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer", false]], "opacusscaffold (class in fl4health.strategies.scaffold)": [[143, "fl4health.strategies.scaffold.OpacusScaffold", false]], "opacusservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule", false]], "optimize_betas() (mkmmdloss method)": [[68, "fl4health.losses.mkmmd_loss.MkMmdLoss.optimize_betas", false]], "optimizersnapshotter (class in fl4health.utils.snapshotter)": [[165, "fl4health.utils.snapshotter.OptimizerSnapshotter", false]], "ordinal (tabulartype attribute)": [[62, "fl4health.feature_alignment.tabular_type.TabularType.ORDINAL", false]], "pack_parameters() (fullparameterexchangerwithpacking method)": [[94, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.pack_parameters", false]], "pack_parameters() (parameterpacker method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.pack_parameters", false]], "pack_parameters() (parameterpackeradaptiveconstraint method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.pack_parameters", false]], "pack_parameters() (parameterpackerwithclippingbit method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.pack_parameters", false]], "pack_parameters() (parameterpackerwithcontrolvariates method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.pack_parameters", false]], "pack_parameters() (parameterpackerwithlayernames method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.pack_parameters", false]], "pack_parameters() (partialparameterexchanger method)": [[98, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.pack_parameters", false]], "pack_parameters() (sparsecooparameterpacker method)": [[96, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.pack_parameters", false]], "packingservercheckpointandandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule", false]], "pad_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.pad_image_path_func", false]], "pad_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.pad_label_map_func", false]], "pairwise_distance_squared() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.pairwise_distance_squared", false]], "parallel_output_join() (parallelsplitheadmodule method)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.parallel_output_join", false]], "parallelfeaturejoinmode (class in fl4health.model_bases.parallel_split_models)": [[85, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode", false]], "parallelsplitheadmodule (class in fl4health.model_bases.parallel_split_models)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule", false]], "parallelsplitmodel (class in fl4health.model_bases.parallel_split_models)": [[85, "fl4health.model_bases.parallel_split_models.ParallelSplitModel", false]], "parameterexchanger (class in fl4health.parameter_exchange.parameter_exchanger_base)": [[95, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger", false]], "parameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPacker", false]], "parameterpackeradaptiveconstraint (class in fl4health.parameter_exchange.parameter_packer)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint", false]], "parameterpackerwithclippingbit (class in fl4health.parameter_exchange.parameter_packer)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit", false]], "parameterpackerwithcontrolvariates (class in fl4health.parameter_exchange.parameter_packer)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates", false]], "parameterpackerwithlayernames (class in fl4health.parameter_exchange.parameter_packer)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames", false]], "partiallayerexchangemodel (class in fl4health.model_bases.partial_layer_exchange_model)": [[86, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel", false]], "partialparameterexchanger (class in fl4health.parameter_exchange.partial_parameter_exchanger)": [[98, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger", false]], "partialweightexchangeclient (class in fl4health.clients.partial_weight_exchange_client)": [[45, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient", false]], "partition_dataset() (dirichletlabelbasedallocation method)": [[161, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_dataset", false]], "partition_label_indices() (dirichletlabelbasedallocation method)": [[161, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_label_indices", false]], "pcamodule (class in fl4health.model_bases.pca)": [[87, "fl4health.model_bases.pca.PcaModule", false]], "pcapreprocessor (class in fl4health.preprocessing.pca_preprocessor)": [[104, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor", false]], "perfclclient (class in fl4health.clients.perfcl_client)": [[46, "fl4health.clients.perfcl_client.PerFclClient", false]], "perfclloss (class in fl4health.losses.perfcl_loss)": [[69, "fl4health.losses.perfcl_loss.PerFclLoss", false]], "perfcllosscontainer (class in fl4health.losses.fenda_loss_config)": [[67, "fl4health.losses.fenda_loss_config.PerFclLossContainer", false]], "perfclmodel (class in fl4health.model_bases.perfcl_base)": [[88, "fl4health.model_bases.perfcl_base.PerFclModel", false]], "perroundstatecheckpointer (class in fl4health.checkpointing.checkpointer)": [[9, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer", false]], "poissonsampling (class in fl4health.privacy.moments_accountant)": [[108, "fl4health.privacy.moments_accountant.PoissonSampling", false]], "poissonsamplingclientmanager (class in fl4health.client_managers.poisson_sampling_manager)": [[17, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager", false]], "poll_client() (in module fl4health.servers.polling)": [[126, "fl4health.servers.polling.poll_client", false]], "poll_clients() (in module fl4health.servers.polling)": [[126, "fl4health.servers.polling.poll_clients", false]], "poll_clients_for_dimension_info() (tabularfeaturealignmentserver method)": [[128, "fl4health.servers.tabular_feature_alignment_server.TabularFeatureAlignmentServer.poll_clients_for_dimension_info", false]], "poll_clients_for_feature_info() (tabularfeaturealignmentserver method)": [[128, "fl4health.servers.tabular_feature_alignment_server.TabularFeatureAlignmentServer.poll_clients_for_feature_info", false]], "poll_clients_for_sample_counts() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.poll_clients_for_sample_counts", false]], "polylrschedulerwrapper (class in fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper", false]], "post_aggregation (checkpointmode attribute)": [[10, "fl4health.checkpointing.client_module.CheckpointMode.POST_AGGREGATION", false]], "pre_aggregation (checkpointmode attribute)": [[10, "fl4health.checkpointing.client_module.CheckpointMode.PRE_AGGREGATION", false]], "predict() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.predict", false]], "predict() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.predict", false]], "predict() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.predict", false]], "predict() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.predict", false]], "predict() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.predict", false]], "predict() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.predict", false]], "predict() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.predict", false]], "predict() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.predict", false]], "predict() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.predict", false]], "predict() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.predict", false]], "prepare_data_forward() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.prepare_data_forward", false]], "prepare_loss_arg() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.prepare_loss_arg", false]], "preprocess_derm7pt() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_derm7pt", false]], "preprocess_features() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.preprocess_features", false]], "preprocess_ham10000() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_ham10000", false]], "preprocess_isic_2019() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_isic_2019", false]], "preprocess_pad_ufes_20() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_pad_ufes_20", false]], "preset_specific_pipeline() (tabulardataclient method)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient.preset_specific_pipeline", false]], "privacy_validate_and_fix_modules() (in module fl4health.utils.privacy_utilities)": [[162, "fl4health.utils.privacy_utilities.privacy_validate_and_fix_modules", false]], "process_client_data() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.process_client_data", false]], "process_config() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.process_config", false]], "process_config() (flashclient method)": [[36, "fl4health.clients.flash_client.FlashClient.process_config", false]], "process_data() (in module fl4health.datasets.rxrx1.preprocess)": [[52, "fl4health.datasets.rxrx1.preprocess.process_data", false]], "process_fed_rep_config() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.process_fed_rep_config", false]], "project_back() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.project_back", false]], "project_lower_dim() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.project_lower_dim", false]], "pseudo_sort_scoring_function() (in module fl4health.utils.functions)": [[152, "fl4health.utils.functions.pseudo_sort_scoring_function", false]], "pull_parameters() (dynamiclayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.pull_parameters", false]], "pull_parameters() (fedpmexchanger method)": [[91, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.pull_parameters", false]], "pull_parameters() (fixedlayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.pull_parameters", false]], "pull_parameters() (fullparameterexchanger method)": [[92, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.pull_parameters", false]], "pull_parameters() (layerexchangerwithexclusions method)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.pull_parameters", false]], "pull_parameters() (parameterexchanger method)": [[95, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.pull_parameters", false]], "pull_parameters() (sparsecooparameterexchanger method)": [[99, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.pull_parameters", false]], "push_parameters() (dynamiclayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.push_parameters", false]], "push_parameters() (fixedlayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.push_parameters", false]], "push_parameters() (fullparameterexchanger method)": [[92, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.push_parameters", false]], "push_parameters() (layerexchangerwithexclusions method)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.push_parameters", false]], "push_parameters() (parameterexchanger method)": [[95, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.push_parameters", false]], "push_parameters() (sparsecooparameterexchanger method)": [[99, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.push_parameters", false]], "reduce_dimension() (pcapreprocessor method)": [[104, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.reduce_dimension", false]], "reload_modules() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.reload_modules", false]], "remove_hooks() (featureextractorbuffer method)": [[75, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.remove_hooks", false]], "report() (basereporter method)": [[110, "fl4health.reporting.base_reporter.BaseReporter.report", false]], "report() (filereporter method)": [[111, "fl4health.reporting.json_reporter.FileReporter.report", false]], "report() (reportsmanager method)": [[112, "fl4health.reporting.reports_manager.ReportsManager.report", false]], "report() (wandbreporter method)": [[109, "fl4health.reporting.WandBReporter.report", false], [113, "fl4health.reporting.wandb_reporter.WandBReporter.report", false]], "report_centralized_eval() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.report_centralized_eval", false]], "reportsmanager (class in fl4health.reporting.reports_manager)": [[112, "fl4health.reporting.reports_manager.ReportsManager", false]], "representation (fedreptrainmode attribute)": [[33, "fl4health.clients.fedrep_client.FedRepTrainMode.REPRESENTATION", false]], "reset() (nnunetdataloaderwrapper method)": [[159, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper.reset", false]], "reset_beta_priors() (fedpm method)": [[139, "fl4health.strategies.fedpm.FedPm.reset_beta_priors", false]], "reset_sample() (fixedsamplingclientmanager method)": [[15, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.reset_sample", false]], "restore_random_state() (in module fl4health.utils.random)": [[163, "fl4health.utils.random.restore_random_state", false]], "return_column_transformer() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.return_column_transformer", false]], "roc_auc (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.ROC_AUC", false]], "round (steptype attribute)": [[113, "fl4health.reporting.wandb_reporter.StepType.ROUND", false]], "sample() (basefractionsamplingmanager method)": [[14, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample", false]], "sample() (fixedsamplingclientmanager method)": [[15, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.sample", false]], "sample_all() (basefractionsamplingmanager method)": [[14, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_all", false]], "sample_fraction() (basefractionsamplingmanager method)": [[14, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_fraction", false]], "sample_fraction() (fixedsamplingbyfractionclientmanager method)": [[16, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager.sample_fraction", false]], "sample_fraction() (poissonsamplingclientmanager method)": [[17, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager.sample_fraction", false]], "sampling() (conditionalvae method)": [[73, "fl4health.model_bases.autoencoders_base.ConditionalVae.sampling", false]], "sampling() (variationalae method)": [[73, "fl4health.model_bases.autoencoders_base.VariationalAe.sampling", false]], "samplingstrategy (class in fl4health.privacy.moments_accountant)": [[108, "fl4health.privacy.moments_accountant.SamplingStrategy", false]], "save() (abstractsnapshotter method)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter.save", false]], "save_attribute() (abstractsnapshotter method)": [[165, "fl4health.utils.snapshotter.AbstractSnapshotter.save_attribute", false]], "save_attribute() (lrschedulersnapshotter method)": [[165, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.save_attribute", false]], "save_attribute() (numbersnapshotter method)": [[165, "fl4health.utils.snapshotter.NumberSnapshotter.save_attribute", false]], "save_attribute() (optimizersnapshotter method)": [[165, "fl4health.utils.snapshotter.OptimizerSnapshotter.save_attribute", false]], "save_attribute() (serializableobjectsnapshotter method)": [[165, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.save_attribute", false]], "save_attribute() (torchmodulesnapshotter method)": [[165, "fl4health.utils.snapshotter.TorchModuleSnapshotter.save_attribute", false]], "save_checkpoint() (perroundstatecheckpointer method)": [[9, "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer.save_checkpoint", false]], "save_model() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.save_model", false]], "save_random_state() (in module fl4health.utils.random)": [[163, "fl4health.utils.random.save_random_state", false]], "save_snapshot() (earlystopper method)": [[151, "fl4health.utils.early_stopper.EarlyStopper.save_snapshot", false]], "save_state() (baseservercheckpointandstatemodule method)": [[12, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.save_state", false]], "save_state() (clientcheckpointandstatemodule method)": [[10, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.save_state", false]], "save_to_json() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[55, "fl4health.datasets.skin_cancer.preprocess_skin.save_to_json", false]], "save_to_pkl() (in module fl4health.datasets.rxrx1.preprocess)": [[52, "fl4health.datasets.rxrx1.preprocess.save_to_pkl", false]], "scaffold (class in fl4health.strategies.scaffold)": [[143, "fl4health.strategies.scaffold.Scaffold", false]], "scaffoldclient (class in fl4health.clients.scaffold_client)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient", false]], "scaffoldserver (class in fl4health.servers.scaffold_server)": [[127, "fl4health.servers.scaffold_server.ScaffoldServer", false]], "scaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule", false]], "select_by_indices() (in module fl4health.utils.dataset)": [[149, "fl4health.utils.dataset.select_by_indices", false]], "select_by_percentage() (layerselectionfunctionconstructor method)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_percentage", false]], "select_by_threshold() (layerselectionfunctionconstructor method)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_threshold", false]], "select_layers_by_percentage() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_percentage", false]], "select_layers_by_threshold() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_threshold", false]], "select_parameters() (dynamiclayerexchanger method)": [[93, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.select_parameters", false]], "select_parameters() (partialparameterexchanger method)": [[98, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.select_parameters", false]], "select_parameters() (sparsecooparameterexchanger method)": [[99, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.select_parameters", false]], "select_scores_and_sample_masks() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.select_scores_and_sample_masks", false]], "select_zeroeth_element() (in module fl4health.utils.functions)": [[152, "fl4health.utils.functions.select_zeroeth_element", false]], "sequential_forward() (moonmodel method)": [[84, "fl4health.model_bases.moon_base.MoonModel.sequential_forward", false]], "sequential_forward() (sequentiallysplitmodel method)": [[89, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.sequential_forward", false]], "sequentiallysplitexchangebasemodel (class in fl4health.model_bases.sequential_split_models)": [[89, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel", false]], "sequentiallysplitmodel (class in fl4health.model_bases.sequential_split_models)": [[89, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel", false]], "serializableobjectsnapshotter (class in fl4health.utils.snapshotter)": [[165, "fl4health.utils.snapshotter.SerializableObjectSnapshotter", false]], "set_all_random_seeds() (in module fl4health.utils.random)": [[163, "fl4health.utils.random.set_all_random_seeds", false]], "set_data_mean() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.set_data_mean", false]], "set_feature_pipeline() (tabularfeaturespreprocessor method)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor.set_feature_pipeline", false]], "set_feature_specific_pipelines() (tabulardataclient method)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient.set_feature_specific_pipelines", false]], "set_initial_global_tensors() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.set_initial_global_tensors", false]], "set_initial_global_tensors() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_initial_global_tensors", false]], "set_nnunet_env() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.set_nnunet_env", false]], "set_optimizer() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.set_optimizer", false]], "set_optimizer() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.set_optimizer", false]], "set_optimizer() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.set_optimizer", false]], "set_optimizer() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.set_optimizer", false]], "set_optimizer() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.set_optimizer", false]], "set_pack_losses_with_val_metrics() (in module fl4health.utils.client)": [[146, "fl4health.utils.client.set_pack_losses_with_val_metrics", false]], "set_parameters() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.set_parameters", false]], "set_parameters() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.set_parameters", false]], "set_parameters() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.set_parameters", false]], "set_parameters() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.set_parameters", false]], "set_parameters() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.set_parameters", false]], "set_parameters() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_parameters", false]], "set_parameters() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.set_parameters", false]], "set_parameters() (mrmtlclient method)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient.set_parameters", false]], "set_parameters() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.set_parameters", false]], "set_parameters() (partialweightexchangeclient method)": [[45, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.set_parameters", false]], "set_parameters() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.set_parameters", false]], "set_principal_components() (pcamodule method)": [[87, "fl4health.model_bases.pca.PcaModule.set_principal_components", false]], "setup_client() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.setup_client", false]], "setup_client() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.setup_client", false]], "setup_client() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.setup_client", false]], "setup_client() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.setup_client", false]], "setup_client() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.setup_client", false]], "setup_client() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.setup_client", false]], "setup_client() (fedpcaclient method)": [[29, "fl4health.clients.fed_pca_client.FedPCAClient.setup_client", false]], "setup_client() (fedpmclient method)": [[32, "fl4health.clients.fedpm_client.FedPmClient.setup_client", false]], "setup_client() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.setup_client", false]], "setup_client() (flashclient method)": [[36, "fl4health.clients.flash_client.FlashClient.setup_client", false]], "setup_client() (instanceleveldpclient method)": [[37, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_client", false]], "setup_client() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.setup_client", false]], "setup_client() (mrmtlclient method)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient.setup_client", false]], "setup_client() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.setup_client", false]], "setup_client() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.setup_client", false]], "setup_client() (numpyclippingclient method)": [[22, "fl4health.clients.clipping_client.NumpyClippingClient.setup_client", false]], "setup_client() (partialweightexchangeclient method)": [[45, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.setup_client", false]], "setup_client() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.setup_client", false]], "setup_client() (tabulardataclient method)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient.setup_client", false]], "setup_context() (bernoullisample static method)": [[152, "fl4health.utils.functions.BernoulliSample.setup_context", false]], "setup_opacus_objects() (instanceleveldpclient method)": [[37, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_opacus_objects", false]], "setup_privacy_accountant() (clientleveldpfedavgserver method)": [[120, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.setup_privacy_accountant", false]], "setup_privacy_accountant() (instanceleveldpserver method)": [[123, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.setup_privacy_accountant", false]], "should_layer_be_excluded() (layerexchangerwithexclusions method)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_layer_be_excluded", false]], "should_module_be_excluded() (layerexchangerwithexclusions method)": [[93, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_module_be_excluded", false]], "should_stop() (earlystopper method)": [[151, "fl4health.utils.early_stopper.EarlyStopper.should_stop", false]], "shutdown() (basereporter method)": [[110, "fl4health.reporting.base_reporter.BaseReporter.shutdown", false]], "shutdown() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.shutdown", false]], "shutdown() (filereporter method)": [[111, "fl4health.reporting.json_reporter.FileReporter.shutdown", false]], "shutdown() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.shutdown", false]], "shutdown() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.shutdown", false]], "shutdown() (nnunetdataloaderwrapper method)": [[159, "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper.shutdown", false]], "shutdown() (reportsmanager method)": [[112, "fl4health.reporting.reports_manager.ReportsManager.shutdown", false]], "shutdown() (wandbreporter method)": [[109, "fl4health.reporting.WandBReporter.shutdown", false], [113, "fl4health.reporting.wandb_reporter.WandBReporter.shutdown", false]], "shutdown_dataloader() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.shutdown_dataloader", false]], "sigmoid_inverse() (in module fl4health.utils.functions)": [[152, "fl4health.utils.functions.sigmoid_inverse", false]], "signal_for_type() (fairnessmetrictype class method)": [[136, "fl4health.strategies.feddg_ga.FairnessMetricType.signal_for_type", false]], "signalfortypeexception": [[136, "fl4health.strategies.feddg_ga.SignalForTypeException", false]], "simplemetric (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.SimpleMetric", false]], "smallest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_final_magnitude_scores", false]], "smallest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_increase_in_magnitude_scores", false]], "smallest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[97, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_magnitude_change_scores", false]], "sparsecooparameterexchanger (class in fl4health.parameter_exchange.sparse_coo_parameter_exchanger)": [[99, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger", false]], "sparsecooparameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[96, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker", false]], "sparsecooservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[12, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule", false]], "split_data_and_targets() (in module fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.split_data_and_targets", false]], "split_model_weights_and_clipping_bits() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.split_model_weights_and_clipping_bits", false]], "ssltensordataset (class in fl4health.utils.dataset)": [[149, "fl4health.utils.dataset.SslTensorDataset", false]], "standard_normal_kl_divergence_loss() (vaeloss method)": [[103, "fl4health.preprocessing.autoencoders.loss.VaeLoss.standard_normal_kl_divergence_loss", false]], "start_run() (wandbreporter method)": [[109, "fl4health.reporting.WandBReporter.start_run", false], [113, "fl4health.reporting.wandb_reporter.WandBReporter.start_run", false]], "step (steptype attribute)": [[113, "fl4health.reporting.wandb_reporter.StepType.STEP", false]], "steptype (class in fl4health.reporting.wandb_reporter)": [[113, "fl4health.reporting.wandb_reporter.StepType", false]], "strategywithpolling (class in fl4health.strategies.strategy_with_poll)": [[144, "fl4health.strategies.strategy_with_poll.StrategyWithPolling", false]], "streamtologger (class in fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.StreamToLogger", false]], "string (tabulartype attribute)": [[62, "fl4health.feature_alignment.tabular_type.TabularType.STRING", false]], "subsample() (dirichletlabelbasedsampler method)": [[164, "fl4health.utils.sampler.DirichletLabelBasedSampler.subsample", false]], "subsample() (labelbasedsampler method)": [[164, "fl4health.utils.sampler.LabelBasedSampler.subsample", false]], "subsample() (minoritylabelbasedsampler method)": [[164, "fl4health.utils.sampler.MinorityLabelBasedSampler.subsample", false]], "sum (parallelfeaturejoinmode attribute)": [[85, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.SUM", false]], "syntheticdataset (class in fl4health.utils.dataset)": [[149, "fl4health.utils.dataset.SyntheticDataset", false]], "syntheticfedproxdataset (class in fl4health.utils.data_generation)": [[148, "fl4health.utils.data_generation.SyntheticFedProxDataset", false]], "syntheticiidfedproxdataset (class in fl4health.utils.data_generation)": [[148, "fl4health.utils.data_generation.SyntheticIidFedProxDataset", false]], "syntheticnoniidfedproxdataset (class in fl4health.utils.data_generation)": [[148, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset", false]], "tabulardataclient (class in fl4health.clients.tabular_data_client)": [[48, "fl4health.clients.tabular_data_client.TabularDataClient", false]], "tabularfeature (class in fl4health.feature_alignment.tabular_feature)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature", false]], "tabularfeaturealignmentserver (class in fl4health.servers.tabular_feature_alignment_server)": [[128, "fl4health.servers.tabular_feature_alignment_server.TabularFeatureAlignmentServer", false]], "tabularfeaturesinfoencoder (class in fl4health.feature_alignment.tab_features_info_encoder)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder", false]], "tabularfeaturespreprocessor (class in fl4health.feature_alignment.tab_features_preprocessor)": [[60, "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor", false]], "tabulartype (class in fl4health.feature_alignment.tabular_type)": [[62, "fl4health.feature_alignment.tabular_type.TabularType", false]], "task01_braintumour (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK01_BRAINTUMOUR", false]], "task02_heart (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK02_HEART", false]], "task03_liver (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK03_LIVER", false]], "task04_hippocampus (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK04_HIPPOCAMPUS", false]], "task05_prostate (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK05_PROSTATE", false]], "task06_lung (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK06_LUNG", false]], "task07_pancreas (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK07_PANCREAS", false]], "task08_hepaticvessel (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK08_HEPATICVESSEL", false]], "task09_spleen (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK09_SPLEEN", false]], "task10_colon (msddataset attribute)": [[158, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK10_COLON", false]], "tensordataset (class in fl4health.utils.dataset)": [[149, "fl4health.utils.dataset.TensorDataset", false]], "test (loggingmode attribute)": [[154, "fl4health.utils.logging.LoggingMode.TEST", false]], "test_prefix (metricprefix attribute)": [[157, "fl4health.utils.metrics.MetricPrefix.TEST_PREFIX", false]], "textcolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[58, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer", false]], "textmulticolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[58, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer", false]], "to_json() (tabularfeature method)": [[61, "fl4health.feature_alignment.tabular_feature.TabularFeature.to_json", false]], "to_json() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.to_json", false]], "tonumpy (class in fl4health.utils.load_data)": [[153, "fl4health.utils.load_data.ToNumpy", false]], "torchmetric (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.TorchMetric", false]], "torchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[9, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer", false]], "torchmodulesnapshotter (class in fl4health.utils.snapshotter)": [[165, "fl4health.utils.snapshotter.TorchModuleSnapshotter", false]], "train (loggingmode attribute)": [[154, "fl4health.utils.logging.LoggingMode.TRAIN", false]], "train_by_epochs() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.train_by_epochs", false]], "train_by_epochs() (flashclient method)": [[36, "fl4health.clients.flash_client.FlashClient.train_by_epochs", false]], "train_by_steps() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.train_by_steps", false]], "train_fedrep_by_epochs() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_epochs", false]], "train_fedrep_by_steps() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_steps", false]], "train_kernel() (deepmmdloss method)": [[66, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.train_kernel", false]], "train_step() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.train_step", false]], "train_step() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.train_step", false]], "train_step() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.train_step", false]], "train_step() (ensembleclient method)": [[27, "fl4health.clients.ensemble_client.EnsembleClient.train_step", false]], "train_step() (fedrepclient method)": [[33, "fl4health.clients.fedrep_client.FedRepClient.train_step", false]], "train_step() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.train_step", false]], "traininglosses (class in fl4health.utils.losses)": [[155, "fl4health.utils.losses.TrainingLosses", false]], "transform() (textcolumntransformer method)": [[58, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.transform", false]], "transform() (textmulticolumntransformer method)": [[58, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.transform", false]], "transform_gradients() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.transform_gradients", false]], "transform_gradients() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.transform_gradients", false]], "transform_gradients() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.transform_gradients", false]], "transform_target() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.transform_target", false]], "transformsmetric (class in fl4health.utils.metrics)": [[157, "fl4health.utils.metrics.TransformsMetric", false]], "type_to_features() (tabularfeaturesinfoencoder method)": [[59, "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder.type_to_features", false]], "unfreeze_base_module() (fedrepmodel method)": [[76, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_base_module", false]], "unfreeze_head_module() (fedrepmodel method)": [[76, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_head_module", false]], "uniform_evaluate_metrics_aggregation_fn() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.uniform_evaluate_metrics_aggregation_fn", false]], "uniform_metric_aggregation() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.uniform_metric_aggregation", false]], "uniform_normalize_metrics() (in module fl4health.utils.metric_aggregation)": [[156, "fl4health.utils.metric_aggregation.uniform_normalize_metrics", false]], "unpack_input_condition() (autoencoderdatasetconverter static method)": [[150, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.unpack_input_condition", false]], "unpack_model_output() (vaeloss method)": [[103, "fl4health.preprocessing.autoencoders.loss.VaeLoss.unpack_model_output", false]], "unpack_parameters() (fullparameterexchangerwithpacking method)": [[94, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.unpack_parameters", false]], "unpack_parameters() (parameterpacker method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.unpack_parameters", false]], "unpack_parameters() (parameterpackeradaptiveconstraint method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithclippingbit method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithcontrolvariates method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithlayernames method)": [[96, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.unpack_parameters", false]], "unpack_parameters() (partialparameterexchanger method)": [[98, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.unpack_parameters", false]], "unpack_parameters() (sparsecooparameterpacker method)": [[96, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.unpack_parameters", false]], "unset_all_random_seeds() (in module fl4health.utils.random)": [[163, "fl4health.utils.random.unset_all_random_seeds", false]], "unweighted_aggregate() (fedavgdynamiclayer method)": [[133, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.unweighted_aggregate", false]], "unweighted_aggregate() (fedavgsparsecootensor method)": [[134, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.unweighted_aggregate", false]], "update() (lossmeter method)": [[155, "fl4health.utils.losses.LossMeter.update", false]], "update() (metric method)": [[157, "fl4health.utils.metrics.Metric.update", false]], "update() (metricmanager method)": [[157, "fl4health.utils.metrics.MetricManager.update", false]], "update() (simplemetric method)": [[157, "fl4health.utils.metrics.SimpleMetric.update", false]], "update() (torchmetric method)": [[157, "fl4health.utils.metrics.TorchMetric.update", false]], "update() (transformsmetric method)": [[157, "fl4health.utils.metrics.TransformsMetric.update", false]], "update_after_step() (apflclient method)": [[20, "fl4health.clients.apfl_client.ApflClient.update_after_step", false]], "update_after_step() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_after_step", false]], "update_after_step() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_after_step", false]], "update_after_step() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_after_step", false]], "update_after_step() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_after_step", false]], "update_after_train() (adaptivedriftconstraintclient method)": [[19, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.update_after_train", false]], "update_after_train() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_after_train", false]], "update_after_train() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_after_train", false]], "update_after_train() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.update_after_train", false]], "update_after_train() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.update_after_train", false]], "update_after_train() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.update_after_train", false]], "update_alpha() (apflmodule method)": [[72, "fl4health.model_bases.apfl_base.ApflModule.update_alpha", false]], "update_before_epoch() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_before_epoch", false]], "update_before_fit() (flserver method)": [[119, "fl4health.servers.base_server.FlServer.update_before_fit", false]], "update_before_fit() (nnunetserver method)": [[125, "fl4health.servers.nnunet_server.NnunetServer.update_before_fit", false]], "update_before_step() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_before_step", false]], "update_before_train() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_before_train", false]], "update_before_train() (constrainedfendaclient method)": [[23, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_before_train", false]], "update_before_train() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.update_before_train", false]], "update_before_train() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_before_train", false]], "update_before_train() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_before_train", false]], "update_before_train() (fedproxclient method)": [[30, "fl4health.clients.fed_prox_client.FedProxClient.update_before_train", false]], "update_before_train() (fendadittoclient method)": [[35, "fl4health.clients.fenda_ditto_client.FendaDittoClient.update_before_train", false]], "update_before_train() (moonclient method)": [[42, "fl4health.clients.moon_client.MoonClient.update_before_train", false]], "update_before_train() (mrmtlclient method)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient.update_before_train", false]], "update_before_train() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_before_train", false]], "update_before_train() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.update_before_train", false]], "update_before_train() (perfclclient method)": [[46, "fl4health.clients.perfcl_client.PerFclClient.update_before_train", false]], "update_buffers() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_buffers", false]], "update_buffers() (dittomkmmdclient method)": [[39, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_buffers", false]], "update_buffers() (mrmtlmkmmdclient method)": [[40, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_buffers", false]], "update_clipping_bound() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_clipping_bound", false]], "update_control_variates() (scaffoldclient method)": [[47, "fl4health.clients.scaffold_client.ScaffoldClient.update_control_variates", false]], "update_current_weights() (clientleveldpfedavgm method)": [[132, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_current_weights", false]], "update_lr_schedulers() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_lr_schedulers", false]], "update_metric_manager() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.update_metric_manager", false]], "update_metric_manager() (nnunetclient method)": [[44, "fl4health.clients.nnunet_client.NnunetClient.update_metric_manager", false]], "update_target_transform() (basedataset method)": [[149, "fl4health.utils.dataset.BaseDataset.update_target_transform", false]], "update_transform() (basedataset method)": [[149, "fl4health.utils.dataset.BaseDataset.update_transform", false]], "update_weights_by_ga() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.update_weights_by_ga", false]], "use_default_signal_handlers() (in module fl4health.utils.nnunet_utils)": [[159, "fl4health.utils.nnunet_utils.use_default_signal_handlers", false]], "vaeloss (class in fl4health.preprocessing.autoencoders.loss)": [[103, "fl4health.preprocessing.autoencoders.loss.VaeLoss", false]], "vaeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[102, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor", false]], "val_prefix (metricprefix attribute)": [[157, "fl4health.utils.metrics.MetricPrefix.VAL_PREFIX", false]], "val_step() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.val_step", false]], "validate() (basicclient method)": [[21, "fl4health.clients.basic_client.BasicClient.validate", false]], "validate() (dittoclient method)": [[26, "fl4health.clients.ditto_client.DittoClient.validate", false]], "validate() (dittodeepmmdclient method)": [[25, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.validate", false]], "validate() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.validate", false]], "validate() (modelmergeclient method)": [[41, "fl4health.clients.model_merge_client.ModelMergeClient.validate", false]], "validate() (mrmtlclient method)": [[43, "fl4health.clients.mr_mtl_client.MrMtlClient.validate", false]], "validate_on_model() (evaluateclient method)": [[28, "fl4health.clients.evaluate_client.EvaluateClient.validate_on_model", false]], "validation (loggingmode attribute)": [[154, "fl4health.utils.logging.LoggingMode.VALIDATION", false]], "variationalae (class in fl4health.model_bases.autoencoders_base)": [[73, "fl4health.model_bases.autoencoders_base.VariationalAe", false]], "vote (ensembleaggregationmode attribute)": [[74, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.VOTE", false]], "wait_and_filter() (basefractionsamplingmanager method)": [[14, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.wait_and_filter", false]], "wandbreporter (class in fl4health.reporting)": [[109, "fl4health.reporting.WandBReporter", false]], "wandbreporter (class in fl4health.reporting.wandb_reporter)": [[113, "fl4health.reporting.wandb_reporter.WandBReporter", false]], "warmedupmodule (class in fl4health.preprocessing.warmed_up_module)": [[105, "fl4health.preprocessing.warmed_up_module.WarmedUpModule", false]], "warning (loglevel attribute)": [[166, "fl4health.utils.typing.LogLevel.WARNING", false]], "weight (maskedconv1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.weight", false]], "weight (maskedconv2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.weight", false]], "weight (maskedconv3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.weight", false]], "weight (maskedconvtranspose1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.weight", false]], "weight (maskedconvtranspose2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.weight", false]], "weight (maskedconvtranspose3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.weight", false]], "weight (maskedlayernorm attribute)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.weight", false]], "weight (maskedlinear attribute)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.weight", false]], "weight_and_aggregate_results() (feddgga method)": [[136, "fl4health.strategies.feddg_ga.FedDgGa.weight_and_aggregate_results", false]], "weight_score (maskedconv1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.weight_score", false]], "weight_score (maskedconv2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.weight_score", false]], "weight_score (maskedconv3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.weight_score", false]], "weight_score (maskedconvtranspose1d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.weight_score", false]], "weight_score (maskedconvtranspose2d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.weight_score", false]], "weight_score (maskedconvtranspose3d attribute)": [[80, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.weight_score", false]], "weight_score (maskedlayernorm attribute)": [[83, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.weight_score", false]], "weight_score (maskedlinear attribute)": [[82, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.weight_score", false]], "weightdriftloss (class in fl4health.losses.weight_drift_loss)": [[70, "fl4health.losses.weight_drift_loss.WeightDriftLoss", false]], "weighted_aggregate() (fedavgdynamiclayer method)": [[133, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.weighted_aggregate", false]], "weighted_aggregate() (fedavgsparsecootensor method)": [[134, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.weighted_aggregate", false]], "write() (streamtologger method)": [[159, "fl4health.utils.nnunet_utils.StreamToLogger.write", false]]}, "objects": {"": [[7, 0, 0, "-", "fl4health"]], "fl4health": [[8, 0, 0, "-", "checkpointing"], [13, 0, 0, "-", "client_managers"], [18, 0, 0, "-", "clients"], [49, 0, 0, "-", "datasets"], [56, 0, 0, "-", "feature_alignment"], [63, 0, 0, "-", "losses"], [71, 0, 0, "-", "model_bases"], [90, 0, 0, "-", "parameter_exchange"], [100, 0, 0, "-", "preprocessing"], [106, 0, 0, "-", "privacy"], [109, 0, 0, "-", "reporting"], [114, 0, 0, "-", "servers"], [129, 0, 0, "-", "strategies"], [145, 0, 0, "-", "utils"]], "fl4health.checkpointing": [[9, 0, 0, "-", "checkpointer"], [10, 0, 0, "-", "client_module"], [11, 0, 0, "-", "opacus_checkpointer"], [12, 0, 0, "-", "server_module"]], "fl4health.checkpointing.checkpointer": [[9, 1, 1, "", "BestLossTorchModuleCheckpointer"], [9, 1, 1, "", "FunctionTorchModuleCheckpointer"], [9, 1, 1, "", "LatestTorchModuleCheckpointer"], [9, 1, 1, "", "PerRoundStateCheckpointer"], [9, 1, 1, "", "TorchModuleCheckpointer"]], "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.PerRoundStateCheckpointer": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "checkpoint_exists"], [9, 2, 1, "", "load_checkpoint"], [9, 2, 1, "", "save_checkpoint"]], "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "load_checkpoint"], [9, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.client_module": [[10, 1, 1, "", "CheckpointMode"], [10, 1, 1, "", "ClientCheckpointAndStateModule"]], "fl4health.checkpointing.client_module.CheckpointMode": [[10, 3, 1, "", "POST_AGGREGATION"], [10, 3, 1, "", "PRE_AGGREGATION"]], "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"], [10, 2, 1, "", "maybe_load_state"], [10, 2, 1, "", "save_state"]], "fl4health.checkpointing.opacus_checkpointer": [[11, 1, 1, "", "BestLossOpacusCheckpointer"], [11, 1, 1, "", "LatestOpacusCheckpointer"], [11, 1, 1, "", "OpacusCheckpointer"]], "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer": [[11, 2, 1, "", "load_best_checkpoint_into_model"], [11, 2, 1, "", "load_checkpoint"], [11, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.server_module": [[12, 1, 1, "", "AdaptiveConstraintServerCheckpointAndStateModule"], [12, 1, 1, "", "BaseServerCheckpointAndStateModule"], [12, 1, 1, "", "ClippingBitServerCheckpointAndStateModule"], [12, 1, 1, "", "DpScaffoldServerCheckpointAndStateModule"], [12, 1, 1, "", "LayerNamesServerCheckpointAndStateModule"], [12, 1, 1, "", "NnUnetServerCheckpointAndStateModule"], [12, 1, 1, "", "OpacusServerCheckpointAndStateModule"], [12, 1, 1, "", "PackingServerCheckpointAndAndStateModule"], [12, 1, 1, "", "ScaffoldServerCheckpointAndStateModule"], [12, 1, 1, "", "SparseCooServerCheckpointAndStateModule"]], "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"], [12, 2, 1, "", "maybe_load_state"], [12, 2, 1, "", "save_state"]], "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule": [[12, 2, 1, "", "__init__"]], "fl4health.client_managers": [[14, 0, 0, "-", "base_sampling_manager"], [15, 0, 0, "-", "fixed_sampling_client_manager"], [16, 0, 0, "-", "fixed_without_replacement_manager"], [17, 0, 0, "-", "poisson_sampling_manager"]], "fl4health.client_managers.base_sampling_manager": [[14, 1, 1, "", "BaseFractionSamplingManager"]], "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager": [[14, 2, 1, "", "sample"], [14, 2, 1, "", "sample_all"], [14, 2, 1, "", "sample_fraction"], [14, 2, 1, "", "wait_and_filter"]], "fl4health.client_managers.fixed_sampling_client_manager": [[15, 1, 1, "", "FixedSamplingClientManager"]], "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager": [[15, 2, 1, "", "reset_sample"], [15, 2, 1, "", "sample"]], "fl4health.client_managers.fixed_without_replacement_manager": [[16, 1, 1, "", "FixedSamplingByFractionClientManager"]], "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager": [[16, 2, 1, "", "sample_fraction"]], "fl4health.client_managers.poisson_sampling_manager": [[17, 1, 1, "", "PoissonSamplingClientManager"]], "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager": [[17, 2, 1, "", "sample_fraction"]], "fl4health.clients": [[19, 0, 0, "-", "adaptive_drift_constraint_client"], [20, 0, 0, "-", "apfl_client"], [21, 0, 0, "-", "basic_client"], [22, 0, 0, "-", "clipping_client"], [23, 0, 0, "-", "constrained_fenda_client"], [24, 0, 0, "-", "deep_mmd_clients"], [26, 0, 0, "-", "ditto_client"], [27, 0, 0, "-", "ensemble_client"], [28, 0, 0, "-", "evaluate_client"], [29, 0, 0, "-", "fed_pca_client"], [30, 0, 0, "-", "fed_prox_client"], [31, 0, 0, "-", "fedper_client"], [32, 0, 0, "-", "fedpm_client"], [33, 0, 0, "-", "fedrep_client"], [34, 0, 0, "-", "fenda_client"], [35, 0, 0, "-", "fenda_ditto_client"], [36, 0, 0, "-", "flash_client"], [37, 0, 0, "-", "instance_level_dp_client"], [38, 0, 0, "-", "mkmmd_clients"], [41, 0, 0, "-", "model_merge_client"], [42, 0, 0, "-", "moon_client"], [43, 0, 0, "-", "mr_mtl_client"], [44, 0, 0, "-", "nnunet_client"], [45, 0, 0, "-", "partial_weight_exchange_client"], [46, 0, 0, "-", "perfcl_client"], [47, 0, 0, "-", "scaffold_client"], [48, 0, 0, "-", "tabular_data_client"]], "fl4health.clients.adaptive_drift_constraint_client": [[19, 1, 1, "", "AdaptiveDriftConstraintClient"]], "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "compute_penalty_loss"], [19, 2, 1, "", "compute_training_loss"], [19, 2, 1, "", "get_parameter_exchanger"], [19, 2, 1, "", "get_parameters"], [19, 2, 1, "", "set_parameters"], [19, 2, 1, "", "update_after_train"]], "fl4health.clients.apfl_client": [[20, 1, 1, "", "ApflClient"]], "fl4health.clients.apfl_client.ApflClient": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "compute_loss_and_additional_losses"], [20, 2, 1, "", "get_optimizer"], [20, 2, 1, "", "get_parameter_exchanger"], [20, 2, 1, "", "is_start_of_local_training"], [20, 2, 1, "", "set_optimizer"], [20, 2, 1, "", "train_step"], [20, 2, 1, "", "update_after_step"]], "fl4health.clients.basic_client": [[21, 1, 1, "", "BasicClient"]], "fl4health.clients.basic_client.BasicClient": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "compute_evaluation_loss"], [21, 2, 1, "", "compute_loss_and_additional_losses"], [21, 2, 1, "", "compute_training_loss"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_client_specific_logs"], [21, 2, 1, "", "get_client_specific_reports"], [21, 2, 1, "", "get_criterion"], [21, 2, 1, "", "get_data_loaders"], [21, 2, 1, "", "get_lr_scheduler"], [21, 2, 1, "", "get_model"], [21, 2, 1, "", "get_optimizer"], [21, 2, 1, "", "get_parameter_exchanger"], [21, 2, 1, "", "get_parameters"], [21, 2, 1, "", "get_properties"], [21, 2, 1, "", "get_test_data_loader"], [21, 2, 1, "", "initialize_all_model_weights"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "process_config"], [21, 2, 1, "", "set_optimizer"], [21, 2, 1, "", "set_parameters"], [21, 2, 1, "", "setup_client"], [21, 2, 1, "", "shutdown"], [21, 2, 1, "", "train_by_epochs"], [21, 2, 1, "", "train_by_steps"], [21, 2, 1, "", "train_step"], [21, 2, 1, "", "transform_gradients"], [21, 2, 1, "", "transform_target"], [21, 2, 1, "", "update_after_step"], [21, 2, 1, "", "update_after_train"], [21, 2, 1, "", "update_before_epoch"], [21, 2, 1, "", "update_before_step"], [21, 2, 1, "", "update_before_train"], [21, 2, 1, "", "update_lr_schedulers"], [21, 2, 1, "", "update_metric_manager"], [21, 2, 1, "", "val_step"], [21, 2, 1, "", "validate"]], "fl4health.clients.clipping_client": [[22, 1, 1, "", "NumpyClippingClient"]], "fl4health.clients.clipping_client.NumpyClippingClient": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "calculate_parameters_norm"], [22, 2, 1, "", "clip_parameters"], [22, 2, 1, "", "compute_weight_update_and_clip"], [22, 2, 1, "", "get_parameter_exchanger"], [22, 2, 1, "", "get_parameters"], [22, 2, 1, "", "set_parameters"], [22, 2, 1, "", "setup_client"]], "fl4health.clients.constrained_fenda_client": [[23, 1, 1, "", "ConstrainedFendaClient"]], "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "compute_evaluation_loss"], [23, 2, 1, "", "compute_loss_and_additional_losses"], [23, 2, 1, "", "get_parameter_exchanger"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "update_after_train"], [23, 2, 1, "", "update_before_train"]], "fl4health.clients.deep_mmd_clients": [[25, 0, 0, "-", "ditto_deep_mmd_client"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[25, 1, 1, "", "DittoDeepMmdClient"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "compute_evaluation_loss"], [25, 2, 1, "", "compute_loss_and_additional_losses"], [25, 2, 1, "", "compute_training_loss"], [25, 2, 1, "", "predict"], [25, 2, 1, "", "setup_client"], [25, 2, 1, "", "update_after_step"], [25, 2, 1, "", "update_before_train"], [25, 2, 1, "", "update_buffers"], [25, 2, 1, "", "validate"]], "fl4health.clients.ditto_client": [[26, 1, 1, "", "DittoClient"]], "fl4health.clients.ditto_client.DittoClient": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "compute_evaluation_loss"], [26, 2, 1, "", "compute_loss_and_additional_losses"], [26, 2, 1, "", "compute_training_loss"], [26, 2, 1, "", "get_global_model"], [26, 2, 1, "", "get_optimizer"], [26, 2, 1, "", "get_parameters"], [26, 2, 1, "", "initialize_all_model_weights"], [26, 2, 1, "", "predict"], [26, 2, 1, "", "set_initial_global_tensors"], [26, 2, 1, "", "set_optimizer"], [26, 2, 1, "", "set_parameters"], [26, 2, 1, "", "setup_client"], [26, 2, 1, "", "train_step"], [26, 2, 1, "", "update_before_train"], [26, 2, 1, "", "validate"]], "fl4health.clients.ensemble_client": [[27, 1, 1, "", "EnsembleClient"]], "fl4health.clients.ensemble_client.EnsembleClient": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "compute_evaluation_loss"], [27, 2, 1, "", "compute_training_loss"], [27, 2, 1, "", "get_optimizer"], [27, 2, 1, "", "set_optimizer"], [27, 2, 1, "", "setup_client"], [27, 2, 1, "", "train_step"]], "fl4health.clients.evaluate_client": [[28, 1, 1, "", "EvaluateClient"]], "fl4health.clients.evaluate_client.EvaluateClient": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "evaluate"], [28, 2, 1, "", "fit"], [28, 2, 1, "", "get_data_loader"], [28, 2, 1, "", "get_local_model"], [28, 2, 1, "", "get_parameter_exchanger"], [28, 2, 1, "", "get_parameters"], [28, 2, 1, "", "initialize_global_model"], [28, 2, 1, "", "merge_metrics"], [28, 2, 1, "", "set_parameters"], [28, 2, 1, "", "setup_client"], [28, 2, 1, "", "validate"], [28, 2, 1, "", "validate_on_model"]], "fl4health.clients.fed_pca_client": [[29, 1, 1, "", "FedPCAClient"]], "fl4health.clients.fed_pca_client.FedPCAClient": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "evaluate"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "generate_hash"], [29, 2, 1, "", "get_data_loaders"], [29, 2, 1, "", "get_data_tensor"], [29, 2, 1, "", "get_model"], [29, 2, 1, "", "get_parameters"], [29, 2, 1, "", "save_model"], [29, 2, 1, "", "set_parameters"], [29, 2, 1, "", "setup_client"]], "fl4health.clients.fed_prox_client": [[30, 1, 1, "", "FedProxClient"]], "fl4health.clients.fed_prox_client.FedProxClient": [[30, 2, 1, "", "update_before_train"]], "fl4health.clients.fedper_client": [[31, 1, 1, "", "FedPerClient"]], "fl4health.clients.fedper_client.FedPerClient": [[31, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fedpm_client": [[32, 1, 1, "", "FedPmClient"]], "fl4health.clients.fedpm_client.FedPmClient": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "get_parameter_exchanger"], [32, 2, 1, "", "setup_client"]], "fl4health.clients.fedrep_client": [[33, 1, 1, "", "FedRepClient"], [33, 1, 1, "", "FedRepTrainMode"]], "fl4health.clients.fedrep_client.FedRepClient": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "fit"], [33, 2, 1, "", "get_optimizer"], [33, 2, 1, "", "get_parameter_exchanger"], [33, 2, 1, "", "process_fed_rep_config"], [33, 2, 1, "", "set_optimizer"], [33, 2, 1, "", "train_fedrep_by_epochs"], [33, 2, 1, "", "train_fedrep_by_steps"], [33, 2, 1, "", "train_step"]], "fl4health.clients.fedrep_client.FedRepTrainMode": [[33, 3, 1, "", "HEAD"], [33, 3, 1, "", "REPRESENTATION"]], "fl4health.clients.fenda_client": [[34, 1, 1, "", "FendaClient"]], "fl4health.clients.fenda_client.FendaClient": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fenda_ditto_client": [[35, 1, 1, "", "FendaDittoClient"]], "fl4health.clients.fenda_ditto_client.FendaDittoClient": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "compute_training_loss"], [35, 2, 1, "", "get_global_model"], [35, 2, 1, "", "get_model"], [35, 2, 1, "", "get_parameters"], [35, 2, 1, "", "predict"], [35, 2, 1, "", "set_initial_global_tensors"], [35, 2, 1, "", "set_parameters"], [35, 2, 1, "", "setup_client"], [35, 2, 1, "", "update_before_train"]], "fl4health.clients.flash_client": [[36, 1, 1, "", "FlashClient"]], "fl4health.clients.flash_client.FlashClient": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "process_config"], [36, 2, 1, "", "setup_client"], [36, 2, 1, "", "train_by_epochs"]], "fl4health.clients.instance_level_dp_client": [[37, 1, 1, "", "InstanceLevelDpClient"]], "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "setup_client"], [37, 2, 1, "", "setup_opacus_objects"]], "fl4health.clients.mkmmd_clients": [[39, 0, 0, "-", "ditto_mkmmd_client"], [40, 0, 0, "-", "mr_mtl_mkmmd_client"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[39, 1, 1, "", "DittoMkMmdClient"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "compute_loss_and_additional_losses"], [39, 2, 1, "", "compute_training_loss"], [39, 2, 1, "", "predict"], [39, 2, 1, "", "setup_client"], [39, 2, 1, "", "update_after_step"], [39, 2, 1, "", "update_before_train"], [39, 2, 1, "", "update_buffers"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[40, 1, 1, "", "MrMtlMkMmdClient"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "compute_loss_and_additional_losses"], [40, 2, 1, "", "compute_training_loss"], [40, 2, 1, "", "predict"], [40, 2, 1, "", "setup_client"], [40, 2, 1, "", "update_after_step"], [40, 2, 1, "", "update_before_train"], [40, 2, 1, "", "update_buffers"]], "fl4health.clients.model_merge_client": [[41, 1, 1, "", "ModelMergeClient"]], "fl4health.clients.model_merge_client.ModelMergeClient": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_parameter_exchanger"], [41, 2, 1, "", "get_parameters"], [41, 2, 1, "", "get_test_data_loader"], [41, 2, 1, "", "set_parameters"], [41, 2, 1, "", "setup_client"], [41, 2, 1, "", "validate"]], "fl4health.clients.moon_client": [[42, 1, 1, "", "MoonClient"]], "fl4health.clients.moon_client.MoonClient": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "compute_evaluation_loss"], [42, 2, 1, "", "compute_loss_and_additional_losses"], [42, 2, 1, "", "compute_training_loss"], [42, 2, 1, "", "predict"], [42, 2, 1, "", "update_after_train"], [42, 2, 1, "", "update_before_train"]], "fl4health.clients.mr_mtl_client": [[43, 1, 1, "", "MrMtlClient"]], "fl4health.clients.mr_mtl_client.MrMtlClient": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "compute_training_loss"], [43, 2, 1, "", "set_parameters"], [43, 2, 1, "", "setup_client"], [43, 2, 1, "", "update_before_train"], [43, 2, 1, "", "validate"]], "fl4health.clients.nnunet_client": [[44, 1, 1, "", "NnunetClient"]], "fl4health.clients.nnunet_client.NnunetClient": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "compute_loss_and_additional_losses"], [44, 2, 1, "", "create_plans"], [44, 2, 1, "", "empty_cache"], [44, 2, 1, "", "get_client_specific_logs"], [44, 2, 1, "", "get_client_specific_reports"], [44, 2, 1, "", "get_criterion"], [44, 2, 1, "", "get_data_loaders"], [44, 2, 1, "", "get_lr_scheduler"], [44, 2, 1, "", "get_model"], [44, 2, 1, "", "get_optimizer"], [44, 2, 1, "", "get_properties"], [44, 2, 1, "", "mask_data"], [44, 2, 1, "", "maybe_extract_fingerprint"], [44, 2, 1, "", "maybe_preprocess"], [44, 2, 1, "", "predict"], [44, 2, 1, "", "setup_client"], [44, 2, 1, "", "shutdown"], [44, 2, 1, "", "shutdown_dataloader"], [44, 2, 1, "", "train_step"], [44, 2, 1, "", "transform_gradients"], [44, 2, 1, "", "update_before_train"], [44, 2, 1, "", "update_metric_manager"]], "fl4health.clients.partial_weight_exchange_client": [[45, 1, 1, "", "PartialWeightExchangeClient"]], "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "get_parameter_exchanger"], [45, 2, 1, "", "get_parameters"], [45, 2, 1, "", "set_parameters"], [45, 2, 1, "", "setup_client"]], "fl4health.clients.perfcl_client": [[46, 1, 1, "", "PerFclClient"]], "fl4health.clients.perfcl_client.PerFclClient": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "compute_evaluation_loss"], [46, 2, 1, "", "compute_loss_and_additional_losses"], [46, 2, 1, "", "get_parameter_exchanger"], [46, 2, 1, "", "predict"], [46, 2, 1, "", "update_after_train"], [46, 2, 1, "", "update_before_train"]], "fl4health.clients.scaffold_client": [[47, 1, 1, "", "DPScaffoldClient"], [47, 1, 1, "", "ScaffoldClient"]], "fl4health.clients.scaffold_client.ScaffoldClient": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "compute_parameters_delta"], [47, 2, 1, "", "compute_updated_control_variates"], [47, 2, 1, "", "get_parameter_exchanger"], [47, 2, 1, "", "get_parameters"], [47, 2, 1, "", "modify_grad"], [47, 2, 1, "", "set_parameters"], [47, 2, 1, "", "setup_client"], [47, 2, 1, "", "transform_gradients"], [47, 2, 1, "", "update_after_train"], [47, 2, 1, "", "update_control_variates"]], "fl4health.clients.tabular_data_client": [[48, 1, 1, "", "TabularDataClient"]], "fl4health.clients.tabular_data_client.TabularDataClient": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "get_data_frame"], [48, 2, 1, "", "get_properties"], [48, 2, 1, "", "preset_specific_pipeline"], [48, 2, 1, "", "set_feature_specific_pipelines"], [48, 2, 1, "", "setup_client"]], "fl4health.datasets": [[50, 0, 0, "-", "rxrx1"], [53, 0, 0, "-", "skin_cancer"]], "fl4health.datasets.rxrx1": [[51, 0, 0, "-", "load_data"], [52, 0, 0, "-", "preprocess"]], "fl4health.datasets.rxrx1.load_data": [[51, 4, 1, "", "construct_rxrx1_tensor_dataset"], [51, 4, 1, "", "create_splits"], [51, 4, 1, "", "label_frequency"], [51, 4, 1, "", "load_rxrx1_data"], [51, 4, 1, "", "load_rxrx1_test_data"]], "fl4health.datasets.rxrx1.preprocess": [[52, 4, 1, "", "filter_and_save_data"], [52, 4, 1, "", "load_image"], [52, 4, 1, "", "main"], [52, 4, 1, "", "process_data"], [52, 4, 1, "", "save_to_pkl"]], "fl4health.datasets.skin_cancer": [[54, 0, 0, "-", "load_data"], [55, 0, 0, "-", "preprocess_skin"]], "fl4health.datasets.skin_cancer.load_data": [[54, 4, 1, "", "construct_skin_cancer_tensor_dataset"], [54, 4, 1, "", "load_image"], [54, 4, 1, "", "load_skin_cancer_data"]], "fl4health.datasets.skin_cancer.preprocess_skin": [[55, 4, 1, "", "derm7pt_image_path_func"], [55, 4, 1, "", "derm7pt_label_map_func"], [55, 4, 1, "", "ham_image_path_func"], [55, 4, 1, "", "ham_label_map_func"], [55, 4, 1, "", "pad_image_path_func"], [55, 4, 1, "", "pad_label_map_func"], [55, 4, 1, "", "preprocess_derm7pt"], [55, 4, 1, "", "preprocess_ham10000"], [55, 4, 1, "", "preprocess_isic_2019"], [55, 4, 1, "", "preprocess_pad_ufes_20"], [55, 4, 1, "", "process_client_data"], [55, 4, 1, "", "save_to_json"]], "fl4health.feature_alignment": [[57, 0, 0, "-", "constants"], [58, 0, 0, "-", "string_columns_transformer"], [59, 0, 0, "-", "tab_features_info_encoder"], [60, 0, 0, "-", "tab_features_preprocessor"], [61, 0, 0, "-", "tabular_feature"], [62, 0, 0, "-", "tabular_type"]], "fl4health.feature_alignment.string_columns_transformer": [[58, 1, 1, "", "TextColumnTransformer"], [58, 1, 1, "", "TextMulticolumnTransformer"]], "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer": [[58, 2, 1, "", "fit"], [58, 2, 1, "", "transform"]], "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer": [[58, 2, 1, "", "fit"], [58, 2, 1, "", "transform"]], "fl4health.feature_alignment.tab_features_info_encoder": [[59, 1, 1, "", "TabularFeaturesInfoEncoder"]], "fl4health.feature_alignment.tab_features_info_encoder.TabularFeaturesInfoEncoder": [[59, 2, 1, "", "encoder_from_dataframe"], [59, 2, 1, "", "features_by_type"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_categories_list"], [59, 2, 1, "", "get_feature_columns"], [59, 2, 1, "", "get_tabular_features"], [59, 2, 1, "", "get_tabular_targets"], [59, 2, 1, "", "get_target_columns"], [59, 2, 1, "", "get_target_dimension"], [59, 2, 1, "", "to_json"], [59, 2, 1, "", "type_to_features"]], "fl4health.feature_alignment.tab_features_preprocessor": [[60, 1, 1, "", "TabularFeaturesPreprocessor"]], "fl4health.feature_alignment.tab_features_preprocessor.TabularFeaturesPreprocessor": [[60, 2, 1, "", "fill_in_missing_columns"], [60, 2, 1, "", "get_default_binary_pipeline"], [60, 2, 1, "", "get_default_numeric_pipeline"], [60, 2, 1, "", "get_default_one_hot_pipeline"], [60, 2, 1, "", "get_default_ordinal_pipeline"], [60, 2, 1, "", "get_default_string_pipeline"], [60, 2, 1, "", "initialize_default_pipelines"], [60, 2, 1, "", "preprocess_features"], [60, 2, 1, "", "return_column_transformer"], [60, 2, 1, "", "set_feature_pipeline"]], "fl4health.feature_alignment.tabular_feature": [[61, 1, 1, "", "TabularFeature"]], "fl4health.feature_alignment.tabular_feature.TabularFeature": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "from_json"], [61, 2, 1, "", "get_feature_name"], [61, 2, 1, "", "get_feature_type"], [61, 2, 1, "", "get_fill_value"], [61, 2, 1, "", "get_metadata"], [61, 2, 1, "", "get_metadata_dimension"], [61, 2, 1, "", "to_json"]], "fl4health.feature_alignment.tabular_type": [[62, 1, 1, "", "TabularType"]], "fl4health.feature_alignment.tabular_type.TabularType": [[62, 3, 1, "", "BINARY"], [62, 3, 1, "", "NUMERIC"], [62, 3, 1, "", "ORDINAL"], [62, 3, 1, "", "STRING"], [62, 2, 1, "", "get_default_fill_value"]], "fl4health.losses": [[64, 0, 0, "-", "contrastive_loss"], [65, 0, 0, "-", "cosine_similarity_loss"], [66, 0, 0, "-", "deep_mmd_loss"], [67, 0, 0, "-", "fenda_loss_config"], [68, 0, 0, "-", "mkmmd_loss"], [69, 0, 0, "-", "perfcl_loss"], [70, 0, 0, "-", "weight_drift_loss"]], "fl4health.losses.contrastive_loss": [[64, 1, 1, "", "MoonContrastiveLoss"], [64, 1, 1, "", "NtXentLoss"]], "fl4health.losses.contrastive_loss.MoonContrastiveLoss": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "compute_negative_similarities"], [64, 2, 1, "", "forward"]], "fl4health.losses.contrastive_loss.NtXentLoss": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "forward"]], "fl4health.losses.cosine_similarity_loss": [[65, 1, 1, "", "CosineSimilarityLoss"]], "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss": [[65, 2, 1, "", "forward"]], "fl4health.losses.deep_mmd_loss": [[66, 1, 1, "", "DeepMmdLoss"], [66, 1, 1, "", "ModelLatentF"]], "fl4health.losses.deep_mmd_loss.DeepMmdLoss": [[66, 2, 1, "", "MMDu"], [66, 2, 1, "", "__init__"], [66, 2, 1, "", "compute_kernel"], [66, 2, 1, "", "forward"], [66, 2, 1, "", "h1_mean_var_gram"], [66, 2, 1, "", "pairwise_distance_squared"], [66, 2, 1, "", "train_kernel"]], "fl4health.losses.deep_mmd_loss.ModelLatentF": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "forward"]], "fl4health.losses.fenda_loss_config": [[67, 1, 1, "", "ConstrainedFendaLossContainer"], [67, 1, 1, "", "CosineSimilarityLossContainer"], [67, 1, 1, "", "MoonContrastiveLossContainer"], [67, 1, 1, "", "PerFclLossContainer"]], "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer": [[67, 2, 1, "", "compute_contrastive_loss"], [67, 2, 1, "", "compute_cosine_similarity_loss"], [67, 2, 1, "", "compute_perfcl_loss"], [67, 2, 1, "", "has_contrastive_loss"], [67, 2, 1, "", "has_cosine_similarity_loss"], [67, 2, 1, "", "has_perfcl_loss"]], "fl4health.losses.mkmmd_loss": [[68, 1, 1, "", "MkMmdLoss"]], "fl4health.losses.mkmmd_loss.MkMmdLoss": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "beta_with_extreme_kernel_base_values"], [68, 2, 1, "", "compute_all_h_u_all_samples"], [68, 2, 1, "", "compute_all_h_u_from_inner_products"], [68, 2, 1, "", "compute_all_h_u_from_inner_products_linear"], [68, 2, 1, "", "compute_all_h_u_linear"], [68, 2, 1, "", "compute_euclidean_inner_products"], [68, 2, 1, "", "compute_euclidean_inner_products_linear"], [68, 2, 1, "", "compute_h_u_from_inner_products"], [68, 2, 1, "", "compute_h_u_from_inner_products_linear"], [68, 2, 1, "", "compute_hat_Q_k"], [68, 2, 1, "", "compute_hat_Q_k_linear"], [68, 2, 1, "", "compute_hat_d_per_kernel"], [68, 2, 1, "", "compute_mkmmd"], [68, 2, 1, "", "compute_vertices"], [68, 2, 1, "", "construct_quadruples"], [68, 2, 1, "", "form_and_solve_qp"], [68, 2, 1, "", "form_h_u_delta_w_i"], [68, 2, 1, "", "form_kernel_samples_minus_expectation"], [68, 2, 1, "", "forward"], [68, 2, 1, "", "get_best_vertex_for_objective_function"], [68, 2, 1, "", "normalize"], [68, 2, 1, "", "optimize_betas"]], "fl4health.losses.perfcl_loss": [[69, 1, 1, "", "PerFclLoss"]], "fl4health.losses.perfcl_loss.PerFclLoss": [[69, 2, 1, "", "forward"]], "fl4health.losses.weight_drift_loss": [[70, 1, 1, "", "WeightDriftLoss"]], "fl4health.losses.weight_drift_loss.WeightDriftLoss": [[70, 2, 1, "", "forward"]], "fl4health.model_bases": [[72, 0, 0, "-", "apfl_base"], [73, 0, 0, "-", "autoencoders_base"], [74, 0, 0, "-", "ensemble_base"], [75, 0, 0, "-", "feature_extractor_buffer"], [76, 0, 0, "-", "fedrep_base"], [77, 0, 0, "-", "fedsimclr_base"], [78, 0, 0, "-", "fenda_base"], [79, 0, 0, "-", "masked_layers"], [84, 0, 0, "-", "moon_base"], [85, 0, 0, "-", "parallel_split_models"], [86, 0, 0, "-", "partial_layer_exchange_model"], [87, 0, 0, "-", "pca"], [88, 0, 0, "-", "perfcl_base"], [89, 0, 0, "-", "sequential_split_models"]], "fl4health.model_bases.apfl_base": [[72, 1, 1, "", "ApflModule"]], "fl4health.model_bases.apfl_base.ApflModule": [[72, 2, 1, "", "forward"], [72, 2, 1, "", "global_forward"], [72, 2, 1, "", "layers_to_exchange"], [72, 2, 1, "", "local_forward"], [72, 2, 1, "", "update_alpha"]], "fl4health.model_bases.autoencoders_base": [[73, 1, 1, "", "AbstractAe"], [73, 1, 1, "", "BasicAe"], [73, 1, 1, "", "ConditionalVae"], [73, 1, 1, "", "VariationalAe"]], "fl4health.model_bases.autoencoders_base.AbstractAe": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.BasicAe": [[73, 2, 1, "", "decode"], [73, 2, 1, "", "encode"], [73, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.ConditionalVae": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "decode"], [73, 2, 1, "", "encode"], [73, 2, 1, "", "forward"], [73, 2, 1, "", "sampling"]], "fl4health.model_bases.autoencoders_base.VariationalAe": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "decode"], [73, 2, 1, "", "encode"], [73, 2, 1, "", "forward"], [73, 2, 1, "", "sampling"]], "fl4health.model_bases.ensemble_base": [[74, 1, 1, "", "EnsembleAggregationMode"], [74, 1, 1, "", "EnsembleModel"]], "fl4health.model_bases.ensemble_base.EnsembleAggregationMode": [[74, 3, 1, "", "AVERAGE"], [74, 3, 1, "", "VOTE"]], "fl4health.model_bases.ensemble_base.EnsembleModel": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "ensemble_average"], [74, 2, 1, "", "ensemble_vote"], [74, 2, 1, "", "forward"]], "fl4health.model_bases.feature_extractor_buffer": [[75, 1, 1, "", "FeatureExtractorBuffer"]], "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer": [[75, 2, 1, "", "__init__"], [75, 3, 1, "", "accumulate_features"], [75, 2, 1, "", "clear_buffers"], [75, 2, 1, "", "disable_accumulating_features"], [75, 2, 1, "", "enable_accumulating_features"], [75, 3, 1, "", "extracted_features_buffers"], [75, 3, 1, "", "fhooks"], [75, 2, 1, "", "find_last_common_prefix"], [75, 2, 1, "", "flatten"], [75, 3, 1, "", "flatten_feature_extraction_layers"], [75, 2, 1, "", "forward_hook"], [75, 2, 1, "", "get_extracted_features"], [75, 2, 1, "", "get_hierarchical_attr"], [75, 3, 1, "", "model"], [75, 2, 1, "", "remove_hooks"]], "fl4health.model_bases.fedrep_base": [[76, 1, 1, "", "FedRepModel"]], "fl4health.model_bases.fedrep_base.FedRepModel": [[76, 2, 1, "", "freeze_base_module"], [76, 2, 1, "", "freeze_head_module"], [76, 2, 1, "", "unfreeze_base_module"], [76, 2, 1, "", "unfreeze_head_module"]], "fl4health.model_bases.fedsimclr_base": [[77, 1, 1, "", "FedSimClrModel"]], "fl4health.model_bases.fedsimclr_base.FedSimClrModel": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "forward"], [77, 2, 1, "", "load_pretrained_model"]], "fl4health.model_bases.fenda_base": [[78, 1, 1, "", "FendaModel"], [78, 1, 1, "", "FendaModelWithFeatureState"]], "fl4health.model_bases.fenda_base.FendaModel": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.fenda_base.FendaModelWithFeatureState": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "forward"]], "fl4health.model_bases.masked_layers": [[80, 0, 0, "-", "masked_conv"], [81, 0, 0, "-", "masked_layers_utils"], [82, 0, 0, "-", "masked_linear"], [83, 0, 0, "-", "masked_normalization_layers"]], "fl4health.model_bases.masked_layers.masked_conv": [[80, 1, 1, "", "MaskedConv1d"], [80, 1, 1, "", "MaskedConv2d"], [80, 1, 1, "", "MaskedConv3d"], [80, 1, 1, "", "MaskedConvTranspose1d"], [80, 1, 1, "", "MaskedConvTranspose2d"], [80, 1, 1, "", "MaskedConvTranspose3d"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "bias"], [80, 3, 1, "", "bias_score"], [80, 2, 1, "", "forward"], [80, 2, 1, "", "from_pretrained"], [80, 3, 1, "", "weight"], [80, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "bias"], [80, 3, 1, "", "bias_score"], [80, 2, 1, "", "forward"], [80, 2, 1, "", "from_pretrained"], [80, 3, 1, "", "weight"], [80, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "bias"], [80, 3, 1, "", "bias_score"], [80, 2, 1, "", "forward"], [80, 2, 1, "", "from_pretrained"], [80, 3, 1, "", "weight"], [80, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "bias"], [80, 3, 1, "", "bias_score"], [80, 2, 1, "", "forward"], [80, 2, 1, "", "from_pretrained"], [80, 3, 1, "", "weight"], [80, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "bias"], [80, 3, 1, "", "bias_score"], [80, 2, 1, "", "forward"], [80, 2, 1, "", "from_pretrained"], [80, 3, 1, "", "weight"], [80, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "bias"], [80, 3, 1, "", "bias_score"], [80, 2, 1, "", "forward"], [80, 2, 1, "", "from_pretrained"], [80, 3, 1, "", "weight"], [80, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[81, 4, 1, "", "convert_to_masked_model"], [81, 4, 1, "", "is_masked_module"]], "fl4health.model_bases.masked_layers.masked_linear": [[82, 1, 1, "", "MaskedLinear"]], "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear": [[82, 2, 1, "", "__init__"], [82, 3, 1, "", "bias"], [82, 3, 1, "", "bias_score"], [82, 2, 1, "", "forward"], [82, 2, 1, "", "from_pretrained"], [82, 3, 1, "", "weight"], [82, 3, 1, "", "weight_score"]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[83, 1, 1, "", "MaskedBatchNorm1d"], [83, 1, 1, "", "MaskedBatchNorm2d"], [83, 1, 1, "", "MaskedBatchNorm3d"], [83, 1, 1, "", "MaskedLayerNorm"]], "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm": [[83, 2, 1, "", "__init__"], [83, 3, 1, "", "bias"], [83, 3, 1, "", "bias_score"], [83, 2, 1, "", "forward"], [83, 2, 1, "", "from_pretrained"], [83, 3, 1, "", "weight"], [83, 3, 1, "", "weight_score"]], "fl4health.model_bases.moon_base": [[84, 1, 1, "", "MoonModel"]], "fl4health.model_bases.moon_base.MoonModel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "sequential_forward"]], "fl4health.model_bases.parallel_split_models": [[85, 1, 1, "", "ParallelFeatureJoinMode"], [85, 1, 1, "", "ParallelSplitHeadModule"], [85, 1, 1, "", "ParallelSplitModel"]], "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode": [[85, 3, 1, "", "CONCATENATE"], [85, 3, 1, "", "SUM"]], "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "forward"], [85, 2, 1, "", "head_forward"], [85, 2, 1, "", "parallel_output_join"]], "fl4health.model_bases.parallel_split_models.ParallelSplitModel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "forward"]], "fl4health.model_bases.partial_layer_exchange_model": [[86, 1, 1, "", "PartialLayerExchangeModel"]], "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel": [[86, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.pca": [[87, 1, 1, "", "PcaModule"]], "fl4health.model_bases.pca.PcaModule": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "center_data"], [87, 2, 1, "", "compute_cumulative_explained_variance"], [87, 2, 1, "", "compute_explained_variance_ratios"], [87, 2, 1, "", "compute_projection_variance"], [87, 2, 1, "", "compute_reconstruction_error"], [87, 2, 1, "", "forward"], [87, 2, 1, "", "maybe_reshape"], [87, 2, 1, "", "prepare_data_forward"], [87, 2, 1, "", "project_back"], [87, 2, 1, "", "project_lower_dim"], [87, 2, 1, "", "set_data_mean"], [87, 2, 1, "", "set_principal_components"]], "fl4health.model_bases.perfcl_base": [[88, 1, 1, "", "PerFclModel"]], "fl4health.model_bases.perfcl_base.PerFclModel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "forward"], [88, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models": [[89, 1, 1, "", "SequentiallySplitExchangeBaseModel"], [89, 1, 1, "", "SequentiallySplitModel"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel": [[89, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitModel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "forward"], [89, 2, 1, "", "sequential_forward"]], "fl4health.parameter_exchange": [[91, 0, 0, "-", "fedpm_exchanger"], [92, 0, 0, "-", "full_exchanger"], [93, 0, 0, "-", "layer_exchanger"], [94, 0, 0, "-", "packing_exchanger"], [95, 0, 0, "-", "parameter_exchanger_base"], [96, 0, 0, "-", "parameter_packer"], [97, 0, 0, "-", "parameter_selection_criteria"], [98, 0, 0, "-", "partial_parameter_exchanger"], [99, 0, 0, "-", "sparse_coo_parameter_exchanger"]], "fl4health.parameter_exchange.fedpm_exchanger": [[91, 1, 1, "", "FedPmExchanger"]], "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger": [[91, 2, 1, "", "pull_parameters"]], "fl4health.parameter_exchange.full_exchanger": [[92, 1, 1, "", "FullParameterExchanger"]], "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger": [[92, 2, 1, "", "pull_parameters"], [92, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger": [[93, 1, 1, "", "DynamicLayerExchanger"], [93, 1, 1, "", "FixedLayerExchanger"], [93, 1, 1, "", "LayerExchangerWithExclusions"]], "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "pull_parameters"], [93, 2, 1, "", "push_parameters"], [93, 2, 1, "", "select_parameters"]], "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger": [[93, 2, 1, "", "apply_layer_filter"], [93, 2, 1, "", "pull_parameters"], [93, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions": [[93, 2, 1, "", "apply_layer_filter"], [93, 2, 1, "", "get_layers_to_transfer"], [93, 2, 1, "", "pull_parameters"], [93, 2, 1, "", "push_parameters"], [93, 2, 1, "", "should_layer_be_excluded"], [93, 2, 1, "", "should_module_be_excluded"]], "fl4health.parameter_exchange.packing_exchanger": [[94, 1, 1, "", "FullParameterExchangerWithPacking"]], "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking": [[94, 2, 1, "", "pack_parameters"], [94, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_exchanger_base": [[95, 1, 1, "", "ParameterExchanger"]], "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger": [[95, 2, 1, "", "pull_parameters"], [95, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.parameter_packer": [[96, 1, 1, "", "ParameterPacker"], [96, 1, 1, "", "ParameterPackerAdaptiveConstraint"], [96, 1, 1, "", "ParameterPackerWithClippingBit"], [96, 1, 1, "", "ParameterPackerWithControlVariates"], [96, 1, 1, "", "ParameterPackerWithLayerNames"], [96, 1, 1, "", "SparseCooParameterPacker"]], "fl4health.parameter_exchange.parameter_packer.ParameterPacker": [[96, 2, 1, "", "pack_parameters"], [96, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint": [[96, 2, 1, "", "pack_parameters"], [96, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit": [[96, 2, 1, "", "pack_parameters"], [96, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates": [[96, 2, 1, "", "pack_parameters"], [96, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames": [[96, 2, 1, "", "pack_parameters"], [96, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker": [[96, 2, 1, "", "extract_coo_info_from_dense"], [96, 2, 1, "", "pack_parameters"], [96, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_selection_criteria": [[97, 1, 1, "", "LayerSelectionFunctionConstructor"], [97, 4, 1, "", "largest_final_magnitude_scores"], [97, 4, 1, "", "largest_increase_in_magnitude_scores"], [97, 4, 1, "", "largest_magnitude_change_scores"], [97, 4, 1, "", "select_layers_by_percentage"], [97, 4, 1, "", "select_layers_by_threshold"], [97, 4, 1, "", "select_scores_and_sample_masks"], [97, 4, 1, "", "smallest_final_magnitude_scores"], [97, 4, 1, "", "smallest_increase_in_magnitude_scores"], [97, 4, 1, "", "smallest_magnitude_change_scores"]], "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "select_by_percentage"], [97, 2, 1, "", "select_by_threshold"]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[98, 1, 1, "", "PartialParameterExchanger"]], "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger": [[98, 2, 1, "", "pack_parameters"], [98, 2, 1, "", "select_parameters"], [98, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[99, 1, 1, "", "SparseCooParameterExchanger"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "generate_parameter_scores"], [99, 2, 1, "", "pull_parameters"], [99, 2, 1, "", "push_parameters"], [99, 2, 1, "", "select_parameters"]], "fl4health.preprocessing": [[101, 0, 0, "-", "autoencoders"], [104, 0, 0, "-", "pca_preprocessor"], [105, 0, 0, "-", "warmed_up_module"]], "fl4health.preprocessing.autoencoders": [[102, 0, 0, "-", "dim_reduction"], [103, 0, 0, "-", "loss"]], "fl4health.preprocessing.autoencoders.dim_reduction": [[102, 1, 1, "", "AeProcessor"], [102, 1, 1, "", "AutoEncoderProcessing"], [102, 1, 1, "", "CvaeFixedConditionProcessor"], [102, 1, 1, "", "CvaeVariableConditionProcessor"], [102, 1, 1, "", "VaeProcessor"]], "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "load_autoencoder"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor": [[102, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor": [[102, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor": [[102, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.loss": [[103, 1, 1, "", "VaeLoss"]], "fl4health.preprocessing.autoencoders.loss.VaeLoss": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "standard_normal_kl_divergence_loss"], [103, 2, 1, "", "unpack_model_output"]], "fl4health.preprocessing.pca_preprocessor": [[104, 1, 1, "", "PcaPreprocessor"]], "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "load_pca_module"], [104, 2, 1, "", "reduce_dimension"]], "fl4health.preprocessing.warmed_up_module": [[105, 1, 1, "", "WarmedUpModule"]], "fl4health.preprocessing.warmed_up_module.WarmedUpModule": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "get_matching_component"], [105, 2, 1, "", "load_from_pretrained"]], "fl4health.privacy": [[107, 0, 0, "-", "fl_accountants"], [108, 0, 0, "-", "moments_accountant"]], "fl4health.privacy.fl_accountants": [[107, 1, 1, "", "ClientLevelAccountant"], [107, 1, 1, "", "FlClientLevelAccountantFixedSamplingNoReplacement"], [107, 1, 1, "", "FlClientLevelAccountantPoissonSampling"], [107, 1, 1, "", "FlInstanceLevelAccountant"]], "fl4health.privacy.fl_accountants.ClientLevelAccountant": [[107, 2, 1, "", "get_delta"], [107, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "get_delta"], [107, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "get_delta"], [107, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "get_delta"], [107, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant": [[108, 1, 1, "", "FixedSamplingWithoutReplacement"], [108, 1, 1, "", "MomentsAccountant"], [108, 1, 1, "", "PoissonSampling"], [108, 1, 1, "", "SamplingStrategy"]], "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement": [[108, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.MomentsAccountant": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "get_delta"], [108, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant.PoissonSampling": [[108, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.SamplingStrategy": [[108, 2, 1, "", "get_dp_event"]], "fl4health.reporting": [[109, 1, 1, "", "JsonReporter"], [109, 1, 1, "", "WandBReporter"], [110, 0, 0, "-", "base_reporter"], [111, 0, 0, "-", "json_reporter"], [112, 0, 0, "-", "reports_manager"], [113, 0, 0, "-", "wandb_reporter"]], "fl4health.reporting.JsonReporter": [[109, 2, 1, "", "dump"]], "fl4health.reporting.WandBReporter": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "define_metrics"], [109, 2, 1, "", "initialize"], [109, 2, 1, "", "report"], [109, 2, 1, "", "shutdown"], [109, 2, 1, "", "start_run"]], "fl4health.reporting.base_reporter": [[110, 1, 1, "", "BaseReporter"]], "fl4health.reporting.base_reporter.BaseReporter": [[110, 2, 1, "", "initialize"], [110, 2, 1, "", "report"], [110, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter": [[111, 1, 1, "", "FileReporter"], [111, 1, 1, "", "JsonReporter"]], "fl4health.reporting.json_reporter.FileReporter": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "dump"], [111, 2, 1, "", "initialize"], [111, 2, 1, "", "report"], [111, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter.JsonReporter": [[111, 2, 1, "", "dump"]], "fl4health.reporting.reports_manager": [[112, 1, 1, "", "ReportsManager"]], "fl4health.reporting.reports_manager.ReportsManager": [[112, 2, 1, "", "initialize"], [112, 2, 1, "", "report"], [112, 2, 1, "", "shutdown"]], "fl4health.reporting.wandb_reporter": [[113, 1, 1, "", "StepType"], [113, 1, 1, "", "WandBReporter"]], "fl4health.reporting.wandb_reporter.StepType": [[113, 3, 1, "", "EPOCH"], [113, 3, 1, "", "ROUND"], [113, 3, 1, "", "STEP"]], "fl4health.reporting.wandb_reporter.WandBReporter": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "define_metrics"], [113, 2, 1, "", "initialize"], [113, 2, 1, "", "report"], [113, 2, 1, "", "shutdown"], [113, 2, 1, "", "start_run"]], "fl4health.servers": [[115, 0, 0, "-", "adaptive_constraint_servers"], [119, 0, 0, "-", "base_server"], [120, 0, 0, "-", "client_level_dp_fed_avg_server"], [121, 0, 0, "-", "evaluate_server"], [122, 0, 0, "-", "fedpm_server"], [123, 0, 0, "-", "instance_level_dp_server"], [124, 0, 0, "-", "model_merge_server"], [125, 0, 0, "-", "nnunet_server"], [126, 0, 0, "-", "polling"], [127, 0, 0, "-", "scaffold_server"], [128, 0, 0, "-", "tabular_feature_alignment_server"]], "fl4health.servers.adaptive_constraint_servers": [[116, 0, 0, "-", "ditto_server"], [117, 0, 0, "-", "fedprox_server"], [118, 0, 0, "-", "mrmtl_server"]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[116, 1, 1, "", "DittoServer"]], "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer": [[116, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[117, 1, 1, "", "FedProxServer"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer": [[117, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[118, 1, 1, "", "MrMtlServer"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer": [[118, 2, 1, "", "__init__"]], "fl4health.servers.base_server": [[119, 1, 1, "", "FlServer"]], "fl4health.servers.base_server.FlServer": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "evaluate_round"], [119, 2, 1, "", "fit"], [119, 2, 1, "", "fit_round"], [119, 2, 1, "", "fit_with_per_round_checkpointing"], [119, 2, 1, "", "poll_clients_for_sample_counts"], [119, 2, 1, "", "report_centralized_eval"], [119, 2, 1, "", "shutdown"], [119, 2, 1, "", "update_before_fit"]], "fl4health.servers.client_level_dp_fed_avg_server": [[120, 1, 1, "", "ClientLevelDPFedAvgServer"]], "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "fit"], [120, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.evaluate_server": [[121, 1, 1, "", "EvaluateServer"]], "fl4health.servers.evaluate_server.EvaluateServer": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "aggregate_evaluate"], [121, 2, 1, "", "configure_evaluate"], [121, 2, 1, "", "federated_evaluate"], [121, 2, 1, "", "fit"], [121, 2, 1, "", "load_model_checkpoint_to_parameters"]], "fl4health.servers.fedpm_server": [[122, 1, 1, "", "FedPmServer"]], "fl4health.servers.fedpm_server.FedPmServer": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "fit_round"]], "fl4health.servers.instance_level_dp_server": [[123, 1, 1, "", "InstanceLevelDpServer"]], "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "fit"], [123, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.model_merge_server": [[124, 1, 1, "", "ModelMergeServer"]], "fl4health.servers.model_merge_server.ModelMergeServer": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "fit"]], "fl4health.servers.nnunet_server": [[125, 1, 1, "", "NnunetServer"], [125, 4, 1, "", "add_items_to_config_fn"]], "fl4health.servers.nnunet_server.NnunetServer": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "initialize_server_model"], [125, 2, 1, "", "update_before_fit"]], "fl4health.servers.polling": [[126, 4, 1, "", "poll_client"], [126, 4, 1, "", "poll_clients"]], "fl4health.servers.scaffold_server": [[127, 1, 1, "", "DPScaffoldServer"], [127, 1, 1, "", "ScaffoldServer"]], "fl4health.servers.scaffold_server.DPScaffoldServer": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "fit"]], "fl4health.servers.scaffold_server.ScaffoldServer": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "fit"]], "fl4health.servers.tabular_feature_alignment_server": [[128, 1, 1, "", "TabularFeatureAlignmentServer"], [128, 4, 1, "", "fit_config"]], "fl4health.servers.tabular_feature_alignment_server.TabularFeatureAlignmentServer": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "fit"], [128, 2, 1, "", "poll_clients_for_dimension_info"], [128, 2, 1, "", "poll_clients_for_feature_info"]], "fl4health.strategies": [[130, 0, 0, "-", "aggregate_utils"], [131, 0, 0, "-", "basic_fedavg"], [132, 0, 0, "-", "client_dp_fedavgm"], [133, 0, 0, "-", "fedavg_dynamic_layer"], [134, 0, 0, "-", "fedavg_sparse_coo_tensor"], [135, 0, 0, "-", "fedavg_with_adaptive_constraint"], [136, 0, 0, "-", "feddg_ga"], [137, 0, 0, "-", "feddg_ga_with_adaptive_constraint"], [138, 0, 0, "-", "fedpca"], [139, 0, 0, "-", "fedpm"], [140, 0, 0, "-", "flash"], [141, 0, 0, "-", "model_merge_strategy"], [142, 0, 0, "-", "noisy_aggregate"], [143, 0, 0, "-", "scaffold"], [144, 0, 0, "-", "strategy_with_poll"]], "fl4health.strategies.aggregate_utils": [[130, 4, 1, "", "aggregate_losses"], [130, 4, 1, "", "aggregate_results"]], "fl4health.strategies.basic_fedavg": [[131, 1, 1, "", "BasicFedAvg"], [131, 1, 1, "", "OpacusBasicFedAvg"]], "fl4health.strategies.basic_fedavg.BasicFedAvg": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "aggregate_evaluate"], [131, 2, 1, "", "aggregate_fit"], [131, 2, 1, "", "configure_evaluate"], [131, 2, 1, "", "configure_fit"], [131, 2, 1, "", "configure_poll"]], "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg": [[131, 2, 1, "", "__init__"]], "fl4health.strategies.client_dp_fedavgm": [[132, 1, 1, "", "ClientLevelDPFedAvgM"]], "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "aggregate_fit"], [132, 2, 1, "", "calculate_update_with_momentum"], [132, 2, 1, "", "configure_evaluate"], [132, 2, 1, "", "configure_fit"], [132, 2, 1, "", "modify_noise_multiplier"], [132, 2, 1, "", "split_model_weights_and_clipping_bits"], [132, 2, 1, "", "update_clipping_bound"], [132, 2, 1, "", "update_current_weights"]], "fl4health.strategies.fedavg_dynamic_layer": [[133, 1, 1, "", "FedAvgDynamicLayer"]], "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "aggregate"], [133, 2, 1, "", "aggregate_fit"], [133, 2, 1, "", "unweighted_aggregate"], [133, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[134, 1, 1, "", "FedAvgSparseCooTensor"]], "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "aggregate"], [134, 2, 1, "", "aggregate_fit"], [134, 2, 1, "", "unweighted_aggregate"], [134, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[135, 1, 1, "", "FedAvgWithAdaptiveConstraint"]], "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.feddg_ga": [[136, 1, 1, "", "FairnessMetric"], [136, 1, 1, "", "FairnessMetricType"], [136, 1, 1, "", "FedDgGa"], [136, 5, 1, "", "SignalForTypeException"]], "fl4health.strategies.feddg_ga.FairnessMetric": [[136, 2, 1, "", "__init__"]], "fl4health.strategies.feddg_ga.FairnessMetricType": [[136, 3, 1, "", "ACCURACY"], [136, 3, 1, "", "CUSTOM"], [136, 3, 1, "", "LOSS"], [136, 2, 1, "", "signal_for_type"]], "fl4health.strategies.feddg_ga.FedDgGa": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "aggregate_evaluate"], [136, 2, 1, "", "aggregate_fit"], [136, 2, 1, "", "configure_evaluate"], [136, 2, 1, "", "configure_fit"], [136, 2, 1, "", "get_current_weight_step_size"], [136, 2, 1, "", "update_weights_by_ga"], [136, 2, 1, "", "weight_and_aggregate_results"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[137, 1, 1, "", "FedDgGaAdaptiveConstraint"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.fedpca": [[138, 1, 1, "", "FedPCA"]], "fl4health.strategies.fedpca.FedPCA": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "aggregate_fit"], [138, 2, 1, "", "merge_subspaces_qr"], [138, 2, 1, "", "merge_subspaces_svd"], [138, 2, 1, "", "merge_two_subspaces_qr"]], "fl4health.strategies.fedpm": [[139, 1, 1, "", "FedPm"]], "fl4health.strategies.fedpm.FedPm": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "aggregate"], [139, 2, 1, "", "aggregate_bayesian"], [139, 2, 1, "", "reset_beta_priors"]], "fl4health.strategies.flash": [[140, 1, 1, "", "Flash"]], "fl4health.strategies.flash.Flash": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.model_merge_strategy": [[141, 1, 1, "", "ModelMergeStrategy"]], "fl4health.strategies.model_merge_strategy.ModelMergeStrategy": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "aggregate_evaluate"], [141, 2, 1, "", "aggregate_fit"], [141, 2, 1, "", "configure_evaluate"], [141, 2, 1, "", "configure_fit"], [141, 2, 1, "", "evaluate"], [141, 2, 1, "", "initialize_parameters"]], "fl4health.strategies.noisy_aggregate": [[142, 4, 1, "", "add_noise_to_array"], [142, 4, 1, "", "add_noise_to_ndarrays"], [142, 4, 1, "", "gaussian_noisy_aggregate_clipping_bits"], [142, 4, 1, "", "gaussian_noisy_unweighted_aggregate"], [142, 4, 1, "", "gaussian_noisy_weighted_aggregate"]], "fl4health.strategies.scaffold": [[143, 1, 1, "", "OpacusScaffold"], [143, 1, 1, "", "Scaffold"]], "fl4health.strategies.scaffold.OpacusScaffold": [[143, 2, 1, "", "__init__"]], "fl4health.strategies.scaffold.Scaffold": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "aggregate"], [143, 2, 1, "", "aggregate_fit"], [143, 2, 1, "", "compute_parameter_delta"], [143, 2, 1, "", "compute_updated_control_variates"], [143, 2, 1, "", "compute_updated_parameters"], [143, 2, 1, "", "compute_updated_weights"], [143, 2, 1, "", "configure_fit_all"], [143, 2, 1, "", "initialize_control_variates"]], "fl4health.strategies.strategy_with_poll": [[144, 1, 1, "", "StrategyWithPolling"]], "fl4health.strategies.strategy_with_poll.StrategyWithPolling": [[144, 2, 1, "", "configure_poll"]], "fl4health.utils": [[146, 0, 0, "-", "client"], [147, 0, 0, "-", "config"], [148, 0, 0, "-", "data_generation"], [149, 0, 0, "-", "dataset"], [150, 0, 0, "-", "dataset_converter"], [151, 0, 0, "-", "early_stopper"], [152, 0, 0, "-", "functions"], [153, 0, 0, "-", "load_data"], [154, 0, 0, "-", "logging"], [155, 0, 0, "-", "losses"], [156, 0, 0, "-", "metric_aggregation"], [157, 0, 0, "-", "metrics"], [158, 0, 0, "-", "msd_dataset_sources"], [159, 0, 0, "-", "nnunet_utils"], [160, 0, 0, "-", "parameter_extraction"], [161, 0, 0, "-", "partitioners"], [162, 0, 0, "-", "privacy_utilities"], [163, 0, 0, "-", "random"], [164, 0, 0, "-", "sampler"], [165, 0, 0, "-", "snapshotter"], [166, 0, 0, "-", "typing"]], "fl4health.utils.client": [[146, 4, 1, "", "check_if_batch_is_empty_and_verify_input"], [146, 4, 1, "", "clone_and_freeze_model"], [146, 4, 1, "", "fold_loss_dict_into_metrics"], [146, 4, 1, "", "maybe_progress_bar"], [146, 4, 1, "", "move_data_to_device"], [146, 4, 1, "", "set_pack_losses_with_val_metrics"]], "fl4health.utils.config": [[147, 5, 1, "", "InvalidConfigError"], [147, 4, 1, "", "check_config"], [147, 4, 1, "", "load_config"], [147, 4, 1, "", "narrow_dict_type"], [147, 4, 1, "", "narrow_dict_type_and_set_attribute"]], "fl4health.utils.data_generation": [[148, 1, 1, "", "SyntheticFedProxDataset"], [148, 1, 1, "", "SyntheticIidFedProxDataset"], [148, 1, 1, "", "SyntheticNonIidFedProxDataset"]], "fl4health.utils.data_generation.SyntheticFedProxDataset": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "construct_covariance_matrix"], [148, 2, 1, "", "generate"], [148, 2, 1, "", "generate_client_tensors"], [148, 2, 1, "", "map_inputs_to_outputs"]], "fl4health.utils.data_generation.SyntheticIidFedProxDataset": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "generate_client_tensors"], [148, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "generate_client_tensors"], [148, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.dataset": [[149, 1, 1, "", "BaseDataset"], [149, 1, 1, "", "DictionaryDataset"], [149, 1, 1, "", "SslTensorDataset"], [149, 1, 1, "", "SyntheticDataset"], [149, 1, 1, "", "TensorDataset"], [149, 4, 1, "", "select_by_indices"]], "fl4health.utils.dataset.BaseDataset": [[149, 2, 1, "", "update_target_transform"], [149, 2, 1, "", "update_transform"]], "fl4health.utils.dataset.DictionaryDataset": [[149, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SyntheticDataset": [[149, 2, 1, "", "__init__"]], "fl4health.utils.dataset_converter": [[150, 1, 1, "", "AutoEncoderDatasetConverter"], [150, 1, 1, "", "DatasetConverter"]], "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "convert_dataset"], [150, 2, 1, "", "get_condition_vector_size"], [150, 2, 1, "", "get_unpacking_function"], [150, 2, 1, "", "unpack_input_condition"]], "fl4health.utils.dataset_converter.DatasetConverter": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "convert_dataset"]], "fl4health.utils.early_stopper": [[151, 1, 1, "", "EarlyStopper"]], "fl4health.utils.early_stopper.EarlyStopper": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "add_default_snapshot_attr"], [151, 2, 1, "", "delete_default_snapshot_attr"], [151, 2, 1, "", "load_snapshot"], [151, 2, 1, "", "save_snapshot"], [151, 2, 1, "", "should_stop"]], "fl4health.utils.functions": [[152, 1, 1, "", "BernoulliSample"], [152, 4, 1, "", "decode_and_pseudo_sort_results"], [152, 4, 1, "", "pseudo_sort_scoring_function"], [152, 4, 1, "", "select_zeroeth_element"], [152, 4, 1, "", "sigmoid_inverse"]], "fl4health.utils.functions.BernoulliSample": [[152, 2, 1, "", "backward"], [152, 2, 1, "", "forward"], [152, 2, 1, "", "setup_context"]], "fl4health.utils.load_data": [[153, 1, 1, "", "ToNumpy"], [153, 4, 1, "", "get_cifar10_data_and_target_tensors"], [153, 4, 1, "", "get_mnist_data_and_target_tensors"], [153, 4, 1, "", "get_train_and_val_cifar10_datasets"], [153, 4, 1, "", "get_train_and_val_mnist_datasets"], [153, 4, 1, "", "load_cifar10_data"], [153, 4, 1, "", "load_cifar10_test_data"], [153, 4, 1, "", "load_mnist_data"], [153, 4, 1, "", "load_mnist_test_data"], [153, 4, 1, "", "load_msd_dataset"], [153, 4, 1, "", "split_data_and_targets"]], "fl4health.utils.logging": [[154, 1, 1, "", "LoggingMode"]], "fl4health.utils.logging.LoggingMode": [[154, 3, 1, "", "EARLY_STOP_VALIDATION"], [154, 3, 1, "", "TEST"], [154, 3, 1, "", "TRAIN"], [154, 3, 1, "", "VALIDATION"]], "fl4health.utils.losses": [[155, 1, 1, "", "EvaluationLosses"], [155, 1, 1, "", "LossMeter"], [155, 1, 1, "", "LossMeterType"], [155, 1, 1, "", "Losses"], [155, 1, 1, "", "TrainingLosses"]], "fl4health.utils.losses.EvaluationLosses": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate"], [155, 2, 1, "", "as_dict"]], "fl4health.utils.losses.LossMeter": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate_losses_dict"], [155, 2, 1, "", "clear"], [155, 2, 1, "", "compute"], [155, 2, 1, "", "update"]], "fl4health.utils.losses.LossMeterType": [[155, 3, 1, "", "ACCUMULATION"], [155, 3, 1, "", "AVERAGE"]], "fl4health.utils.losses.Losses": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate"], [155, 2, 1, "", "as_dict"]], "fl4health.utils.losses.TrainingLosses": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate"], [155, 2, 1, "", "as_dict"]], "fl4health.utils.metric_aggregation": [[156, 4, 1, "", "evaluate_metrics_aggregation_fn"], [156, 4, 1, "", "fit_metrics_aggregation_fn"], [156, 4, 1, "", "metric_aggregation"], [156, 4, 1, "", "normalize_metrics"], [156, 4, 1, "", "uniform_evaluate_metrics_aggregation_fn"], [156, 4, 1, "", "uniform_metric_aggregation"], [156, 4, 1, "", "uniform_normalize_metrics"]], "fl4health.utils.metrics": [[157, 1, 1, "", "Accuracy"], [157, 1, 1, "", "BalancedAccuracy"], [157, 1, 1, "", "BinarySoftDiceCoefficient"], [157, 1, 1, "", "F1"], [157, 1, 1, "", "Metric"], [157, 1, 1, "", "MetricManager"], [157, 1, 1, "", "MetricPrefix"], [157, 1, 1, "", "ROC_AUC"], [157, 1, 1, "", "SimpleMetric"], [157, 1, 1, "", "TorchMetric"], [157, 1, 1, "", "TransformsMetric"]], "fl4health.utils.metrics.Accuracy": [[157, 2, 1, "", "__init__"]], "fl4health.utils.metrics.BalancedAccuracy": [[157, 2, 1, "", "__init__"]], "fl4health.utils.metrics.BinarySoftDiceCoefficient": [[157, 2, 1, "", "__init__"]], "fl4health.utils.metrics.F1": [[157, 2, 1, "", "__init__"]], "fl4health.utils.metrics.Metric": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "clear"], [157, 2, 1, "", "compute"], [157, 2, 1, "", "update"]], "fl4health.utils.metrics.MetricManager": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "check_target_prediction_keys_equal"], [157, 2, 1, "", "clear"], [157, 2, 1, "", "compute"], [157, 2, 1, "", "update"]], "fl4health.utils.metrics.MetricPrefix": [[157, 3, 1, "", "TEST_PREFIX"], [157, 3, 1, "", "VAL_PREFIX"]], "fl4health.utils.metrics.ROC_AUC": [[157, 2, 1, "", "__init__"]], "fl4health.utils.metrics.SimpleMetric": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "clear"], [157, 2, 1, "", "compute"], [157, 2, 1, "", "update"]], "fl4health.utils.metrics.TorchMetric": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "clear"], [157, 2, 1, "", "compute"], [157, 2, 1, "", "update"]], "fl4health.utils.metrics.TransformsMetric": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "clear"], [157, 2, 1, "", "compute"], [157, 2, 1, "", "update"]], "fl4health.utils.msd_dataset_sources": [[158, 1, 1, "", "MsdDataset"], [158, 4, 1, "", "get_msd_dataset_enum"]], "fl4health.utils.msd_dataset_sources.MsdDataset": [[158, 3, 1, "", "TASK01_BRAINTUMOUR"], [158, 3, 1, "", "TASK02_HEART"], [158, 3, 1, "", "TASK03_LIVER"], [158, 3, 1, "", "TASK04_HIPPOCAMPUS"], [158, 3, 1, "", "TASK05_PROSTATE"], [158, 3, 1, "", "TASK06_LUNG"], [158, 3, 1, "", "TASK07_PANCREAS"], [158, 3, 1, "", "TASK08_HEPATICVESSEL"], [158, 3, 1, "", "TASK09_SPLEEN"], [158, 3, 1, "", "TASK10_COLON"]], "fl4health.utils.nnunet_utils": [[159, 1, 1, "", "Module2LossWrapper"], [159, 1, 1, "", "NnunetConfig"], [159, 1, 1, "", "PolyLRSchedulerWrapper"], [159, 1, 1, "", "StreamToLogger"], [159, 4, 1, "", "collapse_one_hot_tensor"], [159, 4, 1, "", "convert_deep_supervision_dict_to_list"], [159, 4, 1, "", "convert_deep_supervision_list_to_dict"], [159, 4, 1, "", "get_dataset_n_voxels"], [159, 4, 1, "", "get_segs_from_probs"], [159, 1, 1, "", "nnUNetDataLoaderWrapper"], [159, 4, 1, "", "prepare_loss_arg"], [159, 4, 1, "", "reload_modules"], [159, 4, 1, "", "set_nnunet_env"], [159, 4, 1, "", "use_default_signal_handlers"]], "fl4health.utils.nnunet_utils.Module2LossWrapper": [[159, 2, 1, "", "forward"]], "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "get_lr"]], "fl4health.utils.nnunet_utils.StreamToLogger": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "flush"], [159, 2, 1, "", "write"]], "fl4health.utils.nnunet_utils.nnUNetDataLoaderWrapper": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "reset"], [159, 2, 1, "", "shutdown"]], "fl4health.utils.parameter_extraction": [[160, 4, 1, "", "check_shape_match"], [160, 4, 1, "", "get_all_model_parameters"]], "fl4health.utils.partitioners": [[161, 1, 1, "", "DirichletLabelBasedAllocation"]], "fl4health.utils.partitioners.DirichletLabelBasedAllocation": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "partition_dataset"], [161, 2, 1, "", "partition_label_indices"]], "fl4health.utils.privacy_utilities": [[162, 4, 1, "", "convert_model_to_opacus_model"], [162, 4, 1, "", "map_model_to_opacus_model"], [162, 4, 1, "", "privacy_validate_and_fix_modules"]], "fl4health.utils.random": [[163, 4, 1, "", "generate_hash"], [163, 4, 1, "", "restore_random_state"], [163, 4, 1, "", "save_random_state"], [163, 4, 1, "", "set_all_random_seeds"], [163, 4, 1, "", "unset_all_random_seeds"]], "fl4health.utils.sampler": [[164, 1, 1, "", "DirichletLabelBasedSampler"], [164, 1, 1, "", "LabelBasedSampler"], [164, 1, 1, "", "MinorityLabelBasedSampler"]], "fl4health.utils.sampler.DirichletLabelBasedSampler": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "subsample"]], "fl4health.utils.sampler.LabelBasedSampler": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "subsample"]], "fl4health.utils.sampler.MinorityLabelBasedSampler": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "subsample"]], "fl4health.utils.snapshotter": [[165, 1, 1, "", "AbstractSnapshotter"], [165, 1, 1, "", "LRSchedulerSnapshotter"], [165, 1, 1, "", "NumberSnapshotter"], [165, 1, 1, "", "OptimizerSnapshotter"], [165, 1, 1, "", "SerializableObjectSnapshotter"], [165, 1, 1, "", "TorchModuleSnapshotter"]], "fl4health.utils.snapshotter.AbstractSnapshotter": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "dict_wrap_attr"], [165, 2, 1, "", "load"], [165, 2, 1, "", "load_attribute"], [165, 2, 1, "", "save"], [165, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.LRSchedulerSnapshotter": [[165, 2, 1, "", "load_attribute"], [165, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.NumberSnapshotter": [[165, 2, 1, "", "load_attribute"], [165, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.OptimizerSnapshotter": [[165, 2, 1, "", "load_attribute"], [165, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SerializableObjectSnapshotter": [[165, 2, 1, "", "load_attribute"], [165, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.TorchModuleSnapshotter": [[165, 2, 1, "", "load_attribute"], [165, 2, 1, "", "save_attribute"]], "fl4health.utils.typing": [[166, 1, 1, "", "LogLevel"]], "fl4health.utils.typing.LogLevel": [[166, 3, 1, "", "CRITICAL"], [166, 3, 1, "", "DEBUG"], [166, 3, 1, "", "ERROR"], [166, 3, 1, "", "INFO"], [166, 3, 1, "", "NOTSET"], [166, 3, 1, "", "WARNING"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "terms": {"": [10, 15, 19, 20, 21, 23, 25, 26, 27, 33, 35, 39, 40, 42, 43, 44, 46, 47, 48, 60, 75, 93, 99, 109, 113, 119, 125, 131, 133, 134, 136, 138, 139, 140, 143, 144, 146, 148, 159, 161, 165], "0": [6, 25, 39, 40, 41, 42, 44, 46, 51, 54, 64, 66, 67, 69, 72, 74, 80, 82, 83, 87, 99, 109, 113, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 152, 153, 157, 159, 161, 164, 166], "000": 44, "001": [6, 66], "00818": 31, "01": 72, "03075": 55, "03871": 132, "05": [68, 83], "05206": 33, "05629": [131, 135], "05709": [64, 77], "06127": 148, "06378": [47, 127, 143], "06963": [132, 142], "07": 157, "07078": [33, 76], "07978313": [161, 164], "08857052": [161, 164], "09": 140, "09158": [64, 77], "09278": [47, 127], "1": [25, 39, 40, 42, 44, 46, 64, 65, 66, 68, 69, 74, 80, 82, 83, 87, 89, 99, 109, 113, 119, 120, 121, 122, 123, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 151, 152, 153, 157, 159, 161, 164], "10": [25, 39, 40, 66, 87, 148, 153, 159, 161, 164, 166], "100": 164, "1000": [148, 161, 164], "10000": 161, "12": 44, "1308": 152, "13461": 20, "15": 54, "15328": [32, 122, 139], "1602": [131, 135], "16825": 34, "1710": [132, 142], "1812": 148, "19": 68, "1905": 132, "1910": [47, 127, 143], "1912": 31, "19619462": [161, 164], "19644968": [161, 164], "19992536": [161, 164], "1d": [148, 161], "1e": [68, 83, 140, 157], "2": [6, 21, 44, 47, 64, 68, 69, 87, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 152, 153, 157, 159, 161, 164], "20": [6, 25, 39, 40, 55, 166], "2002": [64, 77], "2003": 20, "20080513": [161, 164], "2016": [64, 108], "2019": 55, "2023": [136, 137], "2066252": [161, 164], "2102": [33, 76], "2111": [47, 127], "2207": [55, 64, 77], "2209": [32, 122, 139], "2303": 33, "2309": 34, "23645891": [161, 164], "250": [44, 159], "29519184": [161, 164], "2999956": [161, 164], "2d": [44, 75, 83, 87, 148], "2i": 68, "2n": 64, "3": [6, 44, 87, 134, 157, 161], "30": 166, "32": [108, 126, 163], "3432": 152, "3837": 159, "3d": [83, 157], "3d_fullr": 44, "4": [44, 47, 68, 134, 152, 157], "40": 166, "4096": 163, "42": 163, "4d": 83, "5": [42, 44, 46, 64, 66, 67, 69, 72, 83, 87, 132, 135, 137, 148, 151, 157, 159, 161, 164], "50": [66, 164, 166], "5d": 83, "6": 87, "60": 148, "64": [6, 159], "6b180037abbebea991d8b1232f8a8ca9": 64, "7": 54, "8": [29, 51, 54, 163, 164], "8080": 6, "9": [6, 132, 140, 159], "99": 140, "A": [3, 9, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 60, 74, 75, 78, 84, 87, 97, 99, 109, 110, 111, 113, 116, 118, 120, 121, 122, 123, 124, 125, 127, 130, 133, 134, 135, 136, 137, 138, 139, 141, 143, 147, 149, 150, 153, 155, 156, 157, 159, 163, 165], "AND": [9, 33, 35, 143, 149], "AS": 46, "As": [9, 10, 12, 26, 87, 148, 152, 157], "At": [21, 28, 35, 41, 151], "By": [12, 19, 21, 25, 39, 40, 66, 85, 143], "For": [10, 12, 15, 20, 21, 23, 25, 26, 30, 33, 35, 39, 40, 41, 42, 43, 44, 46, 61, 73, 80, 83, 87, 89, 93, 96, 99, 105, 108, 109, 113, 116, 117, 118, 119, 120, 123, 125, 127, 132, 133, 134, 135, 137, 138, 142, 148, 149, 152, 157, 159, 162, 163, 164], "If": [6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 68, 80, 82, 83, 87, 102, 105, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 132, 135, 136, 137, 138, 143, 146, 147, 151, 152, 157, 159, 161, 163], "In": [3, 19, 20, 21, 25, 26, 28, 33, 35, 39, 43, 45, 46, 68, 80, 82, 83, 97, 99, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 131, 132, 133, 134, 135, 138, 139, 141, 148, 155, 161, 164], "It": [9, 11, 12, 30, 43, 48, 64, 75, 76, 103, 109, 110, 113, 119, 131, 132, 136, 137, 143, 148, 152, 161, 162, 163], "NOT": [9, 35, 78, 88, 135, 137], "No": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 107], "Not": [41, 43, 44, 121, 124, 141], "On": 43, "One": [3, 20, 88, 123, 127, 153], "Or": 146, "TO": 46, "That": [10, 28, 33, 84, 132, 143, 148, 161], "The": [3, 6, 9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 58, 64, 66, 68, 69, 73, 74, 75, 76, 78, 83, 84, 85, 87, 88, 89, 93, 96, 99, 103, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165], "Then": [21, 22, 25, 26, 27, 32, 35, 36, 37, 39, 40, 43, 44, 47, 139, 143, 148], "There": [35, 152, 161], "These": [3, 21, 26, 28, 41, 45, 60, 68, 76, 84, 88, 89, 120, 121, 123, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 160], "To": [6, 21, 27, 35, 41, 44, 47, 73, 124, 128, 155, 157], "Will": [9, 136, 149], "With": 6, "_": [6, 9, 11, 69], "__call__": 157, "__init__": [7, 8, 9, 10, 11, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 61, 63, 64, 66, 68, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 148, 149, 150, 151, 155, 157, 159, 161, 164, 165], "_config": 44, "_description_": [28, 122, 131, 134, 135, 141], "_f": 87, "_hydrate_model_for_checkpoint": [12, 124], "_loss": [6, 21, 44, 103, 159], "_lrschedul": [44, 159], "_maskedbatchnorm": 83, "_modul": 80, "_p": 69, "_summary_": [109, 113, 146], "ab": [20, 31, 33, 47, 55, 127, 131, 132, 135, 148], "abadi": 108, "abc": [9, 73, 85, 86, 95, 96, 102, 107, 108, 119, 144, 148, 149, 155, 157, 164, 165], "abl": 42, "ablat": [3, 34], "about": [19, 21, 22, 26, 28, 35, 41, 43, 47, 52], "abov": [3, 25, 35, 39, 40, 87, 99, 107, 108, 109, 113, 132, 134, 138, 148, 157], "absenc": 3, "absolut": [65, 159], "abstract": [9, 41, 64, 73, 85, 86, 95, 96, 98, 102, 107, 108, 144, 148, 155, 157, 164, 165], "abstracta": [7, 71, 73], "abstractsnapshott": [7, 145, 165], "accept": [116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 152, 157], "accept_failur": [116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "access": [109, 113], "accomplish": [119, 164], "accord": [44, 47, 87, 99, 131, 134, 135, 141, 143, 155, 161], "account": [107, 109, 113, 120, 123, 127, 128, 132, 138], "accumul": [25, 39, 40, 75, 145, 155, 157], "accumulate_featur": [71, 75], "accuraci": [6, 7, 129, 136, 141, 143, 145, 157], "achiev": 21, "across": [35, 41, 43, 65, 69, 75, 107, 109, 110, 113, 133, 134, 138, 139, 142, 143, 148, 152, 156, 159, 161], "act": [74, 83, 85, 89, 146], "activ": [6, 21, 23, 25, 26, 35, 39, 40, 42, 46], "actual": [10, 43, 83, 87], "ad": [3, 19, 21, 22, 25, 26, 28, 35, 39, 40, 41, 43, 47, 75, 80, 83, 87, 108, 109, 113, 120, 123, 125, 127, 142, 150], "adap": 159, "adapt": [3, 12, 19, 26, 36, 43, 55, 132, 135, 137, 140], "adapt_loss_weight": [135, 137], "adaptive_alpha": 72, "adaptive_clip": 132, "adaptive_constraint_serv": [7, 114], "adaptive_drift_constraint_cli": [7, 18], "adaptiveconstraintservercheckpointandstatemodul": [7, 8, 12, 116, 117, 118], "adaptivedriftconstraintcli": [7, 18, 19, 26, 30, 43], "add": [3, 19, 25, 26, 35, 39, 40, 43, 80, 87, 103, 109, 110, 113, 119, 122, 132, 142, 152, 157], "add_default_snapshot_attr": [145, 151], "add_items_to_config_fn": [7, 114, 125], "add_mean": 87, "add_noise_to_arrai": [7, 129, 142], "add_noise_to_ndarrai": [7, 129, 142], "addit": [3, 12, 19, 20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 43, 44, 46, 75, 80, 82, 83, 119, 125, 135, 148, 150, 155, 163], "addition": 26, "additional_dim": 159, "additional_loss": 155, "additional_paramet": [94, 96, 98], "adjust": [3, 135, 136, 137], "adjustment_weight": 136, "adjustment_weight_step_s": [136, 137], "advanc": [20, 21], "aeprocessor": [100, 101, 102], "affect": 163, "affin": [83, 148], "aforement": 152, "after": [3, 6, 10, 12, 19, 20, 21, 23, 25, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 87, 104, 109, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 132, 138, 139, 141, 148, 153, 159], "afterward": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 159], "again": 15, "against": [19, 20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 43, 46, 136, 137, 157], "agglom": 138, "aggreg": [3, 10, 12, 19, 20, 21, 23, 26, 28, 30, 35, 40, 41, 42, 43, 44, 45, 46, 47, 69, 74, 76, 78, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 152, 155, 156], "aggregate_bayesian": [129, 139], "aggregate_evalu": [114, 121, 129, 131, 136, 141], "aggregate_fit": [129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143], "aggregate_loss": [7, 129, 130], "aggregate_losses_dict": [145, 155], "aggregate_result": [7, 129, 130], "aggregate_util": [7, 129], "aggregated_metr": 156, "aggregation_mod": 74, "ai": [109, 113], "aim": [3, 46, 64, 68, 69, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "akin": [10, 26, 43], "al": [55, 108, 136, 137], "algorithm": [3, 20, 21, 26, 28, 30, 32, 35, 42, 43, 87, 97, 116, 118, 122, 127, 132, 136, 137, 138, 140, 163], "alia": [23, 26, 27, 33, 42, 46], "align": [48, 59, 66, 128, 131, 133, 134, 138, 139, 143], "all": [3, 19, 20, 21, 22, 23, 25, 26, 28, 31, 33, 35, 39, 40, 42, 43, 44, 45, 46, 47, 52, 59, 61, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 93, 97, 99, 107, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 148, 150, 151, 152, 155, 156, 157, 159, 160], "all_client_metr": 156, "all_h_u_per_sampl": 68, "all_h_u_per_v_i": 68, "alloc": [153, 161], "allow": [3, 9, 10, 12, 19, 21, 22, 26, 28, 33, 35, 41, 43, 47, 48, 68, 75, 84, 87, 105, 109, 113, 119, 122, 125, 131, 133, 134, 138, 139, 148, 151, 152, 157, 163], "almost": 142, "along": [3, 12, 20, 21, 27, 28, 29, 33, 35, 41, 44, 47, 75, 78, 88, 121, 132, 133, 134, 135, 138, 139, 155, 156, 157], "alpha": [21, 25, 39, 40, 72, 139, 148], "alpha_lr": 72, "alpha_new": 139, "alreadi": [6, 9, 10, 11, 12, 20, 21, 27, 41, 44, 87, 93, 109, 113, 138, 153, 165], "also": [3, 12, 19, 21, 22, 23, 25, 26, 27, 32, 35, 39, 40, 42, 43, 44, 45, 46, 47, 60, 68, 76, 78, 84, 96, 97, 99, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 143, 148, 150, 152, 159, 163], "altern": 87, "although": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 159], "alwai": [9, 11, 12, 19, 28, 41, 43, 44, 84, 97, 109, 110, 113, 141, 159], "always_preprocess": 44, "among": 134, "amount": [119, 120, 123, 127, 135, 137], "an": [3, 6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 54, 62, 74, 77, 80, 82, 83, 84, 85, 87, 96, 99, 109, 110, 111, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 146, 149, 152, 154, 155, 157, 158, 159, 161, 162, 164, 166], "analysi": [87, 138], "analyt": 103, "analyz": 51, "ani": [9, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 35, 39, 40, 42, 44, 46, 47, 52, 54, 55, 60, 75, 83, 92, 93, 94, 95, 96, 97, 98, 99, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 133, 134, 136, 137, 138, 139, 140, 144, 147, 148, 150, 152, 159, 160, 162, 163, 164, 165], "announc": [21, 44], "anoth": [3, 6, 80, 82, 83, 99, 143, 148, 161], "anticip": 3, "anyth": [3, 21, 25, 26, 27, 119], "apfl": [3, 20, 21, 25, 39, 40, 44], "apfl_bas": [7, 71], "apfl_client": [7, 18], "apflclient": [7, 18, 20], "apflmodul": [7, 71, 72], "api": 3, "app": 121, "append": [21, 44, 155, 157], "appendix": 148, "appli": [3, 19, 21, 23, 25, 27, 39, 40, 44, 47, 51, 54, 60, 64, 80, 82, 83, 87, 104, 107, 108, 139, 142, 150, 152, 153, 157, 159], "applic": [3, 9, 58, 81, 104, 108, 135, 137, 159], "apply_layer_filt": [90, 93], "approach": [10, 32, 34, 45, 46, 66, 76, 88, 131, 132, 135, 138, 139, 162], "appropri": [19, 21, 28, 33, 42, 46, 60, 130, 148], "approxim": [25, 39, 40, 68, 87, 138], "ar": [3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 59, 60, 64, 65, 66, 68, 75, 76, 78, 80, 82, 83, 84, 85, 87, 88, 89, 93, 96, 97, 99, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 148, 150, 151, 152, 157, 159, 160, 161, 162, 164], "arbitrari": [21, 96, 99, 110, 111, 133, 134, 152], "architectur": [3, 12, 35, 76, 125, 131, 143], "area": [133, 134, 157], "arg": [25, 39, 40, 86, 152, 162, 164], "argument": [6, 9, 11, 21, 25, 39, 40, 44, 87, 109, 110, 111, 113, 125, 146, 152, 157, 159], "around": 117, "arrai": [19, 96, 124, 130, 139, 142, 143, 152, 160, 161, 164], "arrang": 138, "art": 3, "articl": [46, 69], "artifact": [116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "arxiv": [20, 31, 32, 33, 34, 47, 55, 64, 76, 77, 122, 127, 131, 132, 135, 139, 142, 143, 148, 152], "as_dict": [145, 155], "ask": [35, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "assert": 9, "assertionerror": [41, 157], "assess": 66, "assign": [161, 164], "associ": [9, 11, 21, 28, 34, 36, 42, 46, 61, 69, 89, 121, 126, 127, 131, 132, 143, 148, 149, 157, 160, 161, 162], "assum": [12, 19, 20, 21, 22, 25, 26, 27, 28, 35, 39, 40, 41, 44, 45, 47, 65, 68, 80, 82, 83, 87, 93, 107, 108, 121, 132, 136, 138, 139, 141, 143, 146, 148, 152, 157, 159, 161], "assumpt": [75, 96], "attempt": [3, 9, 11, 12, 28, 46, 161, 162], "attent": 149, "attribut": [20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 35, 36, 37, 39, 40, 41, 43, 44, 47, 75, 120, 123, 136, 147, 151, 152, 157, 165], "attribute_nam": 147, "attribute_snapshot": 165, "aucroc": 157, "augment": [30, 44, 159], "auto": 73, "autocast": 44, "autoencod": [7, 73, 100, 150], "autoencoderdatasetconvert": [7, 145, 150], "autoencoderprocess": [100, 101, 102], "autoencoders_bas": [7, 71], "autograd": 152, "automat": [6, 152], "auxiliari": [19, 137], "avail": [3, 10, 12, 119, 127, 131, 141, 143], "available_cli": [131, 141], "averag": [3, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 71, 74, 120, 123, 124, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 155, 157], "avoid": [109, 113, 157, 159, 163], "awai": [25, 39, 40, 87, 97], "awar": 36, "axi": 74, "b": [21, 44, 138, 148], "b_k": [108, 148], "back": [9, 11, 21, 28, 41, 45, 80, 82, 83, 87, 125, 132, 143, 159], "background": 159, "backprop": [20, 21, 44], "backpropag": 27, "backward": [19, 21, 25, 26, 27, 35, 39, 40, 42, 43, 47, 145, 152, 155], "balanc": 157, "balanced_accuraci": 157, "balanced_accuracy_scor": 157, "balancedaccuraci": [7, 145, 157], "bar": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 146], "base": [9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166], "base_loss": 103, "base_model": 89, "base_modul": [76, 84, 89], "base_report": [7, 109], "base_sampling_manag": [7, 13], "base_serv": [6, 7, 114], "basedataset": [7, 104, 145, 149, 164], "baseestim": 58, "baseexcept": [119, 121, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143], "basefractionsamplingmanag": [7, 13, 14, 16, 17, 132, 143], "basereport": [7, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128], "baseservercheckpointandstatemodul": [7, 8, 12, 119, 120, 128], "basi": 68, "basic": [9, 12, 21, 44, 45, 47, 102, 109, 113, 116, 118, 125, 136], "basic_cli": [6, 7, 18], "basic_exampl": 6, "basic_fedavg": [7, 129], "basica": [7, 71, 73], "basiccli": [6, 7, 18, 19, 20, 21, 22, 27, 28, 31, 32, 33, 34, 36, 37, 42, 44, 45, 46, 47, 48, 151, 165], "basicfedavg": [7, 123, 129, 131, 132, 133, 134, 135, 138, 140, 143], "batch": [3, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 64, 65, 74, 75, 83, 107, 108, 123, 127, 132, 146, 153, 159], "batch_siz": [6, 51, 54, 64, 65, 69, 75, 78, 84, 89, 123, 127, 153, 157, 159], "batchnorm": 162, "bayesian": [122, 139], "bayesian_aggreg": 139, "becaus": [10, 33, 44, 48, 87, 124, 132, 159], "been": [3, 6, 10, 12, 19, 21, 23, 28, 32, 41, 47, 75, 85, 87, 93, 124, 125, 132, 146, 148, 152, 156, 161], "befor": [6, 10, 12, 21, 23, 25, 26, 30, 35, 39, 40, 41, 42, 43, 44, 46, 47, 68, 84, 85, 109, 113, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 133, 134, 135, 137, 150, 151, 157, 159], "begin": [21, 35, 44, 45, 119, 122, 139], "behavior": [19, 28, 44, 116, 117, 118, 119, 120, 122, 123, 127, 128, 159], "behind": 138, "being": [3, 11, 12, 19, 21, 22, 23, 26, 28, 31, 34, 35, 41, 42, 43, 45, 46, 47, 89, 120, 123, 127, 131, 143, 159], "believ": 87, "belong": [89, 96, 99, 134, 138], "below": [148, 157], "benchmark": 163, "bernoulli": [80, 82, 83, 139, 152], "bernoulli_prob": 152, "bernoullisampl": [7, 145, 152], "best": [3, 151], "bestlossopacuscheckpoint": [7, 8, 11], "bestlosstorchmodulecheckpoint": [7, 8, 9], "beta": [21, 25, 39, 40, 68, 122, 132, 139, 148, 161, 164], "beta_1": 140, "beta_2": 140, "beta_global_update_interv": [39, 40], "beta_new": 139, "beta_with_extreme_kernel_base_valu": [63, 68], "better": [3, 9], "between": [3, 20, 21, 22, 23, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 45, 47, 64, 65, 66, 68, 69, 80, 82, 83, 99, 103, 139, 153], "bia": [79, 80, 82, 83, 148], "bias": [83, 128], "bias_scor": [79, 80, 82, 83, 97], "binari": [44, 56, 62, 80, 82, 83, 97, 132, 139, 157, 159], "binarysoftdicecoeffici": [7, 145, 157], "bit": [12, 22, 119, 122, 132, 142, 148, 159], "blank": [116, 117, 118, 119, 120, 122, 123, 127, 128], "blob": [44, 108], "block": [80, 138, 159], "bool": [9, 11, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 59, 61, 62, 66, 67, 68, 75, 77, 78, 80, 81, 82, 83, 87, 89, 93, 97, 102, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 150, 151, 159, 162, 163], "boolean": [19, 21, 22, 26, 28, 35, 43, 45, 75, 83, 152, 162], "both": [3, 6, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 74, 78, 80, 83, 88, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 143], "bound": [22, 80, 82, 83, 107, 108, 132, 142, 164], "break": [3, 33, 161], "buf": 159, "buffer": [25, 39, 40, 75, 159], "bug": 148, "built": [3, 132, 143], "byte": [19, 28, 29, 48, 59, 61, 62, 119, 128, 136, 137, 140], "c": [83, 143, 148], "c_t": 132, "c_updat": 143, "cach": 44, "calcul": [3, 20, 23, 35, 42, 46, 84, 97, 103, 132, 136, 143, 146, 157], "calculate_parameters_norm": [18, 22], "calculate_update_with_momentum": [129, 132], "call": [6, 9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 27, 30, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 88, 99, 109, 110, 111, 113, 119, 122, 133, 134, 139, 152, 159, 162, 164], "callabl": [51, 54, 55, 73, 75, 93, 97, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 150, 153, 157, 159], "can": [6, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 39, 40, 41, 43, 44, 47, 48, 64, 66, 68, 75, 77, 87, 102, 105, 107, 109, 113, 119, 124, 132, 133, 134, 136, 137, 138, 139, 141, 143, 144, 146, 150, 151, 152, 159, 163], "cancer": 54, "capabl": 73, "care": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 159], "carri": [10, 12, 120], "case": [19, 20, 21, 25, 26, 35, 39, 41, 46, 99, 109, 110, 113, 116, 117, 118, 119, 120, 123, 125, 127, 128, 131, 138, 139, 141, 142, 146, 155, 159], "categor": 61, "categori": [60, 61], "caus": [116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "cc": 64, "cell": 52, "cell_typ": 52, "center": [87, 142, 148], "center_data": [71, 87], "central": [107, 131, 132, 133, 134, 135, 138, 139, 141, 143], "certain": [11, 83, 89, 134, 163], "cfg_fn": 125, "chang": [6, 32, 109, 113, 135, 136, 137], "channel": [80, 83, 157], "charact": 159, "check": [9, 21, 27, 28, 44, 75, 109, 111, 113, 136, 146, 147, 159, 160], "check_config": [7, 145, 147], "check_if_batch_is_empty_and_verify_input": [7, 145, 146], "check_shape_match": [7, 145, 160], "check_target_prediction_keys_equ": [145, 157], "checkpoint": [7, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 75, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 136, 151, 155], "checkpoint_and_state_modul": [19, 20, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "checkpoint_dict": 9, "checkpoint_dir": [9, 11], "checkpoint_exist": [8, 9], "checkpoint_nam": [9, 11], "checkpoint_path": [9, 11], "checkpoint_score_funct": [9, 11], "checkpointing_path": [102, 104], "checkpointmod": [7, 8, 10], "checkpointscorefunctiontyp": 9, "child": [12, 21, 27, 35, 41, 44, 119, 155, 159], "choos": 87, "chosen": [87, 119, 122, 150], "cid": [136, 152], "cifar10": 153, "cifarcli": 6, "circular": 80, "class": [3, 6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166], "classif": [34, 35, 84, 89, 157], "classifi": [3, 31, 33, 89, 157], "classmethod": [80, 82, 83, 136], "clear": [75, 145, 155, 157], "clear_buff": [71, 75], "client": [3, 7, 10, 12, 14, 15, 16, 17, 51, 52, 55, 69, 78, 88, 102, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 150, 151, 152, 156, 159, 161, 163, 165], "client_batch_s": 107, "client_dataset_s": 107, "client_dp_fedavgm": [7, 129], "client_instruct": 126, "client_level_dp_fed_avg_serv": [7, 114], "client_manag": [6, 7, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 136, 141, 143, 144], "client_model_upd": 142, "client_modul": [7, 8], "client_nam": [19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55], "client_num": [51, 52], "client_result": 152, "client_sampling_r": 107, "client_singular_valu": 138, "client_singular_vector": 138, "clientcheckpointandstatemodul": [7, 8, 10, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48], "clientlevelaccount": [7, 106, 107], "clientleveldpfedavgm": [7, 120, 129, 132], "clientleveldpfedavgserv": [7, 114, 120], "clientmanag": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 136, 141, 143], "clientproxi": [14, 15, 16, 17, 119, 121, 126, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 152], "clip": [3, 12, 21, 22, 44, 107, 108, 132, 142], "clip_paramet": [18, 22], "clipping_bit": 132, "clipping_bound": 142, "clipping_cli": [7, 18], "clipping_learning_r": 132, "clipping_noise_multipli": 132, "clipping_quantil": 132, "clippingbitservercheckpointandstatemodul": [7, 8, 12], "clone": [42, 146], "clone_and_freeze_model": [7, 145, 146], "close": [3, 34], "cnn_model": 6, "code": [3, 55, 66, 148, 152], "coeffici": [3, 19, 68, 135, 143, 157], "coincid": 68, "collabor": 6, "collaps": 159, "collapse_one_hot_tensor": [7, 145, 159], "collect": [136, 137, 155], "column": [48, 55, 58, 60, 87, 138], "columntransform": 60, "com": [26, 44, 46, 55, 64, 66, 69, 108, 148, 159, 163], "combin": [3, 20, 35, 85, 132, 137, 152], "come": 152, "commenc": 6, "common": 6, "commun": [12, 32, 41, 45, 48, 119, 132], "compar": [45, 87], "compat": [32, 35, 84, 109, 113, 152, 157, 159, 162], "compil": 44, "complet": [3, 20, 21, 25, 39, 40, 42, 75, 105, 107], "complex": 12, "compliant": 162, "compon": [3, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 69, 84, 87, 104, 105, 119, 122, 125, 138, 148], "compos": 103, "compress": [3, 32], "comput": [9, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 64, 65, 66, 68, 70, 72, 73, 77, 78, 80, 82, 83, 85, 87, 88, 103, 104, 119, 120, 123, 130, 132, 138, 141, 142, 143, 145, 152, 155, 156, 157, 159], "compute_all_h_u_all_sampl": [63, 68], "compute_all_h_u_from_inner_product": [63, 68], "compute_all_h_u_from_inner_products_linear": [63, 68], "compute_all_h_u_linear": [63, 68], "compute_contrastive_loss": [63, 67], "compute_cosine_similarity_loss": [63, 67], "compute_cumulative_explained_vari": [71, 87], "compute_euclidean_inner_product": [63, 68], "compute_euclidean_inner_products_linear": [63, 68], "compute_evaluation_loss": [18, 21, 23, 24, 25, 26, 27, 42, 46], "compute_explained_variance_ratio": [71, 87], "compute_h_u_from_inner_product": [63, 68], "compute_h_u_from_inner_products_linear": [63, 68], "compute_hat_d_per_kernel": [63, 68], "compute_hat_q_k": [63, 68], "compute_hat_q_k_linear": [63, 68], "compute_kernel": [63, 66], "compute_loss_and_additional_loss": [18, 20, 21, 23, 24, 25, 26, 38, 39, 40, 42, 44, 46], "compute_mkmmd": [63, 68], "compute_negative_similar": [63, 64], "compute_parameter_delta": [129, 143], "compute_parameters_delta": [18, 47], "compute_penalty_loss": [18, 19], "compute_perfcl_loss": [63, 67], "compute_projection_vari": [71, 87], "compute_reconstruction_error": [71, 87], "compute_training_loss": [18, 19, 21, 24, 25, 26, 27, 35, 38, 39, 40, 42, 43], "compute_updated_control_vari": [18, 47, 129, 143], "compute_updated_paramet": [129, 143], "compute_updated_weight": [129, 143], "compute_vertic": [63, 68], "compute_weight_update_and_clip": [18, 22], "concaten": [19, 26, 47, 71, 85], "concept": [12, 36, 140], "conclud": [23, 46], "concurr": 126, "cond_vec_s": 150, "condit": [73, 83, 102, 150, 152], "condition_vector_s": 150, "conditionalva": [7, 71, 73], "config": [6, 7, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 91, 92, 93, 95, 99, 109, 113, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 145, 146, 159], "config_path": 147, "configur": [19, 23, 29, 41, 45, 46, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 157], "configure_evalu": [114, 121, 125, 129, 131, 132, 136, 141], "configure_fit": [125, 129, 131, 132, 136, 141], "configure_fit_al": [129, 143], "configure_pol": [119, 129, 131, 144], "conjug": 139, "conjunct": 157, "connect": [3, 32, 80, 136], "consequ": 87, "consid": [3, 12, 64, 146], "consist": [27, 35, 99, 104, 133, 134, 143, 151], "constant": [7, 19, 56, 107, 132, 135, 137, 159], "constitut": [134, 161], "constrain": [3, 25, 26, 35, 39, 42, 43, 46], "constrained_fenda_cli": [7, 18], "constrainedfendacli": [7, 18, 23], "constrainedfendalosscontain": [7, 23, 63, 67], "constraint": [12, 23, 26, 35, 43, 135, 137], "constraint_tensor": 70, "construct": [9, 51, 54, 55, 60, 68, 93, 97, 134, 143, 161, 164], "construct_covariance_matrix": [145, 148], "construct_quadrupl": [63, 68], "construct_rxrx1_tensor_dataset": [49, 50, 51], "construct_skin_cancer_tensor_dataset": [49, 53, 54], "constructor": [44, 93], "contain": [3, 10, 19, 21, 22, 23, 25, 26, 27, 28, 33, 35, 36, 39, 40, 41, 42, 43, 46, 47, 51, 52, 54, 55, 69, 96, 99, 103, 104, 105, 110, 111, 119, 120, 121, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 153, 157, 159, 160, 163, 164, 165], "context": [9, 152], "continu": [3, 157], "contrast": [3, 21, 23, 42, 46, 64, 69, 77, 84, 138], "contrastive_loss": [7, 23, 42, 63], "contrastive_loss_config": 67, "contrastive_loss_minim": 23, "contrastive_loss_weight": 67, "contrastive_weight": 42, "contribut": [3, 9, 133, 134, 139, 156], "control": [3, 21, 45, 47, 127, 140, 143, 159, 161, 164], "control_variates_upd": 143, "conv": 80, "conv1d": 80, "conv2d": 80, "conv3d": 80, "conv_modul": 80, "convers": [150, 162], "convert": [32, 54, 81, 96, 134, 150, 152, 153, 159, 160, 161, 162], "convert_dataset": [145, 150], "convert_deep_supervision_dict_to_list": [7, 145, 159], "convert_deep_supervision_list_to_dict": [7, 145, 159], "convert_model_to_opacus_model": [7, 145, 162], "convert_to_masked_model": [71, 79, 81], "converter_funct": 150, "convex": [3, 20], "convolut": 80, "convolv": 80, "convtranspose1d": 80, "convtranspose2d": 80, "convtranspose3d": 80, "coo": [12, 96, 99, 134], "coordin": [21, 28, 33, 41, 45, 134], "copi": [35, 44, 45], "correct": [3, 47, 126, 132], "correctli": [10, 12, 33, 136], "correspond": [19, 20, 21, 26, 27, 43, 44, 45, 47, 48, 60, 69, 87, 96, 97, 132, 138, 139, 142, 147, 149, 152, 155, 157, 161], "cos_sim_loss": 23, "cos_sim_loss_weight": 67, "cosin": [23, 64, 65], "cosine_similarity_loss": [7, 23, 63], "cosine_similarity_loss_config": 67, "cosinesimilarityloss": [7, 63, 65], "cosinesimilaritylosscontain": [7, 63, 67], "could": [48, 150], "count": [21, 41, 44, 119, 120, 123, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 152, 153, 156], "covari": [68, 148], "cover": 139, "cpu": [6, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 102, 146], "creat": [9, 11, 44, 83, 104, 109, 113, 146, 149, 151, 153, 157, 164], "create_plan": [18, 44], "create_split": [49, 50, 51], "creation": [12, 150], "criteria": [87, 93, 128, 135, 137, 151], "criterion": [10, 14, 15, 16, 17, 19, 42, 45, 46, 99], "critic": [145, 166], "cross": [43, 64], "crossentropyloss": 6, "csv": 52, "ctx": 152, "cubla": 163, "cublas_workspace_config": 163, "cuda": [19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 146, 163], "current": [10, 12, 19, 21, 22, 23, 25, 26, 28, 29, 30, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 69, 85, 97, 99, 109, 110, 111, 113, 119, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 146, 148, 152, 155, 159, 161], "current_epoch": [21, 44], "current_round": [20, 21, 25, 33, 36, 39, 40, 44], "current_server_round": [6, 21, 23, 25, 26, 30, 33, 35, 36, 39, 40, 42, 43, 44, 46, 128], "curv": 157, "custom": [19, 20, 21, 22, 23, 26, 28, 31, 32, 33, 34, 35, 41, 43, 44, 47, 119, 121, 122, 125, 127, 129, 131, 136, 137, 143, 150, 152, 162], "custom_converter_funct": 150, "cvae": [102, 103], "cvaefixedconditionprocessor": [100, 101, 102], "cvaevariableconditionprocessor": [100, 101, 102], "cycl": [132, 135, 151], "cyclop": 48, "d": [87, 138, 149, 161, 164], "data": [3, 6, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 60, 61, 66, 68, 73, 74, 87, 102, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 138, 139, 146, 148, 149, 150, 152, 153, 157, 159, 161, 164], "data_dir": [54, 153], "data_gener": [7, 145], "data_identifi": 44, "data_load": 29, "data_path": [6, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 55, 153], "data_shap": 150, "datafram": [48, 51, 52, 55, 58, 60, 61], "dataload": [6, 21, 22, 25, 26, 27, 28, 29, 32, 35, 36, 37, 39, 40, 41, 43, 44, 47, 51, 54, 104, 150, 153, 159], "datapoint": [108, 149, 161, 164], "dataset": [6, 7, 21, 25, 26, 28, 29, 33, 41, 43, 44, 59, 104, 107, 108, 131, 132, 133, 134, 135, 138, 139, 141, 143, 145, 148, 150, 153, 156, 157, 159, 161, 164], "dataset_convert": [7, 54, 145, 153], "dataset_dir": 52, "dataset_id": 44, "dataset_nam": [54, 158], "dataset_path": 6, "dataset_typ": 51, "datasetconvert": [7, 54, 145, 150, 153], "ddp": 3, "deal": 149, "debug": [44, 109, 113, 145, 166], "decai": 159, "decathelon": 153, "decid": [9, 10, 12], "decis": [9, 11], "decod": [71, 73], "decode_and_pseudo_sort_result": [7, 145, 152], "decomposit": [87, 138], "decor": 159, "decreas": [135, 137, 159], "deep": [25, 44, 66, 108, 152, 159], "deep_mmd_client": [7, 18], "deep_mmd_loss": [7, 63], "deep_mmd_loss_weight": 25, "deepmmdloss": [7, 63, 66], "def": [6, 152], "default": [9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 54, 60, 61, 66, 68, 77, 78, 80, 82, 83, 84, 85, 87, 89, 97, 102, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 151, 153, 157, 159, 161, 162, 163, 164], "defaultdict": 156, "defin": [6, 10, 11, 12, 20, 21, 23, 27, 28, 29, 33, 35, 36, 41, 44, 48, 68, 70, 72, 73, 77, 78, 80, 82, 83, 85, 87, 88, 103, 109, 113, 123, 124, 125, 127, 136, 138, 150, 152, 153, 157, 159, 162], "define_metr": [7, 109, 113], "definit": [9, 12, 141], "degre": [66, 140], "delet": [109, 113], "delete_default_snapshot_attr": [145, 151], "delta": [107, 108, 120, 123, 127, 143], "delta_control_vari": 47, "delta_model_weight": 47, "denomin": [83, 142, 157], "denot": [69, 138], "dens": [96, 134], "depend": [6, 21, 28, 33, 45, 48, 89, 109, 113, 131, 162], "depth": 75, "deriv": [21, 22, 25, 26, 27, 32, 35, 36, 37, 39, 40, 43, 44, 46, 47, 116, 118], "derm7pt": 55, "derm7pt_image_path_func": [49, 53, 55], "derm7pt_label_map_func": [49, 53, 55], "descent": 159, "describ": [34, 36, 109, 113, 132, 148], "descript": 148, "design": [3, 36, 150], "desir": [12, 19, 21, 22, 26, 28, 35, 41, 43, 47, 48, 75, 78, 99, 130], "despit": 43, "detail": [87, 93, 99, 134, 139, 148, 152, 163], "determin": [9, 10, 11, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 77, 85, 99, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 151, 152, 159, 162, 163, 164], "determinist": [152, 163], "dev": 107, "develop": 3, "deviat": [97, 108, 142, 148], "devic": [6, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 64, 65, 66, 67, 68, 69, 70, 80, 82, 83, 102, 146], "df": [59, 60], "diagon": [138, 148], "dice": 157, "dict": [9, 10, 11, 12, 19, 20, 21, 23, 25, 26, 27, 28, 29, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 54, 55, 59, 60, 61, 72, 74, 75, 78, 85, 88, 89, 97, 99, 105, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 149, 151, 153, 155, 159, 161, 163, 165], "dict_wrap_attr": [145, 165], "dictionari": [9, 10, 11, 12, 19, 20, 21, 23, 25, 26, 27, 28, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 54, 55, 74, 75, 89, 99, 105, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 146, 147, 149, 153, 155, 157, 159, 165], "dictionary_kei": 147, "dictionarydataset": [7, 145, 149, 164], "differ": [3, 12, 21, 27, 28, 30, 33, 35, 36, 41, 43, 44, 47, 108, 121, 133, 134, 139, 143, 148, 159, 161], "differenti": [3, 11, 22, 37, 47, 108, 120, 123, 127, 132, 152], "dilat": 80, "dim": [65, 159], "dim_reduct": [100, 101], "dimens": [48, 66, 68, 74, 75, 80, 83, 104, 148, 149, 152, 157, 159], "dimension": [29, 87, 103, 104], "dir": 9, "direct": [3, 143], "directli": [138, 152], "directori": [9, 10, 11, 12, 51, 52, 54, 151, 153], "dirichlet": [161, 164], "dirichletlabelbasedalloc": [7, 145, 161], "dirichletlabelbasedsampl": [7, 145, 164], "disabl": [26, 43, 75, 163], "disable_accumulating_featur": [71, 75], "disable_torch_benchmark": 163, "discard": [134, 164], "disconnect": 119, "discrep": [66, 68], "discuss": [35, 132], "displai": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48, 109, 113, 160], "display_progress_bar": 146, "distanc": [25, 39, 40, 66, 68], "distinct": [10, 33, 35, 88, 116, 117, 118, 119, 120, 123, 125, 127, 128], "distribut": [3, 6, 25, 39, 40, 66, 103, 125, 138, 139, 148, 161, 164], "ditto": [3, 10, 21, 25, 26, 35, 39, 40, 43, 116], "ditto_cli": [7, 18], "ditto_deep_mmd_cli": [18, 24], "ditto_mkmmd_cli": [18, 38], "ditto_serv": [114, 115], "dittocli": [7, 18, 25, 26, 35, 39], "dittodeepmmdcli": [18, 24, 25], "dittomkmmdcli": [18, 38, 39], "dittoserv": [114, 115, 116], "diverg": 103, "divid": [97, 140, 156, 157], "divis": 68, "dk": 66, "dkfz": [44, 159], "dl_name": 44, "do": [3, 6, 11, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 80, 82, 83, 109, 113, 119, 124, 125, 138, 144, 160, 164], "do_one_hot_encod": 150, "doc": [80, 87, 96, 99, 108, 109, 113, 134, 163], "docstr": 93, "document": [3, 44, 87, 109, 113, 137, 163], "doe": [9, 11, 41, 83, 109, 113, 134, 138, 141, 153, 161], "doesn": [9, 10, 12], "domain": [3, 68, 136, 137], "don": [109, 113, 159], "done": [3, 6, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 87, 107, 108, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 138, 148], "down": [21, 44, 142], "download": [6, 153], "downsampl": 164, "downsampling_ratio": 164, "downstream": 29, "dp": [3, 12, 108, 120, 123, 127, 132, 162], "dpevent": 108, "dpscaffoldcli": [7, 18, 47], "dpscaffoldserv": [7, 114, 127], "dpscaffoldservercheckpointandstatemodul": [7, 8, 12, 127], "draw": 148, "drawn": [66, 148, 161], "drift": [3, 19, 25, 26, 30, 35, 36, 39, 40, 43, 47, 97, 135, 140], "drift_penalty_weight": 30, "drop": 83, "dtype": [19, 22, 26, 29, 35, 47, 60, 80, 82, 83, 92, 93, 94, 95, 96, 97, 98, 99, 136, 138, 139, 140], "due": [3, 44, 132, 139], "dummi": [9, 121], "dump": [7, 109, 111], "dure": [3, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 69, 75, 80, 82, 83, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 150, 152], "dynam": [45, 46, 133, 146], "dynamiclayerexchang": [7, 90, 91, 93, 97], "e": [9, 12, 19, 21, 42, 44, 48, 78, 80, 82, 83, 87, 108, 109, 110, 111, 113, 127, 132, 141, 143, 150, 152], "each": [3, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 60, 64, 66, 75, 78, 80, 82, 87, 88, 93, 99, 102, 107, 108, 111, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 148, 151, 152, 155, 156, 157, 159, 161, 164], "earli": [36, 151], "early_stop_valid": [145, 154], "early_stopp": [7, 145], "earlystopp": [7, 145, 151], "easi": 3, "easiest": 6, "effect": [3, 32, 83, 139, 163], "effici": [3, 32, 87, 138, 162], "eg": [44, 109, 110, 111, 113, 159], "eigenvector": 87, "either": [9, 10, 11, 48, 87, 89, 108, 109, 113, 125, 131, 143, 152, 159, 165], "elaps": [119, 120, 121, 123, 124, 127], "element": [21, 23, 25, 26, 35, 39, 40, 42, 44, 46, 47, 80, 83, 119, 120, 121, 123, 124, 127, 142, 143, 148, 152], "elementwise_affin": 83, "empti": [26, 35, 41, 44, 141, 146, 155, 157], "empty_cach": [18, 44], "enabl": [27, 58, 75, 132, 135, 155], "enable_accumulating_featur": [71, 75], "enable_deep_supervis": 125, "encod": [12, 44, 48, 59, 60, 71, 73, 77, 102, 148, 150, 159], "encoder_from_datafram": [56, 59], "end": [21, 25, 28, 39, 40, 44, 69, 93, 109, 110, 111, 113, 132, 148, 164], "enforc": [42, 109, 113, 117, 152], "engin": 3, "enhanc": [64, 69], "ensembl": [27, 74], "ensemble_averag": [71, 74], "ensemble_bas": [7, 71], "ensemble_cli": [7, 18], "ensemble_model": [74, 155], "ensemble_vot": [71, 74], "ensembleaggregationmod": [7, 71, 74], "ensemblecli": [7, 18, 27], "ensemblemodel": [7, 27, 71, 74], "ensur": [3, 12, 21, 26, 27, 32, 33, 36, 46, 66, 116, 118, 123, 127, 131, 132, 134, 136, 143, 144, 159, 161, 162], "entir": [12, 21, 25, 26, 28, 43, 52, 60, 134, 159, 164], "entiti": [109, 113], "entri": [21, 22, 44, 121, 132, 143, 148], "entropi": 64, "enum": [10, 33, 62, 74, 85, 113, 136, 153, 154, 155, 157, 158, 159, 166], "enumer": [10, 33, 62, 74, 85, 113, 154, 155, 157, 158, 166], "environ": [6, 44, 159, 163], "ep": 83, "epoch": [21, 33, 36, 44, 107, 108, 109, 110, 111, 112, 113, 123, 127, 159], "epochs_per_round": 107, "epsilon": [66, 107, 108, 120, 123, 127, 157], "equal": [99, 104, 151, 159], "equat": [47, 139], "equival": [3, 83, 108, 152], "error": [9, 10, 12, 68, 87, 109, 113, 132, 136, 143, 145, 149, 159, 160, 161, 163, 166], "error_messag": 160, "essenti": [9, 34, 78, 121], "estim": [66, 68, 103, 108, 127, 132, 152], "et": [55, 108, 136, 137], "eta": 140, "eta_l": 140, "etc": [10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 143, 146], "eval": [6, 12, 21, 121, 131, 132, 141], "evalu": [12, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 35, 39, 40, 41, 42, 43, 44, 45, 46, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 151, 155, 156, 157], "evaluate_after_fit": [21, 33, 36, 136], "evaluate_cli": [7, 18], "evaluate_config": 121, "evaluate_fn": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "evaluate_metrics_aggregation_fn": [6, 7, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 156], "evaluate_round": [114, 119], "evaluate_serv": [7, 114], "evaluatecli": [7, 18, 28], "evaluatein": [121, 131, 132, 136, 141], "evaluater": [119, 121, 131, 136, 141], "evaluateresultsandfailur": 121, "evaluateserv": [7, 114, 121], "evaluationloss": [7, 21, 23, 25, 26, 27, 28, 42, 46, 145, 155], "even": [3, 43, 44, 110, 111, 125, 132, 135, 137, 143], "evenli": 164, "event": 10, "everi": [9, 44, 60, 64, 70, 72, 73, 77, 78, 80, 81, 82, 83, 85, 88, 99, 108, 109, 111, 113, 134, 139, 146, 159], "everyth": 131, "ex": 108, "exactli": [44, 105, 146], "exampl": [3, 6, 9, 10, 11, 19, 21, 25, 30, 39, 40, 41, 43, 44, 54, 61, 89, 97, 105, 108, 109, 113, 116, 117, 118, 119, 120, 123, 125, 127, 134, 135, 149, 152, 156, 161, 162, 164], "exce": 97, "exceed": 161, "except": [3, 9, 10, 12, 31, 32, 44, 87, 93, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 138, 141, 143, 146, 147, 159], "exchang": [3, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 76, 78, 88, 89, 93, 97, 99, 124, 133, 134, 136], "exchange_percentag": 97, "exchangertyp": [12, 124], "exclud": [109, 113], "exclus": [34, 93, 105, 161], "execut": [25, 26, 29, 35, 39, 42, 159], "executor": 126, "exhaust": 161, "exist": [3, 6, 9, 10, 11, 12, 20, 21, 27, 28, 44, 109, 113, 147, 149, 150, 153, 155, 161], "expect": [19, 28, 44, 74, 83, 84, 87, 89, 109, 113, 132, 144, 147, 159, 165], "expected_typ": 165, "expend": 157, "experi": [52, 109, 113], "experienc": [131, 132, 133, 134, 135, 138, 141], "experiment": [3, 68], "explicitli": [9, 109, 113, 163, 164], "explor": 3, "expon": 159, "extend": [3, 21, 23, 47, 131, 152, 157, 164], "extens": [3, 19, 131, 143], "extra": [44, 93], "extra_adaptive_vari": 96, "extract": [21, 23, 25, 31, 33, 35, 36, 39, 40, 45, 46, 47, 68, 75, 77, 78, 85, 88, 89, 93, 96, 99, 126, 149, 153, 160], "extract_coo_info_from_dens": [90, 96], "extracted_features_buff": [71, 75], "extractor": [3, 23, 31, 33, 34, 35, 46, 69, 75, 78, 84, 85, 88, 89], "extrem": [116, 117, 118, 119, 120, 123, 125, 126, 127, 128], "f": 149, "f1": [7, 145, 157], "f1_score": 157, "facilit": [3, 6, 10, 12, 29, 32, 45, 48, 99, 119, 124, 132, 136], "fact": 29, "fail": [109, 113, 136, 143], "failur": [116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "fair": [26, 35, 136], "fairli": [30, 76, 148], "fairness_metr": [136, 137], "fairness_metric_typ": 136, "fairnessmetr": [7, 129, 136, 137], "fairnessmetrictyp": [7, 129, 136, 137], "fall": [9, 11, 97], "fals": [9, 11, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 68, 75, 76, 77, 78, 82, 83, 87, 89, 102, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 132, 135, 137, 140, 146, 150, 151, 159, 163], "far": [19, 21, 87], "faster": 44, "feasibl": 161, "featur": [3, 19, 20, 21, 23, 25, 26, 27, 31, 33, 34, 35, 39, 40, 42, 43, 44, 46, 48, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 75, 77, 78, 83, 84, 85, 88, 89, 128, 148], "feature_align": 7, "feature_dimens": 64, "feature_extraction_lay": [39, 40], "feature_extraction_layers_with_s": 25, "feature_extractor_buff": [7, 71], "feature_l2_norm_weight": [39, 40], "feature_nam": [48, 60, 61], "feature_s": 75, "feature_typ": 61, "featureextractorbuff": [7, 71, 75], "features_by_typ": [56, 59], "features_org": 66, "fed": [20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 44, 46, 64, 150], "fed_pca_cli": [7, 18], "fed_prox_cli": [7, 18], "fedadagrad": 3, "fedadam": 3, "fedavg": [3, 6, 31, 33, 34, 46, 76, 119, 125, 128, 131, 132, 133, 134, 135, 136, 138, 139, 143], "fedavg_dynamic_lay": [7, 129], "fedavg_sparse_coo_tensor": [7, 129], "fedavg_with_adaptive_constraint": [7, 129], "fedavgdynamiclay": [7, 129, 133, 134, 139], "fedavgm": 132, "fedavgsparsecootensor": [7, 129, 134], "fedavgwithadaptiveconstraint": [7, 19, 116, 117, 118, 129, 135, 137], "fedbn": 3, "feddg": [3, 136, 137], "feddg_ga": [7, 129], "feddg_ga_with_adaptive_constraint": [7, 129], "feddgga": [7, 129, 136, 137], "feddggaadaptiveconstraint": [7, 129, 137], "feder": [3, 6, 10, 12, 19, 21, 22, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 41, 42, 43, 45, 47, 48, 74, 77, 108, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 152], "federated_evalu": [114, 121], "federated_learning_with_differential_privaci": 108, "fedopt": 3, "fedpca": [7, 129], "fedpcacli": [7, 18, 29], "fedper": [3, 31, 33], "fedper_cli": [7, 18], "fedpercli": [7, 18, 31], "fedpm": [3, 7, 32, 97, 122, 129], "fedpm_client": [7, 18], "fedpm_exchang": [7, 90], "fedpm_serv": [7, 114], "fedpmclient": [7, 18, 32], "fedpmexchang": [7, 90, 91], "fedpmserv": [7, 114, 122], "fedprox": [3, 19, 21, 26, 30, 43, 117, 135, 137, 148], "fedprox_serv": [114, 115], "fedproxcli": [7, 18, 30], "fedproxserv": [114, 115, 117], "fedrep": [3, 33, 76], "fedrep_bas": [7, 71], "fedrep_cli": [7, 18], "fedrepcli": [7, 18, 33], "fedrepmodel": [7, 71, 76], "fedreptrainmod": [7, 18, 33], "fedsimclr": [21, 64], "fedsimclr_bas": [7, 71], "fedsimclrmodel": [7, 71, 77], "fedyogi": 3, "fenda": [3, 21, 23, 25, 30, 34, 35, 39, 40, 43, 44, 46, 76, 78], "fenda_bas": [7, 71], "fenda_cli": [7, 18], "fenda_ditto_cli": [7, 18], "fenda_loss_config": [7, 63], "fendacli": [7, 18, 23, 34], "fendaditto": 35, "fendadittocli": [7, 18, 35], "fendamodel": [7, 35, 71, 78], "fendamodelwithfeaturest": [7, 71, 78], "fengliu90": 66, "fetch": [120, 123, 124], "few": 3, "fhook": [71, 75], "file": [9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 54, 55, 105, 109, 110, 111, 113, 125, 159], "filereport": [7, 109, 111], "fill": [60, 61], "fill_in_missing_column": [56, 60], "fill_valu": [59, 61], "filter": [15, 52, 75, 80, 97], "filter_and_save_data": [49, 50, 52], "final": [10, 29, 42, 44, 69, 77, 80, 82, 83, 99, 134, 159, 163], "find_last_common_prefix": [71, 75], "fine": 10, "finetun": 77, "first": [3, 6, 10, 15, 19, 21, 22, 23, 25, 26, 28, 33, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 58, 65, 66, 68, 69, 75, 76, 85, 89, 97, 99, 119, 120, 121, 122, 123, 124, 127, 131, 132, 134, 143, 146, 148, 149, 152, 159, 160], "first_featur": 67, "first_feature_extractor": 85, "first_tensor": 85, "fit": [6, 12, 18, 19, 21, 22, 26, 28, 29, 33, 35, 41, 43, 45, 56, 58, 114, 119, 120, 121, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 150, 156], "fit_config": [6, 7, 114, 128], "fit_config_fn": 6, "fit_metrics_aggregation_fn": [6, 7, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 156], "fit_round": [114, 119, 122], "fit_with_per_round_checkpoint": [114, 119], "fitin": [131, 132, 136, 141, 143], "fitr": [131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 152], "fitresultsandfailur": [119, 122], "fitting_round": [19, 21, 22, 26, 28, 35, 43, 45, 47], "fix": [3, 11, 14, 15, 16, 17, 31, 102, 107, 108, 127, 132, 148, 150, 159, 162], "fixed_sampling_client_manag": [7, 13], "fixed_without_replacement_manag": [7, 13], "fixedlayerexchang": [7, 46, 89, 90, 93], "fixedsamplingbyfractionclientmanag": [7, 13, 16], "fixedsamplingclientmanag": [7, 13, 15, 136], "fixedsamplingwithoutreplac": [7, 106, 108], "fl": [3, 10, 12, 19, 21, 22, 25, 26, 28, 33, 35, 36, 39, 40, 41, 43, 44, 47, 78, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 132, 143, 144, 159], "fl4health": [0, 6], "fl_account": [7, 106], "fl_config": [116, 117, 118, 119, 120, 122, 123, 125, 127], "fl_dataset000_plansnam": 44, "flag": [75, 163], "flash": [3, 7, 36, 129], "flash_client": [7, 18], "flashclient": [7, 18, 36], "flatten": [39, 40, 71, 75, 78, 84, 88, 89], "flatten_featur": [76, 78, 89], "flatten_feature_extraction_lay": [71, 75], "flclientlevelaccountantfixedsamplingnoreplac": [7, 106, 107], "flclientlevelaccountantpoissonsampl": [7, 106, 107], "flexibl": [3, 9, 11, 35, 131], "flinstancelevelaccount": [7, 106, 107], "float": [9, 10, 11, 12, 19, 21, 22, 23, 25, 26, 28, 29, 33, 36, 39, 40, 41, 42, 43, 44, 46, 48, 51, 54, 59, 61, 62, 64, 66, 83, 87, 96, 97, 99, 107, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 152, 153, 155, 157, 159, 161, 164, 165], "flow": [12, 28, 45, 119, 122, 131, 132, 143], "flower": [3, 14, 16, 17, 48, 116, 117, 118, 119, 120, 122, 123, 127, 128, 131, 152, 159, 160], "flserver": [6, 7, 114, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "flush": [145, 159], "flwr": [6, 116, 117, 118, 119, 120, 123, 125, 127, 128, 159], "fn": [125, 159], "focu": 3, "fold": 44, "fold_loss_dict_into_metr": [7, 145, 146], "folder": [111, 153], "follow": [21, 22, 26, 28, 33, 44, 55, 87, 96, 99, 108, 131, 132, 134, 138, 139, 141, 143, 152, 159], "forc": [131, 143, 163], "form": [9, 43, 68, 108, 143, 149], "form_and_solve_qp": [63, 68], "form_h_u_delta_w_i": [63, 68], "form_kernel_samples_minus_expect": [63, 68], "format": [12, 74, 96, 99, 134, 150], "former": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 159], "formula": [143, 152], "forward": [21, 25, 26, 35, 39, 40, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 101, 103, 145, 152, 159], "forward_hook": [71, 75], "found": [68, 163], "foundat": 3, "four": [80, 134], "fraction": [16, 51, 121, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143], "fraction_evalu": [121, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143], "fraction_fit": [131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143], "framework": [25, 39, 40, 123], "free": 42, "freez": [35, 146], "freeze_base_modul": [71, 76], "freeze_global_feature_extractor": 35, "freeze_head_modul": [71, 76], "frequenc": [51, 52, 122, 151], "frequent": [110, 111], "from": [3, 6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 58, 66, 68, 69, 75, 78, 80, 83, 84, 85, 87, 88, 89, 97, 104, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 148, 150, 151, 152, 157, 160, 161, 164], "from_json": [56, 59, 61], "from_pretrain": [79, 80, 82, 83], "frozen": [3, 33, 35, 146], "full": [12, 19, 20, 21, 22, 23, 28, 31, 32, 33, 34, 35, 41, 45, 47, 75, 87, 107, 119, 120, 123, 127, 164], "full_exchang": [7, 90], "full_svd": 87, "fullparameterexchang": [7, 19, 21, 22, 26, 28, 35, 41, 45, 47, 90, 92, 94], "fullparameterexchangerwithpack": [7, 12, 90, 94], "func": 147, "function": [3, 6, 7, 9, 10, 11, 12, 19, 21, 22, 23, 25, 26, 28, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 54, 55, 64, 66, 68, 69, 70, 72, 73, 75, 77, 78, 80, 82, 83, 84, 85, 88, 89, 93, 97, 99, 103, 105, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 159, 160, 162, 163], "functiontorchcheckpoint": 11, "functiontorchmodulecheckpoint": [7, 8, 9, 11], "functool": [6, 97], "further": [10, 34, 107], "futur": 97, "g": [109, 110, 111, 113, 132, 141, 149, 152], "ga": [3, 136, 137], "gamma": [46, 68], "gather": 128, "gaussian": [66, 108, 123, 127, 142], "gaussian_degre": 66, "gaussian_noisy_aggregate_clipping_bit": [7, 129, 142], "gaussian_noisy_unweighted_aggreg": [7, 129, 142], "gaussian_noisy_weighted_aggreg": [7, 129, 142], "gener": [3, 9, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 66, 75, 87, 94, 96, 98, 99, 103, 109, 113, 119, 122, 133, 134, 135, 136, 137, 145, 148, 149, 155, 157, 159, 161, 163, 164, 165], "generate_client_tensor": [145, 148], "generate_hash": [7, 18, 29, 145, 163], "generate_parameter_scor": [90, 99], "get": [3, 41, 75, 105, 109, 113, 126, 159], "get_all_model_paramet": [6, 7, 145, 160], "get_best_vertex_for_objective_funct": [63, 68], "get_categories_list": [56, 59], "get_cifar10_data_and_target_tensor": [7, 145, 153], "get_client_specific_log": [18, 21, 44], "get_client_specific_report": [18, 21, 44], "get_condition_vector_s": [145, 150], "get_criterion": [6, 18, 21, 44], "get_current_weight_step_s": [129, 136], "get_data_fram": [18, 48], "get_data_load": [6, 18, 21, 28, 29, 44], "get_data_tensor": [18, 29], "get_dataset_n_voxel": [7, 145, 159], "get_default_binary_pipelin": [56, 60], "get_default_fill_valu": [56, 62], "get_default_numeric_pipelin": [56, 60], "get_default_one_hot_pipelin": [56, 60], "get_default_ordinal_pipelin": [56, 60], "get_default_string_pipelin": [56, 60], "get_delta": [106, 107, 108], "get_dp_ev": [106, 108], "get_epsilon": [106, 107, 108], "get_extracted_featur": [71, 75], "get_feature_column": [56, 59], "get_feature_nam": [56, 61], "get_feature_typ": [56, 61], "get_fill_valu": [56, 61], "get_global_model": [18, 26, 35], "get_hierarchical_attr": [71, 75], "get_input_output_tensor": [145, 148], "get_layers_to_transf": [90, 93], "get_local_model": [18, 28], "get_lr": [145, 159], "get_lr_schedul": [18, 21, 44], "get_matching_compon": [100, 105], "get_metadata": [56, 61], "get_metadata_dimens": [56, 61], "get_mnist_data_and_target_tensor": [7, 145, 153], "get_model": [6, 18, 21, 29, 35, 41, 44], "get_msd_dataset_enum": [7, 145, 153, 158], "get_optim": [6, 18, 20, 21, 26, 27, 33, 44], "get_paramet": [18, 19, 21, 22, 26, 28, 29, 35, 41, 45, 47], "get_parameter_exchang": [18, 19, 20, 21, 22, 23, 28, 31, 32, 33, 34, 41, 45, 46, 47], "get_properti": [18, 21, 44, 48, 125], "get_segs_from_prob": [7, 145, 159], "get_tabular_featur": [56, 59], "get_tabular_target": [56, 59], "get_target_column": [56, 59], "get_target_dimens": [56, 59], "get_test_data_load": [18, 21, 41], "get_train_and_val_cifar10_dataset": [7, 145, 153], "get_train_and_val_mnist_dataset": [7, 145, 153], "get_unpacking_funct": [145, 150], "getpropertiesin": [126, 131, 144], "getpropertiesr": 126, "git": 55, "github": [3, 26, 44, 55, 64, 66, 108, 148, 159], "give": 161, "given": [9, 19, 20, 21, 23, 25, 26, 27, 33, 35, 39, 40, 42, 43, 44, 46, 52, 54, 64, 74, 75, 77, 81, 107, 108, 119, 132, 136, 142, 143, 149, 150, 151, 152, 155, 157, 159, 161], "global": [3, 10, 12, 20, 21, 23, 25, 26, 28, 30, 31, 33, 34, 35, 39, 40, 42, 43, 44, 46, 48, 69, 76, 78, 88, 116, 119, 121, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "global_featur": [67, 69, 78, 88], "global_feature_contrastive_loss": 46, "global_feature_contrastive_loss_weight": [46, 67], "global_feature_loss_temperatur": [46, 67, 69], "global_forward": [71, 72], "global_loss": [20, 25, 26, 35, 39, 40], "global_metr": 28, "global_model": [42, 105], "global_modul": [78, 88], "global_tensor": 85, "go": [12, 109, 113], "good": [3, 32, 87], "grab": [131, 132, 143], "gracefulli": [44, 159], "grad": 152, "grad_output": 152, "grad_sample_mod": 162, "gradient": [3, 21, 44, 47, 80, 82, 83, 123, 127, 132, 152], "gradsamplemodul": [131, 143, 162], "gradsamplingmodul": 143, "greater": 99, "ground": [19, 20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 43, 44, 46, 157], "group": [80, 109, 113, 159], "groupnorm": 162, "guarante": [78, 87, 161], "guess": 132, "guid": 3, "h1_mean_var_gram": [63, 66], "ha": [3, 6, 10, 12, 19, 21, 23, 27, 28, 32, 33, 35, 41, 42, 44, 48, 60, 64, 78, 80, 82, 83, 85, 87, 93, 109, 113, 124, 131, 132, 134, 136, 137, 138, 141, 143, 146, 147, 148, 152, 157, 159, 164], "ham10000": 55, "ham_image_path_func": [49, 53, 55], "ham_label_map_func": [49, 53, 55], "handl": [9, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 75, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 133, 134, 139, 143, 150, 152, 159], "handler": 159, "happen": [19, 41, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 132, 152], "hardcod": 111, "has_contrastive_loss": [63, 67], "has_cosine_similarity_loss": [63, 67], "has_perfcl_loss": [63, 67], "has_region": 159, "hash": [19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 64, 153, 163], "hash_kei": [153, 164], "hat": [69, 132, 148], "hat_d_per_kernel": 68, "hat_q_k": 68, "have": [3, 6, 10, 12, 19, 21, 22, 23, 26, 27, 28, 32, 33, 35, 41, 43, 44, 46, 47, 64, 68, 73, 75, 78, 80, 82, 83, 88, 102, 108, 109, 113, 119, 121, 125, 128, 132, 133, 134, 139, 142, 143, 146, 148, 152, 156, 157, 161], "he": 137, "head": [18, 33, 34, 35, 77, 78, 84, 85, 88, 89, 121], "head_epoch": 33, "head_forward": [71, 85], "head_modul": [76, 84, 89], "head_step": 33, "header": [21, 44], "health": 3, "healthcar": 3, "heavili": 119, "held": [12, 29, 41, 119, 133, 134, 139], "help": [12, 19, 21, 22, 26, 28, 35, 45, 126, 159], "helper": [143, 152], "henc": 138, "here": [3, 26, 29, 33, 42, 43, 104, 109, 113, 138, 139, 148, 161, 163], "heterogen": [3, 30, 36, 148, 161, 164], "heterogeneous_partition": 161, "heurist": [26, 43], "hidden": 66, "hidden_dim": 66, "hidden_s": 66, "hierarch": 75, "hierarchi": 159, "high": [110, 111, 161], "higher": [148, 159], "hinder": 68, "histori": [119, 120, 121, 123, 124, 127, 128], "hold": [10, 12, 119, 122, 126, 136], "hood": [44, 162], "hook": [21, 25, 30, 39, 40, 43, 44, 47, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 88, 119, 125, 159, 162], "hope": 9, "hot": [44, 148, 150, 159], "hous": 148, "how": [9, 10, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 85, 109, 113, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 139, 148, 156, 157, 159, 162], "howev": [3, 12, 19, 26, 28, 33, 41, 43, 80, 82, 116, 118], "html": [64, 80, 87, 96, 99, 134, 157, 163], "http": [20, 26, 31, 32, 33, 34, 36, 44, 46, 47, 55, 64, 66, 69, 76, 77, 80, 87, 96, 99, 108, 109, 113, 122, 127, 131, 132, 134, 135, 139, 140, 142, 143, 148, 152, 157, 159, 163], "huge": 87, "hydrat": [12, 28, 124], "hyperparamet": [109, 113], "hypothesi": [3, 32], "i": [3, 6, 9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 58, 60, 61, 64, 66, 68, 69, 75, 76, 78, 80, 82, 83, 84, 85, 87, 88, 89, 93, 96, 97, 99, 102, 104, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 159, 161, 162, 163, 164, 165], "id": [44, 48, 109, 111, 113, 121, 136, 149, 163], "id_column": [48, 59], "idea": [3, 26, 30, 35, 42, 43], "ident": [10, 21, 26, 31, 35, 43, 77], "identifi": [19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 138, 141, 143, 157], "ie": [20, 21, 27, 44, 110, 111, 157, 159], "ignor": [44, 70, 72, 73, 77, 78, 80, 82, 83, 85, 87, 88, 111, 121, 159, 161], "ignore_label": 44, "ii": 68, "iid": [42, 148, 164], "imag": [21, 51, 52, 54, 55, 80, 157], "image_path_func": 55, "imbalanc": 157, "immedi": [21, 30, 40, 42, 43, 44], "implement": [9, 11, 12, 19, 20, 21, 25, 26, 28, 30, 31, 32, 33, 35, 39, 40, 42, 43, 45, 47, 64, 66, 69, 76, 78, 80, 82, 83, 87, 93, 97, 108, 119, 131, 132, 135, 138, 139, 140, 142, 143, 144, 148, 152, 155, 159, 165], "impli": [108, 148], "import": [6, 141, 159], "importantli": 41, "in_channel": 80, "in_featur": 82, "includ": [3, 19, 21, 23, 25, 26, 35, 39, 40, 42, 43, 44, 46, 59, 107, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 143, 150, 160], "include_loss_in_metr": 28, "include_losses_in_metr": [21, 25, 26, 43], "incompat": 162, "incorpor": 3, "increment": 138, "indefinit": [119, 121, 122, 124, 125, 161], "independ": [133, 134, 148], "index": [19, 20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 43, 44, 46, 74, 152, 159, 163], "indic": [19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 75, 87, 96, 97, 99, 102, 109, 110, 111, 113, 119, 122, 125, 131, 132, 133, 134, 135, 138, 139, 141, 143, 146, 149, 161, 162], "individu": [25, 27, 39, 40, 42, 74, 109, 113, 119, 122], "infer": [75, 109, 113], "infimum": 108, "infin": [161, 164], "infinit": 159, "influenc": 83, "info": [44, 145, 166], "inform": [3, 10, 12, 19, 21, 22, 26, 28, 32, 35, 41, 43, 44, 47, 48, 52, 59, 60, 61, 80, 96, 99, 109, 110, 111, 113, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 132, 134, 136, 137, 157, 163], "inherit": [21, 44, 119, 159], "init": [109, 113, 143], "initi": [7, 9, 12, 19, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 69, 83, 99, 105, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 155, 159], "initial_clipping_bound": 132, "initial_control_vari": 143, "initial_global_featur": [67, 69], "initial_global_model": [25, 39, 40], "initial_loss_weight": [135, 137], "initial_lr": 159, "initial_model": [92, 93, 95, 97, 98, 99], "initial_paramet": [6, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143], "initialize_all_model_weight": [18, 21, 26], "initialize_control_vari": [129, 143], "initialize_default_pipelin": [56, 60], "initialize_global_model": [18, 28], "initialize_paramet": [128, 129, 131, 141, 143], "initialize_server_model": [114, 125], "inject": [12, 21, 23, 26, 35, 42, 46, 84, 132], "inner": [25, 26, 35, 39, 40, 43], "inner_product": 68, "inner_product_all_sampl": 68, "inner_product_quadrupl": 68, "input": [20, 21, 23, 25, 26, 27, 33, 35, 39, 40, 42, 44, 46, 48, 52, 64, 66, 72, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 93, 96, 99, 103, 105, 109, 113, 136, 138, 146, 148, 149, 150, 152, 153, 157, 159, 161], "input_dim": 148, "input_dir": 52, "input_s": 66, "input_tensor": 85, "input_typ": 151, "ins": 126, "insert": [124, 133, 134], "insid": [99, 152], "inspir": 66, "instanc": [3, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27, 29, 35, 37, 39, 40, 42, 43, 46, 47, 70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 107, 108, 123, 127, 136, 155, 159], "instance_level_dp_cli": [7, 18], "instance_level_dp_serv": [7, 114], "instanceleveldpcli": [7, 18, 37, 47, 131, 143], "instanceleveldpserv": [7, 114, 123, 127], "instanti": [28, 45, 125, 136], "instead": [11, 21, 43, 48, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 88, 152, 159], "instruct": [121, 126, 131], "int": [6, 15, 19, 21, 23, 25, 26, 28, 29, 30, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 54, 59, 61, 62, 66, 80, 82, 87, 103, 104, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 153, 156, 157, 159, 161, 163, 164, 165], "integ": [20, 21, 25, 39, 40, 83, 136, 152, 159], "integr": 152, "intend": [125, 152], "interact": 11, "interestingli": [3, 32], "interfac": [9, 157], "intermedi": [21, 23, 25, 26, 35, 39, 40, 42, 46, 75], "intern": [9, 10, 11, 109, 113], "interrupt": [10, 12, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 159], "interv": [25, 39, 40, 110, 111, 151], "interval_step": 151, "introduc": 69, "invalidconfigerror": [7, 145, 147], "involv": [21, 44], "ipynb": 108, "is_glob": 28, "is_masked_modul": [71, 79, 81], "is_smooth": 66, "is_start_of_local_train": [18, 20], "is_unbias": 66, "is_var_comput": 66, "isic": 55, "isn": [116, 118, 161], "issu": [3, 9, 11, 131, 132, 133, 134, 135, 138, 141, 159], "item": [21, 44, 54, 125, 134, 157], "iter": [23, 46, 104, 146, 160, 161], "its": [3, 12, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 60, 64, 81, 87, 96, 109, 113, 128, 136, 138, 139, 146, 147, 150, 157, 159, 161, 162], "itself": [10, 12, 21, 78, 152, 153], "j": 148, "jit": 44, "job": [109, 113], "job_typ": [109, 113], "json": [44, 55, 105, 109, 111], "json_report": [7, 109], "json_str": [59, 61], "jsonreport": [7, 109, 111], "just": [10, 11, 12, 19, 35, 119, 127, 132, 146, 149, 152, 159], "justif": 138, "jvp": 152, "k": [87, 139], "k_x": 66, "k_xy": 66, "k_y": 66, "keep": [15, 110, 151], "kei": [9, 12, 20, 21, 23, 25, 26, 27, 33, 36, 39, 40, 42, 43, 44, 75, 78, 88, 105, 109, 113, 136, 147, 153, 155, 157, 159], "kept": [139, 151], "kernel": [25, 66, 68, 80], "kernel_s": 80, "keyword": [21, 25, 39, 40, 109, 110, 111, 113, 159], "kind": [23, 81, 108, 149, 161], "kl": 103, "know": [12, 96], "known": [12, 68], "kwarg": [9, 44, 86, 109, 110, 111, 112, 113, 152, 159, 162], "l": [83, 87, 108, 164], "l2": [3, 25, 26, 35, 39, 40, 43, 97, 135], "label": [19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 55, 146, 148, 150, 153, 157, 161, 164], "label_frequ": [49, 50, 51], "label_indic": 161, "label_map_func": 55, "labelbasedsampl": [7, 54, 145, 153, 164], "lambda": [26, 43, 108], "lambda_m": 68, "languag": 149, "laplacian": 108, "larg": [68, 87, 126, 138, 161], "larger": [25, 39, 40, 97, 109, 113, 131, 141, 148, 161, 164], "largest_final_magnitude_scor": [7, 90, 97], "largest_increase_in_magnitude_scor": [7, 90, 97], "largest_magnitude_change_scor": [7, 90, 97], "last": [22, 75, 76, 83, 109, 113, 132, 159], "latent": [25, 34, 39, 40, 46, 73, 78, 88, 103, 138], "latent_dim": 103, "latent_vector": 73, "later": [12, 29, 87, 89, 125, 163], "latestopacuscheckpoint": [7, 8, 11], "latesttorchcheckpoint": 124, "latesttorchmodulecheckpoint": [7, 8, 9], "latter": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 146, 159], "law": 148, "layer": [3, 11, 12, 25, 31, 39, 40, 46, 68, 75, 76, 80, 81, 82, 83, 89, 93, 97, 132, 133, 134, 138, 139, 142, 162, 163], "layer1": 105, "layer_exchang": [7, 90], "layer_hierarchi": 75, "layer_nam": [68, 75, 93], "layer_norm_modul": 83, "layer_selection_funct": 93, "layerexchangerwithexclus": [7, 90, 93], "layernamesservercheckpointandstatemodul": [7, 8, 12, 122], "layernorm": 83, "layers_nam": 75, "layers_to_exchang": [71, 72, 78, 86, 88, 89], "layers_to_transf": 93, "layerselectionfunctionconstructor": [7, 90, 93, 97], "lazi": 104, "lead": [152, 159], "learn": [3, 6, 10, 19, 21, 22, 26, 28, 32, 35, 36, 42, 43, 45, 47, 48, 66, 76, 82, 83, 87, 108, 119, 121, 132, 140, 143, 150, 157, 159, 165], "learnabl": [80, 82, 83], "learning_r": [47, 143], "least": [12, 44, 97, 143], "leav": [68, 109, 113], "left": [12, 44, 111, 138], "len": 161, "len_": 66, "len_old_models_buff": 42, "length": [21, 29, 41, 44, 66, 68, 83, 143, 146, 159, 161, 163], "less": [3, 99], "level": [3, 22, 37, 44, 47, 99, 107, 108, 110, 111, 120, 123, 127, 132, 159, 164], "leverag": [48, 97, 99, 104], "librari": [3, 119, 152], "light": [3, 150], "like": [10, 12, 21, 44, 80, 82, 109, 113, 119, 120, 123, 127, 137, 139, 146, 150, 159, 163], "limit": [152, 161], "line": [3, 143], "linear": [68, 82, 148], "linear_modul": 82, "linearli": [131, 132, 133, 134, 135, 138, 139, 140, 141, 143], "link": 148, "list": [14, 15, 16, 17, 19, 21, 22, 26, 29, 35, 39, 40, 42, 44, 45, 47, 48, 52, 54, 55, 59, 60, 61, 68, 72, 74, 75, 78, 83, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 113, 119, 120, 121, 123, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 151, 152, 155, 156, 157, 159, 161, 164], "litian96": [26, 148], "ll": [132, 161], "load": [6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 54, 105, 109, 113, 119, 121, 141, 145, 147, 150, 151, 153, 159, 165], "load_attribut": [145, 165], "load_autoencod": [101, 102], "load_best_checkpoint_into_model": [8, 11], "load_checkpoint": [8, 9, 11], "load_cifar10_data": [6, 7, 145, 153], "load_cifar10_test_data": [7, 145, 153], "load_config": [7, 145, 147], "load_data": [6, 7, 49, 50, 53, 145], "load_from_pretrain": [100, 105], "load_imag": [49, 50, 52, 53, 54], "load_mnist_data": [7, 145, 153], "load_mnist_test_data": [7, 145, 153], "load_model_checkpoint_to_paramet": [114, 121], "load_msd_dataset": [7, 145, 153], "load_pca_modul": [100, 104], "load_pretrained_model": [71, 77], "load_rxrx1_data": [49, 50, 51], "load_rxrx1_test_data": [49, 50, 51], "load_skin_cancer_data": [49, 53, 54], "load_snapshot": [145, 151], "loader": [21, 41, 44, 153], "local": [3, 6, 10, 19, 20, 21, 23, 25, 26, 28, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 69, 78, 88, 121, 123, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 151, 153, 159], "local_epoch": [6, 21, 28, 33, 36, 123, 127], "local_featur": [67, 69, 78, 88], "local_feature_contrastive_loss": 46, "local_feature_contrastive_loss_weight": [46, 67], "local_feature_loss_temperatur": [46, 67, 69], "local_forward": [71, 72], "local_loss": [20, 26], "local_metr": 28, "local_model": [25, 39, 40], "local_modul": [78, 88], "local_prediction_head": 76, "local_step": [19, 21, 23, 28, 33, 36, 42, 46, 47, 123, 127], "local_tensor": 85, "locat": [109, 113, 153], "log": [6, 7, 21, 44, 103, 109, 113, 119, 122, 128, 145, 159, 161], "logger": 159, "logging_mod": [21, 44, 146], "loggingmod": [7, 21, 44, 145, 154], "logic": 21, "logit": [64, 157], "logits_threshold": 157, "loglevel": [7, 21, 44, 145, 159, 166], "logvar": [73, 103], "long": [119, 126, 152], "longer": [152, 159], "look": [44, 109, 113], "loop": [25, 26, 33, 35, 39, 150], "loss": [3, 6, 7, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 77, 84, 87, 89, 100, 101, 109, 113, 119, 120, 121, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 151, 159], "loss_contain": 23, "loss_dict": [19, 21, 23, 42, 46, 47, 146], "loss_for_adapt": 19, "loss_list": 155, "loss_met": [28, 155], "loss_meter_typ": [19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 155], "loss_weight_delta": [135, 137], "loss_weight_pati": [135, 137], "losses_list": 155, "losses_typ": 155, "lossestyp": 155, "lossmet": [7, 145, 155, 165], "lossmetertyp": [7, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 145, 155], "lotteri": [3, 32], "low": [87, 161], "low_rank": 87, "lower": [44, 87], "lr": [6, 21, 44, 66, 159], "lrschedul": [21, 165], "lrschedulersnapshott": [7, 145, 165], "m": [6, 87, 139], "m_t": 132, "machineri": 119, "made": [3, 20, 111], "magnitud": [120, 136, 137], "mai": [12, 19, 21, 23, 28, 35, 41, 45, 60, 84, 87, 89, 108, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 133, 134, 139, 149, 152, 162, 163], "main": [6, 49, 50, 52, 64, 108], "maintain": [3, 32, 80, 82, 83, 139], "major": 10, "make": [44, 74, 109, 113, 157, 159, 161, 162], "manag": [14, 16, 17, 21, 44, 121, 126, 131, 132, 136, 141, 143, 157], "mandatori": 136, "manger": 131, "mani": [19, 148, 152, 156], "manipul": [44, 46, 84], "manner": [27, 74, 77, 87, 139], "manual": 60, "map": [12, 44, 51, 55, 73, 77, 85, 99, 105, 133, 134, 139, 148, 157], "map_inputs_to_output": [145, 148], "map_model_to_opacus_model": [7, 145, 162], "mask": [32, 44, 80, 81, 82, 83, 97, 139, 149], "mask_data": [18, 44], "masked_conv": [71, 79], "masked_lay": [7, 71], "masked_layers_util": [71, 79], "masked_linear": [71, 79], "masked_normalization_lay": [71, 79], "maskedbatchnorm1d": [71, 79, 83], "maskedbatchnorm2d": [71, 79, 83], "maskedbatchnorm3d": [71, 79, 83], "maskedconv1d": [71, 79, 80], "maskedconv2d": [71, 79, 80], "maskedconv3d": [71, 79, 80], "maskedconvtranspose1d": [71, 79, 80], "maskedconvtranspose2d": [71, 79, 80], "maskedconvtranspose3d": [71, 79, 80], "maskedlayernorm": [71, 79, 83], "maskedlinear": [71, 79, 82], "master": [44, 148], "match": [12, 21, 25, 39, 40, 44, 75, 93, 105, 125, 160, 161], "mathcal": 148, "matric": [87, 138], "matrix": [66, 68, 87, 138, 148], "max": 44, "max_grad_norm": 44, "max_retri": 161, "max_step": 159, "max_work": 126, "maxim": [9, 11, 68], "maximum": [44, 66, 68, 126, 132, 142, 159, 163], "mayb": [12, 110, 111], "maybe_checkpoint": [8, 9, 10, 11, 12], "maybe_extract_fingerprint": [18, 44], "maybe_load_st": [8, 10, 12], "maybe_preprocess": [18, 44], "maybe_progress_bar": [7, 145, 146], "maybe_reshap": [71, 87], "md": 44, "mean": [19, 43, 48, 65, 66, 68, 87, 103, 148, 159], "meaning": 48, "meant": [3, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 85, 97], "measur": [25, 39, 40, 68, 107], "mechan": [10, 11, 26, 33, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 151, 162], "medic": 153, "medical_feder": 55, "member": [132, 142], "memori": 151, "merg": [3, 29, 41, 66, 85, 124, 138, 141], "merge_metr": [18, 28], "merge_subspaces_qr": [129, 138], "merge_subspaces_svd": [129, 138], "merge_two_subspaces_qr": [129, 138], "messag": [21, 44, 160], "met": [143, 161], "metadata": [51, 52, 61], "meter": [19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 155], "method": [3, 9, 10, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 48, 75, 87, 99, 109, 110, 111, 113, 117, 119, 125, 134, 138, 140, 143, 148, 155, 157, 159, 163, 164, 165], "metric": [6, 7, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 109, 111, 113, 119, 120, 121, 122, 123, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 156], "metric_aggreg": [6, 7, 145], "metric_manag": [21, 44], "metric_manager_nam": 157, "metric_met": 28, "metric_nam": 136, "metric_typ": 136, "metric_valu": [21, 28], "metricmanag": [7, 21, 44, 145, 157, 165], "metricprefix": [7, 145, 157], "metricsaggregationfn": [121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "mic": [44, 159], "might": [9, 10, 19, 44, 45, 97, 110, 111, 121, 135], "mimic": 162, "min": 87, "min_available_cli": [6, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "min_evaluate_cli": [6, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141], "min_fit_cli": [6, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141], "min_label_exampl": 161, "min_num_cli": [14, 15, 16, 17], "mini": 83, "minim": [9, 11, 66, 68, 116, 117, 118, 119, 120, 123, 125, 127, 128], "minimize_type_two_error": 68, "minimum": [15, 21, 28, 41, 121, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 161], "minor": 164, "minority_label": 164, "minoritylabelbasedsampl": [7, 145, 164], "mismatch": 162, "miss": [60, 61], "mix": 44, "mk": [21, 25, 39, 40, 68], "mkmmd_client": [7, 18], "mkmmd_loss": [7, 63], "mkmmd_loss_weight": [39, 40], "mkmmdloss": [7, 63, 68], "mlr": [36, 140], "mmd": [21, 25, 39, 40, 66, 68], "mmd_kernel_train_interv": 25, "mmd_kernel_update_interv": 25, "mmdu": [63, 66], "mnist": [150, 153], "mode": [10, 20, 21, 27, 33, 35, 43, 44, 74, 85, 152], "model": [3, 6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 84, 85, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 105, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 150, 151, 155, 157, 159, 160, 162], "model_bas": 7, "model_checkpoint": 12, "model_checkpoint_path": [28, 121], "model_head": [78, 85, 88], "model_merge_cli": [7, 18], "model_merge_serv": [7, 114], "model_merge_strategi": [7, 129], "model_paramet": 96, "model_path": [41, 77], "model_save_path": 29, "model_weight": [94, 96, 98], "modelcheckpoint": [10, 12], "modellatentf": [7, 63, 66], "modelmergecli": [7, 18, 41], "modelmergeserv": [7, 114, 124], "modelmergestrategi": [7, 124, 129, 141], "modif": [3, 135, 137, 162], "modifi": [3, 21, 44, 47, 109, 113, 123, 132, 135, 137, 146, 159, 162, 164], "modify_grad": [18, 47], "modify_noise_multipli": [129, 132], "modul": [3, 6, 7, 8, 13, 18, 24, 38, 49, 50, 53, 56, 63, 71, 79, 90, 100, 101, 106, 109, 114, 115, 129, 145], "modular": 3, "module2losswrapp": [7, 145, 159], "module_exclus": 93, "modulelist": 75, "modulu": 68, "moment": [108, 140], "moment_ord": [107, 108], "moments_account": [7, 106], "momentsaccount": [7, 106, 108], "momentum": [6, 83, 132, 140], "monitor": [151, 165], "moon": [3, 21, 25, 30, 39, 40, 42, 43, 44, 64, 76, 84, 89], "moon_bas": [7, 71], "moon_client": [7, 18], "moonclient": [7, 18, 42], "mooncontrastiveloss": [7, 63, 64], "mooncontrastivelosscontain": [7, 63, 67], "moonmodel": [7, 71, 84], "more": [3, 12, 20, 21, 27, 28, 30, 33, 36, 41, 44, 80, 87, 93, 96, 99, 110, 131, 134, 137, 138, 139, 148, 152, 157, 159, 161, 162, 163, 164], "most": [20, 21, 25, 39, 40, 97, 99, 116, 117, 118, 119, 120, 123, 125, 127, 128, 130], "mostli": 45, "move": [66, 68, 126, 127, 143, 146], "move_data_to_devic": [7, 145, 146], "mp": 44, "mr": [3, 10, 40, 43, 116, 118], "mr_mtl_client": [7, 18], "mr_mtl_mkmmd_client": [18, 38], "mrmtl_server": [114, 115], "mrmtlclient": [7, 18, 40, 43], "mrmtlmkmmdclient": [18, 38, 40], "mrmtlserver": [114, 115, 118], "msd": 153, "msd_dataset_nam": 153, "msd_dataset_sourc": [7, 145], "msddataset": [7, 145, 153, 158], "mtl": [3, 10, 40, 43, 116, 118], "mu": [19, 30, 42, 46, 73, 102, 103, 135, 137, 148], "much": [12, 138], "multi": 68, "multidimension": 148, "multinomi": [161, 164], "multipl": [12, 21, 27, 44, 48, 58, 64, 75, 105, 130, 138, 159], "multipli": [107, 108, 132, 142], "multiprocess": 44, "multithread": 159, "multithreadedaugment": 159, "multivari": 148, "must": [9, 12, 20, 21, 44, 45, 99, 108, 109, 113, 116, 118, 122, 123, 124, 125, 127, 131, 133, 134, 135, 136, 137, 143, 149, 152, 157, 159, 161], "mutual": [65, 105, 161], "n": [21, 25, 39, 40, 64, 83, 87, 108, 138, 143, 148], "n_1": 138, "n_2": 138, "n_case": 159, "n_client": 142, "n_clients_sampl": 107, "n_dataload_process": 44, "n_featur": [64, 65, 68, 69], "n_i": 138, "n_k": 108, "n_n": 138, "n_pair": 64, "n_sampl": [68, 148], "n_server_round": 136, "n_total_cli": 107, "name": [6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 68, 75, 89, 96, 99, 105, 109, 111, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 133, 134, 136, 139, 150, 151, 153, 157, 159, 165], "named_modul": 75, "namespac": [7, 18, 71], "narrow": 147, "narrow_dict_typ": [7, 145, 147], "narrow_dict_type_and_set_attribut": [7, 145, 147], "narrow_type_to": 147, "ndarrai": [19, 21, 22, 26, 28, 29, 33, 35, 41, 43, 45, 47, 60, 92, 93, 94, 95, 96, 97, 98, 99, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 161], "nearli": [3, 31], "necessari": [12, 42, 45, 60, 89, 125, 159, 162], "necessarili": [12, 48], "need": [3, 6, 9, 11, 12, 21, 26, 28, 29, 31, 33, 35, 41, 44, 48, 70, 72, 73, 77, 78, 80, 82, 83, 85, 87, 88, 93, 105, 119, 128, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 148, 152, 157, 159, 163], "needs_input_grad": 152, "neg": [64, 69, 132], "negative_pair": [64, 67], "neighbor_rel": 108, "neither": 143, "net": 6, "network": [30, 35, 66, 75, 138], "neural": 75, "neuron": 152, "never": [10, 43, 109, 113, 151], "new": [15, 22, 51, 55, 60, 104, 109, 113, 125, 136, 138, 150, 155, 161, 162, 164], "new_dimens": 104, "new_tag": [109, 113], "newli": 143, "next": [6, 23, 33, 46, 99, 121, 136, 137, 159, 161], "nice": 152, "nip": 64, "nn": [6, 9, 10, 11, 12, 21, 25, 39, 40, 41, 44, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 88, 89, 93, 99, 105, 124, 143, 146, 159, 160, 162, 165], "nnunet": [12, 44, 119, 125, 159], "nnunet_augment": 159, "nnunet_cli": [7, 18], "nnunet_config": [44, 159], "nnunet_dataload": 159, "nnunet_plan": [44, 125], "nnunet_serv": [7, 114], "nnunet_trainer_class": [44, 125], "nnunet_trainer_class_kwarg": 44, "nnunet_util": [7, 145], "nnunetcli": [7, 18, 44, 125, 159], "nnunetconfig": [7, 145, 159], "nnunetdataloaderwrapp": [7, 145, 159], "nnunetserv": [7, 12, 44, 114, 119, 125], "nnunetservercheckpointandstatemodul": [7, 8, 12, 125], "nnunettrain": [44, 125], "nnunetv2": [44, 125, 159], "node": 6, "nois": [22, 107, 108, 120, 123, 127, 132, 142], "noise_ev": 108, "noise_multipli": [107, 108, 123, 127, 142], "noise_std_dev": 142, "noisi": 142, "noisy_aggreg": [7, 129], "non": [3, 19, 41, 42, 66, 108, 119, 122, 146, 148, 149, 150, 152, 155, 157, 159, 164], "nondetmultithreadedaugment": 159, "none": [6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 58, 59, 60, 61, 66, 68, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 87, 91, 92, 93, 95, 97, 98, 99, 102, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 155, 157, 159, 160, 161, 163, 164, 165], "nonneg": 97, "nonzero": [96, 134], "nor": 143, "norm": [3, 30, 39, 40, 44, 68, 93, 97], "norm_threshold": 97, "normal": [3, 63, 64, 68, 83, 97, 103, 142, 148, 155, 156], "normalize_featur": 68, "normalize_metr": [7, 145, 156], "normalized_shap": 83, "notabl": 64, "notat": 148, "note": [3, 6, 10, 12, 21, 26, 30, 35, 40, 41, 43, 44, 45, 59, 68, 80, 82, 83, 87, 97, 104, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 132, 134, 135, 137, 138, 139, 141, 142, 143, 146, 148, 152, 161, 162, 163, 164], "notebook": 108, "noth": 6, "notimplementederror": [9, 21, 27, 35, 41, 44, 155, 157], "notset": [145, 166], "now": [6, 87, 110, 146], "np": [152, 161, 164], "nt": 64, "ntxentloss": [7, 63, 64], "num": 44, "num_accumulating_batch": [25, 39, 40], "num_client": [14, 15, 148], "num_featur": 83, "num_input_channel": 125, "num_round": [6, 119, 120, 121, 123, 124, 125, 127, 128], "num_sampl": 159, "num_segmentation_head": 125, "num_server_round": [120, 123, 127], "num_spatial_dim": 159, "num_work": [51, 54], "number": [3, 14, 15, 16, 19, 21, 23, 25, 26, 28, 30, 33, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 54, 66, 68, 80, 83, 87, 97, 104, 107, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 156, 159, 161, 163, 164, 165], "number_of_partit": 161, "numbersnapshott": [7, 145, 165], "numer": [56, 62, 83, 152], "numpi": [19, 29, 96, 124, 130, 142, 143, 152, 160, 163], "numpy_st": 163, "numpycli": [21, 29, 41], "numpyclippingcli": [7, 18, 22], "nunetserv": 125, "nutshel": 138, "nvidia": 163, "object": [9, 10, 12, 19, 20, 21, 27, 28, 33, 41, 44, 45, 59, 60, 61, 67, 75, 93, 97, 104, 105, 107, 108, 109, 110, 112, 113, 119, 120, 121, 123, 124, 126, 127, 133, 134, 136, 138, 139, 147, 151, 152, 153, 155, 157, 159, 160, 164, 165], "observ": 138, "obtain": [10, 12, 22, 29, 48, 130, 138], "occur": [3, 21, 25, 26, 35, 39, 40, 41, 128, 141, 148], "off": [12, 41, 68, 121, 132, 135, 137], "offer": [131, 163], "offici": [55, 87], "official_column": 55, "often": [19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 130, 146], "old": [23, 42, 46, 69], "old_global_featur": [67, 69], "old_local_featur": [67, 69], "old_model": 42, "on_evaluate_config_fn": [6, 116, 117, 118, 119, 120, 123, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "on_fit_config_fn": [6, 116, 117, 118, 119, 120, 123, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "on_init_parameters_config_fn": [116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "onc": [6, 41, 110, 111, 159], "one": [10, 12, 21, 26, 27, 28, 29, 32, 33, 36, 44, 69, 70, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 85, 88, 105, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 136, 139, 141, 143, 146, 148, 150, 153, 155, 157, 159, 163], "one_hot": 60, "ones": [83, 109, 113, 139, 143], "onli": [3, 9, 10, 11, 12, 21, 25, 26, 28, 29, 31, 33, 35, 36, 39, 40, 41, 45, 46, 47, 78, 83, 85, 87, 89, 93, 102, 109, 113, 119, 121, 124, 131, 132, 134, 135, 137, 138, 141, 142, 143, 149, 157, 159], "onto": [66, 68, 87, 104], "op": [119, 163], "opacu": [11, 12, 123, 131, 143, 162], "opacus_checkpoint": [7, 8], "opacusbasicfedavg": [7, 123, 129, 131], "opacuscheckpoint": [7, 8, 11], "opacusscaffold": [7, 129, 143], "opacusservercheckpointandstatemodul": [7, 8, 12, 123], "open": 3, "oper": [35, 99, 119, 152, 157, 162], "oppos": 152, "optim": [3, 6, 10, 20, 21, 22, 25, 26, 27, 30, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 47, 66, 68, 143, 155, 159, 162, 165], "optimization_step": 66, "optimize_beta": [63, 68], "optimizer_kei": [21, 44], "optimizersnapshott": [7, 145, 165], "option": [9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 66, 68, 73, 77, 78, 80, 83, 84, 87, 89, 97, 102, 105, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 147, 148, 150, 151, 153, 155, 157, 159, 161, 162, 163, 164], "orchestr": 45, "order": [12, 33, 42, 75, 93, 96, 99, 108, 121, 125, 127, 130, 132, 136, 137, 152, 157, 159], "ordin": [56, 62], "org": [20, 31, 32, 33, 34, 47, 55, 64, 76, 77, 80, 87, 96, 99, 122, 127, 131, 132, 134, 135, 139, 142, 143, 148, 152, 157, 163], "organ": [109, 113], "origin": [3, 26, 42, 43, 44, 46, 51, 55, 66, 69, 87, 89, 125, 139, 146, 148, 150, 161], "original_column": 55, "original_dataset": 161, "original_label_map": 51, "original_model": 81, "original_param": 143, "orthonorm": 138, "other": [3, 19, 20, 21, 22, 25, 26, 27, 28, 32, 35, 36, 37, 39, 40, 43, 44, 45, 47, 78, 84, 88, 89, 99, 108, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 138, 142, 150, 152, 157, 162], "other_st": 12, "otherwis": [6, 10, 12, 21, 28, 35, 45, 105, 109, 111, 113, 151, 161], "our": [3, 6, 31, 157], "out": [83, 97, 120, 132, 138], "out_channel": 80, "out_featur": 82, "output": [21, 26, 33, 44, 48, 52, 66, 73, 75, 77, 78, 80, 82, 85, 88, 89, 103, 148, 152, 157, 159], "output_dim": 148, "output_dir": 52, "output_fold": [109, 111], "output_pad": 80, "output_path": 52, "output_s": [66, 80], "outsid": [3, 109, 110, 111, 113, 163], "over": [19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 65, 66, 83, 108, 109, 113, 116, 118, 131, 132, 143, 150, 157, 159, 164], "overestim": 87, "overfit": 151, "overhead": 44, "overrid": [11, 14, 16, 17, 20, 21, 22, 23, 31, 32, 33, 34, 44, 45, 47, 84, 121, 127, 136, 152, 159], "overridden": [19, 21, 28, 41, 44, 70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 119, 124, 136, 143, 152, 159], "overwrit": [9, 11, 75, 109, 113], "own": [3, 44, 60, 162], "p": 132, "pack": [19, 25, 26, 35, 39, 40, 47, 99, 121, 132, 133, 134, 135, 137, 138, 139, 150], "pack_losses_with_val_metr": [21, 36, 136], "pack_paramet": [90, 94, 96, 98], "packag": [0, 6, 19, 49, 99, 131, 132, 141, 143, 159], "packed_data": 150, "packed_paramet": [94, 96, 98], "packer": [12, 96, 132], "packing_exchang": [7, 90], "packingservercheckpointandandstatemodul": [7, 8, 12], "pad": [55, 80], "pad_image_path_func": [49, 53, 55], "pad_label_map_func": [49, 53, 55], "padding_mod": 80, "page": [96, 99, 134], "pair": [64, 66, 69, 109, 113, 148, 157], "pairwise_distance_squar": [63, 66], "panchal23a": [36, 140], "panda": [48, 58, 60], "paper": [26, 33, 42, 43, 46, 47, 55, 64, 66, 69, 108, 131, 132, 135, 138, 143, 148, 152], "paper_fil": 64, "paradigm": 139, "parallel": [34, 46, 54, 76, 78, 85], "parallel_output_join": [71, 85], "parallel_split_model": [7, 71], "parallelfeaturejoinmod": [7, 71, 85], "parallelsplitheadmodul": [7, 71, 78, 85, 88], "parallelsplitmodel": [7, 71, 78, 85, 88], "param": [19, 26, 35, 47, 64, 87, 93, 99, 143, 146, 149], "paramet": [3, 6, 9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 59, 60, 61, 64, 65, 66, 68, 69, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165], "parameter_exchang": [7, 12, 45, 124], "parameter_exchanger_bas": [7, 90], "parameter_extract": [6, 7, 145], "parameter_pack": [7, 90, 94, 98], "parameter_selection_criteria": [7, 90], "parameter_upd": 143, "parameterexchang": [7, 19, 20, 21, 22, 23, 28, 31, 32, 33, 34, 45, 46, 47, 90, 92, 93, 95, 98], "parameterpack": [7, 90, 96], "parameterpackeradaptiveconstraint": [7, 90, 96], "parameterpackerwithclippingbit": [7, 90, 96], "parameterpackerwithcontrolvari": [7, 90, 96], "parameterpackerwithlayernam": [7, 90, 96], "parametr": 66, "params1": 160, "params2": 160, "params_1": [47, 143], "params_2": [47, 143], "parent": [12, 27, 44, 84, 141], "part": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48, 85, 108, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 134, 159, 164], "parti": 42, "partial": [6, 28, 45, 76, 97, 105, 143, 157], "partial_layer_exchange_model": [7, 71], "partial_parameter_exchang": [7, 90], "partial_weight_exchange_cli": [7, 18], "partiallayerexchangemodel": [7, 71, 72, 78, 86, 88, 89], "partialparameterexchang": [7, 45, 90, 93, 98, 99], "partialweightexchangecli": [7, 18, 45], "particip": [116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 133, 134, 136, 143], "particular": [10, 125, 139, 161, 164], "partit": 161, "partition": [7, 145], "partition_dataset": [145, 161], "partition_label_indic": [145, 161], "partitioned_dataset": 161, "pass": [9, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 66, 70, 72, 73, 75, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 109, 110, 111, 113, 121, 125, 126, 127, 135, 137, 147, 150, 152, 157, 159, 161, 164], "past": [9, 11, 28], "path": [6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 54, 55, 102, 104, 105, 111, 121, 151, 153], "path_to_checkpoint": [9, 11], "pathlib": 6, "patienc": 151, "pc": 138, "pca": [7, 29, 71, 138], "pca_lowrank": 87, "pca_preprocessor": [7, 100], "pcamodul": [7, 29, 71, 87, 104, 138], "pcapreprocessor": [7, 100, 104], "pd": 52, "pdf": [32, 33, 34, 36, 47, 64, 76, 77, 122, 132, 139, 140, 142, 143, 152], "penal": [19, 25, 39, 40], "penalti": [3, 19, 25, 26, 30, 35, 39, 40, 43, 135, 137], "per": [44, 48, 64, 83, 87, 107, 108, 123, 127, 132, 142, 148, 156, 159, 161], "per_client_example_cap": [132, 142], "per_round_checkpoint": [21, 28], "percentag": [54, 93, 97, 164], "perfcl": [3, 23, 34, 46, 69, 88], "perfcl_bas": [7, 71], "perfcl_client": [7, 18], "perfcl_loss": [7, 23, 63], "perfcl_loss_config": 67, "perfclclient": [7, 18, 46], "perfclloss": [7, 63, 69], "perfcllosscontain": [7, 63, 67], "perfclmodel": [7, 46, 71, 88], "perform": [3, 10, 19, 21, 22, 23, 27, 28, 29, 30, 32, 33, 34, 36, 40, 41, 42, 43, 44, 46, 47, 48, 59, 70, 72, 73, 77, 78, 80, 82, 83, 85, 87, 88, 99, 104, 107, 108, 119, 123, 124, 125, 127, 128, 131, 132, 133, 134, 138, 139, 141, 143, 150, 155, 157, 159, 161, 162], "perform_linear_approxim": 68, "perhap": [12, 21, 29, 44], "perroundstatecheckpoint": [7, 8, 9, 10, 12], "persist": 9, "person": [3, 20, 26, 35, 43, 118], "perspect": 143, "phase": [3, 12, 33, 133, 134, 143], "pickl": [44, 52], "piec": 46, "pii": [46, 69], "pinnabl": 152, "pip": 6, "pipelin": [48, 60], "place": [12, 42, 58, 133, 134, 159, 161], "placehold": 11, "plan": [44, 119, 125, 159], "plans_identifi": 44, "plans_nam": 44, "plansnam": 44, "plate": 52, "pleas": [80, 93, 96, 99, 134, 152], "plu": [42, 155], "plugin": 151, "point": [41, 87, 107, 108, 121, 138, 161, 164], "poisson": [17, 107, 108], "poisson_sampling_manag": [7, 13], "poissonsampl": [7, 106, 108], "poissonsamplingclientmanag": [7, 13, 17], "poll": [7, 41, 48, 114, 119, 120, 123, 125, 128, 131, 144], "poll_client": [7, 114, 126], "poll_clients_for_dimension_info": [114, 128], "poll_clients_for_feature_info": [114, 128], "poll_clients_for_sample_count": [114, 119], "pollresultsandfailur": 126, "polylrschedulerwrapp": [7, 145, 159], "polynomi": 159, "pool": [119, 126], "popul": [108, 109, 113], "population_s": 108, "posit": [64, 69], "positive_pair": [64, 67], "posixpath": [109, 111], "possibl": [159, 162], "possibli": [43, 162], "post": [10, 12, 119, 122], "post_aggreg": [8, 10], "posterior": 139, "potenti": [3, 9, 10, 11, 12, 21, 25, 26, 27, 28, 43, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 135, 150, 161, 162], "power": [68, 148], "pprox": 132, "pre": [10, 12, 93, 102, 104, 150], "pre_aggreg": [8, 10], "preced": 143, "precis": [44, 87, 134, 138, 139], "pred": [19, 20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 43, 44, 46, 103, 157, 159], "pred_transform": 157, "predict": [3, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 74, 77, 78, 84, 85, 88, 89, 103, 136, 157, 159], "prediction_head": 77, "preds_list": 74, "preemption": 119, "prefix": [44, 75, 105], "prepar": 87, "prepare_data_forward": [71, 87], "prepare_loss_arg": [7, 145, 159], "preprocess": [7, 44, 48, 49, 50, 55], "preprocess_derm7pt": [49, 53, 55], "preprocess_featur": [56, 60], "preprocess_ham10000": [49, 53, 55], "preprocess_isic_2019": [49, 53, 55], "preprocess_pad_ufes_20": [49, 53, 55], "preprocess_skin": [49, 53], "present": [3, 10, 21, 28, 33, 36, 77, 136, 147, 161], "preserv": [10, 12, 42, 89, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 146], "preset_specific_pipelin": [18, 48], "press": [36, 140], "pretrain": [77, 83, 105], "pretrained_model": 105, "pretrained_model_path": 105, "prevent": 75, "previou": [3, 9, 42, 69, 109, 113, 132], "previous": 163, "primari": 87, "princip": [3, 29, 87, 104, 138], "principal_compon": 87, "print": [44, 51, 146], "prior": [21, 23, 41, 46, 48, 75, 87, 119, 122, 123, 125, 142, 147, 157, 159, 161], "prior_distribut": 161, "priori": 48, "priorit": 3, "prioriti": [109, 113], "privaci": [7, 11, 22, 43, 120, 123, 127, 132, 162], "privacy_util": [7, 145], "privacy_validate_and_fix_modul": [7, 145, 162], "privat": [3, 31, 33, 37, 47, 127, 132], "probabilist": 139, "probabl": [17, 80, 82, 83, 107, 108, 139, 148, 152, 159, 161, 164], "proce": [116, 117, 118, 119, 120, 123, 125, 127, 128], "procedur": [3, 25, 26, 35, 39, 108, 138, 148], "proceed": [12, 25, 26, 35, 36, 39, 127, 140], "process": [10, 12, 21, 28, 33, 34, 44, 51, 52, 54, 55, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 131, 150, 151, 152, 159, 163], "process_client_data": [49, 53, 55], "process_config": [18, 21, 36], "process_data": [49, 50, 52], "process_fed_rep_config": [18, 33], "processor": 102, "produc": [9, 15, 20, 21, 27, 33, 42, 44, 69, 74, 78, 80, 82, 83, 84, 85, 88, 99, 116, 117, 118, 119, 120, 123, 125, 127, 131, 132, 138, 143, 148, 155], "product": [25, 26, 35, 39, 40, 43], "progress": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 146], "progress_bar": [19, 20, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 146], "project": [3, 77, 84, 87, 104, 109, 113], "project_back": [71, 87], "project_lower_dim": [71, 87], "projection_head": 77, "projection_modul": 84, "propag": [80, 82, 83, 152], "proper": [9, 10, 11, 12, 26, 33, 93, 123, 133, 134, 159], "properli": [10, 12, 45], "properti": [21, 44, 45, 48, 125, 126, 131], "proport": [143, 153], "propos": [64, 66], "provid": [3, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 64, 65, 68, 93, 105, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 146, 149, 152, 156, 161, 162], "proxi": [126, 152], "proxim": [135, 137], "prune": 139, "pseudo": 152, "pseudo_sort_scoring_funct": [7, 145, 152], "pull": [19, 21, 22, 26, 28, 35, 45], "pull_paramet": [90, 91, 92, 93, 95, 99], "purpos": [44, 58, 87, 116, 118], "push_paramet": [90, 92, 93, 95, 99], "py": 55, "pypi": 3, "python": [3, 6, 109, 113, 159, 163], "pytorch": [9, 11, 21, 28, 29, 41, 44, 80, 87, 96, 99, 104, 134, 149, 159, 160, 162, 163], "q": [87, 108], "q_1": 108, "q_2": 108, "qinbinli": 64, "qr": 138, "quadrupl": 68, "quantil": 132, "quantiti": 143, "queri": 127, "quickli": 159, "quickstart": 3, "quintessenti": 135, "r": 152, "rais": [9, 10, 12, 21, 25, 26, 27, 28, 33, 35, 36, 39, 40, 41, 44, 121, 132, 136, 143, 146, 147, 149, 155, 157, 159, 161], "rand": 161, "randint": 161, "random": [7, 54, 68, 87, 109, 113, 145, 161, 164], "random_st": 163, "randomli": [19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 83, 128], "rang": [3, 161, 164], "rank": 87, "rank_estim": 87, "rapid": 159, "rate": [3, 10, 21, 47, 66, 108, 132, 140, 143, 159, 165], "rather": [12, 17, 35, 76, 132, 149, 151, 161], "ratio": [107, 108], "raw": [121, 132, 143], "rbf": 68, "re": [9, 19, 21, 26, 68, 109, 113, 131, 132, 133, 134, 135, 138, 141, 143, 150, 155], "read": 159, "readi": [119, 159], "real": [12, 97, 104], "realiti": 104, "reason": [9, 11, 87, 143], "recal": 12, "receiv": [19, 21, 23, 30, 40, 43, 44, 46, 80, 82, 83, 126, 133, 134, 135, 143, 148, 157], "recent": [3, 20, 21, 25, 32, 39, 40, 119], "recip": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 159], "recogn": 10, "recommend": [6, 135, 143], "reconstruct": [73, 87, 103], "record": [37, 119], "recov": 87, "redirect": 159, "redistribut": [124, 141], "reduc": [64, 66, 69, 87, 104, 135, 137], "reduce_dimens": [100, 104], "reduct": [29, 87, 104], "ref": [109, 113], "refer": [3, 21, 42, 46, 139, 148], "reflect": [80, 143], "reformat": 44, "regardless": [9, 131, 150], "regist": [70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 88, 159], "regular": [43, 80, 82, 134], "regularized_q_k": 68, "reiniti": 162, "rel": [64, 87, 164], "relat": [3, 34, 46, 132, 139], "releas": 159, "relev": [19, 21, 22, 26, 28, 35, 41, 43, 46, 47, 83, 130], "reli": [12, 31, 93, 150], "reload": 159, "reload_modul": [7, 145, 159], "remain": [10, 64, 78, 88, 132, 135, 137], "remaind": 84, "rememb": 6, "remov": [3, 75], "removablehandl": 75, "remove_hook": [71, 75], "rep_epoch": 33, "rep_step": 33, "repack": 143, "repeat": 161, "repeatedli": 152, "replac": [14, 16, 17, 43, 107, 159, 162], "replic": 80, "report": [7, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128], "report_centralized_ev": [114, 119], "reports_manag": [7, 109], "reportsmanag": [7, 109, 112, 165], "repositori": 55, "repres": [9, 12, 20, 21, 23, 25, 28, 33, 36, 39, 40, 41, 46, 61, 74, 76, 87, 96, 99, 103, 126, 130, 134, 142, 143, 148, 152, 155, 157, 159], "represent": [3, 18, 33, 42, 66, 77, 87, 148, 155], "reproduc": [153, 163], "request": [19, 29, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 130, 131, 146, 161], "requir": [10, 11, 12, 19, 20, 21, 22, 23, 26, 27, 31, 32, 33, 34, 36, 42, 44, 45, 46, 47, 48, 59, 66, 78, 87, 89, 96, 99, 108, 117, 125, 126, 128, 131, 132, 133, 134, 138, 141, 149, 152, 161, 162], "resampl": 161, "research": 3, "resembl": 76, "reset": [15, 21, 25, 39, 40, 122, 139, 145, 155, 157, 159], "reset_beta_prior": [129, 139], "reset_frequ": 122, "reset_sampl": [13, 15], "reshap": 87, "resili": 119, "resolut": 159, "respect": [6, 20, 23, 25, 26, 33, 80, 82, 83, 107, 151, 153, 157], "respond": [121, 124], "respons": [12, 21, 60, 85, 93, 96, 99, 119, 121, 122, 126, 138], "rest": 64, "restart": [10, 12, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "restor": [151, 163], "restore_random_st": [7, 145, 163], "restrict": [132, 143], "result": [29, 44, 87, 96, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 152, 162, 163, 164], "resum": [10, 109, 113], "retain": [99, 134], "retri": 161, "retriev": [12, 120, 123, 126, 152], "return": [6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "return_column_transform": [56, 60], "return_mu_onli": 102, "reus": [33, 109, 113], "right": [3, 12, 33, 87, 117, 138], "robust": [26, 35], "roc_auc": [7, 145, 157], "root": [51, 52], "round": [6, 12, 19, 21, 22, 23, 25, 26, 28, 29, 30, 33, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 69, 93, 107, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 159], "rout": [12, 26, 35, 43], "row": [48, 52, 55, 87, 138], "rpc": 125, "rtype": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 152, 159], "run": [12, 15, 26, 29, 33, 70, 72, 73, 77, 78, 80, 82, 83, 84, 85, 88, 89, 108, 109, 111, 113, 119, 120, 121, 123, 126, 127, 128, 136, 143, 152, 159, 162, 163], "run_id": [109, 111], "rxrx1": 49, "s0031320323002078": [46, 69], "s_1": 138, "s_2": 138, "s_i": 138, "s_n": 138, "same": [6, 15, 26, 32, 44, 66, 68, 80, 81, 82, 83, 84, 105, 108, 109, 113, 119, 122, 125, 134, 135, 139, 142, 146, 148, 149, 152, 157, 159, 161], "sampl": [13, 14, 15, 16, 17, 21, 28, 33, 41, 44, 66, 71, 73, 74, 77, 80, 82, 83, 97, 102, 107, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 139, 141, 142, 143, 148, 150, 152, 153, 156, 159, 161, 164], "sample_al": [13, 14], "sample_count": [120, 123], "sample_fract": [13, 14, 16, 17, 132], "sample_percentag": 164, "sample_s": 108, "sampler": [7, 54, 145, 153], "samples_per_cli": 148, "sampling_ratio": 108, "sampling_strategi": 108, "samplingstrategi": [7, 106, 108], "satisfi": 161, "save": [9, 10, 11, 12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 55, 69, 102, 104, 109, 111, 113, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 145, 150, 151, 152, 163, 165], "save_attribut": [145, 165], "save_checkpoint": [8, 9], "save_for_backward": 152, "save_for_forward": 152, "save_model": [18, 29], "save_random_st": [7, 145, 163], "save_snapshot": [145, 151], "save_st": [8, 10, 12], "save_to_json": [49, 53, 55], "save_to_pkl": [49, 50, 52], "scaffold": [3, 7, 12, 21, 47, 122, 127, 129], "scaffold_cli": [7, 18], "scaffold_serv": [7, 114], "scaffoldcli": [7, 18, 47], "scaffoldserv": [7, 114, 127], "scaffoldservercheckpointandstatemodul": [7, 8, 12, 127], "scalar": [9, 10, 11, 12, 21, 25, 26, 28, 29, 33, 36, 41, 43, 44, 61, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 157], "scale": [44, 64, 68, 142, 143], "scaling_coeffici": 143, "scenario": [21, 35, 75], "schedul": [10, 21, 44, 159, 165], "scheme": [133, 134, 138, 139, 150], "scienc": [46, 69], "sciencedirect": [46, 69], "scikit": 157, "scope": [109, 110, 111, 113, 159], "score": [9, 11, 12, 80, 82, 83, 97, 99, 139, 152, 157], "score_gen_funct": 99, "scoregenfunct": 99, "script": [6, 55], "second": [10, 21, 23, 25, 26, 32, 35, 39, 40, 42, 44, 46, 65, 68, 69, 85, 89, 119, 120, 121, 122, 123, 124, 127, 131, 132, 139, 140, 160], "second_featur": 67, "second_feature_extractor": 85, "second_tensor": 85, "section": [148, 152], "secur": 3, "see": [44, 80, 87, 93, 96, 99, 109, 113, 119, 124, 134, 135, 137, 138, 148, 152, 157, 159, 163], "seed": [51, 54, 152, 163, 164], "seem": [9, 44], "seen": [9, 135, 137], "segment": [44, 153, 159], "select": [45, 93, 96, 97, 99, 108, 119, 120, 121, 123, 126, 149, 152, 164], "select_by_indic": [7, 145, 149], "select_by_percentag": [90, 97], "select_by_threshold": [90, 97], "select_drift_mor": 97, "select_layers_by_percentag": [7, 90, 97], "select_layers_by_threshold": [7, 90, 97], "select_paramet": [90, 93, 98, 99], "select_scores_and_sample_mask": [7, 90, 97], "select_zeroeth_el": [7, 145, 152], "selected_indic": 149, "self": [6, 9, 11, 15, 19, 20, 21, 25, 27, 39, 40, 41, 44, 45, 83, 87, 89, 97, 109, 113, 136, 143, 146, 147, 148, 150, 161], "semant": 138, "send": [19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 97, 102, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 133, 134, 138, 146, 151], "sent": [19, 21, 22, 26, 27, 28, 35, 41, 43, 44, 45, 47, 48, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 135, 136, 137, 139, 141, 143], "seongjun": 55, "separ": [3, 6, 21, 25, 39, 40, 43, 110, 133, 152, 159], "sequenc": [10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 83, 107, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 157, 159], "sequenti": [35, 75, 84, 89], "sequential_forward": [71, 84, 89], "sequential_split_model": [7, 71], "sequentiallysplitexchangebasemodel": [7, 31, 71, 76, 89], "sequentiallysplitmodel": [7, 35, 71, 84, 89], "seri": 55, "serial": 44, "serializ": 165, "serializableobjectsnapshott": [7, 145, 165], "serv": 19, "server": [3, 7, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 69, 76, 78, 88, 89, 93, 97, 107, 108, 109, 110, 111, 113, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 151, 152], "server_address": 6, "server_control_vari": 143, "server_learning_r": 132, "server_model": 124, "server_model_weight": 143, "server_modul": [7, 8], "server_nam": [116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128], "server_noise_multipli": 120, "server_paramet": 12, "server_round": [119, 122, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144], "server_upd": [107, 108], "serverconfig": 6, "serverwandbreport": 128, "set": [3, 6, 9, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 54, 64, 65, 75, 76, 82, 83, 87, 93, 96, 99, 104, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 147, 148, 149, 152, 153, 157, 159, 161, 163, 164], "set_all_random_se": [7, 145, 163], "set_data_mean": [71, 87], "set_feature_pipelin": [56, 60], "set_feature_specific_pipelin": [18, 48], "set_initial_global_tensor": [18, 26, 35], "set_nnunet_env": [7, 145, 159], "set_optim": [18, 20, 21, 26, 27, 33], "set_pack_losses_with_val_metr": [7, 145, 146], "set_paramet": [18, 19, 21, 22, 26, 28, 29, 35, 41, 43, 45, 47], "set_principal_compon": [71, 87], "setup": [6, 26, 33, 43, 45, 116, 117, 118, 119, 120, 123, 125, 127, 128, 148], "setup_cli": [18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48], "setup_context": [145, 152], "setup_opacus_object": [18, 37, 162], "setup_privacy_account": [114, 120, 123], "sever": [3, 125], "sgd": [6, 108, 123, 127, 162], "shape": [44, 64, 65, 68, 69, 75, 78, 80, 82, 83, 84, 89, 96, 99, 134, 139, 148, 150, 157, 159, 160], "share": [3, 20, 30, 31, 33, 105, 116, 138, 148], "shift": 3, "short": [97, 109, 113], "should": [6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 66, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 89, 107, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 142, 144, 148, 149, 150, 151, 152, 155, 159, 161, 165], "should_layer_be_exclud": [90, 93], "should_module_be_exclud": [90, 93], "should_stop": [145, 151], "shouldn": [109, 113], "shown": [3, 32], "shuffl": 54, "shut": [21, 44], "shutdown": [6, 7, 18, 21, 44, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 145, 159], "shutdown_dataload": [18, 44], "side": [3, 10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 69, 80, 108, 117, 119, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143], "sigint": 159, "sigma": [108, 142, 148], "sigma_phi": 66, "sigma_q": 66, "sigmoid": [80, 82, 83, 139], "sigmoid_invers": [7, 145, 152], "signal": [136, 159], "signal_for_typ": [129, 136], "signalfortypeexcept": [7, 129, 136], "signatur": 152, "signific": 3, "significantli": 3, "sigterm": 159, "silent": [70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 159], "silo": 43, "sim": 65, "simclr": [64, 77], "similar": [3, 23, 33, 42, 44, 64, 65, 69, 138, 161], "similarli": 138, "simpl": [3, 14, 16, 17, 19, 110, 124, 131, 143, 148], "simpleclientmanag": [6, 14, 15], "simplemetr": [7, 145, 157], "simplest": [20, 21], "simpli": [6, 10, 12, 23, 25, 26, 27, 33, 35, 39, 41, 42, 46, 119, 122, 132, 135, 137, 139, 143, 148, 152], "simultan": [26, 35], "sinc": [27, 29, 41, 45, 70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 105, 121, 133, 138, 139, 151, 159], "singl": [12, 19, 20, 21, 27, 44, 47, 58, 83, 107, 126, 142, 155, 159, 165], "singlethreadedaugment": 159, "singleton": 83, "singular": [87, 138], "singular_valu": 87, "sirna_id": 52, "sit": [119, 122], "site": 52, "six": 80, "size": [25, 54, 65, 66, 68, 80, 82, 83, 107, 108, 123, 127, 132, 136, 137, 138, 142, 146, 148, 150, 153, 159, 161, 164], "size_of_model_param": 96, "skew": [148, 161, 164], "skin": 54, "skin_canc": 49, "skin_cancer_feder": 55, "sklearn": [58, 157], "slice": 149, "slight": 87, "slightli": [33, 148], "small": [87, 157, 161], "smaller": [138, 161, 164], "smallest_final_magnitude_scor": [7, 90, 97], "smallest_increase_in_magnitude_scor": [7, 90, 97], "smallest_magnitude_change_scor": [7, 90, 97], "smooth": 66, "snapshot": [151, 165], "snapshot_ckpt": 151, "snapshot_class": 151, "snapshot_dir": 151, "snapshott": [7, 145], "so": [9, 10, 11, 12, 15, 19, 21, 26, 29, 35, 41, 44, 45, 48, 87, 93, 104, 109, 113, 132, 133, 134, 139, 146, 147, 152, 159, 161, 164], "soft": 157, "softmax": 148, "solver": 43, "some": [10, 27, 29, 44, 83, 99, 108, 109, 113, 119, 125, 128, 132, 133, 134, 138, 142, 143, 159, 161], "someth": [21, 25, 26, 35, 39, 40, 163], "sometim": [110, 111], "soon": 3, "sophist": 139, "sort": [75, 152], "sourc": [3, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "source_plan": 159, "source_specifi": [48, 128], "space": [34, 46, 48, 73, 78, 80, 87, 103], "spars": [3, 12, 32, 87, 96, 99, 134], "sparse_coo_parameter_exchang": [7, 90], "sparse_coo_tensor": [96, 99, 134], "sparsecooparameterexchang": [7, 90, 99], "sparsecooparameterpack": [7, 90, 96], "sparsecooservercheckpointandstatemodul": [7, 8, 12], "sparsiti": 99, "sparsity_level": 99, "spatial": [157, 159], "spatial_dimens": 157, "spawn": [44, 159], "special": [12, 133, 134], "specif": [3, 9, 11, 12, 20, 21, 23, 42, 44, 46, 48, 55, 75, 83, 84, 89, 99, 102, 138, 141, 143, 150, 159], "specifi": [6, 9, 11, 21, 28, 33, 36, 44, 47, 48, 51, 52, 60, 75, 84, 87, 89, 93, 108, 109, 113, 122, 127, 128, 136, 137, 146, 151, 153, 159, 164], "spite": 132, "split": [34, 46, 51, 54, 78, 84, 85, 89, 105, 132, 153], "split_data_and_target": [7, 145, 153], "split_model_weights_and_clipping_bit": [129, 132], "split_perc": 54, "sqrt": 132, "ssltensordataset": [7, 145, 149], "stabil": 83, "stabl": [80, 87, 96, 99, 134, 157, 163], "stage": [28, 77, 89, 148], "stai": [3, 26, 35, 84], "standard": [3, 41, 44, 46, 103, 108, 125, 131, 132, 142, 143, 148, 162], "standard_normal_kl_divergence_loss": [101, 103], "start": [3, 23, 42, 45, 46, 69, 75, 109, 113, 119, 148, 151, 159], "start_client": 6, "start_run": [7, 109, 113], "start_serv": 6, "state": [3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 105, 108, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 130, 146, 151, 157, 160, 163, 165], "state_checkpoint": [10, 12], "state_checkpoint_nam": [10, 12], "state_dict": 11, "static": [28, 59, 61, 62, 77, 96, 150, 152, 155], "staticmethod": 152, "statist": [12, 36, 68], "std": [66, 107, 142], "stdout": [44, 159], "step": [6, 12, 19, 20, 21, 23, 25, 26, 27, 33, 39, 40, 42, 44, 46, 47, 66, 109, 110, 111, 112, 113, 123, 127, 134, 136, 137, 143, 150, 151, 159], "steps_per_lr": 159, "steptyp": [7, 109, 113], "still": [116, 118, 125, 131, 139, 141, 151], "stochast": [148, 152], "stop": [36, 151], "stopiter": 159, "stopper": 151, "storag": [45, 78], "store": [9, 12, 19, 21, 22, 25, 26, 27, 30, 35, 39, 40, 42, 45, 75, 78, 84, 85, 87, 88, 89, 152, 155], "store_initial_model": 45, "str": [6, 9, 10, 11, 12, 14, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 59, 60, 61, 62, 68, 72, 74, 75, 78, 80, 85, 86, 88, 89, 93, 96, 97, 99, 105, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165], "straight": 152, "straightforward": [30, 76], "strap": [35, 119], "strategi": [3, 6, 7, 11, 19, 26, 43, 45, 47, 108, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 148], "strategy_with_pol": [7, 129], "strategywithpol": [7, 119, 129, 131, 144], "stream": 159, "streamtologg": [7, 145, 159], "strictli": [3, 20, 148, 149], "stride": 80, "string": [9, 20, 21, 26, 33, 44, 56, 58, 62, 109, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 147, 157, 159, 161], "string_columns_transform": [7, 56], "stringio": 159, "structur": [73, 76], "stuff": 159, "style": 148, "subclass": [20, 21, 22, 23, 31, 32, 33, 34, 44, 45, 47, 70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 148, 152, 155, 159], "subfold": 153, "subject": 164, "submit": 3, "submodul": [7, 35, 49], "subpackag": 159, "subprocess": 159, "subsampl": [145, 149, 153, 161, 164], "subsequ": [15, 41, 42, 125, 159], "subset": [12, 45, 46, 51, 93, 97, 99, 108, 133, 134, 149], "subspac": [87, 138], "subspace1": 138, "subspace2": 138, "subtract": [47, 87, 143], "success": [119, 121, 122, 143], "suffici": [87, 108], "suggest": [26, 43, 138], "sum": [69, 71, 85, 136, 137, 139, 142, 152], "summari": [109, 110, 111, 113], "summat": 85, "super": 110, "supervis": [21, 44, 150, 159], "support": [3, 41, 58, 74, 97, 141, 148, 149, 150, 161], "suppos": 139, "sure": [109, 113, 161], "surfac": 9, "svd": [87, 138], "svd_lowrank": 87, "svd_merg": 138, "swallow": 9, "switch": 33, "sync": [35, 43], "synthet": [148, 149], "synthetic_1_1": 148, "syntheticdataset": [7, 145, 149, 161], "syntheticfedproxdataset": [7, 145, 148], "syntheticiidfedproxdataset": [7, 145, 148], "syntheticnoniidfedproxdataset": [7, 145, 148], "system": [3, 6, 121, 131, 135, 136, 137, 140, 141, 143], "t": [9, 10, 12, 30, 87, 94, 96, 98, 109, 113, 116, 118, 138, 146, 147, 148, 152, 159, 161, 164, 165], "t_1": 108, "t_2": 108, "tab_feature_encod": 60, "tab_features_info_encod": [7, 56], "tab_features_preprocessor": [7, 56], "tab_features_source_of_truth": 128, "tabular": [48, 59, 60, 61, 128], "tabular_data_cli": [7, 18], "tabular_featur": [7, 56, 59, 60], "tabular_feature_alignment_serv": [7, 114], "tabular_features_source_of_truth": 128, "tabular_target": 59, "tabular_typ": [7, 56, 59], "tabulardatacli": [7, 18, 48], "tabularfeatur": [7, 56, 59, 60, 61], "tabularfeaturealignmentserv": [7, 114, 128], "tabularfeaturesinfoencod": [7, 56, 59, 60, 128], "tabularfeaturespreprocessor": [7, 48, 56, 60], "tabulartyp": [7, 56, 59, 61, 62], "tag": [109, 113, 132], "take": [9, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 93, 96, 99, 109, 113, 133, 134, 138, 141, 143, 148, 159], "taken": 108, "tandem": 26, "target": [10, 11, 19, 20, 21, 23, 25, 26, 27, 33, 35, 39, 40, 42, 43, 44, 46, 48, 54, 59, 66, 68, 103, 105, 116, 118, 126, 149, 153, 157, 159, 160], "target_column": 59, "target_is_grad_sample_modul": 11, "target_model": [11, 70], "target_transform": [149, 153, 157], "task": [3, 29, 141, 150, 152, 157], "task01_braintumour": [145, 158], "task02_heart": [145, 158], "task03_liv": [145, 158], "task04_hippocampu": [145, 158], "task05_prost": [145, 158], "task06_lung": [145, 158], "task07_pancrea": [145, 158], "task08_hepaticvessel": [145, 158], "task09_spleen": [145, 158], "task10_colon": [145, 158], "tau": 140, "team": [109, 113], "tell": 29, "temperatur": [42, 46, 64, 67, 148], "tensor": [19, 20, 21, 23, 25, 26, 27, 29, 33, 35, 39, 40, 42, 43, 44, 46, 52, 54, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 96, 97, 99, 102, 103, 134, 139, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 161, 163], "tensor_dict": 159, "tensor_list": 159, "tensordataset": [7, 51, 54, 145, 148, 149, 150, 153, 164], "tensorflow": 108, "term": [3, 35, 43, 151], "termin": [6, 44, 119, 159], "test": [21, 28, 41, 44, 51, 52, 54, 66, 87, 124, 141, 145, 149, 153, 154, 157, 159, 161], "test_load": 41, "test_prefix": [145, 157], "test_transform": 54, "text": 58, "textcolumntransform": [7, 56, 58], "textmulticolumntransform": [7, 56, 58], "than": [9, 12, 17, 21, 25, 26, 27, 28, 35, 39, 40, 41, 76, 99, 125, 131, 132, 138, 141, 149, 151, 157, 161], "thei": [3, 10, 12, 19, 20, 21, 22, 26, 27, 28, 29, 41, 44, 47, 84, 89, 96, 99, 107, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 132, 134, 135, 137, 143, 146, 148, 149, 150, 152, 155, 159], "them": [3, 20, 25, 26, 35, 39, 40, 46, 48, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 88, 96, 99, 132, 134, 136, 137, 139, 150, 152, 159, 165], "themselv": [139, 152, 159], "theorem": 108, "theoret": 138, "thereaft": 143, "therebi": [131, 143], "therefor": [44, 109, 111, 113, 143, 152, 159], "theta": 139, "theta_cli": 132, "theta_serv": 132, "thi": [3, 6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 64, 66, 68, 69, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 89, 93, 96, 97, 99, 103, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 155, 157, 159, 161, 162, 163, 164, 165], "thin": 157, "thing": [10, 21, 44, 119, 120, 123, 125, 127], "third": [119, 121, 122], "thorough": 3, "those": [3, 26, 35, 43, 80, 82, 83, 85, 89, 93, 96, 97, 131, 143, 148, 157, 159], "though": 152, "thought": 143, "three": [10, 134, 150], "threshold": [93, 97, 99, 132, 143, 157, 159, 161], "through": [3, 9, 22, 26, 30, 31, 33, 35, 36, 42, 104, 109, 113, 125, 132, 143, 152, 161, 164], "throughout": [21, 28, 33, 107], "throw": [9, 10, 12, 109, 113, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 149, 161], "thrown": [9, 10, 87, 136, 147], "thu": [41, 83, 138], "ticket": [3, 32], "time": [15, 21, 26, 44, 45, 47, 104, 108, 119, 120, 121, 122, 123, 124, 127, 146, 159, 161, 163], "timeout": [119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 141, 143], "tmetric": 157, "to_client": 6, "to_json": [56, 59, 61], "togeth": [19, 26, 45, 85, 130, 143], "token": 149, "ton": 152, "tonumpi": [7, 145, 153], "too": [27, 87], "took": 148, "top": [52, 87], "top_sirna_id": 52, "torch": [6, 9, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 54, 64, 65, 66, 68, 69, 74, 75, 80, 84, 87, 89, 96, 99, 102, 103, 105, 134, 146, 148, 149, 150, 152, 155, 157, 159, 160, 161, 163], "torch_stat": 163, "torchcheckpoint": [9, 128], "torchfeaturetyp": [19, 21, 25, 26, 35, 39, 40, 43], "torchinputtyp": [20, 21, 23, 25, 26, 27, 33, 35, 39, 40, 42, 44, 46, 146], "torchmetr": [7, 145, 157], "torchmodulecheckpoint": [7, 8, 9], "torchmodulesnapshott": [7, 145, 165], "torchpredtyp": [19, 20, 21, 25, 26, 35, 39, 40, 43, 44, 157], "torchshap": 83, "torchtargettyp": [19, 20, 21, 25, 26, 39, 40, 43, 44, 146, 157], "torchtransformfunct": 157, "total": [23, 42, 43, 44, 46, 103, 107, 109, 110, 111, 113, 120, 121, 123, 131, 135, 136, 137, 140, 141, 142, 143, 156, 159, 161, 164], "total_client_count_by_metr": 156, "total_client_weight": 142, "total_exampl": 156, "total_loss": [23, 42, 46], "total_sampl": [120, 123, 127], "total_step": 21, "tqdm": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48], "track": [19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 138], "track_running_stat": 83, "tradit": 10, "train": [3, 6, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 66, 69, 74, 77, 78, 80, 82, 83, 87, 88, 93, 102, 103, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 163], "train_by_epoch": [18, 21, 36], "train_by_step": [18, 21], "train_dataset": 51, "train_fedrep_by_epoch": [18, 33], "train_fedrep_by_step": [18, 33], "train_fract": 51, "train_kernel": [63, 66], "train_load": 6, "train_step": [18, 20, 21, 26, 27, 33, 44], "train_transform": 54, "train_val_split": 51, "trainer": 44, "trainingloss": [7, 19, 20, 21, 25, 26, 27, 33, 35, 39, 40, 42, 43, 44, 145, 155], "trajectori": [19, 135], "transfer": [21, 26, 28, 29, 35, 41, 45], "transform": [21, 51, 54, 56, 58, 60, 64, 77, 80, 82, 83, 102, 104, 148, 149, 153, 157], "transform_gradi": [18, 21, 44, 47], "transform_target": [18, 21], "transformed_featur": 64, "transformermixin": 58, "transformsmetr": [7, 145, 157], "transpar": 161, "transpos": [80, 138], "travers": 75, "treat": [83, 107, 110, 111, 159], "treatment": [12, 123, 133, 134], "tree": [148, 159], "trivial": 149, "true": [21, 22, 25, 26, 27, 32, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 66, 68, 72, 75, 77, 80, 82, 83, 87, 97, 102, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 151, 152, 159, 163], "truth": [19, 20, 21, 23, 25, 26, 27, 35, 39, 40, 42, 43, 44, 46, 116, 117, 118, 119, 120, 123, 125, 127, 128, 157], "try": [9, 68, 108, 109, 113, 132], "tst": 66, "tune": 10, "tupl": [6, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 51, 54, 60, 66, 67, 69, 73, 78, 80, 84, 85, 87, 88, 89, 93, 94, 96, 97, 98, 99, 103, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 150, 152, 153, 156, 157, 161, 162, 163], "turn": [132, 135, 137, 138, 143], "tutori": 108, "twin": [3, 20], "two": [3, 6, 10, 21, 26, 32, 33, 35, 44, 47, 66, 69, 78, 80, 82, 83, 85, 89, 93, 96, 99, 109, 113, 121, 131, 134, 138, 143, 152, 160], "type": [6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "type_data": 52, "type_to_featur": [56, 59], "typeerror": [21, 25, 39, 40, 146, 149], "typevar": [94, 96, 98, 164], "typic": [21, 44, 75], "u": [87, 138], "u_1": 138, "u_2": 138, "u_i": 138, "u_k": 148, "u_n": 138, "uf": 55, "ui": [109, 113], "unaffect": 163, "unbias": 66, "uncategor": [109, 113], "under": [9, 12, 25, 26, 35, 39, 40, 44, 83, 87, 109, 113, 157, 162], "underli": [19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 152, 157], "underpin": 153, "undo": 163, "unfreeze_base_modul": [71, 76], "unfreeze_head_modul": [71, 76], "unifi": 150, "uniform": [9, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 159, 161], "uniform_evaluate_metrics_aggregation_fn": [7, 145, 156], "uniform_metric_aggreg": [7, 145, 156], "uniform_normalize_metr": [7, 145, 156], "uniformli": [142, 143, 156], "union": [19, 23, 26, 27, 28, 29, 33, 42, 46, 48, 59, 61, 62, 119, 128, 136, 137, 140], "uniqu": [3, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 109, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 159, 163], "unique_label": [161, 164], "unit": 68, "unitari": 138, "unless": [28, 44, 124], "unlik": [3, 11, 12, 35, 43, 161], "unpack": [12, 19, 22, 26, 47, 73, 103, 150], "unpack_input_condit": [73, 145, 150], "unpack_model_output": [101, 103], "unpack_paramet": [90, 94, 96, 98], "unrespons": 127, "unseen": 3, "unset_all_random_se": [7, 145, 163], "unspecifi": [109, 113], "unstructur": 12, "unsuccess": [119, 122], "until": [15, 47, 161], "unus": [44, 141], "unweight": [3, 42, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143], "unweighted_aggreg": [129, 133, 134], "unwound": 45, "up": [3, 10, 19, 25, 26, 33, 39, 41, 45, 74, 110, 119, 120, 123, 132, 138, 148, 152, 161, 164], "updat": [3, 19, 20, 21, 22, 25, 27, 39, 40, 43, 44, 47, 80, 82, 83, 107, 108, 109, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 132, 135, 136, 137, 139, 142, 143, 145, 146, 155, 157], "update_after_step": [18, 20, 21, 24, 25, 38, 39, 40], "update_after_train": [18, 19, 21, 23, 42, 46, 47], "update_alpha": [71, 72], "update_before_epoch": [18, 21], "update_before_fit": [114, 119, 125], "update_before_step": [18, 21], "update_before_train": [18, 21, 23, 24, 25, 26, 30, 35, 38, 39, 40, 42, 43, 44, 46], "update_buff": [24, 25, 38, 39, 40], "update_clipping_bound": [129, 132], "update_control_vari": [18, 47], "update_current_weight": [129, 132], "update_lr_schedul": [18, 21], "update_metric_manag": [18, 21, 44], "update_target_transform": [145, 149], "update_transform": [145, 149], "update_weights_by_ga": [129, 136], "updated_param": 143, "upload": [109, 113, 124], "upon": 12, "us": [3, 6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 64, 66, 68, 73, 75, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 93, 97, 99, 102, 103, 105, 107, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 152, 153, 155, 157, 159, 161, 162, 163, 164], "usag": [44, 152, 161], "use_default_signal_handl": [7, 145, 159], "use_deterministic_algorithm": 163, "use_deterministic_torch_algo": 163, "user": [11, 20, 21, 26, 27, 28, 29, 33, 35, 41, 44, 45, 46, 48, 60, 73, 75, 78, 87, 103, 104, 105, 131, 136, 150, 157, 161], "usernam": [109, 113], "usual": [43, 108, 159], "util": [6, 7, 21, 44, 87], "uuid": [111, 152], "v": [33, 131, 138, 148], "v2": 159, "v202": [36, 140], "v_i": 68, "v_i_quadrupl": 68, "v_k": 148, "vae": [102, 103], "vaeloss": [100, 101, 103], "vaeprocessor": [100, 101, 102], "val": [21, 54, 136, 157], "val_dataset": 51, "val_load": 6, "val_prefix": [145, 157], "val_step": [18, 21], "val_transform": 54, "valid": [10, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 87, 119, 121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 151, 153, 154, 159, 162], "validate_on_model": [18, 28], "validation_proport": 153, "valu": [9, 10, 11, 12, 20, 21, 23, 25, 26, 27, 30, 33, 36, 39, 40, 42, 44, 46, 52, 60, 61, 62, 64, 65, 66, 68, 74, 75, 80, 82, 83, 85, 87, 96, 99, 103, 107, 108, 109, 113, 120, 121, 123, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166], "valueerror": [10, 12, 21, 25, 26, 28, 33, 35, 36, 39, 40, 132, 143, 146, 147, 161], "vanilla": [11, 25, 26, 35, 39, 40, 43], "variabl": [10, 44, 102, 159, 163], "varianc": [66, 87, 103, 148], "variat": [3, 21, 47, 73, 127, 143], "variationala": [7, 71, 73], "varieti": 21, "variou": [3, 10, 23, 45, 46], "vector": [65, 73, 77, 87, 138, 150], "verbos": [44, 159], "veri": [3, 19, 21, 22, 26, 28, 35, 45, 116, 118, 152, 161], "verifi": [146, 147, 148], "version": [3, 21, 26, 43, 44, 66, 132, 159], "vertic": 76, "via": [6, 9, 12, 19, 74, 80, 82, 83, 87, 99, 107, 161, 162], "view": [138, 139], "violat": 161, "vjp": 152, "vocabulari": 60, "vote": [71, 74], "voxel": 159, "vram": 44, "w": [21, 30, 44, 108, 132, 148, 152], "wa": [20, 21, 25, 39, 40, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 132, 133, 134, 139, 159], "wai": [6, 41, 83, 131, 152, 159, 164, 165], "wait": [6, 119, 120, 121, 122, 123, 124, 126, 127, 143, 151], "wait_and_filt": [13, 14], "wandb": [109, 113], "wandb_init_kwarg": [109, 113], "wandb_report": [7, 21, 44, 109, 128], "wandb_step": [109, 113], "wandb_step_typ": [109, 113], "wandbreport": [7, 109, 113], "want": [10, 19, 21, 26, 35, 43, 44, 75, 109, 113, 116, 118, 119, 135, 136, 143, 144, 159, 161], "warm": [3, 127], "warm_start": 127, "warmed_up_modul": [7, 100], "warmedupmodul": [7, 100, 105], "warn": [145, 166], "we": [3, 6, 9, 10, 11, 12, 19, 21, 22, 25, 26, 27, 28, 32, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 66, 68, 73, 75, 84, 89, 93, 97, 108, 109, 110, 113, 121, 131, 132, 133, 134, 135, 138, 139, 141, 143, 148, 151, 152, 159, 161, 164], "weigh": [136, 137], "weight": [3, 12, 19, 21, 22, 23, 25, 26, 28, 30, 35, 39, 40, 42, 43, 45, 46, 47, 69, 70, 76, 79, 80, 82, 83, 105, 108, 120, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 152, 156, 157], "weight_and_aggregate_result": [129, 136], "weight_drift_loss": [7, 63], "weight_noise_multipli": 132, "weight_scor": [79, 80, 82, 83, 97], "weightdriftloss": [7, 63, 70], "weighted_aggreg": [129, 131, 132, 133, 134, 135, 138, 139, 140, 141], "weighted_eval_loss": [131, 132, 133, 134, 135, 138, 139, 140, 143], "weighted_train_loss": [135, 137], "weights_mapping_dir": 105, "weights_mapping_path": 105, "weights_nam": 96, "weights_upd": 132, "well": [3, 6, 11, 52, 74, 87, 124, 132, 139, 148, 152], "were": [108, 133, 134, 143, 152], "what": [21, 44, 109, 110, 113, 143], "whatev": [9, 10, 11], "when": [9, 11, 19, 20, 21, 22, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 61, 78, 83, 87, 89, 97, 107, 109, 110, 113, 119, 125, 128, 131, 132, 136, 137, 143, 144, 149, 150, 152, 159, 162], "whenev": 9, "where": [10, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 66, 74, 75, 78, 83, 84, 87, 89, 102, 107, 109, 113, 119, 122, 130, 131, 132, 133, 134, 138, 139, 143, 146, 148, 155, 157, 159, 164], "wherein": 3, "whether": [6, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 66, 68, 75, 77, 78, 87, 89, 97, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 152, 157, 159, 162, 163], "which": [3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 58, 60, 64, 66, 68, 74, 75, 80, 82, 83, 87, 88, 96, 97, 99, 104, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 150, 151, 152, 153, 157, 159, 161, 162, 163, 164], "while": [3, 32, 64, 69, 70, 72, 73, 77, 78, 80, 82, 83, 85, 87, 88, 99, 159], "who": 133, "whole": [25, 39, 40, 74], "whose": [34, 80, 82, 83, 87, 97, 99, 104, 138, 143, 160], "wide": 3, "window": 159, "wise": [12, 47, 142, 143], "wish": 87, "within": [11, 12, 70, 72, 73, 77, 78, 80, 82, 83, 85, 88, 96, 99, 109, 110, 111, 113, 134, 146, 149, 157, 159], "without": [14, 16, 17, 19, 64, 109, 113, 127, 132, 146, 152], "wns823": 55, "word": [109, 113], "work": [44, 102, 110, 111, 119, 136, 139, 152], "worker": [54, 126], "workflow": 11, "would": [21, 61, 87, 152, 163], "woven": 45, "wrap": [11, 125, 146, 159, 162, 165], "wrap_model": 162, "wrapper": [74, 116, 117, 118, 157], "write": [145, 159], "written": 159, "wrong": [21, 33, 36, 147], "www": [46, 69], "wx": 148, "x": [44, 58, 64, 66, 68, 78, 87, 96, 148, 152, 159], "x1": 65, "x2": 65, "x_": [68, 148], "x_in_dim": 66, "x_lower_dim": 87, "x_out_dim": 66, "xent": 64, "xt": [66, 68], "xxyxz": 159, "y": [44, 58, 66, 68, 148, 159], "y_": 68, "yaml": [109, 113], "yang": 55, "yield": [3, 162], "you": [9, 11, 12, 75, 109, 113, 119, 152, 161, 163], "your": [3, 6, 44, 109, 113, 119, 162], "z": [44, 69, 108, 159], "z_": 69, "z_1": 108, "z_2": 108, "z_g": 69, "z_p": 69, "zero": [80, 83, 97, 99, 134, 143, 146], "zeroeth": 152, "zhang": [136, 137]}, "titles": ["API Reference", "Basic Example", "Examples", "Welcome to FL4Health \u2728", "Checkpointing", "Module Guides", "Quickstart", "fl4health package", "fl4health.checkpointing package", "fl4health.checkpointing.checkpointer module", "fl4health.checkpointing.client_module module", "fl4health.checkpointing.opacus_checkpointer module", "fl4health.checkpointing.server_module module", "fl4health.client_managers package", "fl4health.client_managers.base_sampling_manager module", "fl4health.client_managers.fixed_sampling_client_manager module", "fl4health.client_managers.fixed_without_replacement_manager module", "fl4health.client_managers.poisson_sampling_manager module", "fl4health.clients package", "fl4health.clients.adaptive_drift_constraint_client module", "fl4health.clients.apfl_client module", "fl4health.clients.basic_client module", "fl4health.clients.clipping_client module", "fl4health.clients.constrained_fenda_client module", "fl4health.clients.deep_mmd_clients namespace", "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module", "fl4health.clients.ditto_client module", "fl4health.clients.ensemble_client module", "fl4health.clients.evaluate_client module", "fl4health.clients.fed_pca_client module", "fl4health.clients.fed_prox_client module", "fl4health.clients.fedper_client module", "fl4health.clients.fedpm_client module", "fl4health.clients.fedrep_client module", "fl4health.clients.fenda_client module", "fl4health.clients.fenda_ditto_client module", "fl4health.clients.flash_client module", "fl4health.clients.instance_level_dp_client module", "fl4health.clients.mkmmd_clients namespace", "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module", "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module", "fl4health.clients.model_merge_client module", "fl4health.clients.moon_client module", "fl4health.clients.mr_mtl_client module", "fl4health.clients.nnunet_client module", "fl4health.clients.partial_weight_exchange_client module", "fl4health.clients.perfcl_client module", "fl4health.clients.scaffold_client module", "fl4health.clients.tabular_data_client module", "fl4health.datasets namespace", "fl4health.datasets.rxrx1 namespace", "fl4health.datasets.rxrx1.load_data module", "fl4health.datasets.rxrx1.preprocess module", "fl4health.datasets.skin_cancer package", "fl4health.datasets.skin_cancer.load_data module", "fl4health.datasets.skin_cancer.preprocess_skin module", "fl4health.feature_alignment namespace", "fl4health.feature_alignment.constants module", "fl4health.feature_alignment.string_columns_transformer module", "fl4health.feature_alignment.tab_features_info_encoder module", "fl4health.feature_alignment.tab_features_preprocessor module", "fl4health.feature_alignment.tabular_feature module", "fl4health.feature_alignment.tabular_type module", "fl4health.losses package", "fl4health.losses.contrastive_loss module", "fl4health.losses.cosine_similarity_loss module", "fl4health.losses.deep_mmd_loss module", "fl4health.losses.fenda_loss_config module", "fl4health.losses.mkmmd_loss module", "fl4health.losses.perfcl_loss module", "fl4health.losses.weight_drift_loss module", "fl4health.model_bases package", "fl4health.model_bases.apfl_base module", "fl4health.model_bases.autoencoders_base module", "fl4health.model_bases.ensemble_base module", "fl4health.model_bases.feature_extractor_buffer module", "fl4health.model_bases.fedrep_base module", "fl4health.model_bases.fedsimclr_base module", "fl4health.model_bases.fenda_base module", "fl4health.model_bases.masked_layers namespace", "fl4health.model_bases.masked_layers.masked_conv module", "fl4health.model_bases.masked_layers.masked_layers_utils module", "fl4health.model_bases.masked_layers.masked_linear module", "fl4health.model_bases.masked_layers.masked_normalization_layers module", "fl4health.model_bases.moon_base module", "fl4health.model_bases.parallel_split_models module", "fl4health.model_bases.partial_layer_exchange_model module", "fl4health.model_bases.pca module", "fl4health.model_bases.perfcl_base module", "fl4health.model_bases.sequential_split_models module", "fl4health.parameter_exchange package", "fl4health.parameter_exchange.fedpm_exchanger module", "fl4health.parameter_exchange.full_exchanger module", "fl4health.parameter_exchange.layer_exchanger module", "fl4health.parameter_exchange.packing_exchanger module", "fl4health.parameter_exchange.parameter_exchanger_base module", "fl4health.parameter_exchange.parameter_packer module", "fl4health.parameter_exchange.parameter_selection_criteria module", "fl4health.parameter_exchange.partial_parameter_exchanger module", "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module", "fl4health.preprocessing package", "fl4health.preprocessing.autoencoders package", "fl4health.preprocessing.autoencoders.dim_reduction module", "fl4health.preprocessing.autoencoders.loss module", "fl4health.preprocessing.pca_preprocessor module", "fl4health.preprocessing.warmed_up_module module", "fl4health.privacy package", "fl4health.privacy.fl_accountants module", "fl4health.privacy.moments_accountant module", "fl4health.reporting package", "fl4health.reporting.base_reporter module", "fl4health.reporting.json_reporter module", "fl4health.reporting.reports_manager module", "fl4health.reporting.wandb_reporter module", "fl4health.servers package", "fl4health.servers.adaptive_constraint_servers package", "fl4health.servers.adaptive_constraint_servers.ditto_server module", "fl4health.servers.adaptive_constraint_servers.fedprox_server module", "fl4health.servers.adaptive_constraint_servers.mrmtl_server module", "fl4health.servers.base_server module", "fl4health.servers.client_level_dp_fed_avg_server module", "fl4health.servers.evaluate_server module", "fl4health.servers.fedpm_server module", "fl4health.servers.instance_level_dp_server module", "fl4health.servers.model_merge_server module", "fl4health.servers.nnunet_server module", "fl4health.servers.polling module", "fl4health.servers.scaffold_server module", "fl4health.servers.tabular_feature_alignment_server module", "fl4health.strategies package", "fl4health.strategies.aggregate_utils module", "fl4health.strategies.basic_fedavg module", "fl4health.strategies.client_dp_fedavgm module", "fl4health.strategies.fedavg_dynamic_layer module", "fl4health.strategies.fedavg_sparse_coo_tensor module", "fl4health.strategies.fedavg_with_adaptive_constraint module", "fl4health.strategies.feddg_ga module", "fl4health.strategies.feddg_ga_with_adaptive_constraint module", "fl4health.strategies.fedpca module", "fl4health.strategies.fedpm module", "fl4health.strategies.flash module", "fl4health.strategies.model_merge_strategy module", "fl4health.strategies.noisy_aggregate module", "fl4health.strategies.scaffold module", "fl4health.strategies.strategy_with_poll module", "fl4health.utils package", "fl4health.utils.client module", "fl4health.utils.config module", "fl4health.utils.data_generation module", "fl4health.utils.dataset module", "fl4health.utils.dataset_converter module", "fl4health.utils.early_stopper module", "fl4health.utils.functions module", "fl4health.utils.load_data module", "fl4health.utils.logging module", "fl4health.utils.losses module", "fl4health.utils.metric_aggregation module", "fl4health.utils.metrics module", "fl4health.utils.msd_dataset_sources module", "fl4health.utils.nnunet_utils module", "fl4health.utils.parameter_extraction module", "fl4health.utils.partitioners module", "fl4health.utils.privacy_utilities module", "fl4health.utils.random module", "fl4health.utils.sampler module", "fl4health.utils.snapshotter module", "fl4health.utils.typing module"], "titleterms": {"": 3, "A": 6, "adaptive_constraint_serv": [115, 116, 117, 118], "adaptive_drift_constraint_cli": 19, "aggregate_util": 130, "apfl_bas": 72, "apfl_client": 20, "api": 0, "approach": 3, "autoencod": [101, 102, 103], "autoencoders_bas": 73, "base_report": 110, "base_sampling_manag": 14, "base_serv": 119, "basic": 1, "basic_cli": 21, "basic_fedavg": 131, "capabl": 3, "checkpoint": [4, 8, 9, 10, 11, 12], "client": [6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 146], "client_dp_fedavgm": 132, "client_level_dp_fed_avg_serv": 120, "client_manag": [13, 14, 15, 16, 17], "client_modul": 10, "clipping_cli": 22, "commun": 3, "config": 147, "constant": 57, "constrained_fenda_cli": 23, "contrastive_loss": 64, "cosine_similarity_loss": 65, "current": 3, "data_gener": 148, "dataset": [49, 50, 51, 52, 53, 54, 55, 149], "dataset_convert": 150, "deep_mmd_client": [24, 25], "deep_mmd_loss": 66, "dim_reduct": 102, "ditto_cli": 26, "ditto_deep_mmd_cli": 25, "ditto_mkmmd_cli": 39, "ditto_serv": 116, "early_stopp": 151, "ensemble_bas": 74, "ensemble_cli": 27, "evaluate_cli": 28, "evaluate_serv": 121, "exampl": [1, 2], "feature_align": [56, 57, 58, 59, 60, 61, 62], "feature_extractor_buff": 75, "fed_pca_cli": 29, "fed_prox_cli": 30, "fedavg_dynamic_lay": 133, "fedavg_sparse_coo_tensor": 134, "fedavg_with_adaptive_constraint": 135, "feddg_ga": 136, "feddg_ga_with_adaptive_constraint": 137, "fedpca": 138, "fedper_cli": 31, "fedpm": 139, "fedpm_client": 32, "fedpm_exchang": 91, "fedpm_serv": 122, "fedprox_serv": 117, "fedrep_bas": 76, "fedrep_cli": 33, "fedsimclr_bas": 77, "fenda_bas": 78, "fenda_cli": 34, "fenda_ditto_cli": 35, "fenda_loss_config": 67, "fixed_sampling_client_manag": 15, "fixed_without_replacement_manag": 16, "fl": 6, "fl4health": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "fl_account": 107, "flash": 140, "flash_client": 36, "full_exchang": 92, "function": 152, "guid": 5, "implement": 3, "instal": 6, "instance_level_dp_cli": 37, "instance_level_dp_serv": 123, "introduct": 3, "json_report": 111, "layer_exchang": 93, "load_data": [51, 54, 153], "log": 154, "loss": [63, 64, 65, 66, 67, 68, 69, 70, 103, 155], "masked_conv": 80, "masked_lay": [79, 80, 81, 82, 83], "masked_layers_util": 81, "masked_linear": 82, "masked_normalization_lay": 83, "metric": 157, "metric_aggreg": 156, "mkmmd_client": [38, 39, 40], "mkmmd_loss": 68, "model_bas": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "model_merge_cli": 41, "model_merge_serv": 124, "model_merge_strategi": 141, "modul": [5, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "moments_account": 108, "moon_bas": 84, "moon_client": 42, "mr_mtl_client": 43, "mr_mtl_mkmmd_client": 40, "mrmtl_server": 118, "msd_dataset_sourc": 158, "namespac": [24, 38, 49, 50, 56, 79], "next": 3, "nnunet_cli": 44, "nnunet_serv": 125, "nnunet_util": 159, "noisy_aggreg": 142, "opacus_checkpoint": 11, "packag": [7, 8, 13, 18, 53, 63, 71, 90, 100, 101, 106, 109, 114, 115, 129, 145], "packing_exchang": 94, "parallel_split_model": 85, "parameter_exchang": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "parameter_exchanger_bas": 95, "parameter_extract": 160, "parameter_pack": 96, "parameter_selection_criteria": 97, "partial_layer_exchange_model": 86, "partial_parameter_exchang": 98, "partial_weight_exchange_cli": 45, "partition": 161, "pca": 87, "pca_preprocessor": 104, "perfcl_bas": 88, "perfcl_client": 46, "perfcl_loss": 69, "poisson_sampling_manag": 17, "poll": 126, "preprocess": [52, 100, 101, 102, 103, 104, 105], "preprocess_skin": 55, "privaci": [3, 106, 107, 108], "privacy_util": 162, "py": 6, "quickstart": 6, "random": 163, "refer": 0, "report": [109, 110, 111, 112, 113], "reports_manag": 112, "run": 6, "rxrx1": [50, 51, 52], "sampler": 164, "scaffold": 143, "scaffold_cli": 47, "scaffold_serv": 127, "sequential_split_model": 89, "server": [6, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "server_modul": 12, "simpl": 6, "skin_canc": [53, 54, 55], "snapshott": 165, "sparse_coo_parameter_exchang": 99, "start": 6, "strategi": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "strategy_with_pol": 144, "string_columns_transform": 58, "submodul": [8, 13, 18, 24, 38, 50, 53, 56, 63, 71, 79, 90, 100, 101, 106, 109, 114, 115, 129, 145], "subpackag": [7, 18, 49, 71, 100, 114], "summari": 3, "tab_features_info_encod": 59, "tab_features_preprocessor": 60, "tabular_data_cli": 48, "tabular_featur": 61, "tabular_feature_alignment_serv": 128, "tabular_typ": 62, "task": 6, "type": 166, "util": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "wandb_report": 113, "warmed_up_modul": 105, "weight_drift_loss": 70, "welcom": 3, "what": 3}})