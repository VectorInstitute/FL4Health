Search.setIndex({"alltitles": {"A simple FL task": [[7, "a-simple-fl-task"]], "API Reference": [[0, null]], "Basic Example": [[2, null]], "Checkpointing": [[5, null]], "Code Coverage": [[1, "code-coverage"]], "Code Documentation": [[1, "code-documentation"]], "Coding Guidelines, Formatters, and Checks": [[1, "coding-guidelines-formatters-and-checks"]], "Community": [[4, "community"]], "Contributing": [[1, null]], "Development Practices": [[1, "development-practices"]], "Development Requirements": [[1, "development-requirements"]], "Examples": [[3, null]], "Installation": [[7, "installation"]], "Introduction": [[4, "introduction"]], "Module Guides": [[6, null]], "Privacy Capabilities": [[4, "privacy-capabilities"]], "Quickstart": [[7, null]], "Running the FL task": [[7, "running-the-fl-task"]], "Starting Clients": [[7, "starting-clients"]], "Starting Server": [[7, "starting-server"]], "Submodules": [[9, "submodules"], [15, "submodules"], [20, "submodules"], [26, "submodules"], [40, "submodules"], [43, "submodules"], [55, "submodules"], [58, "submodules"], [61, "submodules"], [68, "submodules"], [76, "submodules"], [86, "submodules"], [89, "submodules"], [92, "submodules"], [100, "submodules"], [111, "submodules"], [121, "submodules"], [122, "submodules"], [127, "submodules"], [130, "submodules"], [135, "submodules"], [136, "submodules"], [150, "submodules"], [166, "submodules"]], "Subpackages": [[8, "subpackages"], [20, "subpackages"], [54, "subpackages"], [86, "subpackages"], [92, "subpackages"], [121, "subpackages"], [135, "subpackages"]], "Summary of Currently Implemented Approaches": [[4, "summary-of-currently-implemented-approaches"]], "Tests": [[1, "tests"]], "Welcome to FL4Health \u2728": [[4, null]], "What\u2019s Next?": [[4, "what-s-next"]], "client.py": [[7, "client-py"]], "fl4health package": [[8, null]], "fl4health.checkpointing package": [[9, null]], "fl4health.checkpointing.checkpointer module": [[10, null]], "fl4health.checkpointing.client_module module": [[11, null]], "fl4health.checkpointing.opacus_checkpointer module": [[12, null]], "fl4health.checkpointing.server_module module": [[13, null]], "fl4health.checkpointing.state_checkpointer module": [[14, null]], "fl4health.client_managers package": [[15, null]], "fl4health.client_managers.base_sampling_manager module": [[16, null]], "fl4health.client_managers.fixed_sampling_client_manager module": [[17, null]], "fl4health.client_managers.fixed_without_replacement_manager module": [[18, null]], "fl4health.client_managers.poisson_sampling_manager module": [[19, null]], "fl4health.clients package": [[20, null]], "fl4health.clients.adaptive_drift_constraint_client module": [[21, null]], "fl4health.clients.apfl_client module": [[22, null]], "fl4health.clients.basic_client module": [[23, null]], "fl4health.clients.clipping_client module": [[24, null]], "fl4health.clients.constrained_fenda_client module": [[25, null]], "fl4health.clients.deep_mmd_clients package": [[26, null]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module": [[27, null]], "fl4health.clients.ditto_client module": [[28, null]], "fl4health.clients.ensemble_client module": [[29, null]], "fl4health.clients.evaluate_client module": [[30, null]], "fl4health.clients.fed_pca_client module": [[31, null]], "fl4health.clients.fed_prox_client module": [[32, null]], "fl4health.clients.fedbn_client module": [[33, null]], "fl4health.clients.fedper_client module": [[34, null]], "fl4health.clients.fedpm_client module": [[35, null]], "fl4health.clients.fedrep_client module": [[36, null]], "fl4health.clients.fenda_client module": [[37, null]], "fl4health.clients.fenda_ditto_client module": [[38, null]], "fl4health.clients.flash_client module": [[39, null]], "fl4health.clients.flexible package": [[40, null]], "fl4health.clients.flexible.base module": [[41, null]], "fl4health.clients.instance_level_dp_client module": [[42, null]], "fl4health.clients.mkmmd_clients package": [[43, null]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module": [[44, null]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module": [[45, null]], "fl4health.clients.model_merge_client module": [[46, null]], "fl4health.clients.moon_client module": [[47, null]], "fl4health.clients.mr_mtl_client module": [[48, null]], "fl4health.clients.nnunet_client module": [[49, null]], "fl4health.clients.partial_weight_exchange_client module": [[50, null]], "fl4health.clients.perfcl_client module": [[51, null]], "fl4health.clients.scaffold_client module": [[52, null]], "fl4health.clients.tabular_data_client module": [[53, null]], "fl4health.datasets package": [[54, null]], "fl4health.datasets.rxrx1 package": [[55, null]], "fl4health.datasets.rxrx1.load_data module": [[56, null]], "fl4health.datasets.rxrx1.preprocess module": [[57, null]], "fl4health.datasets.skin_cancer package": [[58, null]], "fl4health.datasets.skin_cancer.load_data module": [[59, null]], "fl4health.datasets.skin_cancer.preprocess_skin module": [[60, null]], "fl4health.feature_alignment package": [[61, null]], "fl4health.feature_alignment.constants module": [[62, null]], "fl4health.feature_alignment.string_columns_transformer module": [[63, null]], "fl4health.feature_alignment.tab_features_info_encoder module": [[64, null]], "fl4health.feature_alignment.tab_features_preprocessor module": [[65, null]], "fl4health.feature_alignment.tabular_feature module": [[66, null]], "fl4health.feature_alignment.tabular_type module": [[67, null]], "fl4health.losses package": [[68, null]], "fl4health.losses.contrastive_loss module": [[69, null]], "fl4health.losses.cosine_similarity_loss module": [[70, null]], "fl4health.losses.deep_mmd_loss module": [[71, null]], "fl4health.losses.fenda_loss_config module": [[72, null]], "fl4health.losses.mkmmd_loss module": [[73, null]], "fl4health.losses.perfcl_loss module": [[74, null]], "fl4health.losses.weight_drift_loss module": [[75, null]], "fl4health.metrics package": [[76, null]], "fl4health.metrics.base_metrics module": [[77, null]], "fl4health.metrics.compound_metrics module": [[78, null]], "fl4health.metrics.efficient_metrics module": [[79, null]], "fl4health.metrics.efficient_metrics_base module": [[80, null]], "fl4health.metrics.metric_aggregation module": [[81, null]], "fl4health.metrics.metric_managers module": [[82, null]], "fl4health.metrics.metrics module": [[83, null]], "fl4health.metrics.metrics_utils module": [[84, null]], "fl4health.metrics.utils module": [[85, null]], "fl4health.mixins package": [[86, null]], "fl4health.mixins.adaptive_drift_constrained module": [[87, null]], "fl4health.mixins.core_protocols module": [[88, null]], "fl4health.mixins.personalized package": [[89, null]], "fl4health.mixins.personalized.ditto module": [[90, null]], "fl4health.mixins.personalized.utils module": [[91, null]], "fl4health.model_bases package": [[92, null]], "fl4health.model_bases.apfl_base module": [[93, null]], "fl4health.model_bases.autoencoders_base module": [[94, null]], "fl4health.model_bases.ensemble_base module": [[95, null]], "fl4health.model_bases.feature_extractor_buffer module": [[96, null]], "fl4health.model_bases.fedrep_base module": [[97, null]], "fl4health.model_bases.fedsimclr_base module": [[98, null]], "fl4health.model_bases.fenda_base module": [[99, null]], "fl4health.model_bases.masked_layers package": [[100, null]], "fl4health.model_bases.masked_layers.masked_conv module": [[101, null]], "fl4health.model_bases.masked_layers.masked_layers_utils module": [[102, null]], "fl4health.model_bases.masked_layers.masked_linear module": [[103, null]], "fl4health.model_bases.masked_layers.masked_normalization_layers module": [[104, null]], "fl4health.model_bases.moon_base module": [[105, null]], "fl4health.model_bases.parallel_split_models module": [[106, null]], "fl4health.model_bases.partial_layer_exchange_model module": [[107, null]], "fl4health.model_bases.pca module": [[108, null]], "fl4health.model_bases.perfcl_base module": [[109, null]], "fl4health.model_bases.sequential_split_models module": [[110, null]], "fl4health.parameter_exchange package": [[111, null]], "fl4health.parameter_exchange.fedpm_exchanger module": [[112, null]], "fl4health.parameter_exchange.full_exchanger module": [[113, null]], "fl4health.parameter_exchange.layer_exchanger module": [[114, null]], "fl4health.parameter_exchange.packing_exchanger module": [[115, null]], "fl4health.parameter_exchange.parameter_exchanger_base module": [[116, null]], "fl4health.parameter_exchange.parameter_packer module": [[117, null]], "fl4health.parameter_exchange.parameter_selection_criteria module": [[118, null]], "fl4health.parameter_exchange.partial_parameter_exchanger module": [[119, null]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module": [[120, null]], "fl4health.preprocessing package": [[121, null]], "fl4health.preprocessing.autoencoders package": [[122, null]], "fl4health.preprocessing.autoencoders.dim_reduction module": [[123, null]], "fl4health.preprocessing.autoencoders.loss module": [[124, null]], "fl4health.preprocessing.pca_preprocessor module": [[125, null]], "fl4health.preprocessing.warmed_up_module module": [[126, null]], "fl4health.privacy package": [[127, null]], "fl4health.privacy.fl_accountants module": [[128, null]], "fl4health.privacy.moments_accountant module": [[129, null]], "fl4health.reporting package": [[130, null]], "fl4health.reporting.base_reporter module": [[131, null]], "fl4health.reporting.json_reporter module": [[132, null]], "fl4health.reporting.reports_manager module": [[133, null]], "fl4health.reporting.wandb_reporter module": [[134, null]], "fl4health.servers package": [[135, null]], "fl4health.servers.adaptive_constraint_servers package": [[136, null]], "fl4health.servers.adaptive_constraint_servers.ditto_server module": [[137, null]], "fl4health.servers.adaptive_constraint_servers.fedprox_server module": [[138, null]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server module": [[139, null]], "fl4health.servers.base_server module": [[140, null]], "fl4health.servers.client_level_dp_fed_avg_server module": [[141, null]], "fl4health.servers.evaluate_server module": [[142, null]], "fl4health.servers.fedpm_server module": [[143, null]], "fl4health.servers.instance_level_dp_server module": [[144, null]], "fl4health.servers.model_merge_server module": [[145, null]], "fl4health.servers.nnunet_server module": [[146, null]], "fl4health.servers.polling module": [[147, null]], "fl4health.servers.scaffold_server module": [[148, null]], "fl4health.servers.tabular_feature_alignment_server module": [[149, null]], "fl4health.strategies package": [[150, null]], "fl4health.strategies.aggregate_utils module": [[151, null]], "fl4health.strategies.basic_fedavg module": [[152, null]], "fl4health.strategies.client_dp_fedavgm module": [[153, null]], "fl4health.strategies.fedavg_dynamic_layer module": [[154, null]], "fl4health.strategies.fedavg_sparse_coo_tensor module": [[155, null]], "fl4health.strategies.fedavg_with_adaptive_constraint module": [[156, null]], "fl4health.strategies.feddg_ga module": [[157, null]], "fl4health.strategies.feddg_ga_with_adaptive_constraint module": [[158, null]], "fl4health.strategies.fedpca module": [[159, null]], "fl4health.strategies.fedpm module": [[160, null]], "fl4health.strategies.flash module": [[161, null]], "fl4health.strategies.model_merge_strategy module": [[162, null]], "fl4health.strategies.noisy_aggregate module": [[163, null]], "fl4health.strategies.scaffold module": [[164, null]], "fl4health.strategies.strategy_with_poll module": [[165, null]], "fl4health.utils package": [[166, null]], "fl4health.utils.client module": [[167, null]], "fl4health.utils.config module": [[168, null]], "fl4health.utils.data_generation module": [[169, null]], "fl4health.utils.dataset module": [[170, null]], "fl4health.utils.dataset_converter module": [[171, null]], "fl4health.utils.early_stopper module": [[172, null]], "fl4health.utils.functions module": [[173, null]], "fl4health.utils.load_data module": [[174, null]], "fl4health.utils.logging module": [[175, null]], "fl4health.utils.losses module": [[176, null]], "fl4health.utils.metric_aggregation module": [[177, null]], "fl4health.utils.metrics module": [[178, null]], "fl4health.utils.msd_dataset_sources module": [[179, null]], "fl4health.utils.nnunet_utils module": [[180, null]], "fl4health.utils.parameter_extraction module": [[181, null]], "fl4health.utils.partitioners module": [[182, null]], "fl4health.utils.peft_parameter_extraction module": [[183, null]], "fl4health.utils.privacy_utilities module": [[184, null]], "fl4health.utils.random module": [[185, null]], "fl4health.utils.sampler module": [[186, null]], "fl4health.utils.snapshotter module": [[187, null]], "fl4health.utils.typing module": [[188, null]], "server.py": [[7, "server-py"]]}, "docnames": ["api", "contributing", "examples/basic/index", "examples/index", "index", "module_guides/checkpointing/index", "module_guides/index", "quickstart", "reference/api/fl4health", "reference/api/fl4health.checkpointing", "reference/api/fl4health.checkpointing.checkpointer", "reference/api/fl4health.checkpointing.client_module", "reference/api/fl4health.checkpointing.opacus_checkpointer", "reference/api/fl4health.checkpointing.server_module", "reference/api/fl4health.checkpointing.state_checkpointer", "reference/api/fl4health.client_managers", "reference/api/fl4health.client_managers.base_sampling_manager", "reference/api/fl4health.client_managers.fixed_sampling_client_manager", "reference/api/fl4health.client_managers.fixed_without_replacement_manager", "reference/api/fl4health.client_managers.poisson_sampling_manager", "reference/api/fl4health.clients", "reference/api/fl4health.clients.adaptive_drift_constraint_client", "reference/api/fl4health.clients.apfl_client", "reference/api/fl4health.clients.basic_client", "reference/api/fl4health.clients.clipping_client", "reference/api/fl4health.clients.constrained_fenda_client", "reference/api/fl4health.clients.deep_mmd_clients", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", "reference/api/fl4health.clients.ditto_client", "reference/api/fl4health.clients.ensemble_client", "reference/api/fl4health.clients.evaluate_client", "reference/api/fl4health.clients.fed_pca_client", "reference/api/fl4health.clients.fed_prox_client", "reference/api/fl4health.clients.fedbn_client", "reference/api/fl4health.clients.fedper_client", "reference/api/fl4health.clients.fedpm_client", "reference/api/fl4health.clients.fedrep_client", "reference/api/fl4health.clients.fenda_client", "reference/api/fl4health.clients.fenda_ditto_client", "reference/api/fl4health.clients.flash_client", "reference/api/fl4health.clients.flexible", "reference/api/fl4health.clients.flexible.base", "reference/api/fl4health.clients.instance_level_dp_client", "reference/api/fl4health.clients.mkmmd_clients", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", "reference/api/fl4health.clients.model_merge_client", "reference/api/fl4health.clients.moon_client", "reference/api/fl4health.clients.mr_mtl_client", "reference/api/fl4health.clients.nnunet_client", "reference/api/fl4health.clients.partial_weight_exchange_client", "reference/api/fl4health.clients.perfcl_client", "reference/api/fl4health.clients.scaffold_client", "reference/api/fl4health.clients.tabular_data_client", "reference/api/fl4health.datasets", "reference/api/fl4health.datasets.rxrx1", "reference/api/fl4health.datasets.rxrx1.load_data", "reference/api/fl4health.datasets.rxrx1.preprocess", "reference/api/fl4health.datasets.skin_cancer", "reference/api/fl4health.datasets.skin_cancer.load_data", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin", "reference/api/fl4health.feature_alignment", "reference/api/fl4health.feature_alignment.constants", "reference/api/fl4health.feature_alignment.string_columns_transformer", "reference/api/fl4health.feature_alignment.tab_features_info_encoder", "reference/api/fl4health.feature_alignment.tab_features_preprocessor", "reference/api/fl4health.feature_alignment.tabular_feature", "reference/api/fl4health.feature_alignment.tabular_type", "reference/api/fl4health.losses", "reference/api/fl4health.losses.contrastive_loss", "reference/api/fl4health.losses.cosine_similarity_loss", "reference/api/fl4health.losses.deep_mmd_loss", "reference/api/fl4health.losses.fenda_loss_config", "reference/api/fl4health.losses.mkmmd_loss", "reference/api/fl4health.losses.perfcl_loss", "reference/api/fl4health.losses.weight_drift_loss", "reference/api/fl4health.metrics", "reference/api/fl4health.metrics.base_metrics", "reference/api/fl4health.metrics.compound_metrics", "reference/api/fl4health.metrics.efficient_metrics", "reference/api/fl4health.metrics.efficient_metrics_base", "reference/api/fl4health.metrics.metric_aggregation", "reference/api/fl4health.metrics.metric_managers", "reference/api/fl4health.metrics.metrics", "reference/api/fl4health.metrics.metrics_utils", "reference/api/fl4health.metrics.utils", "reference/api/fl4health.mixins", "reference/api/fl4health.mixins.adaptive_drift_constrained", "reference/api/fl4health.mixins.core_protocols", "reference/api/fl4health.mixins.personalized", "reference/api/fl4health.mixins.personalized.ditto", "reference/api/fl4health.mixins.personalized.utils", "reference/api/fl4health.model_bases", "reference/api/fl4health.model_bases.apfl_base", "reference/api/fl4health.model_bases.autoencoders_base", "reference/api/fl4health.model_bases.ensemble_base", "reference/api/fl4health.model_bases.feature_extractor_buffer", "reference/api/fl4health.model_bases.fedrep_base", "reference/api/fl4health.model_bases.fedsimclr_base", "reference/api/fl4health.model_bases.fenda_base", "reference/api/fl4health.model_bases.masked_layers", "reference/api/fl4health.model_bases.masked_layers.masked_conv", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils", "reference/api/fl4health.model_bases.masked_layers.masked_linear", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers", "reference/api/fl4health.model_bases.moon_base", "reference/api/fl4health.model_bases.parallel_split_models", "reference/api/fl4health.model_bases.partial_layer_exchange_model", "reference/api/fl4health.model_bases.pca", "reference/api/fl4health.model_bases.perfcl_base", "reference/api/fl4health.model_bases.sequential_split_models", "reference/api/fl4health.parameter_exchange", "reference/api/fl4health.parameter_exchange.fedpm_exchanger", "reference/api/fl4health.parameter_exchange.full_exchanger", "reference/api/fl4health.parameter_exchange.layer_exchanger", "reference/api/fl4health.parameter_exchange.packing_exchanger", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base", "reference/api/fl4health.parameter_exchange.parameter_packer", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger", "reference/api/fl4health.preprocessing", "reference/api/fl4health.preprocessing.autoencoders", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction", "reference/api/fl4health.preprocessing.autoencoders.loss", "reference/api/fl4health.preprocessing.pca_preprocessor", "reference/api/fl4health.preprocessing.warmed_up_module", "reference/api/fl4health.privacy", "reference/api/fl4health.privacy.fl_accountants", "reference/api/fl4health.privacy.moments_accountant", "reference/api/fl4health.reporting", "reference/api/fl4health.reporting.base_reporter", "reference/api/fl4health.reporting.json_reporter", "reference/api/fl4health.reporting.reports_manager", "reference/api/fl4health.reporting.wandb_reporter", "reference/api/fl4health.servers", "reference/api/fl4health.servers.adaptive_constraint_servers", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server", "reference/api/fl4health.servers.base_server", "reference/api/fl4health.servers.client_level_dp_fed_avg_server", "reference/api/fl4health.servers.evaluate_server", "reference/api/fl4health.servers.fedpm_server", "reference/api/fl4health.servers.instance_level_dp_server", "reference/api/fl4health.servers.model_merge_server", "reference/api/fl4health.servers.nnunet_server", "reference/api/fl4health.servers.polling", "reference/api/fl4health.servers.scaffold_server", "reference/api/fl4health.servers.tabular_feature_alignment_server", "reference/api/fl4health.strategies", "reference/api/fl4health.strategies.aggregate_utils", "reference/api/fl4health.strategies.basic_fedavg", "reference/api/fl4health.strategies.client_dp_fedavgm", "reference/api/fl4health.strategies.fedavg_dynamic_layer", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint", "reference/api/fl4health.strategies.feddg_ga", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint", "reference/api/fl4health.strategies.fedpca", "reference/api/fl4health.strategies.fedpm", "reference/api/fl4health.strategies.flash", "reference/api/fl4health.strategies.model_merge_strategy", "reference/api/fl4health.strategies.noisy_aggregate", "reference/api/fl4health.strategies.scaffold", "reference/api/fl4health.strategies.strategy_with_poll", "reference/api/fl4health.utils", "reference/api/fl4health.utils.client", "reference/api/fl4health.utils.config", "reference/api/fl4health.utils.data_generation", "reference/api/fl4health.utils.dataset", "reference/api/fl4health.utils.dataset_converter", "reference/api/fl4health.utils.early_stopper", "reference/api/fl4health.utils.functions", "reference/api/fl4health.utils.load_data", "reference/api/fl4health.utils.logging", "reference/api/fl4health.utils.losses", "reference/api/fl4health.utils.metric_aggregation", "reference/api/fl4health.utils.metrics", "reference/api/fl4health.utils.msd_dataset_sources", "reference/api/fl4health.utils.nnunet_utils", "reference/api/fl4health.utils.parameter_extraction", "reference/api/fl4health.utils.partitioners", "reference/api/fl4health.utils.peft_parameter_extraction", "reference/api/fl4health.utils.privacy_utilities", "reference/api/fl4health.utils.random", "reference/api/fl4health.utils.sampler", "reference/api/fl4health.utils.snapshotter", "reference/api/fl4health.utils.typing"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "contributing.md", "examples/basic/index.md", "examples/index.md", "index.md", "module_guides/checkpointing/index.md", "module_guides/index.md", "quickstart.md", "reference/api/fl4health.rst", "reference/api/fl4health.checkpointing.rst", "reference/api/fl4health.checkpointing.checkpointer.rst", "reference/api/fl4health.checkpointing.client_module.rst", "reference/api/fl4health.checkpointing.opacus_checkpointer.rst", "reference/api/fl4health.checkpointing.server_module.rst", "reference/api/fl4health.checkpointing.state_checkpointer.rst", "reference/api/fl4health.client_managers.rst", "reference/api/fl4health.client_managers.base_sampling_manager.rst", "reference/api/fl4health.client_managers.fixed_sampling_client_manager.rst", "reference/api/fl4health.client_managers.fixed_without_replacement_manager.rst", "reference/api/fl4health.client_managers.poisson_sampling_manager.rst", "reference/api/fl4health.clients.rst", "reference/api/fl4health.clients.adaptive_drift_constraint_client.rst", "reference/api/fl4health.clients.apfl_client.rst", "reference/api/fl4health.clients.basic_client.rst", "reference/api/fl4health.clients.clipping_client.rst", "reference/api/fl4health.clients.constrained_fenda_client.rst", "reference/api/fl4health.clients.deep_mmd_clients.rst", "reference/api/fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.rst", "reference/api/fl4health.clients.ditto_client.rst", "reference/api/fl4health.clients.ensemble_client.rst", "reference/api/fl4health.clients.evaluate_client.rst", "reference/api/fl4health.clients.fed_pca_client.rst", "reference/api/fl4health.clients.fed_prox_client.rst", "reference/api/fl4health.clients.fedbn_client.rst", "reference/api/fl4health.clients.fedper_client.rst", "reference/api/fl4health.clients.fedpm_client.rst", "reference/api/fl4health.clients.fedrep_client.rst", "reference/api/fl4health.clients.fenda_client.rst", "reference/api/fl4health.clients.fenda_ditto_client.rst", "reference/api/fl4health.clients.flash_client.rst", "reference/api/fl4health.clients.flexible.rst", "reference/api/fl4health.clients.flexible.base.rst", "reference/api/fl4health.clients.instance_level_dp_client.rst", "reference/api/fl4health.clients.mkmmd_clients.rst", "reference/api/fl4health.clients.mkmmd_clients.ditto_mkmmd_client.rst", "reference/api/fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.rst", "reference/api/fl4health.clients.model_merge_client.rst", "reference/api/fl4health.clients.moon_client.rst", "reference/api/fl4health.clients.mr_mtl_client.rst", "reference/api/fl4health.clients.nnunet_client.rst", "reference/api/fl4health.clients.partial_weight_exchange_client.rst", "reference/api/fl4health.clients.perfcl_client.rst", "reference/api/fl4health.clients.scaffold_client.rst", "reference/api/fl4health.clients.tabular_data_client.rst", "reference/api/fl4health.datasets.rst", "reference/api/fl4health.datasets.rxrx1.rst", "reference/api/fl4health.datasets.rxrx1.load_data.rst", "reference/api/fl4health.datasets.rxrx1.preprocess.rst", "reference/api/fl4health.datasets.skin_cancer.rst", "reference/api/fl4health.datasets.skin_cancer.load_data.rst", "reference/api/fl4health.datasets.skin_cancer.preprocess_skin.rst", "reference/api/fl4health.feature_alignment.rst", "reference/api/fl4health.feature_alignment.constants.rst", "reference/api/fl4health.feature_alignment.string_columns_transformer.rst", "reference/api/fl4health.feature_alignment.tab_features_info_encoder.rst", "reference/api/fl4health.feature_alignment.tab_features_preprocessor.rst", "reference/api/fl4health.feature_alignment.tabular_feature.rst", "reference/api/fl4health.feature_alignment.tabular_type.rst", "reference/api/fl4health.losses.rst", "reference/api/fl4health.losses.contrastive_loss.rst", "reference/api/fl4health.losses.cosine_similarity_loss.rst", "reference/api/fl4health.losses.deep_mmd_loss.rst", "reference/api/fl4health.losses.fenda_loss_config.rst", "reference/api/fl4health.losses.mkmmd_loss.rst", "reference/api/fl4health.losses.perfcl_loss.rst", "reference/api/fl4health.losses.weight_drift_loss.rst", "reference/api/fl4health.metrics.rst", "reference/api/fl4health.metrics.base_metrics.rst", "reference/api/fl4health.metrics.compound_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics.rst", "reference/api/fl4health.metrics.efficient_metrics_base.rst", "reference/api/fl4health.metrics.metric_aggregation.rst", "reference/api/fl4health.metrics.metric_managers.rst", "reference/api/fl4health.metrics.metrics.rst", "reference/api/fl4health.metrics.metrics_utils.rst", "reference/api/fl4health.metrics.utils.rst", "reference/api/fl4health.mixins.rst", "reference/api/fl4health.mixins.adaptive_drift_constrained.rst", "reference/api/fl4health.mixins.core_protocols.rst", "reference/api/fl4health.mixins.personalized.rst", "reference/api/fl4health.mixins.personalized.ditto.rst", "reference/api/fl4health.mixins.personalized.utils.rst", "reference/api/fl4health.model_bases.rst", "reference/api/fl4health.model_bases.apfl_base.rst", "reference/api/fl4health.model_bases.autoencoders_base.rst", "reference/api/fl4health.model_bases.ensemble_base.rst", "reference/api/fl4health.model_bases.feature_extractor_buffer.rst", "reference/api/fl4health.model_bases.fedrep_base.rst", "reference/api/fl4health.model_bases.fedsimclr_base.rst", "reference/api/fl4health.model_bases.fenda_base.rst", "reference/api/fl4health.model_bases.masked_layers.rst", "reference/api/fl4health.model_bases.masked_layers.masked_conv.rst", "reference/api/fl4health.model_bases.masked_layers.masked_layers_utils.rst", "reference/api/fl4health.model_bases.masked_layers.masked_linear.rst", "reference/api/fl4health.model_bases.masked_layers.masked_normalization_layers.rst", "reference/api/fl4health.model_bases.moon_base.rst", "reference/api/fl4health.model_bases.parallel_split_models.rst", "reference/api/fl4health.model_bases.partial_layer_exchange_model.rst", "reference/api/fl4health.model_bases.pca.rst", "reference/api/fl4health.model_bases.perfcl_base.rst", "reference/api/fl4health.model_bases.sequential_split_models.rst", "reference/api/fl4health.parameter_exchange.rst", "reference/api/fl4health.parameter_exchange.fedpm_exchanger.rst", "reference/api/fl4health.parameter_exchange.full_exchanger.rst", "reference/api/fl4health.parameter_exchange.layer_exchanger.rst", "reference/api/fl4health.parameter_exchange.packing_exchanger.rst", "reference/api/fl4health.parameter_exchange.parameter_exchanger_base.rst", "reference/api/fl4health.parameter_exchange.parameter_packer.rst", "reference/api/fl4health.parameter_exchange.parameter_selection_criteria.rst", "reference/api/fl4health.parameter_exchange.partial_parameter_exchanger.rst", "reference/api/fl4health.parameter_exchange.sparse_coo_parameter_exchanger.rst", "reference/api/fl4health.preprocessing.rst", "reference/api/fl4health.preprocessing.autoencoders.rst", "reference/api/fl4health.preprocessing.autoencoders.dim_reduction.rst", "reference/api/fl4health.preprocessing.autoencoders.loss.rst", "reference/api/fl4health.preprocessing.pca_preprocessor.rst", "reference/api/fl4health.preprocessing.warmed_up_module.rst", "reference/api/fl4health.privacy.rst", "reference/api/fl4health.privacy.fl_accountants.rst", "reference/api/fl4health.privacy.moments_accountant.rst", "reference/api/fl4health.reporting.rst", "reference/api/fl4health.reporting.base_reporter.rst", "reference/api/fl4health.reporting.json_reporter.rst", "reference/api/fl4health.reporting.reports_manager.rst", "reference/api/fl4health.reporting.wandb_reporter.rst", "reference/api/fl4health.servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.ditto_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.fedprox_server.rst", "reference/api/fl4health.servers.adaptive_constraint_servers.mrmtl_server.rst", "reference/api/fl4health.servers.base_server.rst", "reference/api/fl4health.servers.client_level_dp_fed_avg_server.rst", "reference/api/fl4health.servers.evaluate_server.rst", "reference/api/fl4health.servers.fedpm_server.rst", "reference/api/fl4health.servers.instance_level_dp_server.rst", "reference/api/fl4health.servers.model_merge_server.rst", "reference/api/fl4health.servers.nnunet_server.rst", "reference/api/fl4health.servers.polling.rst", "reference/api/fl4health.servers.scaffold_server.rst", "reference/api/fl4health.servers.tabular_feature_alignment_server.rst", "reference/api/fl4health.strategies.rst", "reference/api/fl4health.strategies.aggregate_utils.rst", "reference/api/fl4health.strategies.basic_fedavg.rst", "reference/api/fl4health.strategies.client_dp_fedavgm.rst", "reference/api/fl4health.strategies.fedavg_dynamic_layer.rst", "reference/api/fl4health.strategies.fedavg_sparse_coo_tensor.rst", "reference/api/fl4health.strategies.fedavg_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.feddg_ga.rst", "reference/api/fl4health.strategies.feddg_ga_with_adaptive_constraint.rst", "reference/api/fl4health.strategies.fedpca.rst", "reference/api/fl4health.strategies.fedpm.rst", "reference/api/fl4health.strategies.flash.rst", "reference/api/fl4health.strategies.model_merge_strategy.rst", "reference/api/fl4health.strategies.noisy_aggregate.rst", "reference/api/fl4health.strategies.scaffold.rst", "reference/api/fl4health.strategies.strategy_with_poll.rst", "reference/api/fl4health.utils.rst", "reference/api/fl4health.utils.client.rst", "reference/api/fl4health.utils.config.rst", "reference/api/fl4health.utils.data_generation.rst", "reference/api/fl4health.utils.dataset.rst", "reference/api/fl4health.utils.dataset_converter.rst", "reference/api/fl4health.utils.early_stopper.rst", "reference/api/fl4health.utils.functions.rst", "reference/api/fl4health.utils.load_data.rst", "reference/api/fl4health.utils.logging.rst", "reference/api/fl4health.utils.losses.rst", "reference/api/fl4health.utils.metric_aggregation.rst", "reference/api/fl4health.utils.metrics.rst", "reference/api/fl4health.utils.msd_dataset_sources.rst", "reference/api/fl4health.utils.nnunet_utils.rst", "reference/api/fl4health.utils.parameter_extraction.rst", "reference/api/fl4health.utils.partitioners.rst", "reference/api/fl4health.utils.peft_parameter_extraction.rst", "reference/api/fl4health.utils.privacy_utilities.rst", "reference/api/fl4health.utils.random.rst", "reference/api/fl4health.utils.sampler.rst", "reference/api/fl4health.utils.snapshotter.rst", "reference/api/fl4health.utils.typing.rst"], "indexentries": {"__init__() (abstractae method)": [[94, "fl4health.model_bases.autoencoders_base.AbstractAe.__init__", false]], "__init__() (accuracy method)": [[76, "fl4health.metrics.Accuracy.__init__", false], [83, "fl4health.metrics.metrics.Accuracy.__init__", false]], "__init__() (adaptiveconstraintservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule.__init__", false]], "__init__() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.__init__", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.__init__", false]], "__init__() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.__init__", false]], "__init__() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.__init__", false]], "__init__() (apflmodule method)": [[93, "fl4health.model_bases.apfl_base.ApflModule.__init__", false]], "__init__() (autoencoderdatasetconverter method)": [[171, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.__init__", false]], "__init__() (autoencoderprocessing method)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.__init__", false]], "__init__() (balancedaccuracy method)": [[76, "fl4health.metrics.BalancedAccuracy.__init__", false], [83, "fl4health.metrics.metrics.BalancedAccuracy.__init__", false]], "__init__() (basedataset method)": [[170, "fl4health.utils.dataset.BaseDataset.__init__", false]], "__init__() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.__init__", false]], "__init__() (basicae method)": [[94, "fl4health.model_bases.autoencoders_base.BasicAe.__init__", false]], "__init__() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.__init__", false]], "__init__() (basicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg.__init__", false]], "__init__() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.__init__", false]], "__init__() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.__init__", false]], "__init__() (bestmetrictorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer.__init__", false]], "__init__() (binaryclassificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.__init__", false]], "__init__() (binarydice method)": [[79, "fl4health.metrics.efficient_metrics.BinaryDice.__init__", false]], "__init__() (binarysoftdicecoefficient method)": [[76, "fl4health.metrics.BinarySoftDiceCoefficient.__init__", false], [83, "fl4health.metrics.metrics.BinarySoftDiceCoefficient.__init__", false]], "__init__() (classificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.__init__", false]], "__init__() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.__init__", false]], "__init__() (clientlevelaccountant method)": [[128, "fl4health.privacy.fl_accountants.ClientLevelAccountant.__init__", false]], "__init__() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.__init__", false]], "__init__() (clientleveldpfedavgserver method)": [[141, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.__init__", false]], "__init__() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.__init__", false]], "__init__() (clippingbitservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule.__init__", false]], "__init__() (conditionalvae method)": [[94, "fl4health.model_bases.autoencoders_base.ConditionalVae.__init__", false]], "__init__() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.__init__", false]], "__init__() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.__init__", false]], "__init__() (cosinesimilarityloss method)": [[70, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.__init__", false]], "__init__() (cosinesimilaritylosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer.__init__", false]], "__init__() (cvaefixedconditionprocessor method)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor.__init__", false]], "__init__() (cvaevariableconditionprocessor method)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor.__init__", false]], "__init__() (datasetconverter method)": [[171, "fl4health.utils.dataset_converter.DatasetConverter.__init__", false]], "__init__() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.__init__", false]], "__init__() (dictionarydataset method)": [[170, "fl4health.utils.dataset.DictionaryDataset.__init__", false]], "__init__() (dirichletlabelbasedallocation method)": [[182, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.__init__", false]], "__init__() (dirichletlabelbasedsampler method)": [[186, "fl4health.utils.sampler.DirichletLabelBasedSampler.__init__", false]], "__init__() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.__init__", false]], "__init__() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.__init__", false]], "__init__() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.__init__", false]], "__init__() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.__init__", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.__init__", false]], "__init__() (dittoserver method)": [[137, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer.__init__", false]], "__init__() (dpscaffoldclient method)": [[52, "fl4health.clients.scaffold_client.DPScaffoldClient.__init__", false]], "__init__() (dpscaffoldserver method)": [[148, "fl4health.servers.scaffold_server.DPScaffoldServer.__init__", false]], "__init__() (dpscaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (dynamiclayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.__init__", false]], "__init__() (earlystopper method)": [[172, "fl4health.utils.early_stopper.EarlyStopper.__init__", false]], "__init__() (emametric method)": [[78, "fl4health.metrics.compound_metrics.EmaMetric.__init__", false]], "__init__() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.__init__", false]], "__init__() (ensemblemodel method)": [[95, "fl4health.model_bases.ensemble_base.EnsembleModel.__init__", false]], "__init__() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.__init__", false]], "__init__() (evaluateserver method)": [[142, "fl4health.servers.evaluate_server.EvaluateServer.__init__", false]], "__init__() (evaluationlosses method)": [[176, "fl4health.utils.losses.EvaluationLosses.__init__", false]], "__init__() (f1 method)": [[76, "fl4health.metrics.F1.__init__", false], [83, "fl4health.metrics.metrics.F1.__init__", false]], "__init__() (fairnessmetric method)": [[157, "fl4health.strategies.feddg_ga.FairnessMetric.__init__", false]], "__init__() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.__init__", false]], "__init__() (fedavgdynamiclayer method)": [[154, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.__init__", false]], "__init__() (fedavgsparsecootensor method)": [[155, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.__init__", false]], "__init__() (fedavgwithadaptiveconstraint method)": [[156, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.__init__", false]], "__init__() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.__init__", false]], "__init__() (feddggaadaptiveconstraint method)": [[158, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.__init__", false]], "__init__() (fedpca method)": [[159, "fl4health.strategies.fedpca.FedPCA.__init__", false]], "__init__() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.__init__", false]], "__init__() (fedpm method)": [[160, "fl4health.strategies.fedpm.FedPm.__init__", false]], "__init__() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.__init__", false]], "__init__() (fedpmexchanger method)": [[112, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.__init__", false]], "__init__() (fedpmserver method)": [[143, "fl4health.servers.fedpm_server.FedPmServer.__init__", false]], "__init__() (fedproxserver method)": [[138, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer.__init__", false]], "__init__() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.__init__", false]], "__init__() (fedsimclrmodel method)": [[98, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.__init__", false]], "__init__() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.__init__", false]], "__init__() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.__init__", false]], "__init__() (fendamodel method)": [[99, "fl4health.model_bases.fenda_base.FendaModel.__init__", false]], "__init__() (fendamodelwithfeaturestate method)": [[99, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.__init__", false]], "__init__() (filereporter method)": [[132, "fl4health.reporting.json_reporter.FileReporter.__init__", false]], "__init__() (fixedlayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.__init__", false]], "__init__() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.__init__", false]], "__init__() (fixedsamplingwithoutreplacement method)": [[129, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.__init__", false]], "__init__() (flash method)": [[161, "fl4health.strategies.flash.Flash.__init__", false]], "__init__() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.__init__", false]], "__init__() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.__init__", false]], "__init__() (flclientlevelaccountantpoissonsampling method)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.__init__", false]], "__init__() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.__init__", false]], "__init__() (flinstancelevelaccountant method)": [[128, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.__init__", false]], "__init__() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.__init__", false]], "__init__() (fullparameterexchangerwithpacking method)": [[115, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.__init__", false]], "__init__() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.__init__", false]], "__init__() (instanceleveldpclient method)": [[42, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.__init__", false]], "__init__() (instanceleveldpserver method)": [[144, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.__init__", false]], "__init__() (labelbasedsampler method)": [[186, "fl4health.utils.sampler.LabelBasedSampler.__init__", false]], "__init__() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.__init__", false]], "__init__() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.__init__", false]], "__init__() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.__init__", false]], "__init__() (layernamesservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule.__init__", false]], "__init__() (layerselectionfunctionconstructor method)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.__init__", false]], "__init__() (losses method)": [[176, "fl4health.utils.losses.Losses.__init__", false]], "__init__() (lossmeter method)": [[176, "fl4health.utils.losses.LossMeter.__init__", false]], "__init__() (maskedconv1d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.__init__", false]], "__init__() (maskedconv2d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.__init__", false]], "__init__() (maskedconv3d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.__init__", false]], "__init__() (maskedconvtranspose1d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.__init__", false]], "__init__() (maskedconvtranspose2d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.__init__", false]], "__init__() (maskedconvtranspose3d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.__init__", false]], "__init__() (maskedlayernorm method)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.__init__", false]], "__init__() (maskedlinear method)": [[103, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.__init__", false]], "__init__() (metric method)": [[77, "fl4health.metrics.base_metrics.Metric.__init__", false]], "__init__() (metricmanager method)": [[82, "fl4health.metrics.metric_managers.MetricManager.__init__", false]], "__init__() (minoritylabelbasedsampler method)": [[186, "fl4health.utils.sampler.MinorityLabelBasedSampler.__init__", false]], "__init__() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.__init__", false]], "__init__() (modellatentf method)": [[71, "fl4health.losses.deep_mmd_loss.ModelLatentF.__init__", false]], "__init__() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.__init__", false]], "__init__() (modelmergeserver method)": [[145, "fl4health.servers.model_merge_server.ModelMergeServer.__init__", false]], "__init__() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.__init__", false]], "__init__() (module2losswrapper method)": [[180, "fl4health.utils.nnunet_utils.Module2LossWrapper.__init__", false]], "__init__() (momentsaccountant method)": [[129, "fl4health.privacy.moments_accountant.MomentsAccountant.__init__", false]], "__init__() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.__init__", false]], "__init__() (mooncontrastiveloss method)": [[69, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.__init__", false]], "__init__() (mooncontrastivelosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer.__init__", false]], "__init__() (moonmodel method)": [[105, "fl4health.model_bases.moon_base.MoonModel.__init__", false]], "__init__() (mrmtlclient method)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient.__init__", false]], "__init__() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.__init__", false]], "__init__() (mrmtlserver method)": [[139, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer.__init__", false]], "__init__() (multiclassdice method)": [[79, "fl4health.metrics.efficient_metrics.MultiClassDice.__init__", false]], "__init__() (multiclassificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.__init__", false]], "__init__() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.__init__", false]], "__init__() (nnunetdataloaderwrapper method)": [[180, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.__init__", false]], "__init__() (nnunetserver method)": [[146, "fl4health.servers.nnunet_server.NnunetServer.__init__", false]], "__init__() (nnunetservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule.__init__", false]], "__init__() (nnunetserverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer.__init__", false]], "__init__() (ntxentloss method)": [[69, "fl4health.losses.contrastive_loss.NtXentLoss.__init__", false]], "__init__() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.__init__", false]], "__init__() (opacusbasicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg.__init__", false]], "__init__() (opacusscaffold method)": [[164, "fl4health.strategies.scaffold.OpacusScaffold.__init__", false]], "__init__() (opacusservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule.__init__", false]], "__init__() (packingservercheckpointandandstatemodule method)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule.__init__", false]], "__init__() (parallelsplitheadmodule method)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.__init__", false]], "__init__() (parallelsplitmodel method)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.__init__", false]], "__init__() (parameterpackerwithcontrolvariates method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.__init__", false]], "__init__() (partialparameterexchanger method)": [[119, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.__init__", false]], "__init__() (partialweightexchangeclient method)": [[50, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.__init__", false]], "__init__() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.__init__", false]], "__init__() (pcapreprocessor method)": [[125, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.__init__", false]], "__init__() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.__init__", false]], "__init__() (perfclloss method)": [[74, "fl4health.losses.perfcl_loss.PerFclLoss.__init__", false]], "__init__() (perfcllosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.PerFclLossContainer.__init__", false]], "__init__() (perfclmodel method)": [[109, "fl4health.model_bases.perfcl_base.PerFclModel.__init__", false]], "__init__() (poissonsampling method)": [[129, "fl4health.privacy.moments_accountant.PoissonSampling.__init__", false]], "__init__() (polylrschedulerwrapper method)": [[180, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.__init__", false]], "__init__() (reportsmanager method)": [[133, "fl4health.reporting.reports_manager.ReportsManager.__init__", false]], "__init__() (rocauc method)": [[76, "fl4health.metrics.RocAuc.__init__", false], [83, "fl4health.metrics.metrics.RocAuc.__init__", false]], "__init__() (samplingstrategy method)": [[129, "fl4health.privacy.moments_accountant.SamplingStrategy.__init__", false]], "__init__() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.__init__", false]], "__init__() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.__init__", false]], "__init__() (scaffoldserver method)": [[148, "fl4health.servers.scaffold_server.ScaffoldServer.__init__", false]], "__init__() (scaffoldservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule.__init__", false]], "__init__() (sequentiallysplitmodel method)": [[110, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.__init__", false]], "__init__() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.__init__", false]], "__init__() (simplemetric method)": [[76, "fl4health.metrics.SimpleMetric.__init__", false], [83, "fl4health.metrics.metrics.SimpleMetric.__init__", false]], "__init__() (sparsecooparameterexchanger method)": [[120, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.__init__", false]], "__init__() (sparsecooservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule.__init__", false]], "__init__() (ssltensordataset method)": [[170, "fl4health.utils.dataset.SslTensorDataset.__init__", false]], "__init__() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.__init__", false]], "__init__() (streamtologger method)": [[180, "fl4health.utils.nnunet_utils.StreamToLogger.__init__", false]], "__init__() (syntheticdataset method)": [[170, "fl4health.utils.dataset.SyntheticDataset.__init__", false]], "__init__() (syntheticfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset.__init__", false]], "__init__() (syntheticiidfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.__init__", false]], "__init__() (syntheticnoniidfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.__init__", false]], "__init__() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.__init__", false]], "__init__() (tensordataset method)": [[170, "fl4health.utils.dataset.TensorDataset.__init__", false]], "__init__() (textcolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.__init__", false]], "__init__() (textmulticolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.__init__", false]], "__init__() (torchmetric method)": [[76, "fl4health.metrics.TorchMetric.__init__", false], [83, "fl4health.metrics.metrics.TorchMetric.__init__", false]], "__init__() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.__init__", false]], "__init__() (traininglosses method)": [[176, "fl4health.utils.losses.TrainingLosses.__init__", false]], "__init__() (transformsmetric method)": [[78, "fl4health.metrics.compound_metrics.TransformsMetric.__init__", false]], "__init__() (vaeloss method)": [[124, "fl4health.preprocessing.autoencoders.loss.VaeLoss.__init__", false]], "__init__() (vaeprocessor method)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor.__init__", false]], "__init__() (variationalae method)": [[94, "fl4health.model_bases.autoencoders_base.VariationalAe.__init__", false]], "__init__() (wandbreporter method)": [[130, "fl4health.reporting.WandBReporter.__init__", false], [134, "fl4health.reporting.wandb_reporter.WandBReporter.__init__", false]], "__init__() (warmedupmodule method)": [[126, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.__init__", false]], "__init__() (weightdriftloss method)": [[75, "fl4health.losses.weight_drift_loss.WeightDriftLoss.__init__", false]], "abstractae (class in fl4health.model_bases.autoencoders_base)": [[94, "fl4health.model_bases.autoencoders_base.AbstractAe", false]], "abstractsnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.AbstractSnapshotter", false]], "accumulation (lossmetertype attribute)": [[176, "fl4health.utils.losses.LossMeterType.ACCUMULATION", false]], "accuracy (class in fl4health.metrics)": [[76, "fl4health.metrics.Accuracy", false]], "accuracy (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.Accuracy", false]], "accuracy (fairnessmetrictype attribute)": [[157, "fl4health.strategies.feddg_ga.FairnessMetricType.ACCURACY", false]], "adaptiveconstraintservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedmixin (class in fl4health.mixins.adaptive_drift_constrained)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin", false]], "adaptivedriftconstrainedprotocol (class in fl4health.mixins.adaptive_drift_constrained)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol", false]], "adaptivedriftconstraintclient (class in fl4health.clients.adaptive_drift_constraint_client)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient", false]], "add_items_to_config_fn() (in module fl4health.servers.nnunet_server)": [[146, "fl4health.servers.nnunet_server.add_items_to_config_fn", false]], "add_noise_to_array() (in module fl4health.strategies.noisy_aggregate)": [[163, "fl4health.strategies.noisy_aggregate.add_noise_to_array", false]], "add_noise_to_ndarrays() (in module fl4health.strategies.noisy_aggregate)": [[163, "fl4health.strategies.noisy_aggregate.add_noise_to_ndarrays", false]], "add_to_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.add_to_snapshot_attr", false]], "aeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.AeProcessor", false]], "aggregate() (evaluationlosses static method)": [[176, "fl4health.utils.losses.EvaluationLosses.aggregate", false]], "aggregate() (fedavgdynamiclayer method)": [[154, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate", false]], "aggregate() (fedavgsparsecootensor method)": [[155, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate", false]], "aggregate() (fedpm method)": [[160, "fl4health.strategies.fedpm.FedPm.aggregate", false]], "aggregate() (losses static method)": [[176, "fl4health.utils.losses.Losses.aggregate", false]], "aggregate() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.aggregate", false]], "aggregate() (traininglosses static method)": [[176, "fl4health.utils.losses.TrainingLosses.aggregate", false]], "aggregate_bayesian() (fedpm method)": [[160, "fl4health.strategies.fedpm.FedPm.aggregate_bayesian", false]], "aggregate_evaluate() (basicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_evaluate", false]], "aggregate_evaluate() (evaluateserver method)": [[142, "fl4health.servers.evaluate_server.EvaluateServer.aggregate_evaluate", false]], "aggregate_evaluate() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_evaluate", false]], "aggregate_evaluate() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_evaluate", false]], "aggregate_fit() (basicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg.aggregate_fit", false]], "aggregate_fit() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.aggregate_fit", false]], "aggregate_fit() (fedavgdynamiclayer method)": [[154, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.aggregate_fit", false]], "aggregate_fit() (fedavgsparsecootensor method)": [[155, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.aggregate_fit", false]], "aggregate_fit() (fedavgwithadaptiveconstraint method)": [[156, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.aggregate_fit", false]], "aggregate_fit() (feddggaadaptiveconstraint method)": [[158, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint.aggregate_fit", false]], "aggregate_fit() (fedpca method)": [[159, "fl4health.strategies.fedpca.FedPCA.aggregate_fit", false]], "aggregate_fit() (flash method)": [[161, "fl4health.strategies.flash.Flash.aggregate_fit", false]], "aggregate_fit() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.aggregate_fit", false]], "aggregate_fit() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.aggregate_fit", false]], "aggregate_losses() (in module fl4health.strategies.aggregate_utils)": [[151, "fl4health.strategies.aggregate_utils.aggregate_losses", false]], "aggregate_losses_dict() (lossmeter static method)": [[176, "fl4health.utils.losses.LossMeter.aggregate_losses_dict", false]], "aggregate_results() (in module fl4health.strategies.aggregate_utils)": [[151, "fl4health.strategies.aggregate_utils.aggregate_results", false]], "align_pred_and_target_shapes() (in module fl4health.metrics.utils)": [[85, "fl4health.metrics.utils.align_pred_and_target_shapes", false]], "apflclient (class in fl4health.clients.apfl_client)": [[22, "fl4health.clients.apfl_client.ApflClient", false]], "apflmodule (class in fl4health.model_bases.apfl_base)": [[93, "fl4health.model_bases.apfl_base.ApflModule", false]], "apply_adaptive_drift_to_client() (in module fl4health.mixins.adaptive_drift_constrained)": [[87, "fl4health.mixins.adaptive_drift_constrained.apply_adaptive_drift_to_client", false]], "apply_layer_filter() (fixedlayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.apply_layer_filter", false]], "apply_layer_filter() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.apply_layer_filter", false]], "as_dict() (evaluationlosses method)": [[176, "fl4health.utils.losses.EvaluationLosses.as_dict", false]], "as_dict() (losses method)": [[176, "fl4health.utils.losses.Losses.as_dict", false]], "as_dict() (traininglosses method)": [[176, "fl4health.utils.losses.TrainingLosses.as_dict", false]], "autoencoderdatasetconverter (class in fl4health.utils.dataset_converter)": [[171, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter", false]], "autoencoderprocessing (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing", false]], "average (ensembleaggregationmode attribute)": [[95, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.AVERAGE", false]], "average (lossmetertype attribute)": [[176, "fl4health.utils.losses.LossMeterType.AVERAGE", false]], "backward() (bernoullisample static method)": [[173, "fl4health.utils.functions.BernoulliSample.backward", false]], "balancedaccuracy (class in fl4health.metrics)": [[76, "fl4health.metrics.BalancedAccuracy", false]], "balancedaccuracy (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.BalancedAccuracy", false]], "basedataset (class in fl4health.utils.dataset)": [[170, "fl4health.utils.dataset.BaseDataset", false]], "basefractionsamplingmanager (class in fl4health.client_managers.base_sampling_manager)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager", false]], "basereporter (class in fl4health.reporting.base_reporter)": [[131, "fl4health.reporting.base_reporter.BaseReporter", false]], "baseservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule", false]], "basicae (class in fl4health.model_bases.autoencoders_base)": [[94, "fl4health.model_bases.autoencoders_base.BasicAe", false]], "basicclient (class in fl4health.clients.basic_client)": [[23, "fl4health.clients.basic_client.BasicClient", false]], "basicfedavg (class in fl4health.strategies.basic_fedavg)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg", false]], "bernoullisample (class in fl4health.utils.functions)": [[173, "fl4health.utils.functions.BernoulliSample", false]], "bestlossopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer", false]], "bestlosstorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer", false]], "bestmetrictorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer", false]], "beta_with_extreme_kernel_base_values() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.beta_with_extreme_kernel_base_values", false]], "binary (tabulartype attribute)": [[67, "fl4health.feature_alignment.tabular_type.TabularType.BINARY", false]], "binaryclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[80, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric", false]], "binarydice (class in fl4health.metrics.efficient_metrics)": [[79, "fl4health.metrics.efficient_metrics.BinaryDice", false]], "binarysoftdicecoefficient (class in fl4health.metrics)": [[76, "fl4health.metrics.BinarySoftDiceCoefficient", false]], "binarysoftdicecoefficient (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.BinarySoftDiceCoefficient", false]], "bytessnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.BytesSnapshotter", false]], "calculate_parameters_norm() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.calculate_parameters_norm", false]], "calculate_update_with_momentum() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.calculate_update_with_momentum", false]], "center_data() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.center_data", false]], "check_config() (in module fl4health.utils.config)": [[168, "fl4health.utils.config.check_config", false]], "check_if_batch_is_empty_and_verify_input() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.check_if_batch_is_empty_and_verify_input", false]], "check_shape_match() (in module fl4health.utils.parameter_extraction)": [[181, "fl4health.utils.parameter_extraction.check_shape_match", false]], "check_target_prediction_keys_equal() (metricmanager method)": [[82, "fl4health.metrics.metric_managers.MetricManager.check_target_prediction_keys_equal", false]], "checkpoint_exists() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.checkpoint_exists", false]], "checkpointmode (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.CheckpointMode", false]], "classificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric", false]], "clear() (classificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.clear", false]], "clear() (emametric method)": [[78, "fl4health.metrics.compound_metrics.EmaMetric.clear", false]], "clear() (lossmeter method)": [[176, "fl4health.utils.losses.LossMeter.clear", false]], "clear() (metric method)": [[77, "fl4health.metrics.base_metrics.Metric.clear", false]], "clear() (metricmanager method)": [[82, "fl4health.metrics.metric_managers.MetricManager.clear", false]], "clear() (simplemetric method)": [[76, "fl4health.metrics.SimpleMetric.clear", false], [83, "fl4health.metrics.metrics.SimpleMetric.clear", false]], "clear() (torchmetric method)": [[76, "fl4health.metrics.TorchMetric.clear", false], [83, "fl4health.metrics.metrics.TorchMetric.clear", false]], "clear() (transformsmetric method)": [[78, "fl4health.metrics.compound_metrics.TransformsMetric.clear", false]], "clear_buffers() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.clear_buffers", false]], "clientcheckpointandstatemodule (class in fl4health.checkpointing.client_module)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule", false]], "clientlevelaccountant (class in fl4health.privacy.fl_accountants)": [[128, "fl4health.privacy.fl_accountants.ClientLevelAccountant", false]], "clientleveldpfedavgm (class in fl4health.strategies.client_dp_fedavgm)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM", false]], "clientleveldpfedavgserver (class in fl4health.servers.client_level_dp_fed_avg_server)": [[141, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer", false]], "clientstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer", false]], "clip_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.clip_parameters", false]], "clippingbitservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule", false]], "clone_and_freeze_model() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.clone_and_freeze_model", false]], "collapse_one_hot_tensor() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.collapse_one_hot_tensor", false]], "compute() (classificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute", false]], "compute() (emametric method)": [[78, "fl4health.metrics.compound_metrics.EmaMetric.compute", false]], "compute() (lossmeter method)": [[176, "fl4health.utils.losses.LossMeter.compute", false]], "compute() (metric method)": [[77, "fl4health.metrics.base_metrics.Metric.compute", false]], "compute() (metricmanager method)": [[82, "fl4health.metrics.metric_managers.MetricManager.compute", false]], "compute() (simplemetric method)": [[76, "fl4health.metrics.SimpleMetric.compute", false], [83, "fl4health.metrics.metrics.SimpleMetric.compute", false]], "compute() (torchmetric method)": [[76, "fl4health.metrics.TorchMetric.compute", false], [83, "fl4health.metrics.metrics.TorchMetric.compute", false]], "compute() (transformsmetric method)": [[78, "fl4health.metrics.compound_metrics.TransformsMetric.compute", false]], "compute_all_h_u_all_samples() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_all_samples", false]], "compute_all_h_u_from_inner_products() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products", false]], "compute_all_h_u_from_inner_products_linear() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_from_inner_products_linear", false]], "compute_all_h_u_linear() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_all_h_u_linear", false]], "compute_contrastive_loss() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_contrastive_loss", false]], "compute_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_cosine_similarity_loss", false]], "compute_cumulative_explained_variance() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.compute_cumulative_explained_variance", false]], "compute_dice_on_count_tensors() (in module fl4health.metrics.metrics_utils)": [[84, "fl4health.metrics.metrics_utils.compute_dice_on_count_tensors", false]], "compute_euclidean_inner_products() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products", false]], "compute_euclidean_inner_products_linear() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_euclidean_inner_products_linear", false]], "compute_evaluation_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.compute_evaluation_loss", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.compute_evaluation_loss", false]], "compute_evaluation_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_evaluation_loss", false]], "compute_evaluation_loss() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.compute_evaluation_loss", false]], "compute_evaluation_loss() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.compute_evaluation_loss", false]], "compute_explained_variance_ratios() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.compute_explained_variance_ratios", false]], "compute_from_counts() (binaryclassificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.compute_from_counts", false]], "compute_from_counts() (binarydice method)": [[79, "fl4health.metrics.efficient_metrics.BinaryDice.compute_from_counts", false]], "compute_from_counts() (classificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.compute_from_counts", false]], "compute_from_counts() (multiclassdice method)": [[79, "fl4health.metrics.efficient_metrics.MultiClassDice.compute_from_counts", false]], "compute_from_counts() (multiclassificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.compute_from_counts", false]], "compute_h_u_from_inner_products() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products", false]], "compute_h_u_from_inner_products_linear() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_h_u_from_inner_products_linear", false]], "compute_hat_d_per_kernel() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_d_per_kernel", false]], "compute_hat_q_k() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k", false]], "compute_hat_q_k_linear() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_hat_q_k_linear", false]], "compute_kernel() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.compute_kernel", false]], "compute_loss_and_additional_losses() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (flexibleclientprotocolpresetup method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.compute_loss_and_additional_losses", false]], "compute_loss_and_additional_losses() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.compute_loss_and_additional_losses", false]], "compute_mkmmd() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_mkmmd", false]], "compute_negative_similarities() (mooncontrastiveloss method)": [[69, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.compute_negative_similarities", false]], "compute_parameter_delta() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.compute_parameter_delta", false]], "compute_parameters_delta() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.compute_parameters_delta", false]], "compute_penalty_loss() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstrainedprotocol method)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.compute_penalty_loss", false]], "compute_penalty_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_penalty_loss", false]], "compute_perfcl_loss() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.compute_perfcl_loss", false]], "compute_projection_variance() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.compute_projection_variance", false]], "compute_reconstruction_error() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.compute_reconstruction_error", false]], "compute_training_loss() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.compute_training_loss", false]], "compute_training_loss() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.compute_training_loss", false]], "compute_training_loss() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.compute_training_loss", false]], "compute_training_loss() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.compute_training_loss", false]], "compute_training_loss() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.compute_training_loss", false]], "compute_training_loss() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.compute_training_loss", false]], "compute_training_loss() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.compute_training_loss", false]], "compute_training_loss() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.compute_training_loss", false]], "compute_training_loss() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.compute_training_loss", false]], "compute_training_loss() (mrmtlclient method)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient.compute_training_loss", false]], "compute_training_loss() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.compute_training_loss", false]], "compute_updated_control_variates() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.compute_updated_control_variates", false]], "compute_updated_control_variates() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.compute_updated_control_variates", false]], "compute_updated_parameters() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.compute_updated_parameters", false]], "compute_updated_weights() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.compute_updated_weights", false]], "compute_vertices() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.compute_vertices", false]], "compute_weight_update_and_clip() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.compute_weight_update_and_clip", false]], "concatenate (parallelfeaturejoinmode attribute)": [[106, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.CONCATENATE", false]], "conditionalvae (class in fl4health.model_bases.autoencoders_base)": [[94, "fl4health.model_bases.autoencoders_base.ConditionalVae", false]], "configure_evaluate() (basicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_evaluate", false]], "configure_evaluate() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_evaluate", false]], "configure_evaluate() (evaluateserver method)": [[142, "fl4health.servers.evaluate_server.EvaluateServer.configure_evaluate", false]], "configure_evaluate() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.configure_evaluate", false]], "configure_evaluate() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_evaluate", false]], "configure_fit() (basicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_fit", false]], "configure_fit() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.configure_fit", false]], "configure_fit() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.configure_fit", false]], "configure_fit() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.configure_fit", false]], "configure_fit_all() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.configure_fit_all", false]], "configure_poll() (basicfedavg method)": [[152, "fl4health.strategies.basic_fedavg.BasicFedAvg.configure_poll", false]], "configure_poll() (strategywithpolling method)": [[165, "fl4health.strategies.strategy_with_poll.StrategyWithPolling.configure_poll", false]], "constrainedfendaclient (class in fl4health.clients.constrained_fenda_client)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient", false]], "constrainedfendalosscontainer (class in fl4health.losses.fenda_loss_config)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer", false]], "construct_covariance_matrix() (syntheticfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset.construct_covariance_matrix", false]], "construct_quadruples() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.construct_quadruples", false]], "construct_rxrx1_tensor_dataset() (in module fl4health.datasets.rxrx1.load_data)": [[56, "fl4health.datasets.rxrx1.load_data.construct_rxrx1_tensor_dataset", false]], "construct_skin_cancer_tensor_dataset() (in module fl4health.datasets.skin_cancer.load_data)": [[59, "fl4health.datasets.skin_cancer.load_data.construct_skin_cancer_tensor_dataset", false]], "convert_dataset() (autoencoderdatasetconverter method)": [[171, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.convert_dataset", false]], "convert_dataset() (datasetconverter method)": [[171, "fl4health.utils.dataset_converter.DatasetConverter.convert_dataset", false]], "convert_deep_supervision_dict_to_list() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.convert_deep_supervision_dict_to_list", false]], "convert_deep_supervision_list_to_dict() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.convert_deep_supervision_list_to_dict", false]], "convert_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[184, "fl4health.utils.privacy_utilities.convert_model_to_opacus_model", false]], "convert_to_masked_model() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[102, "fl4health.model_bases.masked_layers.masked_layers_utils.convert_to_masked_model", false]], "cosinesimilarityloss (class in fl4health.losses.cosine_similarity_loss)": [[70, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss", false]], "cosinesimilaritylosscontainer (class in fl4health.losses.fenda_loss_config)": [[72, "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer", false]], "count_tp_fp_tn_fn() (binaryclassificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric.count_tp_fp_tn_fn", false]], "count_tp_fp_tn_fn() (classificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.count_tp_fp_tn_fn", false]], "count_tp_fp_tn_fn() (multiclassificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric.count_tp_fp_tn_fn", false]], "create_plans() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.create_plans", false]], "create_splits() (in module fl4health.datasets.rxrx1.load_data)": [[56, "fl4health.datasets.rxrx1.load_data.create_splits", false]], "criterion (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.criterion", false]], "criterion (flexibleclientprotocol attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.criterion", false]], "critical (loglevel attribute)": [[188, "fl4health.utils.typing.LogLevel.CRITICAL", false]], "custom (fairnessmetrictype attribute)": [[157, "fl4health.strategies.feddg_ga.FairnessMetricType.CUSTOM", false]], "cvaefixedconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor", false]], "cvaevariableconditionprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor", false]], "datasetconverter (class in fl4health.utils.dataset_converter)": [[171, "fl4health.utils.dataset_converter.DatasetConverter", false]], "debug (loglevel attribute)": [[188, "fl4health.utils.typing.LogLevel.DEBUG", false]], "decode() (basicae method)": [[94, "fl4health.model_bases.autoencoders_base.BasicAe.decode", false]], "decode() (conditionalvae method)": [[94, "fl4health.model_bases.autoencoders_base.ConditionalVae.decode", false]], "decode() (variationalae method)": [[94, "fl4health.model_bases.autoencoders_base.VariationalAe.decode", false]], "decode_and_pseudo_sort_results() (in module fl4health.utils.functions)": [[173, "fl4health.utils.functions.decode_and_pseudo_sort_results", false]], "deepmmdloss (class in fl4health.losses.deep_mmd_loss)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss", false]], "define_metrics() (wandbreporter method)": [[130, "fl4health.reporting.WandBReporter.define_metrics", false], [134, "fl4health.reporting.wandb_reporter.WandBReporter.define_metrics", false]], "delete_from_snapshot_attr() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.delete_from_snapshot_attr", false]], "derm7pt_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_image_path_func", false]], "derm7pt_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.derm7pt_label_map_func", false]], "device (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.device", false]], "device (flexibleclientprotocolpresetup attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.device", false]], "dictionarydataset (class in fl4health.utils.dataset)": [[170, "fl4health.utils.dataset.DictionaryDataset", false]], "dirichletlabelbasedallocation (class in fl4health.utils.partitioners)": [[182, "fl4health.utils.partitioners.DirichletLabelBasedAllocation", false]], "dirichletlabelbasedsampler (class in fl4health.utils.sampler)": [[186, "fl4health.utils.sampler.DirichletLabelBasedSampler", false]], "disable_accumulating_features() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.disable_accumulating_features", false]], "ditto (personalizedmode attribute)": [[89, "fl4health.mixins.personalized.PersonalizedMode.DITTO", false]], "dittoclient (class in fl4health.clients.ditto_client)": [[28, "fl4health.clients.ditto_client.DittoClient", false]], "dittodeepmmdclient (class in fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient", false]], "dittomkmmdclient (class in fl4health.clients.mkmmd_clients.ditto_mkmmd_client)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin", false]], "dittopersonalizedmixin (class in fl4health.mixins.personalized.ditto)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized)": [[89, "fl4health.mixins.personalized.DittoPersonalizedProtocol", false]], "dittopersonalizedprotocol (class in fl4health.mixins.personalized.ditto)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol", false]], "dittoserver (class in fl4health.servers.adaptive_constraint_servers.ditto_server)": [[137, "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer", false]], "dpscaffoldclient (class in fl4health.clients.scaffold_client)": [[52, "fl4health.clients.scaffold_client.DPScaffoldClient", false]], "dpscaffoldserver (class in fl4health.servers.scaffold_server)": [[148, "fl4health.servers.scaffold_server.DPScaffoldServer", false]], "dpscaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule", false]], "drift_penalty_tensors (adaptivedriftconstrainedprotocol attribute)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_tensors", false]], "drift_penalty_tensors (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_tensors", false]], "drift_penalty_weight (adaptivedriftconstrainedprotocol attribute)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.drift_penalty_weight", false]], "drift_penalty_weight (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.drift_penalty_weight", false]], "dump() (filereporter method)": [[132, "fl4health.reporting.json_reporter.FileReporter.dump", false]], "dump() (jsonreporter method)": [[130, "fl4health.reporting.JsonReporter.dump", false], [132, "fl4health.reporting.json_reporter.JsonReporter.dump", false]], "dynamiclayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[114, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger", false]], "early_stop_validation (loggingmode attribute)": [[175, "fl4health.utils.logging.LoggingMode.EARLY_STOP_VALIDATION", false]], "earlystopper (class in fl4health.utils.early_stopper)": [[172, "fl4health.utils.early_stopper.EarlyStopper", false]], "emametric (class in fl4health.metrics.compound_metrics)": [[78, "fl4health.metrics.compound_metrics.EmaMetric", false]], "empty_cache() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.empty_cache", false]], "enable_accumulating_features() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.enable_accumulating_features", false]], "encode() (basicae method)": [[94, "fl4health.model_bases.autoencoders_base.BasicAe.encode", false]], "encode() (conditionalvae method)": [[94, "fl4health.model_bases.autoencoders_base.ConditionalVae.encode", false]], "encode() (variationalae method)": [[94, "fl4health.model_bases.autoencoders_base.VariationalAe.encode", false]], "ensemble_average() (ensemblemodel method)": [[95, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_average", false]], "ensemble_vote() (ensemblemodel method)": [[95, "fl4health.model_bases.ensemble_base.EnsembleModel.ensemble_vote", false]], "ensembleaggregationmode (class in fl4health.model_bases.ensemble_base)": [[95, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode", false]], "ensembleclient (class in fl4health.clients.ensemble_client)": [[29, "fl4health.clients.ensemble_client.EnsembleClient", false]], "ensemblemodel (class in fl4health.model_bases.ensemble_base)": [[95, "fl4health.model_bases.ensemble_base.EnsembleModel", false]], "ensure_protocol_compliance() (in module fl4health.mixins.personalized.utils)": [[91, "fl4health.mixins.personalized.utils.ensure_protocol_compliance", false]], "enumsnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.EnumSnapshotter", false]], "epoch (wandbsteptype attribute)": [[130, "fl4health.reporting.WandBStepType.EPOCH", false], [134, "fl4health.reporting.wandb_reporter.WandBStepType.EPOCH", false]], "error (loglevel attribute)": [[188, "fl4health.utils.typing.LogLevel.ERROR", false]], "evaluate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.evaluate", false]], "evaluate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.evaluate", false]], "evaluate() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.evaluate", false]], "evaluate() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.evaluate", false]], "evaluate() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.evaluate", false]], "evaluate() (numpyclientminimalprotocol method)": [[88, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.evaluate", false]], "evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.evaluate_metrics_aggregation_fn", false]], "evaluate_round() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.evaluate_round", false]], "evaluateclient (class in fl4health.clients.evaluate_client)": [[30, "fl4health.clients.evaluate_client.EvaluateClient", false]], "evaluateserver (class in fl4health.servers.evaluate_server)": [[142, "fl4health.servers.evaluate_server.EvaluateServer", false]], "evaluationlosses (class in fl4health.utils.losses)": [[176, "fl4health.utils.losses.EvaluationLosses", false]], "extract_coo_info_from_dense() (sparsecooparameterpacker static method)": [[117, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.extract_coo_info_from_dense", false]], "f1 (class in fl4health.metrics)": [[76, "fl4health.metrics.F1", false]], "f1 (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.F1", false]], "fairnessmetric (class in fl4health.strategies.feddg_ga)": [[157, "fl4health.strategies.feddg_ga.FairnessMetric", false]], "fairnessmetrictype (class in fl4health.strategies.feddg_ga)": [[157, "fl4health.strategies.feddg_ga.FairnessMetricType", false]], "false_negative (metricoutcome attribute)": [[80, "fl4health.metrics.efficient_metrics_base.MetricOutcome.FALSE_NEGATIVE", false]], "false_positive (metricoutcome attribute)": [[80, "fl4health.metrics.efficient_metrics_base.MetricOutcome.FALSE_POSITIVE", false]], "featureextractorbuffer (class in fl4health.model_bases.feature_extractor_buffer)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer", false]], "fedavgdynamiclayer (class in fl4health.strategies.fedavg_dynamic_layer)": [[154, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer", false]], "fedavgsparsecootensor (class in fl4health.strategies.fedavg_sparse_coo_tensor)": [[155, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor", false]], "fedavgwithadaptiveconstraint (class in fl4health.strategies.fedavg_with_adaptive_constraint)": [[156, "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint", false]], "fedbnclient (class in fl4health.clients.fedbn_client)": [[33, "fl4health.clients.fedbn_client.FedBnClient", false]], "feddgga (class in fl4health.strategies.feddg_ga)": [[157, "fl4health.strategies.feddg_ga.FedDgGa", false]], "feddggaadaptiveconstraint (class in fl4health.strategies.feddg_ga_with_adaptive_constraint)": [[158, "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint", false]], "federated_evaluate() (evaluateserver method)": [[142, "fl4health.servers.evaluate_server.EvaluateServer.federated_evaluate", false]], "fedpca (class in fl4health.strategies.fedpca)": [[159, "fl4health.strategies.fedpca.FedPCA", false]], "fedpcaclient (class in fl4health.clients.fed_pca_client)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient", false]], "fedperclient (class in fl4health.clients.fedper_client)": [[34, "fl4health.clients.fedper_client.FedPerClient", false]], "fedpm (class in fl4health.strategies.fedpm)": [[160, "fl4health.strategies.fedpm.FedPm", false]], "fedpmclient (class in fl4health.clients.fedpm_client)": [[35, "fl4health.clients.fedpm_client.FedPmClient", false]], "fedpmexchanger (class in fl4health.parameter_exchange.fedpm_exchanger)": [[112, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger", false]], "fedpmserver (class in fl4health.servers.fedpm_server)": [[143, "fl4health.servers.fedpm_server.FedPmServer", false]], "fedproxclient (class in fl4health.clients.fed_prox_client)": [[32, "fl4health.clients.fed_prox_client.FedProxClient", false]], "fedproxserver (class in fl4health.servers.adaptive_constraint_servers.fedprox_server)": [[138, "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer", false]], "fedrepclient (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepClient", false]], "fedrepmodel (class in fl4health.model_bases.fedrep_base)": [[97, "fl4health.model_bases.fedrep_base.FedRepModel", false]], "fedreptrainmode (class in fl4health.clients.fedrep_client)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode", false]], "fedsimclrmodel (class in fl4health.model_bases.fedsimclr_base)": [[98, "fl4health.model_bases.fedsimclr_base.FedSimClrModel", false]], "fendaclient (class in fl4health.clients.fenda_client)": [[37, "fl4health.clients.fenda_client.FendaClient", false]], "fendadittoclient (class in fl4health.clients.fenda_ditto_client)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient", false]], "fendamodel (class in fl4health.model_bases.fenda_base)": [[99, "fl4health.model_bases.fenda_base.FendaModel", false]], "fendamodelwithfeaturestate (class in fl4health.model_bases.fenda_base)": [[99, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState", false]], "filereporter (class in fl4health.reporting.json_reporter)": [[132, "fl4health.reporting.json_reporter.FileReporter", false]], "filter_and_save_data() (in module fl4health.datasets.rxrx1.preprocess)": [[57, "fl4health.datasets.rxrx1.preprocess.filter_and_save_data", false]], "find_last_common_prefix() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.find_last_common_prefix", false]], "fit() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.fit", false]], "fit() (clientleveldpfedavgserver method)": [[141, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.fit", false]], "fit() (dpscaffoldserver method)": [[148, "fl4health.servers.scaffold_server.DPScaffoldServer.fit", false]], "fit() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.fit", false]], "fit() (evaluateserver method)": [[142, "fl4health.servers.evaluate_server.EvaluateServer.fit", false]], "fit() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.fit", false]], "fit() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.fit", false]], "fit() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.fit", false]], "fit() (instanceleveldpserver method)": [[144, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.fit", false]], "fit() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.fit", false]], "fit() (modelmergeserver method)": [[145, "fl4health.servers.model_merge_server.ModelMergeServer.fit", false]], "fit() (numpyclientminimalprotocol method)": [[88, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.fit", false]], "fit() (scaffoldserver method)": [[148, "fl4health.servers.scaffold_server.ScaffoldServer.fit", false]], "fit() (textcolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.fit", false]], "fit() (textmulticolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.fit", false]], "fit_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.fit_metrics_aggregation_fn", false]], "fit_round() (fedpmserver method)": [[143, "fl4health.servers.fedpm_server.FedPmServer.fit_round", false]], "fit_round() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.fit_round", false]], "fit_with_per_round_checkpointing() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.fit_with_per_round_checkpointing", false]], "fixedlayerexchanger (class in fl4health.parameter_exchange.layer_exchanger)": [[114, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger", false]], "fixedsamplingbyfractionclientmanager (class in fl4health.client_managers.fixed_without_replacement_manager)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager", false]], "fixedsamplingclientmanager (class in fl4health.client_managers.fixed_sampling_client_manager)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager", false]], "fixedsamplingwithoutreplacement (class in fl4health.privacy.moments_accountant)": [[129, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement", false]], "fl4health": [[8, "module-fl4health", false]], "fl4health.checkpointing": [[9, "module-fl4health.checkpointing", false]], "fl4health.checkpointing.checkpointer": [[10, "module-fl4health.checkpointing.checkpointer", false]], "fl4health.checkpointing.client_module": [[11, "module-fl4health.checkpointing.client_module", false]], "fl4health.checkpointing.opacus_checkpointer": [[12, "module-fl4health.checkpointing.opacus_checkpointer", false]], "fl4health.checkpointing.server_module": [[13, "module-fl4health.checkpointing.server_module", false]], "fl4health.checkpointing.state_checkpointer": [[14, "module-fl4health.checkpointing.state_checkpointer", false]], "fl4health.client_managers": [[15, "module-fl4health.client_managers", false]], "fl4health.client_managers.base_sampling_manager": [[16, "module-fl4health.client_managers.base_sampling_manager", false]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, "module-fl4health.client_managers.fixed_sampling_client_manager", false]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, "module-fl4health.client_managers.fixed_without_replacement_manager", false]], "fl4health.client_managers.poisson_sampling_manager": [[19, "module-fl4health.client_managers.poisson_sampling_manager", false]], "fl4health.clients": [[20, "module-fl4health.clients", false]], "fl4health.clients.adaptive_drift_constraint_client": [[21, "module-fl4health.clients.adaptive_drift_constraint_client", false]], "fl4health.clients.apfl_client": [[22, "module-fl4health.clients.apfl_client", false]], "fl4health.clients.basic_client": [[23, "module-fl4health.clients.basic_client", false]], "fl4health.clients.clipping_client": [[24, "module-fl4health.clients.clipping_client", false]], "fl4health.clients.constrained_fenda_client": [[25, "module-fl4health.clients.constrained_fenda_client", false]], "fl4health.clients.deep_mmd_clients": [[26, "module-fl4health.clients.deep_mmd_clients", false]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false]], "fl4health.clients.ditto_client": [[28, "module-fl4health.clients.ditto_client", false]], "fl4health.clients.ensemble_client": [[29, "module-fl4health.clients.ensemble_client", false]], "fl4health.clients.evaluate_client": [[30, "module-fl4health.clients.evaluate_client", false]], "fl4health.clients.fed_pca_client": [[31, "module-fl4health.clients.fed_pca_client", false]], "fl4health.clients.fed_prox_client": [[32, "module-fl4health.clients.fed_prox_client", false]], "fl4health.clients.fedbn_client": [[33, "module-fl4health.clients.fedbn_client", false]], "fl4health.clients.fedper_client": [[34, "module-fl4health.clients.fedper_client", false]], "fl4health.clients.fedpm_client": [[35, "module-fl4health.clients.fedpm_client", false]], "fl4health.clients.fedrep_client": [[36, "module-fl4health.clients.fedrep_client", false]], "fl4health.clients.fenda_client": [[37, "module-fl4health.clients.fenda_client", false]], "fl4health.clients.fenda_ditto_client": [[38, "module-fl4health.clients.fenda_ditto_client", false]], "fl4health.clients.flash_client": [[39, "module-fl4health.clients.flash_client", false]], "fl4health.clients.flexible": [[40, "module-fl4health.clients.flexible", false]], "fl4health.clients.flexible.base": [[41, "module-fl4health.clients.flexible.base", false]], "fl4health.clients.instance_level_dp_client": [[42, "module-fl4health.clients.instance_level_dp_client", false]], "fl4health.clients.mkmmd_clients": [[43, "module-fl4health.clients.mkmmd_clients", false]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[44, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[45, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false]], "fl4health.clients.model_merge_client": [[46, "module-fl4health.clients.model_merge_client", false]], "fl4health.clients.moon_client": [[47, "module-fl4health.clients.moon_client", false]], "fl4health.clients.mr_mtl_client": [[48, "module-fl4health.clients.mr_mtl_client", false]], "fl4health.clients.nnunet_client": [[49, "module-fl4health.clients.nnunet_client", false]], "fl4health.clients.partial_weight_exchange_client": [[50, "module-fl4health.clients.partial_weight_exchange_client", false]], "fl4health.clients.perfcl_client": [[51, "module-fl4health.clients.perfcl_client", false]], "fl4health.clients.scaffold_client": [[52, "module-fl4health.clients.scaffold_client", false]], "fl4health.datasets": [[54, "module-fl4health.datasets", false]], "fl4health.datasets.rxrx1": [[55, "module-fl4health.datasets.rxrx1", false]], "fl4health.datasets.rxrx1.load_data": [[56, "module-fl4health.datasets.rxrx1.load_data", false]], "fl4health.datasets.rxrx1.preprocess": [[57, "module-fl4health.datasets.rxrx1.preprocess", false]], "fl4health.datasets.skin_cancer": [[58, "module-fl4health.datasets.skin_cancer", false]], "fl4health.datasets.skin_cancer.load_data": [[59, "module-fl4health.datasets.skin_cancer.load_data", false]], "fl4health.datasets.skin_cancer.preprocess_skin": [[60, "module-fl4health.datasets.skin_cancer.preprocess_skin", false]], "fl4health.feature_alignment": [[61, "module-fl4health.feature_alignment", false]], "fl4health.feature_alignment.constants": [[62, "module-fl4health.feature_alignment.constants", false]], "fl4health.feature_alignment.string_columns_transformer": [[63, "module-fl4health.feature_alignment.string_columns_transformer", false]], "fl4health.feature_alignment.tabular_feature": [[66, "module-fl4health.feature_alignment.tabular_feature", false]], "fl4health.feature_alignment.tabular_type": [[67, "module-fl4health.feature_alignment.tabular_type", false]], "fl4health.losses": [[68, "module-fl4health.losses", false]], "fl4health.losses.contrastive_loss": [[69, "module-fl4health.losses.contrastive_loss", false]], "fl4health.losses.cosine_similarity_loss": [[70, "module-fl4health.losses.cosine_similarity_loss", false]], "fl4health.losses.deep_mmd_loss": [[71, "module-fl4health.losses.deep_mmd_loss", false]], "fl4health.losses.fenda_loss_config": [[72, "module-fl4health.losses.fenda_loss_config", false]], "fl4health.losses.mkmmd_loss": [[73, "module-fl4health.losses.mkmmd_loss", false]], "fl4health.losses.perfcl_loss": [[74, "module-fl4health.losses.perfcl_loss", false]], "fl4health.losses.weight_drift_loss": [[75, "module-fl4health.losses.weight_drift_loss", false]], "fl4health.metrics": [[76, "module-fl4health.metrics", false]], "fl4health.metrics.base_metrics": [[77, "module-fl4health.metrics.base_metrics", false]], "fl4health.metrics.compound_metrics": [[78, "module-fl4health.metrics.compound_metrics", false]], "fl4health.metrics.efficient_metrics": [[79, "module-fl4health.metrics.efficient_metrics", false]], "fl4health.metrics.efficient_metrics_base": [[80, "module-fl4health.metrics.efficient_metrics_base", false]], "fl4health.metrics.metric_aggregation": [[81, "module-fl4health.metrics.metric_aggregation", false]], "fl4health.metrics.metric_managers": [[82, "module-fl4health.metrics.metric_managers", false]], "fl4health.metrics.metrics": [[83, "module-fl4health.metrics.metrics", false]], "fl4health.metrics.metrics_utils": [[84, "module-fl4health.metrics.metrics_utils", false]], "fl4health.metrics.utils": [[85, "module-fl4health.metrics.utils", false]], "fl4health.mixins": [[86, "module-fl4health.mixins", false]], "fl4health.mixins.adaptive_drift_constrained": [[87, "module-fl4health.mixins.adaptive_drift_constrained", false]], "fl4health.mixins.core_protocols": [[88, "module-fl4health.mixins.core_protocols", false]], "fl4health.mixins.personalized": [[89, "module-fl4health.mixins.personalized", false]], "fl4health.mixins.personalized.ditto": [[90, "module-fl4health.mixins.personalized.ditto", false]], "fl4health.mixins.personalized.utils": [[91, "module-fl4health.mixins.personalized.utils", false]], "fl4health.model_bases": [[92, "module-fl4health.model_bases", false]], "fl4health.model_bases.apfl_base": [[93, "module-fl4health.model_bases.apfl_base", false]], "fl4health.model_bases.autoencoders_base": [[94, "module-fl4health.model_bases.autoencoders_base", false]], "fl4health.model_bases.ensemble_base": [[95, "module-fl4health.model_bases.ensemble_base", false]], "fl4health.model_bases.feature_extractor_buffer": [[96, "module-fl4health.model_bases.feature_extractor_buffer", false]], "fl4health.model_bases.fedrep_base": [[97, "module-fl4health.model_bases.fedrep_base", false]], "fl4health.model_bases.fedsimclr_base": [[98, "module-fl4health.model_bases.fedsimclr_base", false]], "fl4health.model_bases.fenda_base": [[99, "module-fl4health.model_bases.fenda_base", false]], "fl4health.model_bases.masked_layers": [[100, "module-fl4health.model_bases.masked_layers", false]], "fl4health.model_bases.masked_layers.masked_conv": [[101, "module-fl4health.model_bases.masked_layers.masked_conv", false]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[102, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false]], "fl4health.model_bases.masked_layers.masked_linear": [[103, "module-fl4health.model_bases.masked_layers.masked_linear", false]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[104, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false]], "fl4health.model_bases.moon_base": [[105, "module-fl4health.model_bases.moon_base", false]], "fl4health.model_bases.parallel_split_models": [[106, "module-fl4health.model_bases.parallel_split_models", false]], "fl4health.model_bases.partial_layer_exchange_model": [[107, "module-fl4health.model_bases.partial_layer_exchange_model", false]], "fl4health.model_bases.pca": [[108, "module-fl4health.model_bases.pca", false]], "fl4health.model_bases.perfcl_base": [[109, "module-fl4health.model_bases.perfcl_base", false]], "fl4health.model_bases.sequential_split_models": [[110, "module-fl4health.model_bases.sequential_split_models", false]], "fl4health.parameter_exchange": [[111, "module-fl4health.parameter_exchange", false]], "fl4health.parameter_exchange.fedpm_exchanger": [[112, "module-fl4health.parameter_exchange.fedpm_exchanger", false]], "fl4health.parameter_exchange.full_exchanger": [[113, "module-fl4health.parameter_exchange.full_exchanger", false]], "fl4health.parameter_exchange.layer_exchanger": [[114, "module-fl4health.parameter_exchange.layer_exchanger", false]], "fl4health.parameter_exchange.packing_exchanger": [[115, "module-fl4health.parameter_exchange.packing_exchanger", false]], "fl4health.parameter_exchange.parameter_exchanger_base": [[116, "module-fl4health.parameter_exchange.parameter_exchanger_base", false]], "fl4health.parameter_exchange.parameter_packer": [[117, "module-fl4health.parameter_exchange.parameter_packer", false]], "fl4health.parameter_exchange.parameter_selection_criteria": [[118, "module-fl4health.parameter_exchange.parameter_selection_criteria", false]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[119, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[120, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false]], "fl4health.preprocessing": [[121, "module-fl4health.preprocessing", false]], "fl4health.preprocessing.autoencoders": [[122, "module-fl4health.preprocessing.autoencoders", false]], "fl4health.preprocessing.autoencoders.dim_reduction": [[123, "module-fl4health.preprocessing.autoencoders.dim_reduction", false]], "fl4health.preprocessing.autoencoders.loss": [[124, "module-fl4health.preprocessing.autoencoders.loss", false]], "fl4health.preprocessing.pca_preprocessor": [[125, "module-fl4health.preprocessing.pca_preprocessor", false]], "fl4health.preprocessing.warmed_up_module": [[126, "module-fl4health.preprocessing.warmed_up_module", false]], "fl4health.privacy": [[127, "module-fl4health.privacy", false]], "fl4health.privacy.fl_accountants": [[128, "module-fl4health.privacy.fl_accountants", false]], "fl4health.privacy.moments_accountant": [[129, "module-fl4health.privacy.moments_accountant", false]], "fl4health.reporting": [[130, "module-fl4health.reporting", false]], "fl4health.reporting.base_reporter": [[131, "module-fl4health.reporting.base_reporter", false]], "fl4health.reporting.json_reporter": [[132, "module-fl4health.reporting.json_reporter", false]], "fl4health.reporting.reports_manager": [[133, "module-fl4health.reporting.reports_manager", false]], "fl4health.reporting.wandb_reporter": [[134, "module-fl4health.reporting.wandb_reporter", false]], "fl4health.servers": [[135, "module-fl4health.servers", false]], "fl4health.servers.adaptive_constraint_servers": [[136, "module-fl4health.servers.adaptive_constraint_servers", false]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[137, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[138, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[139, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false]], "fl4health.servers.base_server": [[140, "module-fl4health.servers.base_server", false]], "fl4health.servers.client_level_dp_fed_avg_server": [[141, "module-fl4health.servers.client_level_dp_fed_avg_server", false]], "fl4health.servers.evaluate_server": [[142, "module-fl4health.servers.evaluate_server", false]], "fl4health.servers.fedpm_server": [[143, "module-fl4health.servers.fedpm_server", false]], "fl4health.servers.instance_level_dp_server": [[144, "module-fl4health.servers.instance_level_dp_server", false]], "fl4health.servers.model_merge_server": [[145, "module-fl4health.servers.model_merge_server", false]], "fl4health.servers.nnunet_server": [[146, "module-fl4health.servers.nnunet_server", false]], "fl4health.servers.polling": [[147, "module-fl4health.servers.polling", false]], "fl4health.servers.scaffold_server": [[148, "module-fl4health.servers.scaffold_server", false]], "fl4health.strategies": [[150, "module-fl4health.strategies", false]], "fl4health.strategies.aggregate_utils": [[151, "module-fl4health.strategies.aggregate_utils", false]], "fl4health.strategies.basic_fedavg": [[152, "module-fl4health.strategies.basic_fedavg", false]], "fl4health.strategies.client_dp_fedavgm": [[153, "module-fl4health.strategies.client_dp_fedavgm", false]], "fl4health.strategies.fedavg_dynamic_layer": [[154, "module-fl4health.strategies.fedavg_dynamic_layer", false]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[155, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[156, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false]], "fl4health.strategies.feddg_ga": [[157, "module-fl4health.strategies.feddg_ga", false]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[158, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false]], "fl4health.strategies.fedpca": [[159, "module-fl4health.strategies.fedpca", false]], "fl4health.strategies.fedpm": [[160, "module-fl4health.strategies.fedpm", false]], "fl4health.strategies.flash": [[161, "module-fl4health.strategies.flash", false]], "fl4health.strategies.model_merge_strategy": [[162, "module-fl4health.strategies.model_merge_strategy", false]], "fl4health.strategies.noisy_aggregate": [[163, "module-fl4health.strategies.noisy_aggregate", false]], "fl4health.strategies.scaffold": [[164, "module-fl4health.strategies.scaffold", false]], "fl4health.strategies.strategy_with_poll": [[165, "module-fl4health.strategies.strategy_with_poll", false]], "fl4health.utils": [[166, "module-fl4health.utils", false]], "fl4health.utils.client": [[167, "module-fl4health.utils.client", false]], "fl4health.utils.config": [[168, "module-fl4health.utils.config", false]], "fl4health.utils.data_generation": [[169, "module-fl4health.utils.data_generation", false]], "fl4health.utils.dataset": [[170, "module-fl4health.utils.dataset", false]], "fl4health.utils.dataset_converter": [[171, "module-fl4health.utils.dataset_converter", false]], "fl4health.utils.early_stopper": [[172, "module-fl4health.utils.early_stopper", false]], "fl4health.utils.functions": [[173, "module-fl4health.utils.functions", false]], "fl4health.utils.load_data": [[174, "module-fl4health.utils.load_data", false]], "fl4health.utils.logging": [[175, "module-fl4health.utils.logging", false]], "fl4health.utils.losses": [[176, "module-fl4health.utils.losses", false]], "fl4health.utils.metrics": [[178, "module-fl4health.utils.metrics", false]], "fl4health.utils.msd_dataset_sources": [[179, "module-fl4health.utils.msd_dataset_sources", false]], "fl4health.utils.nnunet_utils": [[180, "module-fl4health.utils.nnunet_utils", false]], "fl4health.utils.parameter_extraction": [[181, "module-fl4health.utils.parameter_extraction", false]], "fl4health.utils.partitioners": [[182, "module-fl4health.utils.partitioners", false]], "fl4health.utils.peft_parameter_extraction": [[183, "module-fl4health.utils.peft_parameter_extraction", false]], "fl4health.utils.privacy_utilities": [[184, "module-fl4health.utils.privacy_utilities", false]], "fl4health.utils.random": [[185, "module-fl4health.utils.random", false]], "fl4health.utils.sampler": [[186, "module-fl4health.utils.sampler", false]], "fl4health.utils.snapshotter": [[187, "module-fl4health.utils.snapshotter", false]], "fl4health.utils.typing": [[188, "module-fl4health.utils.typing", false]], "flash (class in fl4health.strategies.flash)": [[161, "fl4health.strategies.flash.Flash", false]], "flashclient (class in fl4health.clients.flash_client)": [[39, "fl4health.clients.flash_client.FlashClient", false]], "flatten() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.flatten", false]], "flclientlevelaccountantfixedsamplingnoreplacement (class in fl4health.privacy.fl_accountants)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement", false]], "flclientlevelaccountantpoissonsampling (class in fl4health.privacy.fl_accountants)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling", false]], "flexibleclient (class in fl4health.clients.flexible.base)": [[41, "fl4health.clients.flexible.base.FlexibleClient", false]], "flexibleclientprotocol (class in fl4health.mixins.core_protocols)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol", false]], "flexibleclientprotocolpresetup (class in fl4health.mixins.core_protocols)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup", false]], "flinstancelevelaccountant (class in fl4health.privacy.fl_accountants)": [[128, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant", false]], "flserver (class in fl4health.servers.base_server)": [[140, "fl4health.servers.base_server.FlServer", false]], "flush() (streamtologger method)": [[180, "fl4health.utils.nnunet_utils.StreamToLogger.flush", false]], "fold_loss_dict_into_metrics() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.fold_loss_dict_into_metrics", false]], "form_and_solve_qp() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_and_solve_qp", false]], "form_h_u_delta_w_i() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_h_u_delta_w_i", false]], "form_kernel_samples_minus_expectation() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.form_kernel_samples_minus_expectation", false]], "forward() (abstractae method)": [[94, "fl4health.model_bases.autoencoders_base.AbstractAe.forward", false]], "forward() (apflmodule method)": [[93, "fl4health.model_bases.apfl_base.ApflModule.forward", false]], "forward() (basicae method)": [[94, "fl4health.model_bases.autoencoders_base.BasicAe.forward", false]], "forward() (bernoullisample static method)": [[173, "fl4health.utils.functions.BernoulliSample.forward", false]], "forward() (conditionalvae method)": [[94, "fl4health.model_bases.autoencoders_base.ConditionalVae.forward", false]], "forward() (cosinesimilarityloss method)": [[70, "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss.forward", false]], "forward() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.forward", false]], "forward() (ensemblemodel method)": [[95, "fl4health.model_bases.ensemble_base.EnsembleModel.forward", false]], "forward() (fedsimclrmodel method)": [[98, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.forward", false]], "forward() (fendamodelwithfeaturestate method)": [[99, "fl4health.model_bases.fenda_base.FendaModelWithFeatureState.forward", false]], "forward() (maskedconv1d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.forward", false]], "forward() (maskedconv2d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.forward", false]], "forward() (maskedconv3d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.forward", false]], "forward() (maskedconvtranspose1d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.forward", false]], "forward() (maskedconvtranspose2d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.forward", false]], "forward() (maskedconvtranspose3d method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.forward", false]], "forward() (maskedlayernorm method)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.forward", false]], "forward() (maskedlinear method)": [[103, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.forward", false]], "forward() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.forward", false]], "forward() (modellatentf method)": [[71, "fl4health.losses.deep_mmd_loss.ModelLatentF.forward", false]], "forward() (module2losswrapper method)": [[180, "fl4health.utils.nnunet_utils.Module2LossWrapper.forward", false]], "forward() (mooncontrastiveloss method)": [[69, "fl4health.losses.contrastive_loss.MoonContrastiveLoss.forward", false]], "forward() (ntxentloss method)": [[69, "fl4health.losses.contrastive_loss.NtXentLoss.forward", false]], "forward() (parallelsplitheadmodule method)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.forward", false]], "forward() (parallelsplitmodel method)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitModel.forward", false]], "forward() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.forward", false]], "forward() (perfclloss method)": [[74, "fl4health.losses.perfcl_loss.PerFclLoss.forward", false]], "forward() (perfclmodel method)": [[109, "fl4health.model_bases.perfcl_base.PerFclModel.forward", false]], "forward() (sequentiallysplitmodel method)": [[110, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.forward", false]], "forward() (vaeloss method)": [[124, "fl4health.preprocessing.autoencoders.loss.VaeLoss.forward", false]], "forward() (variationalae method)": [[94, "fl4health.model_bases.autoencoders_base.VariationalAe.forward", false]], "forward() (weightdriftloss method)": [[75, "fl4health.losses.weight_drift_loss.WeightDriftLoss.forward", false]], "forward_hook() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.forward_hook", false]], "freeze_base_module() (fedrepmodel method)": [[97, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_base_module", false]], "freeze_head_module() (fedrepmodel method)": [[97, "fl4health.model_bases.fedrep_base.FedRepModel.freeze_head_module", false]], "from_json() (tabularfeature static method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.from_json", false]], "from_pretrained() (maskedconv1d class method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d.from_pretrained", false]], "from_pretrained() (maskedconv2d class method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d.from_pretrained", false]], "from_pretrained() (maskedconv3d class method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose1d class method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose2d class method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d.from_pretrained", false]], "from_pretrained() (maskedconvtranspose3d class method)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d.from_pretrained", false]], "from_pretrained() (maskedlayernorm class method)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm.from_pretrained", false]], "from_pretrained() (maskedlinear class method)": [[103, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear.from_pretrained", false]], "fullparameterexchanger (class in fl4health.parameter_exchange.full_exchanger)": [[113, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger", false]], "fullparameterexchangerwithpacking (class in fl4health.parameter_exchange.packing_exchanger)": [[115, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking", false]], "functiontorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer", false]], "gaussian_noisy_aggregate_clipping_bits() (in module fl4health.strategies.noisy_aggregate)": [[163, "fl4health.strategies.noisy_aggregate.gaussian_noisy_aggregate_clipping_bits", false]], "gaussian_noisy_unweighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[163, "fl4health.strategies.noisy_aggregate.gaussian_noisy_unweighted_aggregate", false]], "gaussian_noisy_weighted_aggregate() (in module fl4health.strategies.noisy_aggregate)": [[163, "fl4health.strategies.noisy_aggregate.gaussian_noisy_weighted_aggregate", false]], "generate() (syntheticfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate", false]], "generate_client_tensors() (syntheticfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticiidfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.generate_client_tensors", false]], "generate_client_tensors() (syntheticnoniidfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.generate_client_tensors", false]], "generate_hash() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.generate_hash", false]], "generate_hash() (in module fl4health.utils.random)": [[185, "fl4health.utils.random.generate_hash", false]], "generate_parameter_scores() (sparsecooparameterexchanger method)": [[120, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.generate_parameter_scores", false]], "get_all_model_parameters() (in module fl4health.utils.parameter_extraction)": [[181, "fl4health.utils.parameter_extraction.get_all_model_parameters", false]], "get_all_peft_parameters_from_model() (in module fl4health.utils.peft_parameter_extraction)": [[183, "fl4health.utils.peft_parameter_extraction.get_all_peft_parameters_from_model", false]], "get_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.get_attribute", false]], "get_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.get_attribute", false]], "get_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.get_attribute", false]], "get_best_vertex_for_objective_function() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.get_best_vertex_for_objective_function", false]], "get_cifar10_data_and_target_tensors() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.get_cifar10_data_and_target_tensors", false]], "get_client_specific_logs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_logs", false]], "get_client_specific_logs() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_logs", false]], "get_client_specific_reports() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_client_specific_reports", false]], "get_client_specific_reports() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_client_specific_reports", false]], "get_condition_vector_size() (autoencoderdatasetconverter method)": [[171, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_condition_vector_size", false]], "get_criterion() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_criterion", false]], "get_criterion() (flexibleclientprotocolpresetup method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_criterion", false]], "get_criterion() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_criterion", false]], "get_current_weight_step_size() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.get_current_weight_step_size", false]], "get_data_loader() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_data_loader", false]], "get_data_loaders() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_data_loaders", false]], "get_data_loaders() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_loaders", false]], "get_data_loaders() (flexibleclientprotocolpresetup method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_data_loaders", false]], "get_data_loaders() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_data_loaders", false]], "get_data_tensor() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_data_tensor", false]], "get_dataset_n_voxels() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.get_dataset_n_voxels", false]], "get_default_fill_value() (tabulartype static method)": [[67, "fl4health.feature_alignment.tabular_type.TabularType.get_default_fill_value", false]], "get_delta() (clientlevelaccountant method)": [[128, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_delta", false]], "get_delta() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_delta", false]], "get_delta() (flclientlevelaccountantpoissonsampling method)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_delta", false]], "get_delta() (flinstancelevelaccountant method)": [[128, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_delta", false]], "get_delta() (momentsaccountant method)": [[129, "fl4health.privacy.moments_accountant.MomentsAccountant.get_delta", false]], "get_dp_event() (fixedsamplingwithoutreplacement method)": [[129, "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement.get_dp_event", false]], "get_dp_event() (poissonsampling method)": [[129, "fl4health.privacy.moments_accountant.PoissonSampling.get_dp_event", false]], "get_dp_event() (samplingstrategy method)": [[129, "fl4health.privacy.moments_accountant.SamplingStrategy.get_dp_event", false]], "get_epsilon() (clientlevelaccountant method)": [[128, "fl4health.privacy.fl_accountants.ClientLevelAccountant.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantfixedsamplingnoreplacement method)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement.get_epsilon", false]], "get_epsilon() (flclientlevelaccountantpoissonsampling method)": [[128, "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling.get_epsilon", false]], "get_epsilon() (flinstancelevelaccountant method)": [[128, "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant.get_epsilon", false]], "get_epsilon() (momentsaccountant method)": [[129, "fl4health.privacy.moments_accountant.MomentsAccountant.get_epsilon", false]], "get_extracted_features() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_extracted_features", false]], "get_feature_name() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_name", false]], "get_feature_type() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_feature_type", false]], "get_fill_value() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_fill_value", false]], "get_global_model() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_global_model", false]], "get_global_model() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_global_model", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_global_model", false]], "get_global_model() (dittopersonalizedprotocol method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedProtocol.get_global_model", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.get_global_model", false]], "get_global_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_global_model", false]], "get_hierarchical_attr() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.get_hierarchical_attr", false]], "get_input_output_tensors() (syntheticiidfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticIidFedProxDataset.get_input_output_tensors", false]], "get_input_output_tensors() (syntheticnoniidfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset.get_input_output_tensors", false]], "get_layers_to_transfer() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.get_layers_to_transfer", false]], "get_local_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_local_model", false]], "get_lr() (polylrschedulerwrapper method)": [[180, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper.get_lr", false]], "get_lr_scheduler() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_lr_scheduler", false]], "get_lr_scheduler() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_lr_scheduler", false]], "get_matching_component() (warmedupmodule method)": [[126, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.get_matching_component", false]], "get_metadata() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata", false]], "get_metadata_dimension() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.get_metadata_dimension", false]], "get_mnist_data_and_target_tensors() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.get_mnist_data_and_target_tensors", false]], "get_model() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_model", false]], "get_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_model", false]], "get_model() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_model", false]], "get_model() (flexibleclientprotocolpresetup method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_model", false]], "get_model() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.get_model", false]], "get_model() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_model", false]], "get_msd_dataset_enum() (in module fl4health.utils.msd_dataset_sources)": [[179, "fl4health.utils.msd_dataset_sources.get_msd_dataset_enum", false]], "get_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_optimizer", false]], "get_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_optimizer", false]], "get_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_optimizer", false]], "get_optimizer() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_optimizer", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_optimizer", false]], "get_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.get_optimizer", false]], "get_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_optimizer", false]], "get_optimizer() (flexibleclientprotocolpresetup method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.get_optimizer", false]], "get_optimizer() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_optimizer", false]], "get_parameter_exchanger() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameter_exchanger", false]], "get_parameter_exchanger() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedperclient method)": [[34, "fl4health.clients.fedper_client.FedPerClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (fendaclient method)": [[37, "fl4health.clients.fenda_client.FendaClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (partialweightexchangeclient method)": [[50, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.get_parameter_exchanger", false]], "get_parameter_exchanger() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameter_exchanger", false]], "get_parameters() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.get_parameters", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.get_parameters", false]], "get_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.get_parameters", false]], "get_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_parameters", false]], "get_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.get_parameters", false]], "get_parameters() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.get_parameters", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.get_parameters", false]], "get_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.get_parameters", false]], "get_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.get_parameters", false]], "get_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.get_parameters", false]], "get_parameters() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.get_parameters", false]], "get_parameters() (numpyclientminimalprotocol method)": [[88, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.get_parameters", false]], "get_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.get_parameters", false]], "get_parameters() (partialweightexchangeclient method)": [[50, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.get_parameters", false]], "get_parameters() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.get_parameters", false]], "get_properties() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_properties", false]], "get_properties() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.get_properties", false]], "get_segs_from_probs() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.get_segs_from_probs", false]], "get_test_data_loader() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.get_test_data_loader", false]], "get_test_data_loader() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.get_test_data_loader", false]], "get_train_and_val_cifar10_datasets() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.get_train_and_val_cifar10_datasets", false]], "get_train_and_val_mnist_datasets() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.get_train_and_val_mnist_datasets", false]], "get_unpacking_function() (autoencoderdatasetconverter method)": [[171, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.get_unpacking_function", false]], "global_forward() (apflmodule method)": [[93, "fl4health.model_bases.apfl_base.ApflModule.global_forward", false]], "global_model (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.DittoPersonalizedProtocol.global_model", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.global_model", false]], "h1_mean_var_gram() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.h1_mean_var_gram", false]], "ham_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.ham_image_path_func", false]], "ham_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.ham_label_map_func", false]], "has_contrastive_loss() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_contrastive_loss", false]], "has_cosine_similarity_loss() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_cosine_similarity_loss", false]], "has_perfcl_loss() (constrainedfendalosscontainer method)": [[72, "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer.has_perfcl_loss", false]], "head (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.HEAD", false]], "head_forward() (parallelsplitheadmodule method)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.head_forward", false]], "historysnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.HistorySnapshotter", false]], "infer_label_dim() (in module fl4health.metrics.utils)": [[85, "fl4health.metrics.utils.infer_label_dim", false]], "info (loglevel attribute)": [[188, "fl4health.utils.typing.LogLevel.INFO", false]], "initialize() (basereporter method)": [[131, "fl4health.reporting.base_reporter.BaseReporter.initialize", false]], "initialize() (filereporter method)": [[132, "fl4health.reporting.json_reporter.FileReporter.initialize", false]], "initialize() (reportsmanager method)": [[133, "fl4health.reporting.reports_manager.ReportsManager.initialize", false]], "initialize() (wandbreporter method)": [[130, "fl4health.reporting.WandBReporter.initialize", false], [134, "fl4health.reporting.wandb_reporter.WandBReporter.initialize", false]], "initialize_all_model_weights() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.initialize_all_model_weights", false]], "initialize_all_model_weights() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.initialize_all_model_weights", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.initialize_all_model_weights", false]], "initialize_all_model_weights() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.initialize_all_model_weights", false]], "initialize_control_variates() (scaffold method)": [[164, "fl4health.strategies.scaffold.Scaffold.initialize_control_variates", false]], "initialize_global_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.initialize_global_model", false]], "initialize_parameters() (modelmergestrategy method)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy.initialize_parameters", false]], "initialize_server_model() (nnunetserver method)": [[146, "fl4health.servers.nnunet_server.NnunetServer.initialize_server_model", false]], "initialized (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.initialized", false]], "initialized (flexibleclientprotocolpresetup attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.initialized", false]], "instanceleveldpclient (class in fl4health.clients.instance_level_dp_client)": [[42, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient", false]], "instanceleveldpserver (class in fl4health.servers.instance_level_dp_server)": [[144, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer", false]], "invalidconfigerror": [[168, "fl4health.utils.config.InvalidConfigError", false]], "is_masked_module() (in module fl4health.model_bases.masked_layers.masked_layers_utils)": [[102, "fl4health.model_bases.masked_layers.masked_layers_utils.is_masked_module", false]], "is_start_of_local_training() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.is_start_of_local_training", false]], "jsonreporter (class in fl4health.reporting)": [[130, "fl4health.reporting.JsonReporter", false]], "jsonreporter (class in fl4health.reporting.json_reporter)": [[132, "fl4health.reporting.json_reporter.JsonReporter", false]], "label_frequency() (in module fl4health.datasets.rxrx1.load_data)": [[56, "fl4health.datasets.rxrx1.load_data.label_frequency", false]], "labelbasedsampler (class in fl4health.utils.sampler)": [[186, "fl4health.utils.sampler.LabelBasedSampler", false]], "largest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.largest_final_magnitude_scores", false]], "largest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.largest_increase_in_magnitude_scores", false]], "largest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.largest_magnitude_change_scores", false]], "latestopacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer", false]], "latesttorchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer", false]], "layerexchangerwithexclusions (class in fl4health.parameter_exchange.layer_exchanger)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions", false]], "layernamesservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule", false]], "layers_to_exchange() (apflmodule method)": [[93, "fl4health.model_bases.apfl_base.ApflModule.layers_to_exchange", false]], "layers_to_exchange() (fendamodel method)": [[99, "fl4health.model_bases.fenda_base.FendaModel.layers_to_exchange", false]], "layers_to_exchange() (partiallayerexchangemodel method)": [[107, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel.layers_to_exchange", false]], "layers_to_exchange() (perfclmodel method)": [[109, "fl4health.model_bases.perfcl_base.PerFclModel.layers_to_exchange", false]], "layers_to_exchange() (sequentiallysplitexchangebasemodel method)": [[110, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel.layers_to_exchange", false]], "layerselectionfunctionconstructor (class in fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor", false]], "load_attribute() (abstractsnapshotter method)": [[187, "fl4health.utils.snapshotter.AbstractSnapshotter.load_attribute", false]], "load_attribute() (bytessnapshotter method)": [[187, "fl4health.utils.snapshotter.BytesSnapshotter.load_attribute", false]], "load_attribute() (enumsnapshotter method)": [[187, "fl4health.utils.snapshotter.EnumSnapshotter.load_attribute", false]], "load_attribute() (historysnapshotter method)": [[187, "fl4health.utils.snapshotter.HistorySnapshotter.load_attribute", false]], "load_attribute() (lrschedulersnapshotter method)": [[187, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.load_attribute", false]], "load_attribute() (optimizersnapshotter method)": [[187, "fl4health.utils.snapshotter.OptimizerSnapshotter.load_attribute", false]], "load_attribute() (serializableobjectsnapshotter method)": [[187, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.load_attribute", false]], "load_attribute() (singletonsnapshotter method)": [[187, "fl4health.utils.snapshotter.SingletonSnapshotter.load_attribute", false]], "load_attribute() (stringsnapshotter method)": [[187, "fl4health.utils.snapshotter.StringSnapshotter.load_attribute", false]], "load_attribute() (torchmodulesnapshotter method)": [[187, "fl4health.utils.snapshotter.TorchModuleSnapshotter.load_attribute", false]], "load_autoencoder() (autoencoderprocessing method)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing.load_autoencoder", false]], "load_best_checkpoint_into_model() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_best_checkpoint_into_model", false]], "load_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.load_checkpoint", false]], "load_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_checkpoint", false]], "load_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.load_checkpoint", false]], "load_cifar10_data() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.load_cifar10_data", false]], "load_cifar10_test_data() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.load_cifar10_test_data", false]], "load_config() (in module fl4health.utils.config)": [[168, "fl4health.utils.config.load_config", false]], "load_from_pretrained() (warmedupmodule method)": [[126, "fl4health.preprocessing.warmed_up_module.WarmedUpModule.load_from_pretrained", false]], "load_image() (in module fl4health.datasets.rxrx1.preprocess)": [[57, "fl4health.datasets.rxrx1.preprocess.load_image", false]], "load_image() (in module fl4health.datasets.skin_cancer.load_data)": [[59, "fl4health.datasets.skin_cancer.load_data.load_image", false]], "load_mnist_data() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.load_mnist_data", false]], "load_mnist_test_data() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.load_mnist_test_data", false]], "load_model_checkpoint_to_parameters() (evaluateserver method)": [[142, "fl4health.servers.evaluate_server.EvaluateServer.load_model_checkpoint_to_parameters", false]], "load_msd_dataset() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.load_msd_dataset", false]], "load_pca_module() (pcapreprocessor method)": [[125, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.load_pca_module", false]], "load_pretrained_model() (fedsimclrmodel static method)": [[98, "fl4health.model_bases.fedsimclr_base.FedSimClrModel.load_pretrained_model", false]], "load_rxrx1_data() (in module fl4health.datasets.rxrx1.load_data)": [[56, "fl4health.datasets.rxrx1.load_data.load_rxrx1_data", false]], "load_rxrx1_test_data() (in module fl4health.datasets.rxrx1.load_data)": [[56, "fl4health.datasets.rxrx1.load_data.load_rxrx1_test_data", false]], "load_skin_cancer_data() (in module fl4health.datasets.skin_cancer.load_data)": [[59, "fl4health.datasets.skin_cancer.load_data.load_skin_cancer_data", false]], "load_snapshot() (earlystopper method)": [[172, "fl4health.utils.early_stopper.EarlyStopper.load_snapshot", false]], "load_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.load_state", false]], "local_forward() (apflmodule method)": [[93, "fl4health.model_bases.apfl_base.ApflModule.local_forward", false]], "loggingmode (class in fl4health.utils.logging)": [[175, "fl4health.utils.logging.LoggingMode", false]], "loglevel (class in fl4health.utils.typing)": [[188, "fl4health.utils.typing.LogLevel", false]], "loss (fairnessmetrictype attribute)": [[157, "fl4health.strategies.feddg_ga.FairnessMetricType.LOSS", false]], "loss_for_adaptation (adaptivedriftconstrainedprotocol attribute)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.loss_for_adaptation", false]], "loss_for_adaptation (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.loss_for_adaptation", false]], "losses (class in fl4health.utils.losses)": [[176, "fl4health.utils.losses.Losses", false]], "lossmeter (class in fl4health.utils.losses)": [[176, "fl4health.utils.losses.LossMeter", false]], "lossmetertype (class in fl4health.utils.losses)": [[176, "fl4health.utils.losses.LossMeterType", false]], "lrschedulersnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.LRSchedulerSnapshotter", false]], "main() (in module fl4health.datasets.rxrx1.preprocess)": [[57, "fl4health.datasets.rxrx1.preprocess.main", false]], "make_dict_with_epochs_or_steps() (in module fl4health.utils.config)": [[168, "fl4health.utils.config.make_dict_with_epochs_or_steps", false]], "make_it_personal() (in module fl4health.mixins.personalized)": [[89, "fl4health.mixins.personalized.make_it_personal", false]], "map_label_index_tensor_to_one_hot() (in module fl4health.metrics.utils)": [[85, "fl4health.metrics.utils.map_label_index_tensor_to_one_hot", false]], "map_model_to_opacus_model() (in module fl4health.utils.privacy_utilities)": [[184, "fl4health.utils.privacy_utilities.map_model_to_opacus_model", false]], "mask_data() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.mask_data", false]], "maskedbatchnorm1d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm1d", false]], "maskedbatchnorm2d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm2d", false]], "maskedbatchnorm3d (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedBatchNorm3d", false]], "maskedconv1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d", false]], "maskedconv2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d", false]], "maskedconv3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d", false]], "maskedconvtranspose1d (class in fl4health.model_bases.masked_layers.masked_conv)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d", false]], "maskedconvtranspose2d (class in fl4health.model_bases.masked_layers.masked_conv)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d", false]], "maskedconvtranspose3d (class in fl4health.model_bases.masked_layers.masked_conv)": [[101, "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d", false]], "maskedlayernorm (class in fl4health.model_bases.masked_layers.masked_normalization_layers)": [[104, "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm", false]], "maskedlinear (class in fl4health.model_bases.masked_layers.masked_linear)": [[103, "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear", false]], "maybe_checkpoint() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (bestlossopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (bestlosstorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_checkpoint", false]], "maybe_checkpoint() (functiontorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latestopacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (latesttorchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (opacuscheckpointer method)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer.maybe_checkpoint", false]], "maybe_checkpoint() (torchmodulecheckpointer method)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer.maybe_checkpoint", false]], "maybe_extract_fingerprint() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.maybe_extract_fingerprint", false]], "maybe_load_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_load_client_state", false]], "maybe_load_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_load_server_state", false]], "maybe_load_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.maybe_load_state", false]], "maybe_load_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.maybe_load_state", false]], "maybe_preprocess() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.maybe_preprocess", false]], "maybe_progress_bar() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.maybe_progress_bar", false]], "maybe_reshape() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.maybe_reshape", false]], "maybe_set_default_checkpoint_name() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.maybe_set_default_checkpoint_name", false]], "maybe_set_default_checkpoint_name() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.maybe_set_default_checkpoint_name", false]], "merge_metrics() (evaluateclient static method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.merge_metrics", false]], "merge_subspaces_qr() (fedpca method)": [[159, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_qr", false]], "merge_subspaces_svd() (fedpca method)": [[159, "fl4health.strategies.fedpca.FedPCA.merge_subspaces_svd", false]], "merge_two_subspaces_qr() (fedpca method)": [[159, "fl4health.strategies.fedpca.FedPCA.merge_two_subspaces_qr", false]], "metric (class in fl4health.metrics.base_metrics)": [[77, "fl4health.metrics.base_metrics.Metric", false]], "metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.metric_aggregation", false]], "metricmanager (class in fl4health.metrics.metric_managers)": [[82, "fl4health.metrics.metric_managers.MetricManager", false]], "metricoutcome (class in fl4health.metrics.efficient_metrics_base)": [[80, "fl4health.metrics.efficient_metrics_base.MetricOutcome", false]], "metricprefix (class in fl4health.metrics.base_metrics)": [[77, "fl4health.metrics.base_metrics.MetricPrefix", false]], "minoritylabelbasedsampler (class in fl4health.utils.sampler)": [[186, "fl4health.utils.sampler.MinorityLabelBasedSampler", false]], "mkmmdloss (class in fl4health.losses.mkmmd_loss)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss", false]], "mmdu() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.mmdu", false]], "model (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.model", false]], "model (flexibleclientprotocol attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.model", false]], "modellatentf (class in fl4health.losses.deep_mmd_loss)": [[71, "fl4health.losses.deep_mmd_loss.ModelLatentF", false]], "modelmergeclient (class in fl4health.clients.model_merge_client)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient", false]], "modelmergeserver (class in fl4health.servers.model_merge_server)": [[145, "fl4health.servers.model_merge_server.ModelMergeServer", false]], "modelmergestrategy (class in fl4health.strategies.model_merge_strategy)": [[162, "fl4health.strategies.model_merge_strategy.ModelMergeStrategy", false]], "modify_grad() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.modify_grad", false]], "modify_noise_multiplier() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.modify_noise_multiplier", false]], "module": [[8, "module-fl4health", false], [9, "module-fl4health.checkpointing", false], [10, "module-fl4health.checkpointing.checkpointer", false], [11, "module-fl4health.checkpointing.client_module", false], [12, "module-fl4health.checkpointing.opacus_checkpointer", false], [13, "module-fl4health.checkpointing.server_module", false], [14, "module-fl4health.checkpointing.state_checkpointer", false], [15, "module-fl4health.client_managers", false], [16, "module-fl4health.client_managers.base_sampling_manager", false], [17, "module-fl4health.client_managers.fixed_sampling_client_manager", false], [18, "module-fl4health.client_managers.fixed_without_replacement_manager", false], [19, "module-fl4health.client_managers.poisson_sampling_manager", false], [20, "module-fl4health.clients", false], [21, "module-fl4health.clients.adaptive_drift_constraint_client", false], [22, "module-fl4health.clients.apfl_client", false], [23, "module-fl4health.clients.basic_client", false], [24, "module-fl4health.clients.clipping_client", false], [25, "module-fl4health.clients.constrained_fenda_client", false], [26, "module-fl4health.clients.deep_mmd_clients", false], [27, "module-fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client", false], [28, "module-fl4health.clients.ditto_client", false], [29, "module-fl4health.clients.ensemble_client", false], [30, "module-fl4health.clients.evaluate_client", false], [31, "module-fl4health.clients.fed_pca_client", false], [32, "module-fl4health.clients.fed_prox_client", false], [33, "module-fl4health.clients.fedbn_client", false], [34, "module-fl4health.clients.fedper_client", false], [35, "module-fl4health.clients.fedpm_client", false], [36, "module-fl4health.clients.fedrep_client", false], [37, "module-fl4health.clients.fenda_client", false], [38, "module-fl4health.clients.fenda_ditto_client", false], [39, "module-fl4health.clients.flash_client", false], [40, "module-fl4health.clients.flexible", false], [41, "module-fl4health.clients.flexible.base", false], [42, "module-fl4health.clients.instance_level_dp_client", false], [43, "module-fl4health.clients.mkmmd_clients", false], [44, "module-fl4health.clients.mkmmd_clients.ditto_mkmmd_client", false], [45, "module-fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client", false], [46, "module-fl4health.clients.model_merge_client", false], [47, "module-fl4health.clients.moon_client", false], [48, "module-fl4health.clients.mr_mtl_client", false], [49, "module-fl4health.clients.nnunet_client", false], [50, "module-fl4health.clients.partial_weight_exchange_client", false], [51, "module-fl4health.clients.perfcl_client", false], [52, "module-fl4health.clients.scaffold_client", false], [54, "module-fl4health.datasets", false], [55, "module-fl4health.datasets.rxrx1", false], [56, "module-fl4health.datasets.rxrx1.load_data", false], [57, "module-fl4health.datasets.rxrx1.preprocess", false], [58, "module-fl4health.datasets.skin_cancer", false], [59, "module-fl4health.datasets.skin_cancer.load_data", false], [60, "module-fl4health.datasets.skin_cancer.preprocess_skin", false], [61, "module-fl4health.feature_alignment", false], [62, "module-fl4health.feature_alignment.constants", false], [63, "module-fl4health.feature_alignment.string_columns_transformer", false], [66, "module-fl4health.feature_alignment.tabular_feature", false], [67, "module-fl4health.feature_alignment.tabular_type", false], [68, "module-fl4health.losses", false], [69, "module-fl4health.losses.contrastive_loss", false], [70, "module-fl4health.losses.cosine_similarity_loss", false], [71, "module-fl4health.losses.deep_mmd_loss", false], [72, "module-fl4health.losses.fenda_loss_config", false], [73, "module-fl4health.losses.mkmmd_loss", false], [74, "module-fl4health.losses.perfcl_loss", false], [75, "module-fl4health.losses.weight_drift_loss", false], [76, "module-fl4health.metrics", false], [77, "module-fl4health.metrics.base_metrics", false], [78, "module-fl4health.metrics.compound_metrics", false], [79, "module-fl4health.metrics.efficient_metrics", false], [80, "module-fl4health.metrics.efficient_metrics_base", false], [81, "module-fl4health.metrics.metric_aggregation", false], [82, "module-fl4health.metrics.metric_managers", false], [83, "module-fl4health.metrics.metrics", false], [84, "module-fl4health.metrics.metrics_utils", false], [85, "module-fl4health.metrics.utils", false], [86, "module-fl4health.mixins", false], [87, "module-fl4health.mixins.adaptive_drift_constrained", false], [88, "module-fl4health.mixins.core_protocols", false], [89, "module-fl4health.mixins.personalized", false], [90, "module-fl4health.mixins.personalized.ditto", false], [91, "module-fl4health.mixins.personalized.utils", false], [92, "module-fl4health.model_bases", false], [93, "module-fl4health.model_bases.apfl_base", false], [94, "module-fl4health.model_bases.autoencoders_base", false], [95, "module-fl4health.model_bases.ensemble_base", false], [96, "module-fl4health.model_bases.feature_extractor_buffer", false], [97, "module-fl4health.model_bases.fedrep_base", false], [98, "module-fl4health.model_bases.fedsimclr_base", false], [99, "module-fl4health.model_bases.fenda_base", false], [100, "module-fl4health.model_bases.masked_layers", false], [101, "module-fl4health.model_bases.masked_layers.masked_conv", false], [102, "module-fl4health.model_bases.masked_layers.masked_layers_utils", false], [103, "module-fl4health.model_bases.masked_layers.masked_linear", false], [104, "module-fl4health.model_bases.masked_layers.masked_normalization_layers", false], [105, "module-fl4health.model_bases.moon_base", false], [106, "module-fl4health.model_bases.parallel_split_models", false], [107, "module-fl4health.model_bases.partial_layer_exchange_model", false], [108, "module-fl4health.model_bases.pca", false], [109, "module-fl4health.model_bases.perfcl_base", false], [110, "module-fl4health.model_bases.sequential_split_models", false], [111, "module-fl4health.parameter_exchange", false], [112, "module-fl4health.parameter_exchange.fedpm_exchanger", false], [113, "module-fl4health.parameter_exchange.full_exchanger", false], [114, "module-fl4health.parameter_exchange.layer_exchanger", false], [115, "module-fl4health.parameter_exchange.packing_exchanger", false], [116, "module-fl4health.parameter_exchange.parameter_exchanger_base", false], [117, "module-fl4health.parameter_exchange.parameter_packer", false], [118, "module-fl4health.parameter_exchange.parameter_selection_criteria", false], [119, "module-fl4health.parameter_exchange.partial_parameter_exchanger", false], [120, "module-fl4health.parameter_exchange.sparse_coo_parameter_exchanger", false], [121, "module-fl4health.preprocessing", false], [122, "module-fl4health.preprocessing.autoencoders", false], [123, "module-fl4health.preprocessing.autoencoders.dim_reduction", false], [124, "module-fl4health.preprocessing.autoencoders.loss", false], [125, "module-fl4health.preprocessing.pca_preprocessor", false], [126, "module-fl4health.preprocessing.warmed_up_module", false], [127, "module-fl4health.privacy", false], [128, "module-fl4health.privacy.fl_accountants", false], [129, "module-fl4health.privacy.moments_accountant", false], [130, "module-fl4health.reporting", false], [131, "module-fl4health.reporting.base_reporter", false], [132, "module-fl4health.reporting.json_reporter", false], [133, "module-fl4health.reporting.reports_manager", false], [134, "module-fl4health.reporting.wandb_reporter", false], [135, "module-fl4health.servers", false], [136, "module-fl4health.servers.adaptive_constraint_servers", false], [137, "module-fl4health.servers.adaptive_constraint_servers.ditto_server", false], [138, "module-fl4health.servers.adaptive_constraint_servers.fedprox_server", false], [139, "module-fl4health.servers.adaptive_constraint_servers.mrmtl_server", false], [140, "module-fl4health.servers.base_server", false], [141, "module-fl4health.servers.client_level_dp_fed_avg_server", false], [142, "module-fl4health.servers.evaluate_server", false], [143, "module-fl4health.servers.fedpm_server", false], [144, "module-fl4health.servers.instance_level_dp_server", false], [145, "module-fl4health.servers.model_merge_server", false], [146, "module-fl4health.servers.nnunet_server", false], [147, "module-fl4health.servers.polling", false], [148, "module-fl4health.servers.scaffold_server", false], [150, "module-fl4health.strategies", false], [151, "module-fl4health.strategies.aggregate_utils", false], [152, "module-fl4health.strategies.basic_fedavg", false], [153, "module-fl4health.strategies.client_dp_fedavgm", false], [154, "module-fl4health.strategies.fedavg_dynamic_layer", false], [155, "module-fl4health.strategies.fedavg_sparse_coo_tensor", false], [156, "module-fl4health.strategies.fedavg_with_adaptive_constraint", false], [157, "module-fl4health.strategies.feddg_ga", false], [158, "module-fl4health.strategies.feddg_ga_with_adaptive_constraint", false], [159, "module-fl4health.strategies.fedpca", false], [160, "module-fl4health.strategies.fedpm", false], [161, "module-fl4health.strategies.flash", false], [162, "module-fl4health.strategies.model_merge_strategy", false], [163, "module-fl4health.strategies.noisy_aggregate", false], [164, "module-fl4health.strategies.scaffold", false], [165, "module-fl4health.strategies.strategy_with_poll", false], [166, "module-fl4health.utils", false], [167, "module-fl4health.utils.client", false], [168, "module-fl4health.utils.config", false], [169, "module-fl4health.utils.data_generation", false], [170, "module-fl4health.utils.dataset", false], [171, "module-fl4health.utils.dataset_converter", false], [172, "module-fl4health.utils.early_stopper", false], [173, "module-fl4health.utils.functions", false], [174, "module-fl4health.utils.load_data", false], [175, "module-fl4health.utils.logging", false], [176, "module-fl4health.utils.losses", false], [178, "module-fl4health.utils.metrics", false], [179, "module-fl4health.utils.msd_dataset_sources", false], [180, "module-fl4health.utils.nnunet_utils", false], [181, "module-fl4health.utils.parameter_extraction", false], [182, "module-fl4health.utils.partitioners", false], [183, "module-fl4health.utils.peft_parameter_extraction", false], [184, "module-fl4health.utils.privacy_utilities", false], [185, "module-fl4health.utils.random", false], [186, "module-fl4health.utils.sampler", false], [187, "module-fl4health.utils.snapshotter", false], [188, "module-fl4health.utils.typing", false]], "module2losswrapper (class in fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.Module2LossWrapper", false]], "momentsaccountant (class in fl4health.privacy.moments_accountant)": [[129, "fl4health.privacy.moments_accountant.MomentsAccountant", false]], "moonclient (class in fl4health.clients.moon_client)": [[47, "fl4health.clients.moon_client.MoonClient", false]], "mooncontrastiveloss (class in fl4health.losses.contrastive_loss)": [[69, "fl4health.losses.contrastive_loss.MoonContrastiveLoss", false]], "mooncontrastivelosscontainer (class in fl4health.losses.fenda_loss_config)": [[72, "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer", false]], "moonmodel (class in fl4health.model_bases.moon_base)": [[105, "fl4health.model_bases.moon_base.MoonModel", false]], "move_data_to_device() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.move_data_to_device", false]], "mrmtlclient (class in fl4health.clients.mr_mtl_client)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient", false]], "mrmtlmkmmdclient (class in fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient", false]], "mrmtlserver (class in fl4health.servers.adaptive_constraint_servers.mrmtl_server)": [[139, "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer", false]], "msddataset (class in fl4health.utils.msd_dataset_sources)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset", false]], "multiclassdice (class in fl4health.metrics.efficient_metrics)": [[79, "fl4health.metrics.efficient_metrics.MultiClassDice", false]], "multiclassificationmetric (class in fl4health.metrics.efficient_metrics_base)": [[80, "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric", false]], "narrow_dict_type() (in module fl4health.utils.config)": [[168, "fl4health.utils.config.narrow_dict_type", false]], "narrow_dict_type_and_set_attribute() (in module fl4health.utils.config)": [[168, "fl4health.utils.config.narrow_dict_type_and_set_attribute", false]], "nnunetclient (class in fl4health.clients.nnunet_client)": [[49, "fl4health.clients.nnunet_client.NnunetClient", false]], "nnunetconfig (class in fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.NnunetConfig", false]], "nnunetdataloaderwrapper (class in fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper", false]], "nnunetserver (class in fl4health.servers.nnunet_server)": [[146, "fl4health.servers.nnunet_server.NnunetServer", false]], "nnunetservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule", false]], "nnunetserverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer", false]], "normalize() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.normalize", false]], "normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.normalize_metrics", false]], "notset (loglevel attribute)": [[188, "fl4health.utils.typing.LogLevel.NOTSET", false]], "ntxentloss (class in fl4health.losses.contrastive_loss)": [[69, "fl4health.losses.contrastive_loss.NtXentLoss", false]], "numeric (tabulartype attribute)": [[67, "fl4health.feature_alignment.tabular_type.TabularType.NUMERIC", false]], "numpyclientminimalprotocol (class in fl4health.mixins.core_protocols)": [[88, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol", false]], "numpyclippingclient (class in fl4health.clients.clipping_client)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient", false]], "one_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset.one_layer_map_inputs_to_outputs", false]], "opacusbasicfedavg (class in fl4health.strategies.basic_fedavg)": [[152, "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg", false]], "opacuscheckpointer (class in fl4health.checkpointing.opacus_checkpointer)": [[12, "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer", false]], "opacusscaffold (class in fl4health.strategies.scaffold)": [[164, "fl4health.strategies.scaffold.OpacusScaffold", false]], "opacusservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule", false]], "optimize_betas() (mkmmdloss method)": [[73, "fl4health.losses.mkmmd_loss.MkMmdLoss.optimize_betas", false]], "optimizer_keys (dittopersonalizedmixin property)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.optimizer_keys", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.optimizer_keys", false]], "optimizer_keys (dittopersonalizedprotocol attribute)": [[89, "fl4health.mixins.personalized.DittoPersonalizedProtocol.optimizer_keys", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizer_keys", false]], "optimizers (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.optimizers", false]], "optimizers (flexibleclientprotocol attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.optimizers", false]], "optimizersnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.OptimizerSnapshotter", false]], "ordinal (tabulartype attribute)": [[67, "fl4health.feature_alignment.tabular_type.TabularType.ORDINAL", false]], "pack_parameters() (fullparameterexchangerwithpacking method)": [[115, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.pack_parameters", false]], "pack_parameters() (parameterpacker method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.pack_parameters", false]], "pack_parameters() (parameterpackeradaptiveconstraint method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.pack_parameters", false]], "pack_parameters() (parameterpackerwithclippingbit method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.pack_parameters", false]], "pack_parameters() (parameterpackerwithcontrolvariates method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.pack_parameters", false]], "pack_parameters() (parameterpackerwithlayernames method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.pack_parameters", false]], "pack_parameters() (partialparameterexchanger method)": [[119, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.pack_parameters", false]], "pack_parameters() (sparsecooparameterpacker method)": [[117, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.pack_parameters", false]], "packingservercheckpointandandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule", false]], "pad_image_path_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.pad_image_path_func", false]], "pad_label_map_func() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.pad_label_map_func", false]], "pairwise_distance_squared() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.pairwise_distance_squared", false]], "parallel_output_join() (parallelsplitheadmodule method)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule.parallel_output_join", false]], "parallelfeaturejoinmode (class in fl4health.model_bases.parallel_split_models)": [[106, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode", false]], "parallelsplitheadmodule (class in fl4health.model_bases.parallel_split_models)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule", false]], "parallelsplitmodel (class in fl4health.model_bases.parallel_split_models)": [[106, "fl4health.model_bases.parallel_split_models.ParallelSplitModel", false]], "parameter_exchanger (adaptivedriftconstrainedprotocol attribute)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.parameter_exchanger", false]], "parameter_exchanger (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.parameter_exchanger", false]], "parameterexchanger (class in fl4health.parameter_exchange.parameter_exchanger_base)": [[116, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger", false]], "parameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPacker", false]], "parameterpackeradaptiveconstraint (class in fl4health.parameter_exchange.parameter_packer)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint", false]], "parameterpackerwithclippingbit (class in fl4health.parameter_exchange.parameter_packer)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit", false]], "parameterpackerwithcontrolvariates (class in fl4health.parameter_exchange.parameter_packer)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates", false]], "parameterpackerwithlayernames (class in fl4health.parameter_exchange.parameter_packer)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames", false]], "partiallayerexchangemodel (class in fl4health.model_bases.partial_layer_exchange_model)": [[107, "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel", false]], "partialparameterexchanger (class in fl4health.parameter_exchange.partial_parameter_exchanger)": [[119, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger", false]], "partialweightexchangeclient (class in fl4health.clients.partial_weight_exchange_client)": [[50, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient", false]], "partition_dataset() (dirichletlabelbasedallocation method)": [[182, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_dataset", false]], "partition_label_indices() (dirichletlabelbasedallocation method)": [[182, "fl4health.utils.partitioners.DirichletLabelBasedAllocation.partition_label_indices", false]], "pcamodule (class in fl4health.model_bases.pca)": [[108, "fl4health.model_bases.pca.PcaModule", false]], "pcapreprocessor (class in fl4health.preprocessing.pca_preprocessor)": [[125, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor", false]], "penalty_loss_function (adaptivedriftconstrainedprotocol attribute)": [[87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol.penalty_loss_function", false]], "penalty_loss_function (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.penalty_loss_function", false]], "perfclclient (class in fl4health.clients.perfcl_client)": [[51, "fl4health.clients.perfcl_client.PerFclClient", false]], "perfclloss (class in fl4health.losses.perfcl_loss)": [[74, "fl4health.losses.perfcl_loss.PerFclLoss", false]], "perfcllosscontainer (class in fl4health.losses.fenda_loss_config)": [[72, "fl4health.losses.fenda_loss_config.PerFclLossContainer", false]], "perfclmodel (class in fl4health.model_bases.perfcl_base)": [[109, "fl4health.model_bases.perfcl_base.PerFclModel", false]], "personalizedmode (class in fl4health.mixins.personalized)": [[89, "fl4health.mixins.personalized.PersonalizedMode", false]], "poissonsampling (class in fl4health.privacy.moments_accountant)": [[129, "fl4health.privacy.moments_accountant.PoissonSampling", false]], "poissonsamplingclientmanager (class in fl4health.client_managers.poisson_sampling_manager)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager", false]], "poll_client() (in module fl4health.servers.polling)": [[147, "fl4health.servers.polling.poll_client", false]], "poll_clients() (in module fl4health.servers.polling)": [[147, "fl4health.servers.polling.poll_clients", false]], "poll_clients_for_sample_counts() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.poll_clients_for_sample_counts", false]], "polylrschedulerwrapper (class in fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper", false]], "post_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.POST_AGGREGATION", false]], "pre_aggregation (checkpointmode attribute)": [[11, "fl4health.checkpointing.client_module.CheckpointMode.PRE_AGGREGATION", false]], "predict() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.predict", false]], "predict() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.predict", false]], "predict() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.predict", false]], "predict() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.predict", false]], "predict() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.predict", false]], "predict() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.predict", false]], "predict() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.predict", false]], "predict() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.predict", false]], "predict() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.predict", false]], "predict() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.predict", false]], "predict_with_model() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.predict_with_model", false]], "predict_with_model() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.predict_with_model", false]], "prepare_data_forward() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.prepare_data_forward", false]], "prepare_loss_arg() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.prepare_loss_arg", false]], "preprocess_derm7pt() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_derm7pt", false]], "preprocess_ham10000() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_ham10000", false]], "preprocess_isic_2019() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_isic_2019", false]], "preprocess_pad_ufes_20() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.preprocess_pad_ufes_20", false]], "privacy_validate_and_fix_modules() (in module fl4health.utils.privacy_utilities)": [[184, "fl4health.utils.privacy_utilities.privacy_validate_and_fix_modules", false]], "process_and_check_validation_steps() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.process_and_check_validation_steps", false]], "process_client_data() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.process_client_data", false]], "process_config() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.process_config", false]], "process_config() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.process_config", false]], "process_data() (in module fl4health.datasets.rxrx1.preprocess)": [[57, "fl4health.datasets.rxrx1.preprocess.process_data", false]], "process_fed_rep_config() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.process_fed_rep_config", false]], "project_back() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.project_back", false]], "project_lower_dim() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.project_lower_dim", false]], "pseudo_sort_scoring_function() (in module fl4health.utils.functions)": [[173, "fl4health.utils.functions.pseudo_sort_scoring_function", false]], "pull_parameters() (dynamiclayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.pull_parameters", false]], "pull_parameters() (fedpmexchanger method)": [[112, "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger.pull_parameters", false]], "pull_parameters() (fixedlayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.pull_parameters", false]], "pull_parameters() (fullparameterexchanger method)": [[113, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.pull_parameters", false]], "pull_parameters() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.pull_parameters", false]], "pull_parameters() (parameterexchanger method)": [[116, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.pull_parameters", false]], "pull_parameters() (sparsecooparameterexchanger method)": [[120, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.pull_parameters", false]], "push_parameters() (dynamiclayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.push_parameters", false]], "push_parameters() (fixedlayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger.push_parameters", false]], "push_parameters() (fullparameterexchanger method)": [[113, "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger.push_parameters", false]], "push_parameters() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.push_parameters", false]], "push_parameters() (parameterexchanger method)": [[116, "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger.push_parameters", false]], "push_parameters() (sparsecooparameterexchanger method)": [[120, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.push_parameters", false]], "reduce_dimension() (pcapreprocessor method)": [[125, "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor.reduce_dimension", false]], "reload_modules() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.reload_modules", false]], "remove_hooks() (featureextractorbuffer method)": [[96, "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer.remove_hooks", false]], "report() (basereporter method)": [[131, "fl4health.reporting.base_reporter.BaseReporter.report", false]], "report() (filereporter method)": [[132, "fl4health.reporting.json_reporter.FileReporter.report", false]], "report() (reportsmanager method)": [[133, "fl4health.reporting.reports_manager.ReportsManager.report", false]], "report() (wandbreporter method)": [[130, "fl4health.reporting.WandBReporter.report", false], [134, "fl4health.reporting.wandb_reporter.WandBReporter.report", false]], "report_centralized_eval() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.report_centralized_eval", false]], "reportsmanager (class in fl4health.reporting.reports_manager)": [[133, "fl4health.reporting.reports_manager.ReportsManager", false]], "representation (fedreptrainmode attribute)": [[36, "fl4health.clients.fedrep_client.FedRepTrainMode.REPRESENTATION", false]], "reset() (metricmanager method)": [[82, "fl4health.metrics.metric_managers.MetricManager.reset", false]], "reset() (nnunetdataloaderwrapper method)": [[180, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.reset", false]], "reset_beta_priors() (fedpm method)": [[160, "fl4health.strategies.fedpm.FedPm.reset_beta_priors", false]], "reset_sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.reset_sample", false]], "restore_random_state() (in module fl4health.utils.random)": [[185, "fl4health.utils.random.restore_random_state", false]], "rocauc (class in fl4health.metrics)": [[76, "fl4health.metrics.RocAuc", false]], "rocauc (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.RocAuc", false]], "round (wandbsteptype attribute)": [[130, "fl4health.reporting.WandBStepType.ROUND", false], [134, "fl4health.reporting.wandb_reporter.WandBStepType.ROUND", false]], "safe_global_model() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.safe_global_model", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.safe_global_model", false]], "safe_global_model() (dittopersonalizedprotocol method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedProtocol.safe_global_model", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.safe_global_model", false]], "sample() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample", false]], "sample() (fixedsamplingclientmanager method)": [[17, "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager.sample", false]], "sample_all() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_all", false]], "sample_fraction() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.sample_fraction", false]], "sample_fraction() (fixedsamplingbyfractionclientmanager method)": [[18, "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager.sample_fraction", false]], "sample_fraction() (poissonsamplingclientmanager method)": [[19, "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager.sample_fraction", false]], "sampling() (conditionalvae method)": [[94, "fl4health.model_bases.autoencoders_base.ConditionalVae.sampling", false]], "sampling() (variationalae method)": [[94, "fl4health.model_bases.autoencoders_base.VariationalAe.sampling", false]], "samplingstrategy (class in fl4health.privacy.moments_accountant)": [[129, "fl4health.privacy.moments_accountant.SamplingStrategy", false]], "save_attribute() (abstractsnapshotter method)": [[187, "fl4health.utils.snapshotter.AbstractSnapshotter.save_attribute", false]], "save_attribute() (bytessnapshotter method)": [[187, "fl4health.utils.snapshotter.BytesSnapshotter.save_attribute", false]], "save_attribute() (enumsnapshotter method)": [[187, "fl4health.utils.snapshotter.EnumSnapshotter.save_attribute", false]], "save_attribute() (historysnapshotter method)": [[187, "fl4health.utils.snapshotter.HistorySnapshotter.save_attribute", false]], "save_attribute() (lrschedulersnapshotter method)": [[187, "fl4health.utils.snapshotter.LRSchedulerSnapshotter.save_attribute", false]], "save_attribute() (optimizersnapshotter method)": [[187, "fl4health.utils.snapshotter.OptimizerSnapshotter.save_attribute", false]], "save_attribute() (serializableobjectsnapshotter method)": [[187, "fl4health.utils.snapshotter.SerializableObjectSnapshotter.save_attribute", false]], "save_attribute() (singletonsnapshotter method)": [[187, "fl4health.utils.snapshotter.SingletonSnapshotter.save_attribute", false]], "save_attribute() (stringsnapshotter method)": [[187, "fl4health.utils.snapshotter.StringSnapshotter.save_attribute", false]], "save_attribute() (torchmodulesnapshotter method)": [[187, "fl4health.utils.snapshotter.TorchModuleSnapshotter.save_attribute", false]], "save_checkpoint() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_checkpoint", false]], "save_client_state() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.save_client_state", false]], "save_model() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.save_model", false]], "save_random_state() (in module fl4health.utils.random)": [[185, "fl4health.utils.random.save_random_state", false]], "save_server_state() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.save_server_state", false]], "save_state() (baseservercheckpointandstatemodule method)": [[13, "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule.save_state", false]], "save_state() (clientcheckpointandstatemodule method)": [[11, "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule.save_state", false]], "save_state() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.save_state", false]], "save_to_json() (in module fl4health.datasets.skin_cancer.preprocess_skin)": [[60, "fl4health.datasets.skin_cancer.preprocess_skin.save_to_json", false]], "save_to_pkl() (in module fl4health.datasets.rxrx1.preprocess)": [[57, "fl4health.datasets.rxrx1.preprocess.save_to_pkl", false]], "scaffold (class in fl4health.strategies.scaffold)": [[164, "fl4health.strategies.scaffold.Scaffold", false]], "scaffoldclient (class in fl4health.clients.scaffold_client)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient", false]], "scaffoldserver (class in fl4health.servers.scaffold_server)": [[148, "fl4health.servers.scaffold_server.ScaffoldServer", false]], "scaffoldservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule", false]], "select_by_indices() (in module fl4health.utils.dataset)": [[170, "fl4health.utils.dataset.select_by_indices", false]], "select_by_percentage() (layerselectionfunctionconstructor method)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_percentage", false]], "select_by_threshold() (layerselectionfunctionconstructor method)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor.select_by_threshold", false]], "select_layers_by_percentage() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_percentage", false]], "select_layers_by_threshold() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.select_layers_by_threshold", false]], "select_parameters() (dynamiclayerexchanger method)": [[114, "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger.select_parameters", false]], "select_parameters() (partialparameterexchanger method)": [[119, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.select_parameters", false]], "select_parameters() (sparsecooparameterexchanger method)": [[120, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger.select_parameters", false]], "select_scores_and_sample_masks() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.select_scores_and_sample_masks", false]], "select_zeroeth_element() (in module fl4health.utils.functions)": [[173, "fl4health.utils.functions.select_zeroeth_element", false]], "sequential_forward() (moonmodel method)": [[105, "fl4health.model_bases.moon_base.MoonModel.sequential_forward", false]], "sequential_forward() (sequentiallysplitmodel method)": [[110, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel.sequential_forward", false]], "sequentiallysplitexchangebasemodel (class in fl4health.model_bases.sequential_split_models)": [[110, "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel", false]], "sequentiallysplitmodel (class in fl4health.model_bases.sequential_split_models)": [[110, "fl4health.model_bases.sequential_split_models.SequentiallySplitModel", false]], "serializableobjectsnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.SerializableObjectSnapshotter", false]], "serverstatecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer", false]], "set_all_random_seeds() (in module fl4health.utils.random)": [[185, "fl4health.utils.random.set_all_random_seeds", false]], "set_attribute() (clientstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer.set_attribute", false]], "set_attribute() (serverstatecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer.set_attribute", false]], "set_attribute() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_attribute", false]], "set_checkpoint_path() (statecheckpointer method)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer.set_checkpoint_path", false]], "set_data_mean() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.set_data_mean", false]], "set_fit_request() (textcolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_fit_request", false]], "set_fit_request() (textmulticolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_fit_request", false]], "set_initial_global_tensors() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_initial_global_tensors", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_initial_global_tensors", false]], "set_initial_global_tensors() (dittopersonalizedprotocol method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedProtocol.set_initial_global_tensors", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.set_initial_global_tensors", false]], "set_initial_global_tensors() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_initial_global_tensors", false]], "set_nnunet_env() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.set_nnunet_env", false]], "set_optimizer() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.set_optimizer", false]], "set_optimizer() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_optimizer", false]], "set_optimizer() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_optimizer", false]], "set_optimizer() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_optimizer", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_optimizer", false]], "set_optimizer() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.set_optimizer", false]], "set_optimizer() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.set_optimizer", false]], "set_pack_losses_with_val_metrics() (in module fl4health.utils.client)": [[167, "fl4health.utils.client.set_pack_losses_with_val_metrics", false]], "set_parameters() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.set_parameters", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.set_parameters", false]], "set_parameters() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.set_parameters", false]], "set_parameters() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.set_parameters", false]], "set_parameters() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.set_parameters", false]], "set_parameters() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.set_parameters", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.set_parameters", false]], "set_parameters() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.set_parameters", false]], "set_parameters() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.set_parameters", false]], "set_parameters() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.set_parameters", false]], "set_parameters() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.set_parameters", false]], "set_parameters() (mrmtlclient method)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient.set_parameters", false]], "set_parameters() (numpyclientminimalprotocol method)": [[88, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.set_parameters", false]], "set_parameters() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.set_parameters", false]], "set_parameters() (partialweightexchangeclient method)": [[50, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.set_parameters", false]], "set_parameters() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.set_parameters", false]], "set_principal_components() (pcamodule method)": [[108, "fl4health.model_bases.pca.PcaModule.set_principal_components", false]], "set_transform_request() (textcolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.set_transform_request", false]], "set_transform_request() (textmulticolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.set_transform_request", false]], "setup_client() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.setup_client", false]], "setup_client() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.setup_client", false]], "setup_client() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.setup_client", false]], "setup_client() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.setup_client", false]], "setup_client() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.setup_client", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.setup_client", false]], "setup_client() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.setup_client", false]], "setup_client() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.setup_client", false]], "setup_client() (fedbnclient method)": [[33, "fl4health.clients.fedbn_client.FedBnClient.setup_client", false]], "setup_client() (fedpcaclient method)": [[31, "fl4health.clients.fed_pca_client.FedPCAClient.setup_client", false]], "setup_client() (fedpmclient method)": [[35, "fl4health.clients.fedpm_client.FedPmClient.setup_client", false]], "setup_client() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.setup_client", false]], "setup_client() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.setup_client", false]], "setup_client() (flexibleclientprotocolpresetup method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup.setup_client", false]], "setup_client() (instanceleveldpclient method)": [[42, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_client", false]], "setup_client() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.setup_client", false]], "setup_client() (mrmtlclient method)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient.setup_client", false]], "setup_client() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.setup_client", false]], "setup_client() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.setup_client", false]], "setup_client() (numpyclippingclient method)": [[24, "fl4health.clients.clipping_client.NumpyClippingClient.setup_client", false]], "setup_client() (partialweightexchangeclient method)": [[50, "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient.setup_client", false]], "setup_client() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.setup_client", false]], "setup_context() (bernoullisample static method)": [[173, "fl4health.utils.functions.BernoulliSample.setup_context", false]], "setup_opacus_objects() (instanceleveldpclient method)": [[42, "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient.setup_opacus_objects", false]], "setup_privacy_accountant() (clientleveldpfedavgserver method)": [[141, "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer.setup_privacy_accountant", false]], "setup_privacy_accountant() (instanceleveldpserver method)": [[144, "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer.setup_privacy_accountant", false]], "should_layer_be_excluded() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_layer_be_excluded", false]], "should_module_be_excluded() (layerexchangerwithexclusions method)": [[114, "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions.should_module_be_excluded", false]], "should_stop() (earlystopper method)": [[172, "fl4health.utils.early_stopper.EarlyStopper.should_stop", false]], "shutdown() (basereporter method)": [[131, "fl4health.reporting.base_reporter.BaseReporter.shutdown", false]], "shutdown() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.shutdown", false]], "shutdown() (filereporter method)": [[132, "fl4health.reporting.json_reporter.FileReporter.shutdown", false]], "shutdown() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.shutdown", false]], "shutdown() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.shutdown", false]], "shutdown() (nnunetdataloaderwrapper method)": [[180, "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper.shutdown", false]], "shutdown() (reportsmanager method)": [[133, "fl4health.reporting.reports_manager.ReportsManager.shutdown", false]], "shutdown() (wandbreporter method)": [[130, "fl4health.reporting.WandBReporter.shutdown", false], [134, "fl4health.reporting.wandb_reporter.WandBReporter.shutdown", false]], "shutdown_dataloader() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.shutdown_dataloader", false]], "sigmoid_inverse() (in module fl4health.utils.functions)": [[173, "fl4health.utils.functions.sigmoid_inverse", false]], "signal_for_type() (fairnessmetrictype class method)": [[157, "fl4health.strategies.feddg_ga.FairnessMetricType.signal_for_type", false]], "signalfortypeerror": [[157, "fl4health.strategies.feddg_ga.SignalForTypeError", false]], "simplemetric (class in fl4health.metrics)": [[76, "fl4health.metrics.SimpleMetric", false]], "simplemetric (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.SimpleMetric", false]], "singletonsnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.SingletonSnapshotter", false]], "smallest_final_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_final_magnitude_scores", false]], "smallest_increase_in_magnitude_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_increase_in_magnitude_scores", false]], "smallest_magnitude_change_scores() (in module fl4health.parameter_exchange.parameter_selection_criteria)": [[118, "fl4health.parameter_exchange.parameter_selection_criteria.smallest_magnitude_change_scores", false]], "sparsecooparameterexchanger (class in fl4health.parameter_exchange.sparse_coo_parameter_exchanger)": [[120, "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger", false]], "sparsecooparameterpacker (class in fl4health.parameter_exchange.parameter_packer)": [[117, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker", false]], "sparsecooservercheckpointandstatemodule (class in fl4health.checkpointing.server_module)": [[13, "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule", false]], "split_data_and_targets() (in module fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.split_data_and_targets", false]], "split_model_weights_and_clipping_bits() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.split_model_weights_and_clipping_bits", false]], "ssltensordataset (class in fl4health.utils.dataset)": [[170, "fl4health.utils.dataset.SslTensorDataset", false]], "standard_normal_kl_divergence_loss() (vaeloss method)": [[124, "fl4health.preprocessing.autoencoders.loss.VaeLoss.standard_normal_kl_divergence_loss", false]], "start_run() (wandbreporter method)": [[130, "fl4health.reporting.WandBReporter.start_run", false], [134, "fl4health.reporting.wandb_reporter.WandBReporter.start_run", false]], "statecheckpointer (class in fl4health.checkpointing.state_checkpointer)": [[14, "fl4health.checkpointing.state_checkpointer.StateCheckpointer", false]], "step (wandbsteptype attribute)": [[130, "fl4health.reporting.WandBStepType.STEP", false], [134, "fl4health.reporting.wandb_reporter.WandBStepType.STEP", false]], "strategywithpolling (class in fl4health.strategies.strategy_with_poll)": [[165, "fl4health.strategies.strategy_with_poll.StrategyWithPolling", false]], "streamtologger (class in fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.StreamToLogger", false]], "string (tabulartype attribute)": [[67, "fl4health.feature_alignment.tabular_type.TabularType.STRING", false]], "stringsnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.StringSnapshotter", false]], "subsample() (dirichletlabelbasedsampler method)": [[186, "fl4health.utils.sampler.DirichletLabelBasedSampler.subsample", false]], "subsample() (labelbasedsampler method)": [[186, "fl4health.utils.sampler.LabelBasedSampler.subsample", false]], "subsample() (minoritylabelbasedsampler method)": [[186, "fl4health.utils.sampler.MinorityLabelBasedSampler.subsample", false]], "sum (parallelfeaturejoinmode attribute)": [[106, "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode.SUM", false]], "syntheticdataset (class in fl4health.utils.dataset)": [[170, "fl4health.utils.dataset.SyntheticDataset", false]], "syntheticfedproxdataset (class in fl4health.utils.data_generation)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset", false]], "syntheticiidfedproxdataset (class in fl4health.utils.data_generation)": [[169, "fl4health.utils.data_generation.SyntheticIidFedProxDataset", false]], "syntheticnoniidfedproxdataset (class in fl4health.utils.data_generation)": [[169, "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset", false]], "tabularfeature (class in fl4health.feature_alignment.tabular_feature)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature", false]], "tabulartype (class in fl4health.feature_alignment.tabular_type)": [[67, "fl4health.feature_alignment.tabular_type.TabularType", false]], "task01_braintumour (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK01_BRAINTUMOUR", false]], "task02_heart (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK02_HEART", false]], "task03_liver (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK03_LIVER", false]], "task04_hippocampus (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK04_HIPPOCAMPUS", false]], "task05_prostate (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK05_PROSTATE", false]], "task06_lung (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK06_LUNG", false]], "task07_pancreas (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK07_PANCREAS", false]], "task08_hepaticvessel (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK08_HEPATICVESSEL", false]], "task09_spleen (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK09_SPLEEN", false]], "task10_colon (msddataset attribute)": [[179, "fl4health.utils.msd_dataset_sources.MsdDataset.TASK10_COLON", false]], "tensordataset (class in fl4health.utils.dataset)": [[170, "fl4health.utils.dataset.TensorDataset", false]], "test (loggingmode attribute)": [[175, "fl4health.utils.logging.LoggingMode.TEST", false]], "test_loader (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.test_loader", false]], "test_loader (flexibleclientprotocol attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.test_loader", false]], "test_prefix (metricprefix attribute)": [[77, "fl4health.metrics.base_metrics.MetricPrefix.TEST_PREFIX", false]], "textcolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer", false]], "textmulticolumntransformer (class in fl4health.feature_alignment.string_columns_transformer)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer", false]], "threshold_tensor() (in module fl4health.metrics.metrics_utils)": [[84, "fl4health.metrics.metrics_utils.threshold_tensor", false]], "to_json() (tabularfeature method)": [[66, "fl4health.feature_alignment.tabular_feature.TabularFeature.to_json", false]], "tonumpy (class in fl4health.utils.load_data)": [[174, "fl4health.utils.load_data.ToNumpy", false]], "torchmetric (class in fl4health.metrics)": [[76, "fl4health.metrics.TorchMetric", false]], "torchmetric (class in fl4health.metrics.metrics)": [[83, "fl4health.metrics.metrics.TorchMetric", false]], "torchmodulecheckpointer (class in fl4health.checkpointing.checkpointer)": [[10, "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer", false]], "torchmodulesnapshotter (class in fl4health.utils.snapshotter)": [[187, "fl4health.utils.snapshotter.TorchModuleSnapshotter", false]], "train (loggingmode attribute)": [[175, "fl4health.utils.logging.LoggingMode.TRAIN", false]], "train_by_epochs() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_epochs", false]], "train_by_epochs() (flashclient method)": [[39, "fl4health.clients.flash_client.FlashClient.train_by_epochs", false]], "train_by_steps() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_by_steps", false]], "train_fedrep_by_epochs() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_epochs", false]], "train_fedrep_by_steps() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_fedrep_by_steps", false]], "train_kernel() (deepmmdloss method)": [[71, "fl4health.losses.deep_mmd_loss.DeepMmdLoss.train_kernel", false]], "train_loader (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.train_loader", false]], "train_loader (flexibleclientprotocol attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.train_loader", false]], "train_step() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.train_step", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.train_step", false]], "train_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.train_step", false]], "train_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.train_step", false]], "train_step() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.train_step", false]], "train_step() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.train_step", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.train_step", false]], "train_step() (ensembleclient method)": [[29, "fl4health.clients.ensemble_client.EnsembleClient.train_step", false]], "train_step() (fedrepclient method)": [[36, "fl4health.clients.fedrep_client.FedRepClient.train_step", false]], "train_step() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.train_step", false]], "train_step() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.train_step", false]], "traininglosses (class in fl4health.utils.losses)": [[176, "fl4health.utils.losses.TrainingLosses", false]], "transform() (textcolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer.transform", false]], "transform() (textmulticolumntransformer method)": [[63, "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer.transform", false]], "transform_gradients() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_gradients", false]], "transform_gradients() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.transform_gradients", false]], "transform_gradients() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_gradients", false]], "transform_gradients() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.transform_gradients", false]], "transform_gradients() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.transform_gradients", false]], "transform_target() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.transform_target", false]], "transform_target() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.transform_target", false]], "transformsmetric (class in fl4health.metrics.compound_metrics)": [[78, "fl4health.metrics.compound_metrics.TransformsMetric", false]], "true_negative (metricoutcome attribute)": [[80, "fl4health.metrics.efficient_metrics_base.MetricOutcome.TRUE_NEGATIVE", false]], "true_positive (metricoutcome attribute)": [[80, "fl4health.metrics.efficient_metrics_base.MetricOutcome.TRUE_POSITIVE", false]], "two_layer_map_inputs_to_outputs() (syntheticfedproxdataset method)": [[169, "fl4health.utils.data_generation.SyntheticFedProxDataset.two_layer_map_inputs_to_outputs", false]], "unfreeze_base_module() (fedrepmodel method)": [[97, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_base_module", false]], "unfreeze_head_module() (fedrepmodel method)": [[97, "fl4health.model_bases.fedrep_base.FedRepModel.unfreeze_head_module", false]], "uniform_evaluate_metrics_aggregation_fn() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.uniform_evaluate_metrics_aggregation_fn", false]], "uniform_metric_aggregation() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.uniform_metric_aggregation", false]], "uniform_normalize_metrics() (in module fl4health.metrics.metric_aggregation)": [[81, "fl4health.metrics.metric_aggregation.uniform_normalize_metrics", false]], "unpack_input_condition() (autoencoderdatasetconverter static method)": [[171, "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter.unpack_input_condition", false]], "unpack_model_output() (vaeloss method)": [[124, "fl4health.preprocessing.autoencoders.loss.VaeLoss.unpack_model_output", false]], "unpack_parameters() (fullparameterexchangerwithpacking method)": [[115, "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking.unpack_parameters", false]], "unpack_parameters() (parameterpacker method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPacker.unpack_parameters", false]], "unpack_parameters() (parameterpackeradaptiveconstraint method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithclippingbit method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithcontrolvariates method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates.unpack_parameters", false]], "unpack_parameters() (parameterpackerwithlayernames method)": [[117, "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames.unpack_parameters", false]], "unpack_parameters() (partialparameterexchanger method)": [[119, "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger.unpack_parameters", false]], "unpack_parameters() (sparsecooparameterpacker method)": [[117, "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker.unpack_parameters", false]], "unset_all_random_seeds() (in module fl4health.utils.random)": [[185, "fl4health.utils.random.unset_all_random_seeds", false]], "unweighted_aggregate() (fedavgdynamiclayer method)": [[154, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.unweighted_aggregate", false]], "unweighted_aggregate() (fedavgsparsecootensor method)": [[155, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.unweighted_aggregate", false]], "update() (classificationmetric method)": [[80, "fl4health.metrics.efficient_metrics_base.ClassificationMetric.update", false]], "update() (emametric method)": [[78, "fl4health.metrics.compound_metrics.EmaMetric.update", false]], "update() (lossmeter method)": [[176, "fl4health.utils.losses.LossMeter.update", false]], "update() (metric method)": [[77, "fl4health.metrics.base_metrics.Metric.update", false]], "update() (metricmanager method)": [[82, "fl4health.metrics.metric_managers.MetricManager.update", false]], "update() (simplemetric method)": [[76, "fl4health.metrics.SimpleMetric.update", false], [83, "fl4health.metrics.metrics.SimpleMetric.update", false]], "update() (torchmetric method)": [[76, "fl4health.metrics.TorchMetric.update", false], [83, "fl4health.metrics.metrics.TorchMetric.update", false]], "update() (transformsmetric method)": [[78, "fl4health.metrics.compound_metrics.TransformsMetric.update", false]], "update_after_step() (apflclient method)": [[22, "fl4health.clients.apfl_client.ApflClient.update_after_step", false]], "update_after_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_step", false]], "update_after_step() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_after_step", false]], "update_after_step() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_after_step", false]], "update_after_step() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_after_step", false]], "update_after_train() (adaptivedriftconstrainedmixin method)": [[86, "fl4health.mixins.AdaptiveDriftConstrainedMixin.update_after_train", false], [87, "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin.update_after_train", false]], "update_after_train() (adaptivedriftconstraintclient method)": [[21, "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient.update_after_train", false]], "update_after_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_after_train", false]], "update_after_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_after_train", false]], "update_after_train() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.update_after_train", false]], "update_after_train() (numpyclientminimalprotocol method)": [[88, "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol.update_after_train", false]], "update_after_train() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.update_after_train", false]], "update_after_train() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.update_after_train", false]], "update_alpha() (apflmodule method)": [[93, "fl4health.model_bases.apfl_base.ApflModule.update_alpha", false]], "update_before_epoch() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_epoch", false]], "update_before_fit() (flserver method)": [[140, "fl4health.servers.base_server.FlServer.update_before_fit", false]], "update_before_fit() (nnunetserver method)": [[146, "fl4health.servers.nnunet_server.NnunetServer.update_before_fit", false]], "update_before_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_step", false]], "update_before_train() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_before_train", false]], "update_before_train() (constrainedfendaclient method)": [[25, "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient.update_before_train", false]], "update_before_train() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.update_before_train", false]], "update_before_train() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_before_train", false]], "update_before_train() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_before_train", false]], "update_before_train() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.update_before_train", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.update_before_train", false]], "update_before_train() (fedproxclient method)": [[32, "fl4health.clients.fed_prox_client.FedProxClient.update_before_train", false]], "update_before_train() (fendadittoclient method)": [[38, "fl4health.clients.fenda_ditto_client.FendaDittoClient.update_before_train", false]], "update_before_train() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.update_before_train", false]], "update_before_train() (moonclient method)": [[47, "fl4health.clients.moon_client.MoonClient.update_before_train", false]], "update_before_train() (mrmtlclient method)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient.update_before_train", false]], "update_before_train() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_before_train", false]], "update_before_train() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.update_before_train", false]], "update_before_train() (perfclclient method)": [[51, "fl4health.clients.perfcl_client.PerFclClient.update_before_train", false]], "update_buffers() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.update_buffers", false]], "update_buffers() (dittomkmmdclient method)": [[44, "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient.update_buffers", false]], "update_buffers() (mrmtlmkmmdclient method)": [[45, "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient.update_buffers", false]], "update_clipping_bound() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_clipping_bound", false]], "update_control_variates() (scaffoldclient method)": [[52, "fl4health.clients.scaffold_client.ScaffoldClient.update_control_variates", false]], "update_current_weights() (clientleveldpfedavgm method)": [[153, "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM.update_current_weights", false]], "update_lr_schedulers() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_lr_schedulers", false]], "update_metric_manager() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.update_metric_manager", false]], "update_metric_manager() (nnunetclient method)": [[49, "fl4health.clients.nnunet_client.NnunetClient.update_metric_manager", false]], "update_target_transform() (basedataset method)": [[170, "fl4health.utils.dataset.BaseDataset.update_target_transform", false]], "update_transform() (basedataset method)": [[170, "fl4health.utils.dataset.BaseDataset.update_transform", false]], "update_weights_by_ga() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.update_weights_by_ga", false]], "use_default_signal_handlers() (in module fl4health.utils.nnunet_utils)": [[180, "fl4health.utils.nnunet_utils.use_default_signal_handlers", false]], "vaeloss (class in fl4health.preprocessing.autoencoders.loss)": [[124, "fl4health.preprocessing.autoencoders.loss.VaeLoss", false]], "vaeprocessor (class in fl4health.preprocessing.autoencoders.dim_reduction)": [[123, "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor", false]], "val_loader (dittopersonalizedprotocol attribute)": [[90, "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol.val_loader", false]], "val_loader (flexibleclientprotocol attribute)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.val_loader", false]], "val_prefix (metricprefix attribute)": [[77, "fl4health.metrics.base_metrics.MetricPrefix.VAL_PREFIX", false]], "val_step() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.val_step", false]], "val_step() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.val_step", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.val_step", false]], "val_step() (flexibleclient method)": [[41, "fl4health.clients.flexible.base.FlexibleClient.val_step", false]], "validate() (basicclient method)": [[23, "fl4health.clients.basic_client.BasicClient.validate", false]], "validate() (dittoclient method)": [[28, "fl4health.clients.ditto_client.DittoClient.validate", false]], "validate() (dittodeepmmdclient method)": [[27, "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient.validate", false]], "validate() (dittopersonalizedmixin method)": [[89, "fl4health.mixins.personalized.DittoPersonalizedMixin.validate", false], [90, "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin.validate", false]], "validate() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate", false]], "validate() (flexibleclientprotocol method)": [[88, "fl4health.mixins.core_protocols.FlexibleClientProtocol.validate", false]], "validate() (modelmergeclient method)": [[46, "fl4health.clients.model_merge_client.ModelMergeClient.validate", false]], "validate() (mrmtlclient method)": [[48, "fl4health.clients.mr_mtl_client.MrMtlClient.validate", false]], "validate_on_model() (evaluateclient method)": [[30, "fl4health.clients.evaluate_client.EvaluateClient.validate_on_model", false]], "validation (loggingmode attribute)": [[175, "fl4health.utils.logging.LoggingMode.VALIDATION", false]], "variationalae (class in fl4health.model_bases.autoencoders_base)": [[94, "fl4health.model_bases.autoencoders_base.VariationalAe", false]], "vote (ensembleaggregationmode attribute)": [[95, "fl4health.model_bases.ensemble_base.EnsembleAggregationMode.VOTE", false]], "wait_and_filter() (basefractionsamplingmanager method)": [[16, "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager.wait_and_filter", false]], "wandbreporter (class in fl4health.reporting)": [[130, "fl4health.reporting.WandBReporter", false]], "wandbreporter (class in fl4health.reporting.wandb_reporter)": [[134, "fl4health.reporting.wandb_reporter.WandBReporter", false]], "wandbsteptype (class in fl4health.reporting)": [[130, "fl4health.reporting.WandBStepType", false]], "wandbsteptype (class in fl4health.reporting.wandb_reporter)": [[134, "fl4health.reporting.wandb_reporter.WandBStepType", false]], "warmedupmodule (class in fl4health.preprocessing.warmed_up_module)": [[126, "fl4health.preprocessing.warmed_up_module.WarmedUpModule", false]], "warning (loglevel attribute)": [[188, "fl4health.utils.typing.LogLevel.WARNING", false]], "weight_and_aggregate_results() (feddgga method)": [[157, "fl4health.strategies.feddg_ga.FedDgGa.weight_and_aggregate_results", false]], "weightdriftloss (class in fl4health.losses.weight_drift_loss)": [[75, "fl4health.losses.weight_drift_loss.WeightDriftLoss", false]], "weighted_aggregate() (fedavgdynamiclayer method)": [[154, "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer.weighted_aggregate", false]], "weighted_aggregate() (fedavgsparsecootensor method)": [[155, "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor.weighted_aggregate", false]], "write() (streamtologger method)": [[180, "fl4health.utils.nnunet_utils.StreamToLogger.write", false]]}, "objects": {"": [[8, 0, 0, "-", "fl4health"]], "fl4health": [[9, 0, 0, "-", "checkpointing"], [15, 0, 0, "-", "client_managers"], [20, 0, 0, "-", "clients"], [54, 0, 0, "-", "datasets"], [61, 0, 0, "-", "feature_alignment"], [68, 0, 0, "-", "losses"], [76, 0, 0, "-", "metrics"], [86, 0, 0, "-", "mixins"], [92, 0, 0, "-", "model_bases"], [111, 0, 0, "-", "parameter_exchange"], [121, 0, 0, "-", "preprocessing"], [127, 0, 0, "-", "privacy"], [130, 0, 0, "-", "reporting"], [135, 0, 0, "-", "servers"], [150, 0, 0, "-", "strategies"], [166, 0, 0, "-", "utils"]], "fl4health.checkpointing": [[10, 0, 0, "-", "checkpointer"], [11, 0, 0, "-", "client_module"], [12, 0, 0, "-", "opacus_checkpointer"], [13, 0, 0, "-", "server_module"], [14, 0, 0, "-", "state_checkpointer"]], "fl4health.checkpointing.checkpointer": [[10, 1, 1, "", "BestLossTorchModuleCheckpointer"], [10, 1, 1, "", "BestMetricTorchModuleCheckpointer"], [10, 1, 1, "", "FunctionTorchModuleCheckpointer"], [10, 1, 1, "", "LatestTorchModuleCheckpointer"], [10, 1, 1, "", "TorchModuleCheckpointer"]], "fl4health.checkpointing.checkpointer.BestLossTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.BestMetricTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"]], "fl4health.checkpointing.checkpointer.FunctionTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.LatestTorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.checkpointer.TorchModuleCheckpointer": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "load_checkpoint"], [10, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.client_module": [[11, 1, 1, "", "CheckpointMode"], [11, 1, 1, "", "ClientCheckpointAndStateModule"]], "fl4health.checkpointing.client_module.CheckpointMode": [[11, 3, 1, "", "POST_AGGREGATION"], [11, 3, 1, "", "PRE_AGGREGATION"]], "fl4health.checkpointing.client_module.ClientCheckpointAndStateModule": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "maybe_checkpoint"], [11, 2, 1, "", "maybe_load_state"], [11, 2, 1, "", "save_state"]], "fl4health.checkpointing.opacus_checkpointer": [[12, 1, 1, "", "BestLossOpacusCheckpointer"], [12, 1, 1, "", "LatestOpacusCheckpointer"], [12, 1, 1, "", "OpacusCheckpointer"]], "fl4health.checkpointing.opacus_checkpointer.BestLossOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.LatestOpacusCheckpointer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.opacus_checkpointer.OpacusCheckpointer": [[12, 2, 1, "", "load_best_checkpoint_into_model"], [12, 2, 1, "", "load_checkpoint"], [12, 2, 1, "", "maybe_checkpoint"]], "fl4health.checkpointing.server_module": [[13, 1, 1, "", "AdaptiveConstraintServerCheckpointAndStateModule"], [13, 1, 1, "", "BaseServerCheckpointAndStateModule"], [13, 1, 1, "", "ClippingBitServerCheckpointAndStateModule"], [13, 1, 1, "", "DpScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "LayerNamesServerCheckpointAndStateModule"], [13, 1, 1, "", "NnUnetServerCheckpointAndStateModule"], [13, 1, 1, "", "OpacusServerCheckpointAndStateModule"], [13, 1, 1, "", "PackingServerCheckpointAndAndStateModule"], [13, 1, 1, "", "ScaffoldServerCheckpointAndStateModule"], [13, 1, 1, "", "SparseCooServerCheckpointAndStateModule"]], "fl4health.checkpointing.server_module.AdaptiveConstraintServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.BaseServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "maybe_checkpoint"], [13, 2, 1, "", "maybe_load_state"], [13, 2, 1, "", "save_state"]], "fl4health.checkpointing.server_module.ClippingBitServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.DpScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.LayerNamesServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.NnUnetServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.OpacusServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.PackingServerCheckpointAndAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.ScaffoldServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.server_module.SparseCooServerCheckpointAndStateModule": [[13, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer": [[14, 1, 1, "", "ClientStateCheckpointer"], [14, 1, 1, "", "NnUnetServerStateCheckpointer"], [14, 1, 1, "", "ServerStateCheckpointer"], [14, 1, 1, "", "StateCheckpointer"]], "fl4health.checkpointing.state_checkpointer.ClientStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_client_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_client_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.NnUnetServerStateCheckpointer": [[14, 2, 1, "", "__init__"]], "fl4health.checkpointing.state_checkpointer.ServerStateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "maybe_load_server_state"], [14, 2, 1, "", "maybe_set_default_checkpoint_name"], [14, 2, 1, "", "save_server_state"], [14, 2, 1, "", "set_attribute"]], "fl4health.checkpointing.state_checkpointer.StateCheckpointer": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "add_to_snapshot_attr"], [14, 2, 1, "", "checkpoint_exists"], [14, 2, 1, "", "delete_from_snapshot_attr"], [14, 2, 1, "", "get_attribute"], [14, 2, 1, "", "load_checkpoint"], [14, 2, 1, "", "load_state"], [14, 2, 1, "", "save_checkpoint"], [14, 2, 1, "", "save_state"], [14, 2, 1, "", "set_attribute"], [14, 2, 1, "", "set_checkpoint_path"]], "fl4health.client_managers": [[16, 0, 0, "-", "base_sampling_manager"], [17, 0, 0, "-", "fixed_sampling_client_manager"], [18, 0, 0, "-", "fixed_without_replacement_manager"], [19, 0, 0, "-", "poisson_sampling_manager"]], "fl4health.client_managers.base_sampling_manager": [[16, 1, 1, "", "BaseFractionSamplingManager"]], "fl4health.client_managers.base_sampling_manager.BaseFractionSamplingManager": [[16, 2, 1, "", "sample"], [16, 2, 1, "", "sample_all"], [16, 2, 1, "", "sample_fraction"], [16, 2, 1, "", "wait_and_filter"]], "fl4health.client_managers.fixed_sampling_client_manager": [[17, 1, 1, "", "FixedSamplingClientManager"]], "fl4health.client_managers.fixed_sampling_client_manager.FixedSamplingClientManager": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "reset_sample"], [17, 2, 1, "", "sample"]], "fl4health.client_managers.fixed_without_replacement_manager": [[18, 1, 1, "", "FixedSamplingByFractionClientManager"]], "fl4health.client_managers.fixed_without_replacement_manager.FixedSamplingByFractionClientManager": [[18, 2, 1, "", "sample_fraction"]], "fl4health.client_managers.poisson_sampling_manager": [[19, 1, 1, "", "PoissonSamplingClientManager"]], "fl4health.client_managers.poisson_sampling_manager.PoissonSamplingClientManager": [[19, 2, 1, "", "sample_fraction"]], "fl4health.clients": [[21, 0, 0, "-", "adaptive_drift_constraint_client"], [22, 0, 0, "-", "apfl_client"], [23, 0, 0, "-", "basic_client"], [24, 0, 0, "-", "clipping_client"], [25, 0, 0, "-", "constrained_fenda_client"], [26, 0, 0, "-", "deep_mmd_clients"], [28, 0, 0, "-", "ditto_client"], [29, 0, 0, "-", "ensemble_client"], [30, 0, 0, "-", "evaluate_client"], [31, 0, 0, "-", "fed_pca_client"], [32, 0, 0, "-", "fed_prox_client"], [33, 0, 0, "-", "fedbn_client"], [34, 0, 0, "-", "fedper_client"], [35, 0, 0, "-", "fedpm_client"], [36, 0, 0, "-", "fedrep_client"], [37, 0, 0, "-", "fenda_client"], [38, 0, 0, "-", "fenda_ditto_client"], [39, 0, 0, "-", "flash_client"], [40, 0, 0, "-", "flexible"], [42, 0, 0, "-", "instance_level_dp_client"], [43, 0, 0, "-", "mkmmd_clients"], [46, 0, 0, "-", "model_merge_client"], [47, 0, 0, "-", "moon_client"], [48, 0, 0, "-", "mr_mtl_client"], [49, 0, 0, "-", "nnunet_client"], [50, 0, 0, "-", "partial_weight_exchange_client"], [51, 0, 0, "-", "perfcl_client"], [52, 0, 0, "-", "scaffold_client"]], "fl4health.clients.adaptive_drift_constraint_client": [[21, 1, 1, "", "AdaptiveDriftConstraintClient"]], "fl4health.clients.adaptive_drift_constraint_client.AdaptiveDriftConstraintClient": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "compute_penalty_loss"], [21, 2, 1, "", "compute_training_loss"], [21, 2, 1, "", "get_parameter_exchanger"], [21, 2, 1, "", "get_parameters"], [21, 2, 1, "", "set_parameters"], [21, 2, 1, "", "update_after_train"]], "fl4health.clients.apfl_client": [[22, 1, 1, "", "ApflClient"]], "fl4health.clients.apfl_client.ApflClient": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "compute_loss_and_additional_losses"], [22, 2, 1, "", "get_optimizer"], [22, 2, 1, "", "get_parameter_exchanger"], [22, 2, 1, "", "is_start_of_local_training"], [22, 2, 1, "", "set_optimizer"], [22, 2, 1, "", "train_step"], [22, 2, 1, "", "update_after_step"]], "fl4health.clients.basic_client": [[23, 1, 1, "", "BasicClient"]], "fl4health.clients.basic_client.BasicClient": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "compute_evaluation_loss"], [23, 2, 1, "", "compute_loss_and_additional_losses"], [23, 2, 1, "", "compute_training_loss"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "get_client_specific_logs"], [23, 2, 1, "", "get_client_specific_reports"], [23, 2, 1, "", "get_criterion"], [23, 2, 1, "", "get_data_loaders"], [23, 2, 1, "", "get_lr_scheduler"], [23, 2, 1, "", "get_model"], [23, 2, 1, "", "get_optimizer"], [23, 2, 1, "", "get_parameter_exchanger"], [23, 2, 1, "", "get_parameters"], [23, 2, 1, "", "get_properties"], [23, 2, 1, "", "get_test_data_loader"], [23, 2, 1, "", "initialize_all_model_weights"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "process_config"], [23, 2, 1, "", "set_optimizer"], [23, 2, 1, "", "set_parameters"], [23, 2, 1, "", "setup_client"], [23, 2, 1, "", "shutdown"], [23, 2, 1, "", "train_by_epochs"], [23, 2, 1, "", "train_by_steps"], [23, 2, 1, "", "train_step"], [23, 2, 1, "", "transform_gradients"], [23, 2, 1, "", "transform_target"], [23, 2, 1, "", "update_after_step"], [23, 2, 1, "", "update_after_train"], [23, 2, 1, "", "update_before_epoch"], [23, 2, 1, "", "update_before_step"], [23, 2, 1, "", "update_before_train"], [23, 2, 1, "", "update_lr_schedulers"], [23, 2, 1, "", "update_metric_manager"], [23, 2, 1, "", "val_step"], [23, 2, 1, "", "validate"]], "fl4health.clients.clipping_client": [[24, 1, 1, "", "NumpyClippingClient"]], "fl4health.clients.clipping_client.NumpyClippingClient": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "calculate_parameters_norm"], [24, 2, 1, "", "clip_parameters"], [24, 2, 1, "", "compute_weight_update_and_clip"], [24, 2, 1, "", "get_parameter_exchanger"], [24, 2, 1, "", "get_parameters"], [24, 2, 1, "", "set_parameters"], [24, 2, 1, "", "setup_client"]], "fl4health.clients.constrained_fenda_client": [[25, 1, 1, "", "ConstrainedFendaClient"]], "fl4health.clients.constrained_fenda_client.ConstrainedFendaClient": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "compute_evaluation_loss"], [25, 2, 1, "", "compute_loss_and_additional_losses"], [25, 2, 1, "", "get_parameter_exchanger"], [25, 2, 1, "", "predict"], [25, 2, 1, "", "update_after_train"], [25, 2, 1, "", "update_before_train"]], "fl4health.clients.deep_mmd_clients": [[27, 0, 0, "-", "ditto_deep_mmd_client"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client": [[27, 1, 1, "", "DittoDeepMmdClient"]], "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client.DittoDeepMmdClient": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "compute_evaluation_loss"], [27, 2, 1, "", "compute_loss_and_additional_losses"], [27, 2, 1, "", "compute_training_loss"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "setup_client"], [27, 2, 1, "", "update_after_step"], [27, 2, 1, "", "update_before_train"], [27, 2, 1, "", "update_buffers"], [27, 2, 1, "", "validate"]], "fl4health.clients.ditto_client": [[28, 1, 1, "", "DittoClient"]], "fl4health.clients.ditto_client.DittoClient": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "compute_evaluation_loss"], [28, 2, 1, "", "compute_loss_and_additional_losses"], [28, 2, 1, "", "compute_training_loss"], [28, 2, 1, "", "get_global_model"], [28, 2, 1, "", "get_optimizer"], [28, 2, 1, "", "get_parameters"], [28, 2, 1, "", "initialize_all_model_weights"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "set_initial_global_tensors"], [28, 2, 1, "", "set_optimizer"], [28, 2, 1, "", "set_parameters"], [28, 2, 1, "", "setup_client"], [28, 2, 1, "", "train_step"], [28, 2, 1, "", "update_before_train"], [28, 2, 1, "", "validate"]], "fl4health.clients.ensemble_client": [[29, 1, 1, "", "EnsembleClient"]], "fl4health.clients.ensemble_client.EnsembleClient": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "compute_evaluation_loss"], [29, 2, 1, "", "compute_training_loss"], [29, 2, 1, "", "get_optimizer"], [29, 2, 1, "", "set_optimizer"], [29, 2, 1, "", "setup_client"], [29, 2, 1, "", "train_step"]], "fl4health.clients.evaluate_client": [[30, 1, 1, "", "EvaluateClient"]], "fl4health.clients.evaluate_client.EvaluateClient": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "evaluate"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "get_data_loader"], [30, 2, 1, "", "get_local_model"], [30, 2, 1, "", "get_parameter_exchanger"], [30, 2, 1, "", "get_parameters"], [30, 2, 1, "", "initialize_global_model"], [30, 2, 1, "", "merge_metrics"], [30, 2, 1, "", "set_parameters"], [30, 2, 1, "", "setup_client"], [30, 2, 1, "", "validate"], [30, 2, 1, "", "validate_on_model"]], "fl4health.clients.fed_pca_client": [[31, 1, 1, "", "FedPCAClient"]], "fl4health.clients.fed_pca_client.FedPCAClient": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "evaluate"], [31, 2, 1, "", "fit"], [31, 2, 1, "", "generate_hash"], [31, 2, 1, "", "get_data_loaders"], [31, 2, 1, "", "get_data_tensor"], [31, 2, 1, "", "get_model"], [31, 2, 1, "", "get_parameters"], [31, 2, 1, "", "save_model"], [31, 2, 1, "", "set_parameters"], [31, 2, 1, "", "setup_client"]], "fl4health.clients.fed_prox_client": [[32, 1, 1, "", "FedProxClient"]], "fl4health.clients.fed_prox_client.FedProxClient": [[32, 2, 1, "", "update_before_train"]], "fl4health.clients.fedbn_client": [[33, 1, 1, "", "FedBnClient"]], "fl4health.clients.fedbn_client.FedBnClient": [[33, 2, 1, "", "setup_client"]], "fl4health.clients.fedper_client": [[34, 1, 1, "", "FedPerClient"]], "fl4health.clients.fedper_client.FedPerClient": [[34, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fedpm_client": [[35, 1, 1, "", "FedPmClient"]], "fl4health.clients.fedpm_client.FedPmClient": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get_parameter_exchanger"], [35, 2, 1, "", "setup_client"]], "fl4health.clients.fedrep_client": [[36, 1, 1, "", "FedRepClient"], [36, 1, 1, "", "FedRepTrainMode"]], "fl4health.clients.fedrep_client.FedRepClient": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "fit"], [36, 2, 1, "", "get_optimizer"], [36, 2, 1, "", "get_parameter_exchanger"], [36, 2, 1, "", "process_fed_rep_config"], [36, 2, 1, "", "set_optimizer"], [36, 2, 1, "", "train_fedrep_by_epochs"], [36, 2, 1, "", "train_fedrep_by_steps"], [36, 2, 1, "", "train_step"]], "fl4health.clients.fedrep_client.FedRepTrainMode": [[36, 3, 1, "", "HEAD"], [36, 3, 1, "", "REPRESENTATION"]], "fl4health.clients.fenda_client": [[37, 1, 1, "", "FendaClient"]], "fl4health.clients.fenda_client.FendaClient": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "get_parameter_exchanger"]], "fl4health.clients.fenda_ditto_client": [[38, 1, 1, "", "FendaDittoClient"]], "fl4health.clients.fenda_ditto_client.FendaDittoClient": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "compute_training_loss"], [38, 2, 1, "", "get_global_model"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_parameters"], [38, 2, 1, "", "predict"], [38, 2, 1, "", "set_initial_global_tensors"], [38, 2, 1, "", "set_parameters"], [38, 2, 1, "", "setup_client"], [38, 2, 1, "", "update_before_train"]], "fl4health.clients.flash_client": [[39, 1, 1, "", "FlashClient"]], "fl4health.clients.flash_client.FlashClient": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "process_config"], [39, 2, 1, "", "setup_client"], [39, 2, 1, "", "train_by_epochs"]], "fl4health.clients.flexible": [[41, 0, 0, "-", "base"]], "fl4health.clients.flexible.base": [[41, 1, 1, "", "FlexibleClient"]], "fl4health.clients.flexible.base.FlexibleClient": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "predict_with_model"], [41, 2, 1, "", "train_step"], [41, 2, 1, "", "transform_gradients"], [41, 2, 1, "", "val_step"]], "fl4health.clients.instance_level_dp_client": [[42, 1, 1, "", "InstanceLevelDpClient"]], "fl4health.clients.instance_level_dp_client.InstanceLevelDpClient": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "setup_client"], [42, 2, 1, "", "setup_opacus_objects"]], "fl4health.clients.mkmmd_clients": [[44, 0, 0, "-", "ditto_mkmmd_client"], [45, 0, 0, "-", "mr_mtl_mkmmd_client"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client": [[44, 1, 1, "", "DittoMkMmdClient"]], "fl4health.clients.mkmmd_clients.ditto_mkmmd_client.DittoMkMmdClient": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "compute_loss_and_additional_losses"], [44, 2, 1, "", "compute_training_loss"], [44, 2, 1, "", "predict"], [44, 2, 1, "", "setup_client"], [44, 2, 1, "", "update_after_step"], [44, 2, 1, "", "update_before_train"], [44, 2, 1, "", "update_buffers"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client": [[45, 1, 1, "", "MrMtlMkMmdClient"]], "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client.MrMtlMkMmdClient": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "compute_loss_and_additional_losses"], [45, 2, 1, "", "compute_training_loss"], [45, 2, 1, "", "predict"], [45, 2, 1, "", "setup_client"], [45, 2, 1, "", "update_after_step"], [45, 2, 1, "", "update_before_train"], [45, 2, 1, "", "update_buffers"]], "fl4health.clients.model_merge_client": [[46, 1, 1, "", "ModelMergeClient"]], "fl4health.clients.model_merge_client.ModelMergeClient": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "evaluate"], [46, 2, 1, "", "fit"], [46, 2, 1, "", "get_model"], [46, 2, 1, "", "get_parameter_exchanger"], [46, 2, 1, "", "get_parameters"], [46, 2, 1, "", "get_test_data_loader"], [46, 2, 1, "", "set_parameters"], [46, 2, 1, "", "setup_client"], [46, 2, 1, "", "validate"]], "fl4health.clients.moon_client": [[47, 1, 1, "", "MoonClient"]], "fl4health.clients.moon_client.MoonClient": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "compute_evaluation_loss"], [47, 2, 1, "", "compute_loss_and_additional_losses"], [47, 2, 1, "", "compute_training_loss"], [47, 2, 1, "", "predict"], [47, 2, 1, "", "update_after_train"], [47, 2, 1, "", "update_before_train"]], "fl4health.clients.mr_mtl_client": [[48, 1, 1, "", "MrMtlClient"]], "fl4health.clients.mr_mtl_client.MrMtlClient": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "compute_training_loss"], [48, 2, 1, "", "set_parameters"], [48, 2, 1, "", "setup_client"], [48, 2, 1, "", "update_before_train"], [48, 2, 1, "", "validate"]], "fl4health.clients.nnunet_client": [[49, 1, 1, "", "NnunetClient"]], "fl4health.clients.nnunet_client.NnunetClient": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "compute_loss_and_additional_losses"], [49, 2, 1, "", "create_plans"], [49, 2, 1, "", "empty_cache"], [49, 2, 1, "", "get_client_specific_logs"], [49, 2, 1, "", "get_client_specific_reports"], [49, 2, 1, "", "get_criterion"], [49, 2, 1, "", "get_data_loaders"], [49, 2, 1, "", "get_lr_scheduler"], [49, 2, 1, "", "get_model"], [49, 2, 1, "", "get_optimizer"], [49, 2, 1, "", "get_properties"], [49, 2, 1, "", "mask_data"], [49, 2, 1, "", "maybe_extract_fingerprint"], [49, 2, 1, "", "maybe_preprocess"], [49, 2, 1, "", "predict"], [49, 2, 1, "", "setup_client"], [49, 2, 1, "", "shutdown"], [49, 2, 1, "", "shutdown_dataloader"], [49, 2, 1, "", "train_step"], [49, 2, 1, "", "transform_gradients"], [49, 2, 1, "", "update_before_train"], [49, 2, 1, "", "update_metric_manager"]], "fl4health.clients.partial_weight_exchange_client": [[50, 1, 1, "", "PartialWeightExchangeClient"]], "fl4health.clients.partial_weight_exchange_client.PartialWeightExchangeClient": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "get_parameter_exchanger"], [50, 2, 1, "", "get_parameters"], [50, 2, 1, "", "set_parameters"], [50, 2, 1, "", "setup_client"]], "fl4health.clients.perfcl_client": [[51, 1, 1, "", "PerFclClient"]], "fl4health.clients.perfcl_client.PerFclClient": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "compute_evaluation_loss"], [51, 2, 1, "", "compute_loss_and_additional_losses"], [51, 2, 1, "", "get_parameter_exchanger"], [51, 2, 1, "", "predict"], [51, 2, 1, "", "update_after_train"], [51, 2, 1, "", "update_before_train"]], "fl4health.clients.scaffold_client": [[52, 1, 1, "", "DPScaffoldClient"], [52, 1, 1, "", "ScaffoldClient"]], "fl4health.clients.scaffold_client.DPScaffoldClient": [[52, 2, 1, "", "__init__"]], "fl4health.clients.scaffold_client.ScaffoldClient": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "compute_parameters_delta"], [52, 2, 1, "", "compute_updated_control_variates"], [52, 2, 1, "", "get_parameter_exchanger"], [52, 2, 1, "", "get_parameters"], [52, 2, 1, "", "modify_grad"], [52, 2, 1, "", "set_parameters"], [52, 2, 1, "", "setup_client"], [52, 2, 1, "", "transform_gradients"], [52, 2, 1, "", "update_after_train"], [52, 2, 1, "", "update_control_variates"]], "fl4health.datasets": [[55, 0, 0, "-", "rxrx1"], [58, 0, 0, "-", "skin_cancer"]], "fl4health.datasets.rxrx1": [[56, 0, 0, "-", "load_data"], [57, 0, 0, "-", "preprocess"]], "fl4health.datasets.rxrx1.load_data": [[56, 4, 1, "", "construct_rxrx1_tensor_dataset"], [56, 4, 1, "", "create_splits"], [56, 4, 1, "", "label_frequency"], [56, 4, 1, "", "load_rxrx1_data"], [56, 4, 1, "", "load_rxrx1_test_data"]], "fl4health.datasets.rxrx1.preprocess": [[57, 4, 1, "", "filter_and_save_data"], [57, 4, 1, "", "load_image"], [57, 4, 1, "", "main"], [57, 4, 1, "", "process_data"], [57, 4, 1, "", "save_to_pkl"]], "fl4health.datasets.skin_cancer": [[59, 0, 0, "-", "load_data"], [60, 0, 0, "-", "preprocess_skin"]], "fl4health.datasets.skin_cancer.load_data": [[59, 4, 1, "", "construct_skin_cancer_tensor_dataset"], [59, 4, 1, "", "load_image"], [59, 4, 1, "", "load_skin_cancer_data"]], "fl4health.datasets.skin_cancer.preprocess_skin": [[60, 4, 1, "", "derm7pt_image_path_func"], [60, 4, 1, "", "derm7pt_label_map_func"], [60, 4, 1, "", "ham_image_path_func"], [60, 4, 1, "", "ham_label_map_func"], [60, 4, 1, "", "pad_image_path_func"], [60, 4, 1, "", "pad_label_map_func"], [60, 4, 1, "", "preprocess_derm7pt"], [60, 4, 1, "", "preprocess_ham10000"], [60, 4, 1, "", "preprocess_isic_2019"], [60, 4, 1, "", "preprocess_pad_ufes_20"], [60, 4, 1, "", "process_client_data"], [60, 4, 1, "", "save_to_json"]], "fl4health.feature_alignment": [[62, 0, 0, "-", "constants"], [63, 0, 0, "-", "string_columns_transformer"], [66, 0, 0, "-", "tabular_feature"], [67, 0, 0, "-", "tabular_type"]], "fl4health.feature_alignment.string_columns_transformer": [[63, 1, 1, "", "TextColumnTransformer"], [63, 1, 1, "", "TextMulticolumnTransformer"]], "fl4health.feature_alignment.string_columns_transformer.TextColumnTransformer": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "fit"], [63, 2, 1, "", "set_fit_request"], [63, 2, 1, "", "set_transform_request"], [63, 2, 1, "", "transform"]], "fl4health.feature_alignment.string_columns_transformer.TextMulticolumnTransformer": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "fit"], [63, 2, 1, "", "set_fit_request"], [63, 2, 1, "", "set_transform_request"], [63, 2, 1, "", "transform"]], "fl4health.feature_alignment.tabular_feature": [[66, 1, 1, "", "TabularFeature"]], "fl4health.feature_alignment.tabular_feature.TabularFeature": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "from_json"], [66, 2, 1, "", "get_feature_name"], [66, 2, 1, "", "get_feature_type"], [66, 2, 1, "", "get_fill_value"], [66, 2, 1, "", "get_metadata"], [66, 2, 1, "", "get_metadata_dimension"], [66, 2, 1, "", "to_json"]], "fl4health.feature_alignment.tabular_type": [[67, 1, 1, "", "TabularType"]], "fl4health.feature_alignment.tabular_type.TabularType": [[67, 3, 1, "", "BINARY"], [67, 3, 1, "", "NUMERIC"], [67, 3, 1, "", "ORDINAL"], [67, 3, 1, "", "STRING"], [67, 2, 1, "", "get_default_fill_value"]], "fl4health.losses": [[69, 0, 0, "-", "contrastive_loss"], [70, 0, 0, "-", "cosine_similarity_loss"], [71, 0, 0, "-", "deep_mmd_loss"], [72, 0, 0, "-", "fenda_loss_config"], [73, 0, 0, "-", "mkmmd_loss"], [74, 0, 0, "-", "perfcl_loss"], [75, 0, 0, "-", "weight_drift_loss"]], "fl4health.losses.contrastive_loss": [[69, 1, 1, "", "MoonContrastiveLoss"], [69, 1, 1, "", "NtXentLoss"]], "fl4health.losses.contrastive_loss.MoonContrastiveLoss": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "compute_negative_similarities"], [69, 2, 1, "", "forward"]], "fl4health.losses.contrastive_loss.NtXentLoss": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "forward"]], "fl4health.losses.cosine_similarity_loss": [[70, 1, 1, "", "CosineSimilarityLoss"]], "fl4health.losses.cosine_similarity_loss.CosineSimilarityLoss": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "forward"]], "fl4health.losses.deep_mmd_loss": [[71, 1, 1, "", "DeepMmdLoss"], [71, 1, 1, "", "ModelLatentF"]], "fl4health.losses.deep_mmd_loss.DeepMmdLoss": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "compute_kernel"], [71, 2, 1, "", "forward"], [71, 2, 1, "", "h1_mean_var_gram"], [71, 2, 1, "", "mmdu"], [71, 2, 1, "", "pairwise_distance_squared"], [71, 2, 1, "", "train_kernel"]], "fl4health.losses.deep_mmd_loss.ModelLatentF": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "forward"]], "fl4health.losses.fenda_loss_config": [[72, 1, 1, "", "ConstrainedFendaLossContainer"], [72, 1, 1, "", "CosineSimilarityLossContainer"], [72, 1, 1, "", "MoonContrastiveLossContainer"], [72, 1, 1, "", "PerFclLossContainer"]], "fl4health.losses.fenda_loss_config.ConstrainedFendaLossContainer": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "compute_contrastive_loss"], [72, 2, 1, "", "compute_cosine_similarity_loss"], [72, 2, 1, "", "compute_perfcl_loss"], [72, 2, 1, "", "has_contrastive_loss"], [72, 2, 1, "", "has_cosine_similarity_loss"], [72, 2, 1, "", "has_perfcl_loss"]], "fl4health.losses.fenda_loss_config.CosineSimilarityLossContainer": [[72, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.MoonContrastiveLossContainer": [[72, 2, 1, "", "__init__"]], "fl4health.losses.fenda_loss_config.PerFclLossContainer": [[72, 2, 1, "", "__init__"]], "fl4health.losses.mkmmd_loss": [[73, 1, 1, "", "MkMmdLoss"]], "fl4health.losses.mkmmd_loss.MkMmdLoss": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "beta_with_extreme_kernel_base_values"], [73, 2, 1, "", "compute_all_h_u_all_samples"], [73, 2, 1, "", "compute_all_h_u_from_inner_products"], [73, 2, 1, "", "compute_all_h_u_from_inner_products_linear"], [73, 2, 1, "", "compute_all_h_u_linear"], [73, 2, 1, "", "compute_euclidean_inner_products"], [73, 2, 1, "", "compute_euclidean_inner_products_linear"], [73, 2, 1, "", "compute_h_u_from_inner_products"], [73, 2, 1, "", "compute_h_u_from_inner_products_linear"], [73, 2, 1, "", "compute_hat_d_per_kernel"], [73, 2, 1, "", "compute_hat_q_k"], [73, 2, 1, "", "compute_hat_q_k_linear"], [73, 2, 1, "", "compute_mkmmd"], [73, 2, 1, "", "compute_vertices"], [73, 2, 1, "", "construct_quadruples"], [73, 2, 1, "", "form_and_solve_qp"], [73, 2, 1, "", "form_h_u_delta_w_i"], [73, 2, 1, "", "form_kernel_samples_minus_expectation"], [73, 2, 1, "", "forward"], [73, 2, 1, "", "get_best_vertex_for_objective_function"], [73, 2, 1, "", "normalize"], [73, 2, 1, "", "optimize_betas"]], "fl4health.losses.perfcl_loss": [[74, 1, 1, "", "PerFclLoss"]], "fl4health.losses.perfcl_loss.PerFclLoss": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "forward"]], "fl4health.losses.weight_drift_loss": [[75, 1, 1, "", "WeightDriftLoss"]], "fl4health.losses.weight_drift_loss.WeightDriftLoss": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "forward"]], "fl4health.metrics": [[76, 1, 1, "", "Accuracy"], [76, 1, 1, "", "BalancedAccuracy"], [76, 1, 1, "", "BinarySoftDiceCoefficient"], [76, 1, 1, "", "F1"], [76, 1, 1, "", "RocAuc"], [76, 1, 1, "", "SimpleMetric"], [76, 1, 1, "", "TorchMetric"], [77, 0, 0, "-", "base_metrics"], [78, 0, 0, "-", "compound_metrics"], [79, 0, 0, "-", "efficient_metrics"], [80, 0, 0, "-", "efficient_metrics_base"], [81, 0, 0, "-", "metric_aggregation"], [82, 0, 0, "-", "metric_managers"], [83, 0, 0, "-", "metrics"], [84, 0, 0, "-", "metrics_utils"], [85, 0, 0, "-", "utils"]], "fl4health.metrics.Accuracy": [[76, 2, 1, "", "__init__"]], "fl4health.metrics.BalancedAccuracy": [[76, 2, 1, "", "__init__"]], "fl4health.metrics.BinarySoftDiceCoefficient": [[76, 2, 1, "", "__init__"]], "fl4health.metrics.F1": [[76, 2, 1, "", "__init__"]], "fl4health.metrics.RocAuc": [[76, 2, 1, "", "__init__"]], "fl4health.metrics.SimpleMetric": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "clear"], [76, 2, 1, "", "compute"], [76, 2, 1, "", "update"]], "fl4health.metrics.TorchMetric": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "clear"], [76, 2, 1, "", "compute"], [76, 2, 1, "", "update"]], "fl4health.metrics.base_metrics": [[77, 1, 1, "", "Metric"], [77, 1, 1, "", "MetricPrefix"]], "fl4health.metrics.base_metrics.Metric": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "clear"], [77, 2, 1, "", "compute"], [77, 2, 1, "", "update"]], "fl4health.metrics.base_metrics.MetricPrefix": [[77, 3, 1, "", "TEST_PREFIX"], [77, 3, 1, "", "VAL_PREFIX"]], "fl4health.metrics.compound_metrics": [[78, 1, 1, "", "EmaMetric"], [78, 1, 1, "", "TransformsMetric"]], "fl4health.metrics.compound_metrics.EmaMetric": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "compute"], [78, 2, 1, "", "update"]], "fl4health.metrics.compound_metrics.TransformsMetric": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "compute"], [78, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics": [[79, 1, 1, "", "BinaryDice"], [79, 1, 1, "", "MultiClassDice"]], "fl4health.metrics.efficient_metrics.BinaryDice": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics.MultiClassDice": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_from_counts"]], "fl4health.metrics.efficient_metrics_base": [[80, 1, 1, "", "BinaryClassificationMetric"], [80, 1, 1, "", "ClassificationMetric"], [80, 1, 1, "", "MetricOutcome"], [80, 1, 1, "", "MultiClassificationMetric"]], "fl4health.metrics.efficient_metrics_base.BinaryClassificationMetric": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "compute_from_counts"], [80, 2, 1, "", "count_tp_fp_tn_fn"]], "fl4health.metrics.efficient_metrics_base.ClassificationMetric": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "clear"], [80, 2, 1, "", "compute"], [80, 2, 1, "", "compute_from_counts"], [80, 2, 1, "", "count_tp_fp_tn_fn"], [80, 2, 1, "", "update"]], "fl4health.metrics.efficient_metrics_base.MetricOutcome": [[80, 3, 1, "", "FALSE_NEGATIVE"], [80, 3, 1, "", "FALSE_POSITIVE"], [80, 3, 1, "", "TRUE_NEGATIVE"], [80, 3, 1, "", "TRUE_POSITIVE"]], "fl4health.metrics.efficient_metrics_base.MultiClassificationMetric": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "compute_from_counts"], [80, 2, 1, "", "count_tp_fp_tn_fn"]], "fl4health.metrics.metric_aggregation": [[81, 4, 1, "", "evaluate_metrics_aggregation_fn"], [81, 4, 1, "", "fit_metrics_aggregation_fn"], [81, 4, 1, "", "metric_aggregation"], [81, 4, 1, "", "normalize_metrics"], [81, 4, 1, "", "uniform_evaluate_metrics_aggregation_fn"], [81, 4, 1, "", "uniform_metric_aggregation"], [81, 4, 1, "", "uniform_normalize_metrics"]], "fl4health.metrics.metric_managers": [[82, 1, 1, "", "MetricManager"]], "fl4health.metrics.metric_managers.MetricManager": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "check_target_prediction_keys_equal"], [82, 2, 1, "", "clear"], [82, 2, 1, "", "compute"], [82, 2, 1, "", "reset"], [82, 2, 1, "", "update"]], "fl4health.metrics.metrics": [[83, 1, 1, "", "Accuracy"], [83, 1, 1, "", "BalancedAccuracy"], [83, 1, 1, "", "BinarySoftDiceCoefficient"], [83, 1, 1, "", "F1"], [83, 1, 1, "", "RocAuc"], [83, 1, 1, "", "SimpleMetric"], [83, 1, 1, "", "TorchMetric"]], "fl4health.metrics.metrics.Accuracy": [[83, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BalancedAccuracy": [[83, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.BinarySoftDiceCoefficient": [[83, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.F1": [[83, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.RocAuc": [[83, 2, 1, "", "__init__"]], "fl4health.metrics.metrics.SimpleMetric": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "clear"], [83, 2, 1, "", "compute"], [83, 2, 1, "", "update"]], "fl4health.metrics.metrics.TorchMetric": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "clear"], [83, 2, 1, "", "compute"], [83, 2, 1, "", "update"]], "fl4health.metrics.metrics_utils": [[84, 4, 1, "", "compute_dice_on_count_tensors"], [84, 4, 1, "", "threshold_tensor"]], "fl4health.metrics.utils": [[85, 4, 1, "", "align_pred_and_target_shapes"], [85, 4, 1, "", "infer_label_dim"], [85, 4, 1, "", "map_label_index_tensor_to_one_hot"]], "fl4health.mixins": [[86, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [87, 0, 0, "-", "adaptive_drift_constrained"], [88, 0, 0, "-", "core_protocols"], [89, 0, 0, "-", "personalized"]], "fl4health.mixins.AdaptiveDriftConstrainedMixin": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "compute_penalty_loss"], [86, 2, 1, "", "get_parameter_exchanger"], [86, 2, 1, "", "get_parameters"], [86, 2, 1, "", "set_parameters"], [86, 2, 1, "", "train_step"], [86, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained": [[87, 1, 1, "", "AdaptiveDriftConstrainedMixin"], [87, 1, 1, "", "AdaptiveDriftConstrainedProtocol"], [87, 4, 1, "", "apply_adaptive_drift_to_client"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedMixin": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "compute_penalty_loss"], [87, 2, 1, "", "get_parameter_exchanger"], [87, 2, 1, "", "get_parameters"], [87, 2, 1, "", "set_parameters"], [87, 2, 1, "", "train_step"], [87, 2, 1, "", "update_after_train"]], "fl4health.mixins.adaptive_drift_constrained.AdaptiveDriftConstrainedProtocol": [[87, 2, 1, "", "compute_penalty_loss"], [87, 3, 1, "", "drift_penalty_tensors"], [87, 3, 1, "", "drift_penalty_weight"], [87, 3, 1, "", "loss_for_adaptation"], [87, 3, 1, "", "parameter_exchanger"], [87, 3, 1, "", "penalty_loss_function"]], "fl4health.mixins.core_protocols": [[88, 1, 1, "", "FlexibleClientProtocol"], [88, 1, 1, "", "FlexibleClientProtocolPreSetup"], [88, 1, 1, "", "NumPyClientMinimalProtocol"]], "fl4health.mixins.core_protocols.FlexibleClientProtocol": [[88, 2, 1, "", "compute_evaluation_loss"], [88, 2, 1, "", "compute_training_loss"], [88, 3, 1, "", "criterion"], [88, 2, 1, "", "initialize_all_model_weights"], [88, 3, 1, "", "model"], [88, 3, 1, "", "optimizers"], [88, 2, 1, "", "predict_with_model"], [88, 3, 1, "", "test_loader"], [88, 3, 1, "", "train_loader"], [88, 2, 1, "", "transform_gradients"], [88, 2, 1, "", "transform_target"], [88, 2, 1, "", "update_before_train"], [88, 3, 1, "", "val_loader"], [88, 2, 1, "", "validate"]], "fl4health.mixins.core_protocols.FlexibleClientProtocolPreSetup": [[88, 2, 1, "", "compute_loss_and_additional_losses"], [88, 3, 1, "", "device"], [88, 2, 1, "", "get_criterion"], [88, 2, 1, "", "get_data_loaders"], [88, 2, 1, "", "get_model"], [88, 2, 1, "", "get_optimizer"], [88, 3, 1, "", "initialized"], [88, 2, 1, "", "setup_client"]], "fl4health.mixins.core_protocols.NumPyClientMinimalProtocol": [[88, 2, 1, "", "evaluate"], [88, 2, 1, "", "fit"], [88, 2, 1, "", "get_parameters"], [88, 2, 1, "", "set_parameters"], [88, 2, 1, "", "update_after_train"]], "fl4health.mixins.personalized": [[89, 1, 1, "", "DittoPersonalizedMixin"], [89, 1, 1, "", "DittoPersonalizedProtocol"], [89, 1, 1, "", "PersonalizedMode"], [90, 0, 0, "-", "ditto"], [89, 4, 1, "", "make_it_personal"], [91, 0, 0, "-", "utils"]], "fl4health.mixins.personalized.DittoPersonalizedMixin": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "compute_evaluation_loss"], [89, 2, 1, "", "get_global_model"], [89, 2, 1, "", "get_optimizer"], [89, 2, 1, "", "get_parameters"], [89, 2, 1, "", "initialize_all_model_weights"], [89, 5, 1, "", "optimizer_keys"], [89, 2, 1, "", "safe_global_model"], [89, 2, 1, "", "set_initial_global_tensors"], [89, 2, 1, "", "set_optimizer"], [89, 2, 1, "", "set_parameters"], [89, 2, 1, "", "setup_client"], [89, 2, 1, "", "train_step"], [89, 2, 1, "", "update_before_train"], [89, 2, 1, "", "val_step"], [89, 2, 1, "", "validate"]], "fl4health.mixins.personalized.DittoPersonalizedProtocol": [[89, 2, 1, "", "get_global_model"], [89, 3, 1, "", "global_model"], [89, 3, 1, "", "optimizer_keys"], [89, 2, 1, "", "safe_global_model"], [89, 2, 1, "", "set_initial_global_tensors"]], "fl4health.mixins.personalized.PersonalizedMode": [[89, 3, 1, "", "DITTO"]], "fl4health.mixins.personalized.ditto": [[90, 1, 1, "", "DittoPersonalizedMixin"], [90, 1, 1, "", "DittoPersonalizedProtocol"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedMixin": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "compute_evaluation_loss"], [90, 2, 1, "", "get_global_model"], [90, 2, 1, "", "get_optimizer"], [90, 2, 1, "", "get_parameters"], [90, 2, 1, "", "initialize_all_model_weights"], [90, 5, 1, "", "optimizer_keys"], [90, 2, 1, "", "safe_global_model"], [90, 2, 1, "", "set_initial_global_tensors"], [90, 2, 1, "", "set_optimizer"], [90, 2, 1, "", "set_parameters"], [90, 2, 1, "", "setup_client"], [90, 2, 1, "", "train_step"], [90, 2, 1, "", "update_before_train"], [90, 2, 1, "", "val_step"], [90, 2, 1, "", "validate"]], "fl4health.mixins.personalized.ditto.DittoPersonalizedProtocol": [[90, 3, 1, "", "criterion"], [90, 3, 1, "", "device"], [90, 3, 1, "", "drift_penalty_tensors"], [90, 3, 1, "", "drift_penalty_weight"], [90, 2, 1, "", "get_global_model"], [90, 3, 1, "", "global_model"], [90, 3, 1, "", "initialized"], [90, 3, 1, "", "loss_for_adaptation"], [90, 3, 1, "", "model"], [90, 3, 1, "", "optimizer_keys"], [90, 3, 1, "", "optimizers"], [90, 3, 1, "", "parameter_exchanger"], [90, 3, 1, "", "penalty_loss_function"], [90, 2, 1, "", "safe_global_model"], [90, 2, 1, "", "set_initial_global_tensors"], [90, 3, 1, "", "test_loader"], [90, 3, 1, "", "train_loader"], [90, 3, 1, "", "val_loader"]], "fl4health.mixins.personalized.utils": [[91, 4, 1, "", "ensure_protocol_compliance"]], "fl4health.model_bases": [[93, 0, 0, "-", "apfl_base"], [94, 0, 0, "-", "autoencoders_base"], [95, 0, 0, "-", "ensemble_base"], [96, 0, 0, "-", "feature_extractor_buffer"], [97, 0, 0, "-", "fedrep_base"], [98, 0, 0, "-", "fedsimclr_base"], [99, 0, 0, "-", "fenda_base"], [100, 0, 0, "-", "masked_layers"], [105, 0, 0, "-", "moon_base"], [106, 0, 0, "-", "parallel_split_models"], [107, 0, 0, "-", "partial_layer_exchange_model"], [108, 0, 0, "-", "pca"], [109, 0, 0, "-", "perfcl_base"], [110, 0, 0, "-", "sequential_split_models"]], "fl4health.model_bases.apfl_base": [[93, 1, 1, "", "ApflModule"]], "fl4health.model_bases.apfl_base.ApflModule": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "forward"], [93, 2, 1, "", "global_forward"], [93, 2, 1, "", "layers_to_exchange"], [93, 2, 1, "", "local_forward"], [93, 2, 1, "", "update_alpha"]], "fl4health.model_bases.autoencoders_base": [[94, 1, 1, "", "AbstractAe"], [94, 1, 1, "", "BasicAe"], [94, 1, 1, "", "ConditionalVae"], [94, 1, 1, "", "VariationalAe"]], "fl4health.model_bases.autoencoders_base.AbstractAe": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.BasicAe": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "decode"], [94, 2, 1, "", "encode"], [94, 2, 1, "", "forward"]], "fl4health.model_bases.autoencoders_base.ConditionalVae": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "decode"], [94, 2, 1, "", "encode"], [94, 2, 1, "", "forward"], [94, 2, 1, "", "sampling"]], "fl4health.model_bases.autoencoders_base.VariationalAe": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "decode"], [94, 2, 1, "", "encode"], [94, 2, 1, "", "forward"], [94, 2, 1, "", "sampling"]], "fl4health.model_bases.ensemble_base": [[95, 1, 1, "", "EnsembleAggregationMode"], [95, 1, 1, "", "EnsembleModel"]], "fl4health.model_bases.ensemble_base.EnsembleAggregationMode": [[95, 3, 1, "", "AVERAGE"], [95, 3, 1, "", "VOTE"]], "fl4health.model_bases.ensemble_base.EnsembleModel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "ensemble_average"], [95, 2, 1, "", "ensemble_vote"], [95, 2, 1, "", "forward"]], "fl4health.model_bases.feature_extractor_buffer": [[96, 1, 1, "", "FeatureExtractorBuffer"]], "fl4health.model_bases.feature_extractor_buffer.FeatureExtractorBuffer": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "clear_buffers"], [96, 2, 1, "", "disable_accumulating_features"], [96, 2, 1, "", "enable_accumulating_features"], [96, 2, 1, "", "find_last_common_prefix"], [96, 2, 1, "", "flatten"], [96, 2, 1, "", "forward_hook"], [96, 2, 1, "", "get_extracted_features"], [96, 2, 1, "", "get_hierarchical_attr"], [96, 2, 1, "", "remove_hooks"]], "fl4health.model_bases.fedrep_base": [[97, 1, 1, "", "FedRepModel"]], "fl4health.model_bases.fedrep_base.FedRepModel": [[97, 2, 1, "", "freeze_base_module"], [97, 2, 1, "", "freeze_head_module"], [97, 2, 1, "", "unfreeze_base_module"], [97, 2, 1, "", "unfreeze_head_module"]], "fl4health.model_bases.fedsimclr_base": [[98, 1, 1, "", "FedSimClrModel"]], "fl4health.model_bases.fedsimclr_base.FedSimClrModel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "forward"], [98, 2, 1, "", "load_pretrained_model"]], "fl4health.model_bases.fenda_base": [[99, 1, 1, "", "FendaModel"], [99, 1, 1, "", "FendaModelWithFeatureState"]], "fl4health.model_bases.fenda_base.FendaModel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.fenda_base.FendaModelWithFeatureState": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "forward"]], "fl4health.model_bases.masked_layers": [[101, 0, 0, "-", "masked_conv"], [102, 0, 0, "-", "masked_layers_utils"], [103, 0, 0, "-", "masked_linear"], [104, 0, 0, "-", "masked_normalization_layers"]], "fl4health.model_bases.masked_layers.masked_conv": [[101, 1, 1, "", "MaskedConv1d"], [101, 1, 1, "", "MaskedConv2d"], [101, 1, 1, "", "MaskedConv3d"], [101, 1, 1, "", "MaskedConvTranspose1d"], [101, 1, 1, "", "MaskedConvTranspose2d"], [101, 1, 1, "", "MaskedConvTranspose3d"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv1d": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv2d": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConv3d": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose1d": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose2d": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_conv.MaskedConvTranspose3d": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_layers_utils": [[102, 4, 1, "", "convert_to_masked_model"], [102, 4, 1, "", "is_masked_module"]], "fl4health.model_bases.masked_layers.masked_linear": [[103, 1, 1, "", "MaskedLinear"]], "fl4health.model_bases.masked_layers.masked_linear.MaskedLinear": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "forward"], [103, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.masked_layers.masked_normalization_layers": [[104, 1, 1, "", "MaskedBatchNorm1d"], [104, 1, 1, "", "MaskedBatchNorm2d"], [104, 1, 1, "", "MaskedBatchNorm3d"], [104, 1, 1, "", "MaskedLayerNorm"]], "fl4health.model_bases.masked_layers.masked_normalization_layers.MaskedLayerNorm": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "forward"], [104, 2, 1, "", "from_pretrained"]], "fl4health.model_bases.moon_base": [[105, 1, 1, "", "MoonModel"]], "fl4health.model_bases.moon_base.MoonModel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "sequential_forward"]], "fl4health.model_bases.parallel_split_models": [[106, 1, 1, "", "ParallelFeatureJoinMode"], [106, 1, 1, "", "ParallelSplitHeadModule"], [106, 1, 1, "", "ParallelSplitModel"]], "fl4health.model_bases.parallel_split_models.ParallelFeatureJoinMode": [[106, 3, 1, "", "CONCATENATE"], [106, 3, 1, "", "SUM"]], "fl4health.model_bases.parallel_split_models.ParallelSplitHeadModule": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "forward"], [106, 2, 1, "", "head_forward"], [106, 2, 1, "", "parallel_output_join"]], "fl4health.model_bases.parallel_split_models.ParallelSplitModel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "forward"]], "fl4health.model_bases.partial_layer_exchange_model": [[107, 1, 1, "", "PartialLayerExchangeModel"]], "fl4health.model_bases.partial_layer_exchange_model.PartialLayerExchangeModel": [[107, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.pca": [[108, 1, 1, "", "PcaModule"]], "fl4health.model_bases.pca.PcaModule": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "center_data"], [108, 2, 1, "", "compute_cumulative_explained_variance"], [108, 2, 1, "", "compute_explained_variance_ratios"], [108, 2, 1, "", "compute_projection_variance"], [108, 2, 1, "", "compute_reconstruction_error"], [108, 2, 1, "", "forward"], [108, 2, 1, "", "maybe_reshape"], [108, 2, 1, "", "prepare_data_forward"], [108, 2, 1, "", "project_back"], [108, 2, 1, "", "project_lower_dim"], [108, 2, 1, "", "set_data_mean"], [108, 2, 1, "", "set_principal_components"]], "fl4health.model_bases.perfcl_base": [[109, 1, 1, "", "PerFclModel"]], "fl4health.model_bases.perfcl_base.PerFclModel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "forward"], [109, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models": [[110, 1, 1, "", "SequentiallySplitExchangeBaseModel"], [110, 1, 1, "", "SequentiallySplitModel"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitExchangeBaseModel": [[110, 2, 1, "", "layers_to_exchange"]], "fl4health.model_bases.sequential_split_models.SequentiallySplitModel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "forward"], [110, 2, 1, "", "sequential_forward"]], "fl4health.parameter_exchange": [[112, 0, 0, "-", "fedpm_exchanger"], [113, 0, 0, "-", "full_exchanger"], [114, 0, 0, "-", "layer_exchanger"], [115, 0, 0, "-", "packing_exchanger"], [116, 0, 0, "-", "parameter_exchanger_base"], [117, 0, 0, "-", "parameter_packer"], [118, 0, 0, "-", "parameter_selection_criteria"], [119, 0, 0, "-", "partial_parameter_exchanger"], [120, 0, 0, "-", "sparse_coo_parameter_exchanger"]], "fl4health.parameter_exchange.fedpm_exchanger": [[112, 1, 1, "", "FedPmExchanger"]], "fl4health.parameter_exchange.fedpm_exchanger.FedPmExchanger": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "pull_parameters"]], "fl4health.parameter_exchange.full_exchanger": [[113, 1, 1, "", "FullParameterExchanger"]], "fl4health.parameter_exchange.full_exchanger.FullParameterExchanger": [[113, 2, 1, "", "pull_parameters"], [113, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger": [[114, 1, 1, "", "DynamicLayerExchanger"], [114, 1, 1, "", "FixedLayerExchanger"], [114, 1, 1, "", "LayerExchangerWithExclusions"]], "fl4health.parameter_exchange.layer_exchanger.DynamicLayerExchanger": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "pull_parameters"], [114, 2, 1, "", "push_parameters"], [114, 2, 1, "", "select_parameters"]], "fl4health.parameter_exchange.layer_exchanger.FixedLayerExchanger": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "apply_layer_filter"], [114, 2, 1, "", "pull_parameters"], [114, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.layer_exchanger.LayerExchangerWithExclusions": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "apply_layer_filter"], [114, 2, 1, "", "get_layers_to_transfer"], [114, 2, 1, "", "pull_parameters"], [114, 2, 1, "", "push_parameters"], [114, 2, 1, "", "should_layer_be_excluded"], [114, 2, 1, "", "should_module_be_excluded"]], "fl4health.parameter_exchange.packing_exchanger": [[115, 1, 1, "", "FullParameterExchangerWithPacking"]], "fl4health.parameter_exchange.packing_exchanger.FullParameterExchangerWithPacking": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "pack_parameters"], [115, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_exchanger_base": [[116, 1, 1, "", "ParameterExchanger"]], "fl4health.parameter_exchange.parameter_exchanger_base.ParameterExchanger": [[116, 2, 1, "", "pull_parameters"], [116, 2, 1, "", "push_parameters"]], "fl4health.parameter_exchange.parameter_packer": [[117, 1, 1, "", "ParameterPacker"], [117, 1, 1, "", "ParameterPackerAdaptiveConstraint"], [117, 1, 1, "", "ParameterPackerWithClippingBit"], [117, 1, 1, "", "ParameterPackerWithControlVariates"], [117, 1, 1, "", "ParameterPackerWithLayerNames"], [117, 1, 1, "", "SparseCooParameterPacker"]], "fl4health.parameter_exchange.parameter_packer.ParameterPacker": [[117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerAdaptiveConstraint": [[117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithClippingBit": [[117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithControlVariates": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.ParameterPackerWithLayerNames": [[117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_packer.SparseCooParameterPacker": [[117, 2, 1, "", "extract_coo_info_from_dense"], [117, 2, 1, "", "pack_parameters"], [117, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.parameter_selection_criteria": [[118, 1, 1, "", "LayerSelectionFunctionConstructor"], [118, 4, 1, "", "largest_final_magnitude_scores"], [118, 4, 1, "", "largest_increase_in_magnitude_scores"], [118, 4, 1, "", "largest_magnitude_change_scores"], [118, 4, 1, "", "select_layers_by_percentage"], [118, 4, 1, "", "select_layers_by_threshold"], [118, 4, 1, "", "select_scores_and_sample_masks"], [118, 4, 1, "", "smallest_final_magnitude_scores"], [118, 4, 1, "", "smallest_increase_in_magnitude_scores"], [118, 4, 1, "", "smallest_magnitude_change_scores"]], "fl4health.parameter_exchange.parameter_selection_criteria.LayerSelectionFunctionConstructor": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "select_by_percentage"], [118, 2, 1, "", "select_by_threshold"]], "fl4health.parameter_exchange.partial_parameter_exchanger": [[119, 1, 1, "", "PartialParameterExchanger"]], "fl4health.parameter_exchange.partial_parameter_exchanger.PartialParameterExchanger": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "pack_parameters"], [119, 2, 1, "", "select_parameters"], [119, 2, 1, "", "unpack_parameters"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger": [[120, 1, 1, "", "SparseCooParameterExchanger"]], "fl4health.parameter_exchange.sparse_coo_parameter_exchanger.SparseCooParameterExchanger": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "generate_parameter_scores"], [120, 2, 1, "", "pull_parameters"], [120, 2, 1, "", "push_parameters"], [120, 2, 1, "", "select_parameters"]], "fl4health.preprocessing": [[122, 0, 0, "-", "autoencoders"], [125, 0, 0, "-", "pca_preprocessor"], [126, 0, 0, "-", "warmed_up_module"]], "fl4health.preprocessing.autoencoders": [[123, 0, 0, "-", "dim_reduction"], [124, 0, 0, "-", "loss"]], "fl4health.preprocessing.autoencoders.dim_reduction": [[123, 1, 1, "", "AeProcessor"], [123, 1, 1, "", "AutoEncoderProcessing"], [123, 1, 1, "", "CvaeFixedConditionProcessor"], [123, 1, 1, "", "CvaeVariableConditionProcessor"], [123, 1, 1, "", "VaeProcessor"]], "fl4health.preprocessing.autoencoders.dim_reduction.AutoEncoderProcessing": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "load_autoencoder"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeFixedConditionProcessor": [[123, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.CvaeVariableConditionProcessor": [[123, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.dim_reduction.VaeProcessor": [[123, 2, 1, "", "__init__"]], "fl4health.preprocessing.autoencoders.loss": [[124, 1, 1, "", "VaeLoss"]], "fl4health.preprocessing.autoencoders.loss.VaeLoss": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "forward"], [124, 2, 1, "", "standard_normal_kl_divergence_loss"], [124, 2, 1, "", "unpack_model_output"]], "fl4health.preprocessing.pca_preprocessor": [[125, 1, 1, "", "PcaPreprocessor"]], "fl4health.preprocessing.pca_preprocessor.PcaPreprocessor": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "load_pca_module"], [125, 2, 1, "", "reduce_dimension"]], "fl4health.preprocessing.warmed_up_module": [[126, 1, 1, "", "WarmedUpModule"]], "fl4health.preprocessing.warmed_up_module.WarmedUpModule": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "get_matching_component"], [126, 2, 1, "", "load_from_pretrained"]], "fl4health.privacy": [[128, 0, 0, "-", "fl_accountants"], [129, 0, 0, "-", "moments_accountant"]], "fl4health.privacy.fl_accountants": [[128, 1, 1, "", "ClientLevelAccountant"], [128, 1, 1, "", "FlClientLevelAccountantFixedSamplingNoReplacement"], [128, 1, 1, "", "FlClientLevelAccountantPoissonSampling"], [128, 1, 1, "", "FlInstanceLevelAccountant"]], "fl4health.privacy.fl_accountants.ClientLevelAccountant": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "get_delta"], [128, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantFixedSamplingNoReplacement": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "get_delta"], [128, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlClientLevelAccountantPoissonSampling": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "get_delta"], [128, 2, 1, "", "get_epsilon"]], "fl4health.privacy.fl_accountants.FlInstanceLevelAccountant": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "get_delta"], [128, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant": [[129, 1, 1, "", "FixedSamplingWithoutReplacement"], [129, 1, 1, "", "MomentsAccountant"], [129, 1, 1, "", "PoissonSampling"], [129, 1, 1, "", "SamplingStrategy"]], "fl4health.privacy.moments_accountant.FixedSamplingWithoutReplacement": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.MomentsAccountant": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "get_delta"], [129, 2, 1, "", "get_epsilon"]], "fl4health.privacy.moments_accountant.PoissonSampling": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "get_dp_event"]], "fl4health.privacy.moments_accountant.SamplingStrategy": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "get_dp_event"]], "fl4health.reporting": [[130, 1, 1, "", "JsonReporter"], [130, 1, 1, "", "WandBReporter"], [130, 1, 1, "", "WandBStepType"], [131, 0, 0, "-", "base_reporter"], [132, 0, 0, "-", "json_reporter"], [133, 0, 0, "-", "reports_manager"], [134, 0, 0, "-", "wandb_reporter"]], "fl4health.reporting.JsonReporter": [[130, 2, 1, "", "dump"]], "fl4health.reporting.WandBReporter": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "define_metrics"], [130, 2, 1, "", "initialize"], [130, 2, 1, "", "report"], [130, 2, 1, "", "shutdown"], [130, 2, 1, "", "start_run"]], "fl4health.reporting.WandBStepType": [[130, 3, 1, "", "EPOCH"], [130, 3, 1, "", "ROUND"], [130, 3, 1, "", "STEP"]], "fl4health.reporting.base_reporter": [[131, 1, 1, "", "BaseReporter"]], "fl4health.reporting.base_reporter.BaseReporter": [[131, 2, 1, "", "initialize"], [131, 2, 1, "", "report"], [131, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter": [[132, 1, 1, "", "FileReporter"], [132, 1, 1, "", "JsonReporter"]], "fl4health.reporting.json_reporter.FileReporter": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "dump"], [132, 2, 1, "", "initialize"], [132, 2, 1, "", "report"], [132, 2, 1, "", "shutdown"]], "fl4health.reporting.json_reporter.JsonReporter": [[132, 2, 1, "", "dump"]], "fl4health.reporting.reports_manager": [[133, 1, 1, "", "ReportsManager"]], "fl4health.reporting.reports_manager.ReportsManager": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "initialize"], [133, 2, 1, "", "report"], [133, 2, 1, "", "shutdown"]], "fl4health.reporting.wandb_reporter": [[134, 1, 1, "", "WandBReporter"], [134, 1, 1, "", "WandBStepType"]], "fl4health.reporting.wandb_reporter.WandBReporter": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "define_metrics"], [134, 2, 1, "", "initialize"], [134, 2, 1, "", "report"], [134, 2, 1, "", "shutdown"], [134, 2, 1, "", "start_run"]], "fl4health.reporting.wandb_reporter.WandBStepType": [[134, 3, 1, "", "EPOCH"], [134, 3, 1, "", "ROUND"], [134, 3, 1, "", "STEP"]], "fl4health.servers": [[136, 0, 0, "-", "adaptive_constraint_servers"], [140, 0, 0, "-", "base_server"], [141, 0, 0, "-", "client_level_dp_fed_avg_server"], [142, 0, 0, "-", "evaluate_server"], [143, 0, 0, "-", "fedpm_server"], [144, 0, 0, "-", "instance_level_dp_server"], [145, 0, 0, "-", "model_merge_server"], [146, 0, 0, "-", "nnunet_server"], [147, 0, 0, "-", "polling"], [148, 0, 0, "-", "scaffold_server"]], "fl4health.servers.adaptive_constraint_servers": [[137, 0, 0, "-", "ditto_server"], [138, 0, 0, "-", "fedprox_server"], [139, 0, 0, "-", "mrmtl_server"]], "fl4health.servers.adaptive_constraint_servers.ditto_server": [[137, 1, 1, "", "DittoServer"]], "fl4health.servers.adaptive_constraint_servers.ditto_server.DittoServer": [[137, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server": [[138, 1, 1, "", "FedProxServer"]], "fl4health.servers.adaptive_constraint_servers.fedprox_server.FedProxServer": [[138, 2, 1, "", "__init__"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server": [[139, 1, 1, "", "MrMtlServer"]], "fl4health.servers.adaptive_constraint_servers.mrmtl_server.MrMtlServer": [[139, 2, 1, "", "__init__"]], "fl4health.servers.base_server": [[140, 1, 1, "", "FlServer"]], "fl4health.servers.base_server.FlServer": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "evaluate_round"], [140, 2, 1, "", "fit"], [140, 2, 1, "", "fit_round"], [140, 2, 1, "", "fit_with_per_round_checkpointing"], [140, 2, 1, "", "poll_clients_for_sample_counts"], [140, 2, 1, "", "report_centralized_eval"], [140, 2, 1, "", "shutdown"], [140, 2, 1, "", "update_before_fit"]], "fl4health.servers.client_level_dp_fed_avg_server": [[141, 1, 1, "", "ClientLevelDPFedAvgServer"]], "fl4health.servers.client_level_dp_fed_avg_server.ClientLevelDPFedAvgServer": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "fit"], [141, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.evaluate_server": [[142, 1, 1, "", "EvaluateServer"]], "fl4health.servers.evaluate_server.EvaluateServer": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "aggregate_evaluate"], [142, 2, 1, "", "configure_evaluate"], [142, 2, 1, "", "federated_evaluate"], [142, 2, 1, "", "fit"], [142, 2, 1, "", "load_model_checkpoint_to_parameters"]], "fl4health.servers.fedpm_server": [[143, 1, 1, "", "FedPmServer"]], "fl4health.servers.fedpm_server.FedPmServer": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "fit_round"]], "fl4health.servers.instance_level_dp_server": [[144, 1, 1, "", "InstanceLevelDpServer"]], "fl4health.servers.instance_level_dp_server.InstanceLevelDpServer": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "fit"], [144, 2, 1, "", "setup_privacy_accountant"]], "fl4health.servers.model_merge_server": [[145, 1, 1, "", "ModelMergeServer"]], "fl4health.servers.model_merge_server.ModelMergeServer": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit"]], "fl4health.servers.nnunet_server": [[146, 1, 1, "", "NnunetServer"], [146, 4, 1, "", "add_items_to_config_fn"]], "fl4health.servers.nnunet_server.NnunetServer": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "initialize_server_model"], [146, 2, 1, "", "update_before_fit"]], "fl4health.servers.polling": [[147, 4, 1, "", "poll_client"], [147, 4, 1, "", "poll_clients"]], "fl4health.servers.scaffold_server": [[148, 1, 1, "", "DPScaffoldServer"], [148, 1, 1, "", "ScaffoldServer"]], "fl4health.servers.scaffold_server.DPScaffoldServer": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "fit"]], "fl4health.servers.scaffold_server.ScaffoldServer": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "fit"]], "fl4health.strategies": [[151, 0, 0, "-", "aggregate_utils"], [152, 0, 0, "-", "basic_fedavg"], [153, 0, 0, "-", "client_dp_fedavgm"], [154, 0, 0, "-", "fedavg_dynamic_layer"], [155, 0, 0, "-", "fedavg_sparse_coo_tensor"], [156, 0, 0, "-", "fedavg_with_adaptive_constraint"], [157, 0, 0, "-", "feddg_ga"], [158, 0, 0, "-", "feddg_ga_with_adaptive_constraint"], [159, 0, 0, "-", "fedpca"], [160, 0, 0, "-", "fedpm"], [161, 0, 0, "-", "flash"], [162, 0, 0, "-", "model_merge_strategy"], [163, 0, 0, "-", "noisy_aggregate"], [164, 0, 0, "-", "scaffold"], [165, 0, 0, "-", "strategy_with_poll"]], "fl4health.strategies.aggregate_utils": [[151, 4, 1, "", "aggregate_losses"], [151, 4, 1, "", "aggregate_results"]], "fl4health.strategies.basic_fedavg": [[152, 1, 1, "", "BasicFedAvg"], [152, 1, 1, "", "OpacusBasicFedAvg"]], "fl4health.strategies.basic_fedavg.BasicFedAvg": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "aggregate_evaluate"], [152, 2, 1, "", "aggregate_fit"], [152, 2, 1, "", "configure_evaluate"], [152, 2, 1, "", "configure_fit"], [152, 2, 1, "", "configure_poll"]], "fl4health.strategies.basic_fedavg.OpacusBasicFedAvg": [[152, 2, 1, "", "__init__"]], "fl4health.strategies.client_dp_fedavgm": [[153, 1, 1, "", "ClientLevelDPFedAvgM"]], "fl4health.strategies.client_dp_fedavgm.ClientLevelDPFedAvgM": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "aggregate_fit"], [153, 2, 1, "", "calculate_update_with_momentum"], [153, 2, 1, "", "configure_evaluate"], [153, 2, 1, "", "configure_fit"], [153, 2, 1, "", "modify_noise_multiplier"], [153, 2, 1, "", "split_model_weights_and_clipping_bits"], [153, 2, 1, "", "update_clipping_bound"], [153, 2, 1, "", "update_current_weights"]], "fl4health.strategies.fedavg_dynamic_layer": [[154, 1, 1, "", "FedAvgDynamicLayer"]], "fl4health.strategies.fedavg_dynamic_layer.FedAvgDynamicLayer": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "aggregate"], [154, 2, 1, "", "aggregate_fit"], [154, 2, 1, "", "unweighted_aggregate"], [154, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_sparse_coo_tensor": [[155, 1, 1, "", "FedAvgSparseCooTensor"]], "fl4health.strategies.fedavg_sparse_coo_tensor.FedAvgSparseCooTensor": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "aggregate"], [155, 2, 1, "", "aggregate_fit"], [155, 2, 1, "", "unweighted_aggregate"], [155, 2, 1, "", "weighted_aggregate"]], "fl4health.strategies.fedavg_with_adaptive_constraint": [[156, 1, 1, "", "FedAvgWithAdaptiveConstraint"]], "fl4health.strategies.fedavg_with_adaptive_constraint.FedAvgWithAdaptiveConstraint": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.feddg_ga": [[157, 1, 1, "", "FairnessMetric"], [157, 1, 1, "", "FairnessMetricType"], [157, 1, 1, "", "FedDgGa"], [157, 6, 1, "", "SignalForTypeError"]], "fl4health.strategies.feddg_ga.FairnessMetric": [[157, 2, 1, "", "__init__"]], "fl4health.strategies.feddg_ga.FairnessMetricType": [[157, 3, 1, "", "ACCURACY"], [157, 3, 1, "", "CUSTOM"], [157, 3, 1, "", "LOSS"], [157, 2, 1, "", "signal_for_type"]], "fl4health.strategies.feddg_ga.FedDgGa": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "aggregate_evaluate"], [157, 2, 1, "", "aggregate_fit"], [157, 2, 1, "", "configure_evaluate"], [157, 2, 1, "", "configure_fit"], [157, 2, 1, "", "get_current_weight_step_size"], [157, 2, 1, "", "update_weights_by_ga"], [157, 2, 1, "", "weight_and_aggregate_results"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint": [[158, 1, 1, "", "FedDgGaAdaptiveConstraint"]], "fl4health.strategies.feddg_ga_with_adaptive_constraint.FedDgGaAdaptiveConstraint": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.fedpca": [[159, 1, 1, "", "FedPCA"]], "fl4health.strategies.fedpca.FedPCA": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "aggregate_fit"], [159, 2, 1, "", "merge_subspaces_qr"], [159, 2, 1, "", "merge_subspaces_svd"], [159, 2, 1, "", "merge_two_subspaces_qr"]], "fl4health.strategies.fedpm": [[160, 1, 1, "", "FedPm"]], "fl4health.strategies.fedpm.FedPm": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "aggregate"], [160, 2, 1, "", "aggregate_bayesian"], [160, 2, 1, "", "reset_beta_priors"]], "fl4health.strategies.flash": [[161, 1, 1, "", "Flash"]], "fl4health.strategies.flash.Flash": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "aggregate_fit"]], "fl4health.strategies.model_merge_strategy": [[162, 1, 1, "", "ModelMergeStrategy"]], "fl4health.strategies.model_merge_strategy.ModelMergeStrategy": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "aggregate_evaluate"], [162, 2, 1, "", "aggregate_fit"], [162, 2, 1, "", "configure_evaluate"], [162, 2, 1, "", "configure_fit"], [162, 2, 1, "", "evaluate"], [162, 2, 1, "", "initialize_parameters"]], "fl4health.strategies.noisy_aggregate": [[163, 4, 1, "", "add_noise_to_array"], [163, 4, 1, "", "add_noise_to_ndarrays"], [163, 4, 1, "", "gaussian_noisy_aggregate_clipping_bits"], [163, 4, 1, "", "gaussian_noisy_unweighted_aggregate"], [163, 4, 1, "", "gaussian_noisy_weighted_aggregate"]], "fl4health.strategies.scaffold": [[164, 1, 1, "", "OpacusScaffold"], [164, 1, 1, "", "Scaffold"]], "fl4health.strategies.scaffold.OpacusScaffold": [[164, 2, 1, "", "__init__"]], "fl4health.strategies.scaffold.Scaffold": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "aggregate"], [164, 2, 1, "", "aggregate_fit"], [164, 2, 1, "", "compute_parameter_delta"], [164, 2, 1, "", "compute_updated_control_variates"], [164, 2, 1, "", "compute_updated_parameters"], [164, 2, 1, "", "compute_updated_weights"], [164, 2, 1, "", "configure_fit_all"], [164, 2, 1, "", "initialize_control_variates"]], "fl4health.strategies.strategy_with_poll": [[165, 1, 1, "", "StrategyWithPolling"]], "fl4health.strategies.strategy_with_poll.StrategyWithPolling": [[165, 2, 1, "", "configure_poll"]], "fl4health.utils": [[167, 0, 0, "-", "client"], [168, 0, 0, "-", "config"], [169, 0, 0, "-", "data_generation"], [170, 0, 0, "-", "dataset"], [171, 0, 0, "-", "dataset_converter"], [172, 0, 0, "-", "early_stopper"], [173, 0, 0, "-", "functions"], [174, 0, 0, "-", "load_data"], [175, 0, 0, "-", "logging"], [176, 0, 0, "-", "losses"], [178, 0, 0, "-", "metrics"], [179, 0, 0, "-", "msd_dataset_sources"], [180, 0, 0, "-", "nnunet_utils"], [181, 0, 0, "-", "parameter_extraction"], [182, 0, 0, "-", "partitioners"], [183, 0, 0, "-", "peft_parameter_extraction"], [184, 0, 0, "-", "privacy_utilities"], [185, 0, 0, "-", "random"], [186, 0, 0, "-", "sampler"], [187, 0, 0, "-", "snapshotter"], [188, 0, 0, "-", "typing"]], "fl4health.utils.client": [[167, 4, 1, "", "check_if_batch_is_empty_and_verify_input"], [167, 4, 1, "", "clone_and_freeze_model"], [167, 4, 1, "", "fold_loss_dict_into_metrics"], [167, 4, 1, "", "maybe_progress_bar"], [167, 4, 1, "", "move_data_to_device"], [167, 4, 1, "", "process_and_check_validation_steps"], [167, 4, 1, "", "set_pack_losses_with_val_metrics"]], "fl4health.utils.config": [[168, 6, 1, "", "InvalidConfigError"], [168, 4, 1, "", "check_config"], [168, 4, 1, "", "load_config"], [168, 4, 1, "", "make_dict_with_epochs_or_steps"], [168, 4, 1, "", "narrow_dict_type"], [168, 4, 1, "", "narrow_dict_type_and_set_attribute"]], "fl4health.utils.data_generation": [[169, 1, 1, "", "SyntheticFedProxDataset"], [169, 1, 1, "", "SyntheticIidFedProxDataset"], [169, 1, 1, "", "SyntheticNonIidFedProxDataset"]], "fl4health.utils.data_generation.SyntheticFedProxDataset": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "construct_covariance_matrix"], [169, 2, 1, "", "generate"], [169, 2, 1, "", "generate_client_tensors"], [169, 2, 1, "", "one_layer_map_inputs_to_outputs"], [169, 2, 1, "", "two_layer_map_inputs_to_outputs"]], "fl4health.utils.data_generation.SyntheticIidFedProxDataset": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "generate_client_tensors"], [169, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.data_generation.SyntheticNonIidFedProxDataset": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "generate_client_tensors"], [169, 2, 1, "", "get_input_output_tensors"]], "fl4health.utils.dataset": [[170, 1, 1, "", "BaseDataset"], [170, 1, 1, "", "DictionaryDataset"], [170, 1, 1, "", "SslTensorDataset"], [170, 1, 1, "", "SyntheticDataset"], [170, 1, 1, "", "TensorDataset"], [170, 4, 1, "", "select_by_indices"]], "fl4health.utils.dataset.BaseDataset": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "update_target_transform"], [170, 2, 1, "", "update_transform"]], "fl4health.utils.dataset.DictionaryDataset": [[170, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SslTensorDataset": [[170, 2, 1, "", "__init__"]], "fl4health.utils.dataset.SyntheticDataset": [[170, 2, 1, "", "__init__"]], "fl4health.utils.dataset.TensorDataset": [[170, 2, 1, "", "__init__"]], "fl4health.utils.dataset_converter": [[171, 1, 1, "", "AutoEncoderDatasetConverter"], [171, 1, 1, "", "DatasetConverter"]], "fl4health.utils.dataset_converter.AutoEncoderDatasetConverter": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "convert_dataset"], [171, 2, 1, "", "get_condition_vector_size"], [171, 2, 1, "", "get_unpacking_function"], [171, 2, 1, "", "unpack_input_condition"]], "fl4health.utils.dataset_converter.DatasetConverter": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "convert_dataset"]], "fl4health.utils.early_stopper": [[172, 1, 1, "", "EarlyStopper"]], "fl4health.utils.early_stopper.EarlyStopper": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "load_snapshot"], [172, 2, 1, "", "should_stop"]], "fl4health.utils.functions": [[173, 1, 1, "", "BernoulliSample"], [173, 4, 1, "", "decode_and_pseudo_sort_results"], [173, 4, 1, "", "pseudo_sort_scoring_function"], [173, 4, 1, "", "select_zeroeth_element"], [173, 4, 1, "", "sigmoid_inverse"]], "fl4health.utils.functions.BernoulliSample": [[173, 2, 1, "", "backward"], [173, 2, 1, "", "forward"], [173, 2, 1, "", "setup_context"]], "fl4health.utils.load_data": [[174, 1, 1, "", "ToNumpy"], [174, 4, 1, "", "get_cifar10_data_and_target_tensors"], [174, 4, 1, "", "get_mnist_data_and_target_tensors"], [174, 4, 1, "", "get_train_and_val_cifar10_datasets"], [174, 4, 1, "", "get_train_and_val_mnist_datasets"], [174, 4, 1, "", "load_cifar10_data"], [174, 4, 1, "", "load_cifar10_test_data"], [174, 4, 1, "", "load_mnist_data"], [174, 4, 1, "", "load_mnist_test_data"], [174, 4, 1, "", "load_msd_dataset"], [174, 4, 1, "", "split_data_and_targets"]], "fl4health.utils.logging": [[175, 1, 1, "", "LoggingMode"]], "fl4health.utils.logging.LoggingMode": [[175, 3, 1, "", "EARLY_STOP_VALIDATION"], [175, 3, 1, "", "TEST"], [175, 3, 1, "", "TRAIN"], [175, 3, 1, "", "VALIDATION"]], "fl4health.utils.losses": [[176, 1, 1, "", "EvaluationLosses"], [176, 1, 1, "", "LossMeter"], [176, 1, 1, "", "LossMeterType"], [176, 1, 1, "", "Losses"], [176, 1, 1, "", "TrainingLosses"]], "fl4health.utils.losses.EvaluationLosses": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "aggregate"], [176, 2, 1, "", "as_dict"]], "fl4health.utils.losses.LossMeter": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "aggregate_losses_dict"], [176, 2, 1, "", "clear"], [176, 2, 1, "", "compute"], [176, 2, 1, "", "update"]], "fl4health.utils.losses.LossMeterType": [[176, 3, 1, "", "ACCUMULATION"], [176, 3, 1, "", "AVERAGE"]], "fl4health.utils.losses.Losses": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "aggregate"], [176, 2, 1, "", "as_dict"]], "fl4health.utils.losses.TrainingLosses": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "aggregate"], [176, 2, 1, "", "as_dict"]], "fl4health.utils.msd_dataset_sources": [[179, 1, 1, "", "MsdDataset"], [179, 4, 1, "", "get_msd_dataset_enum"]], "fl4health.utils.msd_dataset_sources.MsdDataset": [[179, 3, 1, "", "TASK01_BRAINTUMOUR"], [179, 3, 1, "", "TASK02_HEART"], [179, 3, 1, "", "TASK03_LIVER"], [179, 3, 1, "", "TASK04_HIPPOCAMPUS"], [179, 3, 1, "", "TASK05_PROSTATE"], [179, 3, 1, "", "TASK06_LUNG"], [179, 3, 1, "", "TASK07_PANCREAS"], [179, 3, 1, "", "TASK08_HEPATICVESSEL"], [179, 3, 1, "", "TASK09_SPLEEN"], [179, 3, 1, "", "TASK10_COLON"]], "fl4health.utils.nnunet_utils": [[180, 1, 1, "", "Module2LossWrapper"], [180, 1, 1, "", "NnUNetDataLoaderWrapper"], [180, 1, 1, "", "NnunetConfig"], [180, 1, 1, "", "PolyLRSchedulerWrapper"], [180, 1, 1, "", "StreamToLogger"], [180, 4, 1, "", "collapse_one_hot_tensor"], [180, 4, 1, "", "convert_deep_supervision_dict_to_list"], [180, 4, 1, "", "convert_deep_supervision_list_to_dict"], [180, 4, 1, "", "get_dataset_n_voxels"], [180, 4, 1, "", "get_segs_from_probs"], [180, 4, 1, "", "prepare_loss_arg"], [180, 4, 1, "", "reload_modules"], [180, 4, 1, "", "set_nnunet_env"], [180, 4, 1, "", "use_default_signal_handlers"]], "fl4health.utils.nnunet_utils.Module2LossWrapper": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "forward"]], "fl4health.utils.nnunet_utils.NnUNetDataLoaderWrapper": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "reset"], [180, 2, 1, "", "shutdown"]], "fl4health.utils.nnunet_utils.PolyLRSchedulerWrapper": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "get_lr"]], "fl4health.utils.nnunet_utils.StreamToLogger": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "flush"], [180, 2, 1, "", "write"]], "fl4health.utils.parameter_extraction": [[181, 4, 1, "", "check_shape_match"], [181, 4, 1, "", "get_all_model_parameters"]], "fl4health.utils.partitioners": [[182, 1, 1, "", "DirichletLabelBasedAllocation"]], "fl4health.utils.partitioners.DirichletLabelBasedAllocation": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "partition_dataset"], [182, 2, 1, "", "partition_label_indices"]], "fl4health.utils.peft_parameter_extraction": [[183, 4, 1, "", "get_all_peft_parameters_from_model"]], "fl4health.utils.privacy_utilities": [[184, 4, 1, "", "convert_model_to_opacus_model"], [184, 4, 1, "", "map_model_to_opacus_model"], [184, 4, 1, "", "privacy_validate_and_fix_modules"]], "fl4health.utils.random": [[185, 4, 1, "", "generate_hash"], [185, 4, 1, "", "restore_random_state"], [185, 4, 1, "", "save_random_state"], [185, 4, 1, "", "set_all_random_seeds"], [185, 4, 1, "", "unset_all_random_seeds"]], "fl4health.utils.sampler": [[186, 1, 1, "", "DirichletLabelBasedSampler"], [186, 1, 1, "", "LabelBasedSampler"], [186, 1, 1, "", "MinorityLabelBasedSampler"]], "fl4health.utils.sampler.DirichletLabelBasedSampler": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "subsample"]], "fl4health.utils.sampler.LabelBasedSampler": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "subsample"]], "fl4health.utils.sampler.MinorityLabelBasedSampler": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "subsample"]], "fl4health.utils.snapshotter": [[187, 1, 1, "", "AbstractSnapshotter"], [187, 1, 1, "", "BytesSnapshotter"], [187, 1, 1, "", "EnumSnapshotter"], [187, 1, 1, "", "HistorySnapshotter"], [187, 1, 1, "", "LRSchedulerSnapshotter"], [187, 1, 1, "", "OptimizerSnapshotter"], [187, 1, 1, "", "SerializableObjectSnapshotter"], [187, 1, 1, "", "SingletonSnapshotter"], [187, 1, 1, "", "StringSnapshotter"], [187, 1, 1, "", "TorchModuleSnapshotter"]], "fl4health.utils.snapshotter.AbstractSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.BytesSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.EnumSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.HistorySnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.LRSchedulerSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.OptimizerSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SerializableObjectSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.SingletonSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.StringSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.snapshotter.TorchModuleSnapshotter": [[187, 2, 1, "", "load_attribute"], [187, 2, 1, "", "save_attribute"]], "fl4health.utils.typing": [[188, 1, 1, "", "LogLevel"]], "fl4health.utils.typing.LogLevel": [[188, 3, 1, "", "CRITICAL"], [188, 3, 1, "", "DEBUG"], [188, 3, 1, "", "ERROR"], [188, 3, 1, "", "INFO"], [188, 3, 1, "", "NOTSET"], [188, 3, 1, "", "WARNING"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [1, 10, 11, 13, 14, 17, 21, 22, 23, 25, 27, 28, 29, 36, 38, 41, 44, 45, 47, 48, 49, 51, 52, 80, 89, 90, 96, 114, 118, 120, 130, 134, 140, 146, 152, 154, 155, 157, 159, 160, 161, 164, 165, 167, 169, 180, 182], "0": [7, 24, 27, 44, 45, 46, 47, 49, 51, 56, 59, 69, 71, 72, 74, 76, 78, 79, 80, 83, 84, 85, 93, 94, 95, 101, 103, 104, 108, 120, 130, 134, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 169, 173, 174, 180, 182, 186, 188], "000": 49, "000local": 49, "001": [7, 71], "00818": 34, "01": 93, "03075": 60, "03871": 153, "05": [73, 104], "05206": 36, "05629": [152, 156], "05709": [69, 98], "06127": 169, "06378": [52, 148, 164], "06963": [153, 163], "07": [76, 83], "07078": [36, 97], "07623": 33, "07978313": [182, 186], "08857052": [182, 186], "09": 161, "09158": [69, 98], "09278": [52, 148], "1": [16, 24, 27, 44, 45, 47, 49, 51, 52, 63, 69, 70, 71, 73, 76, 78, 79, 80, 83, 84, 85, 93, 95, 101, 103, 104, 108, 110, 120, 130, 134, 140, 141, 142, 143, 144, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 169, 172, 173, 174, 180, 182, 186], "10": [1, 27, 44, 45, 71, 85, 108, 169, 174, 180, 182, 186, 188], "100": 186, "1000": [169, 182, 186], "10000": 182, "10020518": 74, "12": 49, "1308": 173, "13461": 22, "15": 59, "15328": [35, 143, 160], "1602": [152, 156], "16825": 37, "1710": [153, 163], "1812": 169, "19": 73, "1905": 153, "1910": [52, 148, 164], "1912": 34, "19619462": [182, 186], "19644968": [182, 186], "19992536": [182, 186], "1d": [84, 101, 169, 182], "1e": [73, 76, 83, 104, 161], "2": [7, 23, 31, 49, 52, 69, 73, 76, 79, 80, 83, 84, 85, 108, 129, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 169, 173, 174, 180, 182, 186], "20": [7, 27, 44, 45, 60, 188], "2002": [69, 98], "2003": 22, "20080513": [182, 186], "2016": [69, 129], "2019": 60, "2023": [157, 158], "2066252": [182, 186], "2102": [33, 36, 97], "2111": [52, 148], "2207": [60, 69, 98], "2209": [35, 143, 160], "2303": 36, "2309": 37, "23645891": [182, 186], "250": [49, 180], "29519184": [182, 186], "2999956": [182, 186], "2d": [33, 49, 79, 96, 101, 104, 108, 169], "2i": 73, "2n": 69, "3": [1, 7, 49, 63, 76, 79, 83, 85, 182], "30": 188, "32": [129, 147, 185], "333": 78, "3432": 173, "3837": 180, "3d": [76, 83, 101, 104], "3d_fullr": 49, "4": [49, 52, 73, 76, 79, 80, 83, 85, 173], "40": 188, "4096": 185, "42": 185, "4d": 104, "5": [47, 49, 51, 69, 71, 72, 74, 76, 78, 79, 83, 93, 94, 104, 108, 153, 156, 158, 169, 172, 180, 182, 186], "50": [71, 186, 188], "5d": 104, "6": 108, "60": 169, "64": [7, 85, 180], "667": 78, "6b180037abbebea991d8b1232f8a8ca9": 69, "7": [59, 85], "8": [31, 56, 59, 79, 80, 185, 186], "80": 1, "8080": 7, "8222": 79, "9": [1, 7, 78, 85, 153, 161, 180], "99": 161, "A": [1, 4, 10, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 93, 95, 96, 98, 99, 104, 105, 106, 108, 118, 120, 130, 131, 132, 134, 137, 139, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 170, 171, 174, 176, 180, 185, 187], "AND": [10, 36, 38, 79, 146, 164, 170], "AS": 51, "AT": [79, 80, 170], "As": [1, 10, 11, 13, 28, 41, 76, 80, 83, 85, 89, 90, 108, 169, 173], "At": [1, 23, 30, 38, 46, 172], "BE": 170, "By": [13, 21, 23, 27, 41, 44, 45, 49, 71, 86, 87, 106, 140, 164], "For": [1, 11, 13, 14, 17, 22, 23, 25, 27, 28, 32, 33, 36, 38, 44, 45, 46, 47, 48, 49, 51, 66, 76, 78, 79, 80, 83, 85, 89, 90, 93, 94, 101, 104, 108, 110, 114, 117, 120, 126, 129, 130, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 154, 155, 156, 157, 158, 159, 163, 169, 170, 173, 180, 184, 185, 186], "If": [1, 7, 10, 11, 12, 13, 14, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 67, 72, 73, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 98, 101, 103, 104, 108, 123, 126, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 156, 157, 158, 159, 164, 167, 168, 169, 172, 173, 180, 182, 185], "In": [1, 4, 10, 21, 22, 23, 27, 28, 30, 36, 38, 44, 48, 49, 50, 51, 73, 79, 80, 85, 86, 87, 89, 90, 101, 103, 104, 118, 120, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 159, 160, 162, 169, 176, 182, 186], "It": [1, 12, 13, 14, 32, 48, 49, 69, 74, 80, 94, 96, 97, 114, 118, 124, 129, 130, 131, 134, 140, 152, 153, 157, 158, 164, 169, 173, 182, 184, 185], "NOT": [10, 38, 99, 109, 156, 158], "No": [18, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 128], "Not": [46, 48, 49, 63, 113, 142, 145, 162], "OR": 146, "On": [48, 80], "One": [4, 22, 80, 109, 144, 148, 174], "Or": 167, "TO": [51, 170], "That": [1, 11, 30, 36, 79, 80, 93, 94, 105, 153, 164, 169, 182], "The": [1, 4, 7, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 60, 63, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 113, 114, 117, 120, 124, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 176, 180, 182, 184, 185, 186, 187], "Their": 80, "Then": [23, 24, 27, 28, 29, 33, 38, 44, 45, 48, 49, 52, 89, 90, 160, 164, 169], "There": [38, 80, 173, 182], "These": [1, 4, 23, 28, 30, 31, 38, 46, 50, 73, 79, 80, 89, 90, 93, 97, 105, 106, 109, 110, 114, 141, 142, 144, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 169, 170, 181, 183], "To": [1, 7, 23, 29, 31, 38, 46, 49, 52, 76, 77, 78, 83, 86, 87, 94, 145, 176], "Will": [10, 14, 157, 170], "With": 7, "_": [7, 10, 12, 52, 74], "_1": 52, "_2": 52, "__call__": [76, 80, 83], "__get_item__": 170, "__init__": [1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 169, 170, 171, 172, 176, 180, 182, 186], "_config": 49, "_f": 108, "_hydrate_model_for_checkpoint": [13, 145], "_loss": [7, 23, 49, 88, 90, 124, 180], "_lrschedul": [49, 180], "_maskedbatchnorm": 104, "_modul": 101, "_p": 74, "_post_process_count_tensor": 79, "_state": 14, "_train_step_with_model_and_optim": 41, "_val_step_with_model": 41, "ab": [22, 33, 34, 36, 52, 60, 148, 152, 153, 156, 169], "ab8068dbc96804a5c1a8b898fd115175cfebfe75": 93, "abadi": 129, "abc": [1, 10, 14, 76, 77, 80, 83, 94, 106, 107, 116, 117, 128, 129, 140, 165, 169, 170, 176, 186, 187], "abil": [38, 41, 86, 87], "abl": [1, 47], "ablat": [4, 37], "about": [21, 23, 24, 28, 30, 38, 46, 48, 52, 57, 86, 87, 89, 90, 129], "abov": [1, 4, 27, 38, 44, 45, 73, 76, 79, 80, 83, 84, 108, 120, 128, 129, 130, 134, 153, 155, 159, 169], "absenc": 4, "absolut": [70, 180], "abstract": [10, 14, 46, 69, 76, 77, 80, 83, 94, 106, 107, 116, 117, 119, 123, 128, 129, 165, 169, 170, 176, 186, 187], "abstracta": [8, 92, 94], "abstractsnapshott": [8, 14, 166, 187], "accept": [78, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 173], "accept_failur": [137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "access": [130, 134], "accessor": [89, 90], "accomplish": [79, 140, 186], "accord": [24, 49, 52, 85, 108, 120, 152, 155, 156, 162, 164, 176, 182], "accordingli": 94, "account": [42, 85, 128, 129, 130, 134, 141, 144, 148, 153, 159], "accumul": [27, 44, 45, 76, 77, 78, 80, 82, 83, 96, 166, 176], "accumulate_featur": 96, "accuraci": [7, 8, 76, 78, 83, 150, 157, 162, 164], "achiev": [23, 41], "across": [38, 46, 48, 49, 70, 74, 79, 80, 81, 96, 128, 130, 131, 134, 154, 155, 159, 160, 163, 164, 169, 173, 180, 182], "act": [95, 104, 106, 110, 167], "activ": [1, 7, 23, 25, 27, 28, 38, 41, 44, 45, 47, 51], "actual": [11, 48, 108], "ad": [1, 4, 10, 14, 21, 23, 24, 27, 28, 30, 38, 41, 44, 45, 46, 48, 52, 63, 86, 87, 89, 90, 96, 101, 104, 106, 108, 129, 130, 134, 141, 144, 146, 148, 163, 171], "adap": 180, "adapt": [4, 13, 21, 28, 39, 41, 48, 60, 86, 87, 93, 153, 156, 158, 161], "adapt_loss_weight": [156, 158], "adaptive_alpha": 93, "adaptive_clip": [24, 153], "adaptive_constraint_serv": [8, 135], "adaptive_drift_constrain": [8, 86], "adaptive_drift_constraint_cli": [8, 20], "adaptiveconstraintservercheckpointandstatemodul": [8, 9, 13, 137, 138, 139], "adaptivedriftconstrainedmixin": [8, 86, 87, 89, 90], "adaptivedriftconstrainedprotocol": [8, 86, 87, 89, 90], "adaptivedriftconstraintcli": [8, 20, 21, 28, 32, 48, 86, 87], "add": [4, 10, 14, 21, 27, 28, 35, 38, 44, 45, 48, 76, 83, 86, 87, 89, 90, 101, 108, 124, 130, 131, 134, 140, 143, 153, 163, 173], "add_items_to_config_fn": [8, 135, 146], "add_mean": 108, "add_noise_to_arrai": [8, 150, 163], "add_noise_to_ndarrai": [8, 150, 163], "add_to_snapshot_attr": [9, 14], "addit": [1, 4, 13, 21, 22, 23, 25, 27, 28, 29, 38, 39, 44, 45, 47, 48, 49, 51, 79, 80, 89, 90, 96, 101, 103, 104, 140, 146, 156, 169, 171, 176, 185], "addition": [28, 49], "additional_dim": 180, "additional_loss": 176, "additional_paramet": [115, 117, 119], "adher": 1, "adjust": [4, 156, 157, 158], "adjustment_weight": 157, "adjustment_weight_step_s": [157, 158], "advanc": [22, 23], "aeprocessor": [121, 122, 123], "affect": [79, 146, 185], "affin": [104, 169], "aforement": 173, "after": [4, 7, 10, 11, 13, 14, 21, 22, 23, 25, 27, 32, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 80, 86, 87, 93, 94, 104, 108, 118, 125, 130, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 153, 159, 160, 162, 169, 170, 171, 174, 180], "afterward": [94, 180], "again": 17, "against": [21, 22, 23, 25, 27, 28, 29, 38, 44, 45, 47, 48, 51, 76, 77, 78, 83, 89, 90, 157, 158], "agglom": 159, "aggreg": [4, 11, 13, 21, 22, 23, 25, 28, 30, 31, 32, 33, 38, 45, 46, 47, 48, 49, 50, 51, 52, 74, 79, 80, 81, 86, 87, 89, 90, 93, 95, 97, 99, 109, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 176], "aggregate_bayesian": [150, 160], "aggregate_evalu": [135, 142, 150, 152, 157, 162], "aggregate_fit": [150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164], "aggregate_loss": [8, 150, 151], "aggregate_losses_dict": [166, 176], "aggregate_result": [8, 150, 151], "aggregate_util": [8, 150], "aggregated_metr": 81, "aggregation_mod": 95, "ai": [56, 130, 134], "aim": [4, 33, 51, 69, 73, 74, 94, 137, 138, 139, 140, 141, 143, 144, 146, 148], "akin": [11, 28, 48], "al": [60, 129, 157, 158], "algorithm": [4, 22, 23, 28, 30, 32, 35, 38, 47, 48, 89, 90, 108, 118, 137, 139, 143, 148, 153, 157, 158, 159, 161, 185], "alia": [25, 28, 29, 36, 47, 51, 63, 89, 90], "align": [71, 79, 80, 152, 154, 155, 159, 160, 164], "align_pred_and_target_shap": [8, 76, 85], "all": [1, 4, 11, 14, 16, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 38, 41, 44, 45, 47, 48, 49, 50, 51, 52, 57, 63, 66, 72, 79, 80, 81, 82, 84, 86, 87, 89, 90, 94, 96, 99, 101, 108, 113, 114, 118, 120, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 169, 171, 172, 173, 176, 180, 181, 183], "all_client_metr": 81, "all_h_u_per_sampl": 73, "all_h_u_per_v_i": 73, "alloc": [174, 182], "allow": [4, 10, 11, 13, 14, 21, 23, 24, 28, 30, 31, 36, 38, 39, 41, 42, 46, 48, 52, 63, 73, 78, 86, 87, 89, 90, 96, 105, 108, 126, 130, 134, 140, 143, 146, 152, 154, 155, 157, 159, 160, 170, 172, 173, 185], "almost": 163, "along": [1, 4, 13, 22, 23, 29, 30, 31, 36, 38, 41, 46, 49, 52, 79, 80, 81, 82, 85, 96, 99, 109, 142, 153, 154, 155, 156, 159, 160, 176], "alongsid": 115, "alpha": [23, 27, 44, 45, 93, 160, 169], "alpha_lr": 93, "alpha_new": 160, "alreadi": [1, 7, 10, 11, 12, 22, 23, 29, 41, 46, 49, 108, 114, 130, 134, 159, 174], "also": [1, 4, 13, 21, 23, 24, 25, 27, 28, 29, 35, 38, 44, 45, 47, 48, 49, 50, 51, 52, 73, 80, 86, 87, 89, 90, 97, 99, 105, 117, 118, 120, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 155, 156, 157, 158, 159, 160, 164, 169, 171, 173, 180, 185], "alter": 1, "altern": [108, 169], "although": [94, 180], "alwai": [10, 12, 21, 24, 30, 46, 48, 49, 80, 86, 87, 105, 118, 130, 131, 134, 162, 180], "always_preprocess": 49, "ambigu": 85, "among": 155, "amount": [140, 141, 144, 148, 156, 158], "an": [1, 4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 59, 63, 67, 77, 78, 79, 80, 84, 86, 87, 89, 90, 94, 95, 98, 101, 103, 104, 105, 106, 108, 117, 118, 120, 130, 131, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 167, 169, 170, 173, 175, 176, 179, 180, 182, 184, 186, 188], "analysi": [1, 108, 159], "analyt": 124, "analyz": 56, "ani": [1, 10, 11, 13, 14, 22, 23, 24, 25, 27, 29, 31, 33, 36, 41, 44, 45, 47, 49, 51, 57, 59, 60, 80, 88, 91, 93, 96, 97, 106, 114, 115, 116, 117, 118, 119, 120, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 154, 155, 157, 158, 159, 165, 168, 169, 170, 171, 173, 180, 181, 184, 185, 186, 187], "announc": [23, 49], "anoth": [4, 7, 101, 103, 104, 120, 164, 169, 182, 184], "anticip": 4, "anyth": [4, 23, 27, 28, 29, 89, 90, 101, 140], "apfl": [4, 22, 23, 27, 44, 45, 49, 93], "apfl_bas": [8, 92], "apfl_client": [8, 20], "apflclient": [8, 20, 22], "apflmodul": [8, 92, 93], "api": 4, "app": 142, "appear": 1, "append": [23, 49, 63, 76, 77, 78, 83, 176], "appendix": 169, "appli": [1, 4, 16, 17, 18, 21, 23, 25, 27, 29, 41, 44, 45, 49, 52, 56, 59, 63, 69, 78, 86, 87, 89, 90, 93, 101, 103, 104, 108, 125, 128, 129, 146, 160, 163, 170, 171, 173, 174, 180], "applic": [4, 10, 63, 91, 102, 125, 129, 156, 158, 180], "apply_adaptive_drift_to_cli": [8, 86, 87], "apply_layer_filt": [111, 114], "approach": [11, 33, 35, 37, 50, 51, 71, 93, 97, 109, 152, 153, 156, 159, 160, 184], "appropri": [21, 23, 30, 33, 36, 47, 51, 79, 86, 87, 89, 90, 94, 151, 169], "approv": 1, "approx": 153, "approxim": [27, 44, 45, 73, 108, 128, 159], "ar": [1, 4, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 69, 70, 71, 73, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 113, 114, 117, 118, 120, 126, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 186], "arbitrari": [23, 117, 120, 131, 132, 154, 155, 173], "architectur": [4, 13, 28, 38, 89, 90, 93, 94, 97, 146, 152, 164], "area": [76, 83, 154, 155], "aren": 39, "arg": [86, 87, 88, 89, 90, 91, 107, 173, 184, 186], "argmax": 169, "argument": [7, 10, 12, 23, 27, 41, 44, 45, 78, 79, 80, 84, 108, 130, 131, 132, 134, 146, 167, 170, 173, 180], "around": [1, 138], "arrai": [21, 86, 87, 113, 117, 145, 151, 160, 163, 164, 173, 181, 182, 183, 186], "arrang": 159, "art": 4, "articl": [51, 74], "artifact": [137, 138, 139, 140, 141, 143, 144, 146, 148], "arxiv": [22, 33, 34, 35, 36, 37, 52, 60, 69, 97, 98, 143, 148, 152, 153, 156, 160, 163, 164, 169, 173], "as_dict": [166, 176], "ask": [38, 137, 138, 139, 140, 141, 143, 144, 146, 148], "assert": 14, "assertionerror": [46, 76, 83, 85], "assess": 71, "assign": [182, 186], "assist": 14, "associ": [1, 10, 12, 14, 17, 23, 24, 30, 31, 37, 39, 47, 51, 56, 66, 72, 74, 76, 77, 78, 79, 80, 82, 83, 91, 93, 94, 109, 110, 117, 120, 130, 134, 142, 147, 148, 152, 153, 164, 169, 170, 181, 182, 183, 184], "assum": [13, 21, 22, 23, 24, 27, 28, 29, 30, 38, 41, 44, 45, 46, 49, 50, 52, 70, 73, 76, 79, 80, 83, 85, 86, 87, 89, 90, 94, 98, 101, 103, 104, 108, 109, 113, 114, 128, 129, 142, 153, 157, 159, 160, 162, 164, 167, 169, 170, 173, 180, 182], "assumpt": [85, 94, 96], "attempt": [4, 10, 12, 30, 39, 51, 79, 80, 85, 182, 184], "attent": 170, "attribut": [10, 11, 14, 22, 23, 24, 25, 27, 28, 29, 30, 33, 38, 44, 45, 46, 48, 49, 52, 76, 77, 78, 80, 83, 89, 90, 96, 141, 144, 157, 168, 172, 173, 187], "attribute_nam": 168, "attribute_snapshot": 187, "aucroc": [76, 83], "augment": [32, 49, 170, 180], "auto": 94, "autocast": 49, "autodocstr": 1, "autoencod": [8, 94, 121, 171], "autoencoderdatasetconvert": [8, 166, 171], "autoencoderprocess": [121, 122, 123], "autoencoders_bas": [8, 92], "autograd": 173, "autom": 1, "automat": [1, 7, 11, 41, 98, 173], "auxiliari": [21, 86, 87, 115, 158], "avail": [1, 4, 11, 13, 16, 18, 140, 148, 152, 162, 164, 171], "available_cli": [152, 162], "averag": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 76, 78, 79, 80, 83, 92, 95, 141, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 176, 180], "avoid": [14, 76, 83, 130, 134, 180, 185], "awai": [27, 44, 45, 108, 118], "awar": 39, "axi": [79, 80, 95], "b": [23, 49, 159, 169], "b_1": 169, "b_2": 169, "b_i": 169, "b_k": [129, 169], "back": [10, 12, 23, 30, 31, 46, 50, 101, 103, 104, 108, 153, 164, 180], "background": [79, 80, 89, 90, 180], "backprop": [22, 23, 41, 49], "backpropag": 29, "backward": [21, 23, 27, 28, 29, 38, 41, 44, 45, 47, 48, 52, 166, 173, 176], "balanc": [76, 83], "balanced_accuraci": [76, 83], "balanced_accuracy_scor": [76, 83], "balancedaccuraci": [8, 76, 83], "bar": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 167], "base": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 186, 187, 188], "base_loss": 124, "base_metr": [8, 76], "base_model": 110, "base_modul": [97, 105, 110], "base_report": [8, 130], "base_sampling_manag": [8, 15], "base_serv": [7, 8, 135], "basecli": [86, 87], "basedataset": [8, 125, 166, 170, 186], "baseestim": 63, "baseexcept": [142, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164], "basefractionsamplingmanag": [8, 15, 16, 18, 19, 153, 164], "basereport": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148], "baseservercheckpointandstatemodul": [8, 9, 13, 140, 141], "basi": [73, 80, 128], "basic": [10, 13, 23, 49, 50, 52, 87, 89, 123, 130, 133, 134, 137, 139, 146, 157, 170], "basic_cli": [7, 8, 20], "basic_exampl": 7, "basic_fedavg": [8, 150], "basica": [8, 92, 94], "basiccli": [7, 8, 10, 11, 14, 20, 21, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 39, 41, 42, 47, 49, 50, 51, 52, 88, 172], "basicfedavg": [8, 144, 150, 152, 153, 154, 155, 156, 159, 161, 164], "batch": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 69, 70, 78, 79, 80, 94, 95, 96, 104, 117, 128, 129, 144, 148, 153, 167, 174, 180], "batch_dim": [79, 80], "batch_siz": [7, 49, 56, 59, 69, 70, 74, 76, 83, 96, 99, 105, 109, 110, 144, 148, 174, 180], "batchnorm": 184, "batchnorm2d": 33, "bayesian": [143, 160], "bayesian_aggreg": 160, "becaus": [11, 36, 49, 79, 108, 113, 145, 153, 170, 180], "becom": 16, "been": [1, 4, 7, 11, 13, 21, 23, 25, 30, 31, 35, 46, 52, 80, 81, 84, 86, 87, 89, 90, 94, 96, 101, 106, 108, 114, 117, 140, 145, 146, 153, 167, 169, 171, 173, 182], "befor": [1, 7, 11, 13, 16, 23, 25, 27, 28, 32, 41, 44, 45, 46, 47, 48, 49, 51, 52, 73, 78, 89, 90, 105, 106, 128, 130, 134, 137, 138, 139, 140, 141, 143, 145, 147, 148, 154, 155, 156, 158, 159, 170, 171, 172, 180], "begin": [23, 38, 49, 50, 140, 143, 160], "behavior": [21, 30, 31, 42, 49, 78, 79, 86, 87, 137, 138, 139, 140, 141, 143, 144, 148, 157, 180], "behind": 159, "being": [4, 12, 13, 14, 21, 23, 24, 25, 28, 30, 34, 37, 38, 39, 46, 47, 48, 50, 51, 52, 75, 78, 79, 80, 85, 86, 87, 89, 90, 110, 119, 128, 140, 141, 144, 146, 148, 152, 164, 180], "believ": 108, "belong": [91, 110, 117, 120, 155, 159], "below": [1, 24, 76, 78, 79, 80, 83, 84, 113, 169], "benchmark": 185, "bernoulli": [101, 103, 104, 160, 173], "bernoulli_prob": 173, "bernoullisampl": [8, 166, 173], "best": [4, 172], "bestlossopacuscheckpoint": [8, 9, 12], "bestlosstorchmodulecheckpoint": [8, 9, 10], "bestmetrictorchmodulecheckpoint": [8, 9, 10], "beta": [23, 27, 44, 45, 73, 143, 153, 160, 169, 182, 186], "beta_1": 161, "beta_2": 161, "beta_global_update_interv": [44, 45], "beta_new": 160, "beta_with_extreme_kernel_base_valu": [68, 73], "better": [1, 4, 10], "between": [4, 22, 23, 24, 25, 27, 28, 32, 34, 36, 37, 38, 44, 45, 47, 48, 50, 52, 69, 70, 71, 72, 73, 74, 75, 78, 79, 85, 101, 103, 104, 112, 115, 118, 120, 124, 160, 174], "bia": [101, 103, 104, 169], "bias": [104, 130, 134], "bias_scor": 118, "bin": 1, "binar": [79, 80], "binari": [49, 61, 67, 76, 79, 80, 83, 85, 101, 103, 104, 118, 153, 160, 180], "binaryclassificationmetr": [8, 76, 79, 80], "binarydic": [8, 76, 79], "binarysoftdicecoeffici": [8, 76, 83], "bit": [13, 24, 140, 143, 153, 163, 180], "black": 1, "blank": [137, 138, 139, 140, 141, 143, 144, 148], "blob": [49, 93, 129], "block": [78, 101, 159, 180], "blur": 170, "bool": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 63, 66, 71, 72, 73, 86, 87, 88, 89, 90, 93, 96, 98, 99, 101, 102, 103, 104, 108, 110, 114, 118, 123, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 171, 172, 180, 184, 185, 187], "boolean": [21, 23, 24, 28, 30, 38, 48, 50, 86, 87, 89, 90, 96, 104, 173, 184, 187], "both": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 78, 79, 85, 89, 90, 93, 94, 95, 99, 101, 104, 109, 137, 138, 139, 140, 141, 143, 144, 146, 148, 164, 168, 170], "bound": [24, 101, 103, 104, 128, 129, 153, 163, 186], "branch": 1, "break": [1, 4, 36, 182], "buf": 180, "buffer": [27, 44, 45, 96, 180], "bug": 169, "built": [1, 4, 153, 164], "byte": [30, 66, 88, 158, 161, 187], "bytessnapshott": [8, 166, 187], "c": [1, 24, 52, 104, 164, 169], "c_": 164, "c_i": 52, "c_t": 153, "c_updat": 164, "cach": 49, "calcul": [4, 22, 23, 25, 30, 38, 47, 51, 52, 76, 78, 79, 80, 83, 105, 118, 124, 153, 157, 164, 167, 180], "calculate_parameters_norm": [20, 24], "calculate_update_with_momentum": [150, 153], "call": [1, 7, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 32, 36, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 86, 87, 89, 90, 94, 96, 120, 130, 131, 132, 133, 134, 140, 143, 154, 155, 160, 173, 180, 184, 186], "callabl": [1, 56, 59, 60, 78, 91, 94, 96, 118, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 170, 171, 174, 180], "can": [1, 7, 14, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 41, 44, 45, 46, 48, 49, 52, 69, 71, 73, 79, 80, 86, 87, 94, 96, 98, 108, 117, 119, 123, 126, 128, 130, 134, 140, 145, 146, 153, 154, 155, 157, 158, 159, 160, 162, 164, 165, 167, 171, 173, 180, 185], "cancer": 59, "cannot": [85, 130, 134], "capabl": 94, "care": [94, 180], "carri": 141, "case": [21, 22, 23, 27, 28, 31, 44, 46, 51, 79, 80, 86, 87, 89, 90, 120, 130, 131, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 159, 160, 162, 163, 167, 176, 180], "categor": [66, 84], "categori": 66, "caus": [137, 138, 139, 140, 141, 143, 144, 146, 148], "cc": 69, "cdot": [24, 52, 78, 93, 94, 108, 164, 169], "cell": 57, "cell_typ": 57, "center": [108, 163, 169], "center_data": [92, 108], "central": [128, 152, 153, 154, 155, 156, 159, 160, 162, 164], "certain": [12, 110, 155, 185], "cfg_fn": 146, "chang": [1, 7, 14, 35, 63, 119, 130, 134, 156, 157, 158], "channel": [76, 79, 80, 83, 101, 104, 146], "charact": 180, "check": [14, 23, 29, 30, 39, 49, 96, 102, 130, 132, 134, 157, 167, 168, 180, 181], "check_config": [8, 166, 168], "check_if_batch_is_empty_and_verify_input": [8, 166, 167], "check_shape_match": [8, 166, 181], "check_target_prediction_keys_equ": [76, 82], "checker": 1, "checkpoint": [1, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 89, 90, 96, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 157, 172, 176], "checkpoint_and_state_modul": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 137, 138, 139, 140, 141, 143, 144, 146, 148], "checkpoint_dict": 14, "checkpoint_dir": [10, 11, 12, 14], "checkpoint_exist": [9, 14], "checkpoint_nam": [10, 11, 12, 14], "checkpoint_path": [10, 12, 13, 14], "checkpoint_score_funct": [10, 12], "checkpoint_score_nam": [10, 12], "checkpointing_path": [123, 125], "checkpointmod": [8, 9, 11], "checkpointscorefunctiontyp": 10, "child": [13, 23, 29, 31, 38, 46, 49, 80, 106, 140, 176, 180], "choic": 1, "choos": 108, "chosen": [108, 140, 143, 171], "cid": [16, 157, 173], "cifar10": 174, "cifarcli": 7, "circular": 101, "clarifi": 1, "class": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 186, 187, 188], "classif": [37, 38, 76, 80, 83, 85, 99, 105, 109, 110], "classifi": [4, 34, 36, 76, 83, 110], "classificationmetr": [8, 76, 80], "classmethod": [101, 103, 104, 157], "clear": [8, 76, 77, 78, 80, 82, 83, 96, 166, 176], "clear_buff": [92, 96], "client": [4, 8, 10, 11, 13, 14, 16, 17, 18, 19, 56, 57, 60, 74, 81, 86, 87, 89, 90, 99, 109, 112, 114, 115, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 172, 173, 180, 182, 185], "client_": 14, "client_base_typ": [87, 89], "client_batch_s": 128, "client_dataset_s": 128, "client_dp_fedavgm": [8, 150], "client_instruct": 147, "client_level_dp_fed_avg_serv": [8, 135], "client_manag": [7, 8, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 157, 162, 164, 165], "client_model_upd": 163, "client_modul": [8, 9], "client_nam": [14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60], "client_num": [56, 57], "client_result": 173, "client_sampling_r": 128, "client_singular_valu": 159, "client_singular_vector": 159, "clientcheckpointandstatemodul": [8, 9, 11, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52], "clientlevelaccount": [8, 127, 128], "clientleveldpfedavgm": [8, 141, 150, 153], "clientleveldpfedavgserv": [8, 135, 141], "clientmanag": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 157, 162, 164], "clientproxi": [16, 17, 18, 19, 142, 147, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 173], "clientstatecheckpoint": [8, 9, 11, 14], "clip": [4, 13, 23, 24, 41, 49, 128, 129, 153, 163], "clip_paramet": [20, 24], "clipping_bit": 153, "clipping_bound": [24, 42, 163], "clipping_cli": [8, 20], "clipping_learning_r": 153, "clipping_noise_multipli": 153, "clipping_quantil": 153, "clippingbitservercheckpointandstatemodul": [8, 9, 13], "clone": [47, 167], "clone_and_freeze_model": [8, 166, 167], "close": [4, 37], "cnn_model": 7, "code": [4, 60, 71, 78, 169, 173], "codecov": 1, "codestyl": 1, "coeffici": [4, 21, 73, 76, 79, 83, 156, 164], "coincid": 73, "collabor": 7, "collaps": 180, "collapse_one_hot_tensor": [8, 166, 180], "collat": 31, "collect": [1, 157, 158, 176], "column": [60, 63, 108, 159], "com": [28, 49, 51, 60, 69, 71, 74, 89, 90, 93, 129, 169, 180, 185], "combin": [4, 22, 38, 74, 93, 106, 153, 158, 173], "come": [1, 80, 173], "comm": 93, "command": 1, "commenc": 7, "comment": 1, "commit": 1, "common": 7, "commun": [13, 35, 46, 50, 140, 153], "compar": [50, 72, 80, 108, 118, 120], "comparison": [72, 118], "compat": [35, 38, 42, 76, 78, 83, 93, 94, 105, 106, 110, 130, 134, 170, 173, 180, 184], "compil": 49, "complement": 79, "complet": [4, 22, 23, 27, 44, 45, 47, 96, 126, 128], "complex": 13, "compliant": 184, "complic": 119, "compon": [4, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 74, 79, 98, 105, 108, 125, 126, 140, 143, 146, 159, 169], "compos": [80, 124], "composit": 106, "compound_metr": [8, 76], "compress": [4, 35], "comput": [8, 10, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 94, 98, 101, 103, 104, 108, 124, 125, 128, 140, 141, 144, 151, 153, 159, 162, 163, 164, 166, 173, 176, 180], "compute_all_h_u_all_sampl": [68, 73], "compute_all_h_u_from_inner_product": [68, 73], "compute_all_h_u_from_inner_products_linear": [68, 73], "compute_all_h_u_linear": [68, 73], "compute_contrastive_loss": [68, 72], "compute_cosine_similarity_loss": [68, 72], "compute_cumulative_explained_vari": [92, 108], "compute_dice_on_count_tensor": [8, 76, 84], "compute_euclidean_inner_product": [68, 73], "compute_euclidean_inner_products_linear": [68, 73], "compute_evaluation_loss": [20, 23, 25, 26, 27, 28, 29, 47, 51, 86, 88, 89, 90], "compute_explained_variance_ratio": [92, 108], "compute_from_count": [76, 79, 80], "compute_h_u_from_inner_product": [68, 73], "compute_h_u_from_inner_products_linear": [68, 73], "compute_hat_d_per_kernel": [68, 73], "compute_hat_q_k": [68, 73], "compute_hat_q_k_linear": [68, 73], "compute_kernel": [68, 71], "compute_loss_and_additional_loss": [20, 22, 23, 25, 26, 27, 28, 43, 44, 45, 47, 49, 51, 86, 88], "compute_mkmmd": [68, 73], "compute_negative_similar": [68, 69], "compute_parameter_delta": [150, 164], "compute_parameters_delta": [20, 52], "compute_penalty_loss": [8, 20, 21, 86, 87], "compute_perfcl_loss": [68, 72], "compute_projection_vari": [92, 108], "compute_reconstruction_error": [92, 108], "compute_training_loss": [20, 21, 23, 26, 27, 28, 29, 38, 43, 44, 45, 47, 48, 86, 88], "compute_updated_control_vari": [20, 52, 150, 164], "compute_updated_paramet": [150, 164], "compute_updated_weight": [150, 164], "compute_vertic": [68, 73], "compute_weight_update_and_clip": [20, 24], "concaten": [21, 28, 52, 63, 86, 87, 89, 90, 92, 94, 106], "concept": [13, 39, 161], "conclud": [25, 51], "concret": 80, "concurr": 147, "cond_vec_s": 171, "conda": 1, "condit": [94, 104, 123, 171, 173], "condition_vector_s": 171, "conditionalva": [8, 92, 94], "config": [1, 7, 8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 86, 87, 88, 89, 90, 112, 113, 114, 116, 120, 130, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 166, 167, 180], "config_path": 168, "configur": [1, 21, 25, 31, 35, 39, 42, 46, 49, 50, 51, 72, 76, 80, 83, 86, 87, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 168], "configure_evalu": [135, 142, 146, 150, 152, 153, 157, 162], "configure_fit": [146, 150, 152, 153, 157, 162], "configure_fit_al": [150, 164], "configure_pol": [140, 150, 152, 165], "conform": 1, "conjug": 160, "conjunct": [76, 77, 78, 80, 83], "connect": [4, 35, 101, 157], "consequ": 108, "consid": [1, 4, 13, 69, 78, 85, 167], "consist": [29, 38, 120, 125, 154, 155, 164], "constant": [8, 21, 61, 128, 153, 156, 158, 180], "constitut": [155, 182], "constrain": [4, 27, 28, 38, 44, 47, 48, 51, 72, 75, 86, 87, 89, 90], "constrained_fenda_cli": [8, 20], "constrainedfendacli": [8, 20, 25], "constrainedfendalosscontain": [8, 25, 68, 72], "constraint": [13, 25, 28, 38, 48, 86, 87, 89, 90, 156, 158], "constraint_tenor": 75, "constraint_tensor": 75, "construct": [14, 56, 59, 60, 66, 73, 114, 118, 155, 164, 182, 186], "construct_covariance_matrix": [166, 169], "construct_quadrupl": [68, 73], "construct_rxrx1_tensor_dataset": [54, 55, 56], "construct_skin_cancer_tensor_dataset": [54, 58, 59], "constructor": [49, 114], "contain": [1, 4, 21, 23, 24, 25, 27, 28, 29, 30, 36, 38, 41, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 59, 60, 72, 74, 79, 80, 82, 86, 87, 89, 90, 113, 117, 120, 124, 125, 126, 131, 132, 140, 141, 142, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 174, 180, 181, 183, 185, 186, 187], "content": [1, 85], "context": [10, 14, 89, 90, 173], "continu": [1, 4, 76, 79, 80, 83, 84, 85], "contrast": [4, 23, 25, 41, 47, 51, 69, 72, 74, 98, 105, 110, 159], "contrastive_loss": [8, 25, 47, 68], "contrastive_loss_config": 72, "contrastive_loss_minim": 25, "contrastive_loss_weight": 72, "contrastive_weight": 47, "contribut": [4, 10, 80, 81, 154, 155, 160], "control": [1, 4, 23, 50, 52, 117, 148, 161, 164, 180, 182, 186], "control_variates_upd": 164, "conv": 101, "conv1d": 101, "conv2d": 101, "conv3d": 101, "conv_modul": 101, "conveni": [89, 90], "convent": 1, "converg": 66, "convers": [171, 180, 184], "convert": [35, 59, 84, 85, 89, 101, 102, 104, 117, 155, 171, 173, 174, 180, 181, 182, 183, 184], "convert_dataset": [166, 171], "convert_deep_supervision_dict_to_list": [8, 166, 180], "convert_deep_supervision_list_to_dict": [8, 166, 180], "convert_model_to_opacus_model": [8, 166, 184], "convert_to_masked_model": [92, 100, 102], "converter_funct": 171, "convex": [4, 22], "convolut": 101, "convolv": 101, "convtranspose1d": 101, "convtranspose2d": 101, "convtranspose3d": 101, "coo": [13, 117, 120, 155], "coordin": [23, 30, 36, 46, 50, 155], "copi": [38, 49, 50, 102, 103, 104], "core": 1, "core_protocol": [8, 86], "correct": [1, 4, 52, 80, 85, 147, 153], "correctli": [11, 13, 36, 157], "correspond": [10, 13, 21, 22, 23, 28, 29, 41, 48, 49, 50, 52, 66, 74, 75, 76, 79, 80, 83, 85, 86, 87, 89, 90, 93, 108, 109, 114, 117, 118, 129, 153, 159, 160, 163, 168, 170, 173, 176, 182], "cos_sim_loss": 25, "cos_sim_loss_weight": 72, "cosin": [25, 69, 70, 72], "cosine_similarity_loss": [8, 25, 68], "cosine_similarity_loss_config": 72, "cosinesimilarityloss": [8, 68, 70], "cosinesimilaritylosscontain": [8, 68, 72], "could": [80, 86, 87, 171, 187], "count": [23, 46, 49, 56, 79, 80, 81, 84, 140, 141, 144, 151, 152, 153, 154, 155, 156, 159, 160, 164, 173, 174], "count_tp_fp_tn_fn": [76, 80], "covari": [73, 117, 169], "cover": 160, "cpu": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 123, 167], "creat": [1, 10, 12, 14, 49, 56, 82, 87, 93, 125, 130, 134, 167, 168, 170, 174, 186], "create_plan": [20, 49], "create_split": [54, 55, 56], "creation": [1, 13, 171], "criteria": [108, 114, 156, 158, 172], "criterion": [11, 16, 17, 18, 19, 21, 47, 50, 51, 86, 88, 89, 90, 119, 120], "critic": [166, 188], "cross": [48, 69], "crossentropyloss": 7, "csv": 57, "ctx": 173, "cubla": 185, "cublas_workspace_config": 185, "cuda": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 167, 185], "current": [1, 11, 13, 21, 23, 24, 25, 27, 28, 30, 32, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 74, 80, 86, 87, 89, 90, 106, 118, 120, 130, 131, 132, 134, 140, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 167, 173, 176, 180, 182], "current_epoch": [23, 49], "current_round": [22, 23, 27, 36, 39, 44, 45, 49], "current_server_round": [7, 23, 25, 27, 28, 32, 36, 38, 39, 44, 45, 47, 48, 49, 51, 88, 89, 90], "curv": [76, 83], "custom": [21, 22, 23, 24, 25, 28, 30, 31, 34, 36, 37, 38, 39, 41, 42, 46, 48, 49, 52, 86, 87, 89, 90, 140, 142, 143, 146, 148, 150, 152, 157, 158, 164, 171, 173, 184], "custom_converter_funct": 171, "customtemplatepath": 1, "cvae": [94, 123, 124], "cvaefixedconditionprocessor": [121, 122, 123], "cvaevariableconditionprocessor": [121, 122, 123], "cycl": [153, 156, 172], "d": [108, 159, 170, 182, 186], "data": [4, 7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 66, 71, 73, 82, 89, 90, 94, 95, 108, 123, 125, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 159, 160, 167, 169, 170, 171, 173, 174, 180, 182, 186], "data_dir": [59, 174], "data_gener": [8, 166], "data_identifi": 49, "data_load": 31, "data_path": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 56, 60, 174], "data_shap": 171, "datafram": [56, 57, 60, 63, 66], "dataload": [7, 23, 24, 27, 28, 29, 30, 31, 33, 38, 42, 44, 45, 46, 48, 49, 52, 56, 59, 88, 89, 90, 125, 171, 174, 180], "datapoint": [56, 129, 170, 182, 186], "dataset": [7, 8, 23, 27, 28, 30, 31, 36, 46, 48, 49, 76, 79, 81, 83, 89, 90, 125, 128, 129, 146, 152, 153, 154, 155, 156, 159, 160, 162, 164, 166, 169, 171, 174, 180, 182, 186], "dataset_convert": [8, 59, 166, 174], "dataset_dir": 57, "dataset_fingerprint": 49, "dataset_id": 49, "dataset_json": 49, "dataset_nam": [49, 59, 179], "dataset_path": 7, "dataset_typ": 56, "datasetconvert": [8, 59, 166, 171, 174], "ddp": 4, "deal": [84, 170], "debug": [1, 49, 130, 134, 166, 188], "decai": 180, "decathelon": 174, "decid": [10, 11, 13, 94], "decis": [10, 12], "decod": [92, 94], "decode_and_pseudo_sort_result": [8, 166, 173], "decomposit": [108, 159], "decor": 180, "decreas": [156, 158, 180], "deep": [27, 49, 71, 129, 146, 173, 180], "deep_mmd_client": [8, 20], "deep_mmd_loss": [8, 68], "deep_mmd_loss_weight": 27, "deepmmdloss": [8, 68, 71], "def": [7, 173], "default": [10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 56, 59, 63, 66, 67, 70, 71, 72, 73, 74, 76, 78, 79, 80, 83, 85, 86, 87, 93, 94, 98, 99, 101, 103, 104, 105, 106, 108, 110, 113, 118, 123, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 174, 180, 182, 184, 185, 186], "defaultdict": 81, "defin": [1, 7, 10, 11, 12, 13, 14, 22, 23, 25, 29, 30, 31, 36, 38, 39, 46, 49, 73, 76, 77, 78, 79, 80, 83, 93, 94, 106, 108, 124, 130, 134, 144, 145, 146, 148, 157, 159, 171, 172, 173, 174, 180, 184], "define_metr": [8, 130, 134], "definit": [10, 13, 162], "degre": [71, 161], "deleg": 41, "delet": [14, 130, 134], "delete_from_snapshot_attr": [9, 14], "delta": [24, 128, 129, 141, 144, 148, 164], "delta_control_vari": 52, "delta_model_weight": 52, "denomin": [76, 83, 104, 163], "denot": [74, 159], "dens": [117, 155], "depend": [1, 7, 23, 30, 36, 50, 79, 80, 94, 98, 106, 110, 130, 134, 152, 184], "depth": 96, "deriv": [14, 23, 24, 27, 28, 29, 33, 38, 44, 45, 48, 49, 51, 52, 89, 90, 137, 139, 170], "derm7pt": 60, "derm7pt_image_path_func": [54, 58, 60], "derm7pt_label_map_func": [54, 58, 60], "descent": 180, "describ": [37, 39, 73, 130, 134, 153, 169], "descript": [129, 169], "design": [4, 39, 170, 171], "desir": [1, 21, 23, 24, 28, 30, 38, 46, 48, 52, 80, 86, 87, 89, 90, 96, 99, 101, 120, 129, 151, 168], "despit": 48, "detach": [28, 38, 89, 90], "detail": [1, 108, 114, 120, 155, 160, 169, 173, 185], "determin": [10, 11, 12, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 84, 86, 87, 89, 90, 98, 106, 120, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 172, 173, 180, 184, 185, 186], "determinist": [173, 185], "dev": [1, 128], "develop": 4, "deviat": [118, 129, 163, 169], "devic": [7, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 70, 71, 72, 73, 74, 75, 86, 88, 89, 90, 101, 103, 104, 123, 167], "diagon": [159, 169], "dice": [76, 79, 83, 84], "dict": [1, 10, 11, 12, 13, 14, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 66, 86, 87, 88, 89, 90, 93, 95, 96, 99, 106, 109, 110, 118, 120, 126, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 174, 176, 180, 182, 185, 187], "dictionari": [10, 12, 14, 21, 22, 23, 25, 27, 28, 29, 30, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 51, 52, 56, 59, 60, 76, 77, 78, 80, 82, 83, 86, 87, 89, 90, 93, 95, 96, 106, 109, 110, 117, 120, 126, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 167, 168, 170, 174, 176, 180, 187], "dictionary_kei": 168, "dictionarydataset": [8, 166, 170, 186], "differ": [4, 13, 23, 29, 30, 32, 36, 38, 39, 46, 48, 49, 52, 72, 79, 80, 85, 117, 118, 119, 129, 142, 154, 155, 160, 164, 169, 180, 182], "differenti": [4, 12, 24, 42, 52, 75, 94, 129, 141, 144, 148, 153, 173], "dilat": 101, "dim": [70, 85, 180], "dim_reduct": [121, 122], "dimens": [70, 71, 73, 76, 79, 80, 83, 84, 85, 94, 95, 96, 101, 104, 125, 169, 170, 173, 180], "dimension": [31, 94, 108, 124, 125], "dir": [14, 31], "direct": [4, 164], "directli": [1, 159, 173], "directori": [10, 11, 12, 13, 14, 56, 57, 59, 172, 174], "dirichlet": [182, 186], "dirichletlabelbasedalloc": [8, 166, 182], "dirichletlabelbasedsampl": [8, 166, 186], "disabl": [28, 48, 96, 185], "disable_accumulating_featur": [92, 96], "disable_torch_benchmark": 185, "discard": [80, 155, 186], "disconnect": 140, "discrep": [71, 73], "discuss": [38, 153], "disk": [14, 31, 49], "displai": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 52, 130, 134, 167, 181], "display_progress_bar": 167, "distanc": [27, 44, 45, 71, 73], "distinct": [11, 36, 38, 109, 137, 138, 139, 140, 143, 144, 146, 148], "distribut": [4, 7, 27, 44, 45, 71, 94, 124, 146, 159, 160, 169, 182, 186], "ditto": [4, 11, 23, 27, 28, 38, 44, 45, 48, 86, 89, 137], "ditto_cli": [8, 20], "ditto_deep_mmd_cli": [20, 26], "ditto_mkmmd_cli": [20, 43], "ditto_serv": [135, 136], "dittocli": [8, 20, 27, 28, 38, 44], "dittodeepmmdcli": [20, 26, 27], "dittomkmmdcli": [20, 43, 44], "dittopersonalizedmixin": [8, 86, 89, 90], "dittopersonalizedprotocol": [8, 86, 89, 90], "dittoserv": [135, 136, 137], "diverg": 124, "divid": [76, 81, 83, 118, 161], "divis": [73, 79, 84], "dk": 71, "dkfz": [49, 180], "dl_name": 49, "do": [1, 4, 7, 12, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 80, 101, 103, 104, 119, 130, 134, 140, 145, 146, 157, 159, 165, 181, 186], "do_one_hot_encod": 171, "doc": [1, 101, 108, 117, 120, 129, 130, 134, 155, 185], "docstr": [1, 114], "docstringformat": 1, "document": [4, 49, 72, 74, 79, 80, 108, 130, 134, 158, 185], "doe": [10, 12, 14, 46, 49, 86, 87, 89, 90, 93, 104, 130, 134, 146, 155, 159, 162, 174, 182], "doesn": [11, 85], "domain": [4, 73, 79, 157, 158], "don": [28, 31, 38, 79, 89, 90, 170, 180], "done": [1, 4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 80, 89, 90, 108, 128, 129, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 152, 153, 154, 155, 159, 169], "down": [23, 49, 133, 163], "download": [7, 174], "downsampl": 186, "downsampling_ratio": 186, "downstream": 31, "dp": [4, 13, 42, 128, 129, 141, 144, 148, 153, 184], "dpevent": 129, "dpscaffoldcli": [8, 20, 52], "dpscaffoldserv": [8, 135, 148], "dpscaffoldservercheckpointandstatemodul": [8, 9, 13, 148], "draw": 169, "drawn": [71, 169, 182], "drift": [4, 21, 27, 28, 32, 38, 39, 44, 45, 48, 52, 86, 87, 118, 156, 161], "drift_penalty_tensor": [86, 87, 89, 90], "drift_penalty_weight": [32, 86, 87, 89, 90], "drop": [79, 84], "dtype": [24, 79, 80, 88, 101, 103, 104, 114, 115, 116, 117, 118, 119, 120, 159], "due": [4, 49, 153, 160], "dummi": [10, 142], "dump": [8, 130, 132], "dure": [4, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 74, 78, 79, 80, 86, 87, 89, 90, 93, 94, 96, 101, 103, 104, 117, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 171, 173], "dynam": [50, 51, 87, 119, 154, 167], "dynamiclayerexchang": [8, 111, 112, 114, 118], "e": [10, 13, 14, 21, 22, 23, 24, 29, 41, 47, 49, 52, 63, 85, 99, 101, 103, 108, 129, 130, 131, 132, 134, 148, 153, 162, 164, 171, 173], "each": [1, 4, 13, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 59, 63, 69, 71, 78, 79, 80, 81, 82, 84, 89, 90, 94, 96, 99, 101, 103, 108, 109, 114, 119, 120, 123, 128, 129, 132, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 169, 172, 173, 176, 180, 182, 186], "earli": [14, 39, 172], "early_stop_valid": [166, 175], "early_stopp": [8, 166], "earlystopp": [8, 166, 172], "easi": 4, "easiest": [1, 7], "effect": [1, 4, 35, 63, 160, 185], "effici": [4, 35, 80, 108, 159, 184], "efficient_metr": [8, 76], "efficient_metrics_bas": [8, 76], "eg": 180, "eigenvector": 108, "either": [10, 11, 12, 49, 67, 79, 80, 85, 98, 108, 110, 129, 130, 134, 146, 152, 164, 173, 180, 182, 187], "elaps": [140, 141, 142, 144, 145, 148], "element": [23, 25, 27, 28, 38, 41, 44, 45, 47, 49, 51, 52, 79, 80, 84, 101, 104, 118, 140, 141, 142, 144, 145, 148, 163, 164, 169, 173], "elementwis": 84, "elementwise_affin": 104, "elig": 1, "ema": 78, "ema_": 78, "emametr": [8, 76, 78], "empti": [28, 38, 46, 49, 76, 80, 83, 85, 106, 162, 167, 168, 176], "empty_cach": [20, 49], "enabl": [29, 49, 63, 96, 101, 102, 103, 104, 153, 156, 176], "enable_accumulating_featur": [92, 96], "enable_metadata_rout": 63, "encod": [13, 49, 79, 80, 85, 92, 94, 98, 123, 169, 171, 180], "encourag": 1, "end": [23, 27, 30, 44, 45, 49, 74, 80, 114, 130, 131, 132, 134, 153, 169, 186], "enforc": [1, 47, 130, 134, 138, 173], "engin": [4, 42], "enhanc": [69, 74], "ensembl": [29, 95], "ensemble_averag": [92, 95], "ensemble_bas": [8, 92], "ensemble_cli": [8, 20], "ensemble_model": [95, 176], "ensemble_vot": [92, 95], "ensembleaggregationmod": [8, 92, 95], "ensemblecli": [8, 20, 29], "ensemblemodel": [8, 29, 92, 95], "ensur": [1, 4, 13, 23, 28, 29, 33, 35, 36, 39, 51, 71, 85, 89, 90, 91, 137, 139, 144, 148, 152, 153, 155, 157, 164, 165, 180, 182, 184], "ensure_protocol_compli": [86, 89, 91], "entir": [13, 23, 27, 28, 30, 48, 57, 89, 90, 93, 115, 155, 180, 186], "entiti": [130, 134], "entri": [23, 24, 49, 79, 80, 84, 142, 153, 164, 169], "entropi": 69, "enum": [11, 36, 67, 77, 80, 89, 95, 106, 130, 134, 157, 174, 175, 176, 179, 180, 187, 188], "enumer": [11, 36, 67, 77, 80, 89, 95, 106, 130, 134, 175, 176, 179, 188], "enumsnapshott": [8, 166, 187], "env_path": 1, "environ": [1, 7, 49, 180, 185], "ep": 104, "epoch": [8, 23, 36, 39, 49, 128, 129, 130, 131, 132, 133, 134, 144, 148, 168, 180], "epochs_per_round": 128, "epsilon": [71, 76, 83, 94, 128, 129, 141, 144, 148], "equal": [120, 125, 172, 180], "equat": [52, 160], "equival": [4, 129, 173], "error": [1, 10, 11, 13, 14, 63, 73, 89, 90, 91, 108, 130, 134, 153, 157, 164, 166, 170, 180, 181, 182, 185, 188], "error_messag": 181, "especi": 49, "essenti": [10, 37, 74, 88, 99, 142, 146], "establish": 85, "estim": [63, 71, 73, 124, 129, 148, 153, 173, 180], "et": [60, 129, 157, 158], "eta": 161, "eta_l": 161, "etc": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 80, 164, 167, 170], "eval": [7, 13, 23, 41, 142, 152, 153, 162], "evalu": [13, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 76, 77, 78, 81, 82, 83, 86, 87, 88, 89, 90, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 172, 176], "evaluate_after_fit": [23, 36, 39, 157], "evaluate_cli": [8, 20], "evaluate_config": 142, "evaluate_fn": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "evaluate_fn_typ": [159, 161], "evaluate_metrics_aggregation_fn": [7, 8, 76, 81, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "evaluate_round": [135, 140], "evaluate_serv": [8, 135], "evaluatecli": [8, 20, 30], "evaluatein": [142, 152, 153, 157, 162], "evaluater": [142, 152, 162], "evaluateresultsandfailur": [140, 142], "evaluateserv": [8, 135, 142], "evaluationloss": [8, 23, 25, 27, 28, 29, 30, 41, 47, 51, 88, 89, 90, 166, 176], "even": [4, 48, 49, 131, 132, 153, 156, 158, 164], "evenli": 186, "event": [11, 129], "everi": [10, 49, 69, 93, 94, 102, 120, 129, 130, 132, 134, 155, 160, 167, 180], "everyth": 152, "ex": [94, 129], "exactli": [39, 49, 85, 114, 126, 167], "exampl": [1, 4, 7, 10, 12, 17, 21, 23, 27, 32, 33, 44, 45, 46, 48, 49, 59, 66, 78, 79, 80, 81, 84, 85, 110, 117, 118, 119, 126, 129, 130, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 155, 156, 170, 173, 182, 184, 186], "exce": 118, "exceed": 182, "except": [4, 10, 11, 13, 14, 34, 35, 49, 101, 108, 114, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 159, 162, 164, 167, 168, 180], "exchang": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 48, 49, 50, 51, 52, 86, 87, 89, 90, 93, 97, 99, 109, 110, 112, 114, 115, 117, 118, 119, 120, 145, 154, 155, 157], "exchange_percentag": 118, "exchangertyp": [13, 145], "exclud": [33, 79, 114, 130, 134], "exclus": [37, 114, 126, 182], "execut": [1, 27, 28, 31, 44, 47, 89, 90, 180], "executor": 147, "exhaust": 182, "exist": [4, 7, 10, 11, 12, 13, 14, 22, 23, 29, 30, 41, 49, 63, 72, 80, 98, 130, 134, 168, 170, 171, 174, 176, 182], "exp": 94, "expand": 85, "expect": [14, 21, 30, 49, 79, 80, 95, 99, 104, 105, 108, 109, 110, 130, 134, 153, 165, 168, 171, 180], "expend": [76, 77, 78, 83], "experi": [57, 130, 134], "experienc": [152, 153, 154, 155, 156, 159, 162], "experiment": [4, 73, 130, 134], "explicit": 80, "explicitli": [10, 14, 28, 89, 90, 130, 134, 185, 186], "explor": 4, "expon": 180, "exponenti": 78, "extend": [4, 23, 25, 52, 77, 78, 152, 173, 186], "extens": [1, 4, 21, 152, 164], "extent": 19, "extra": [49, 114], "extra_adaptive_vari": 117, "extract": [13, 23, 25, 27, 34, 36, 38, 44, 45, 50, 51, 52, 73, 96, 98, 99, 106, 109, 110, 114, 117, 120, 147, 168, 170, 174, 181, 183], "extract_coo_info_from_dens": [111, 117], "extracted_features_buff": 96, "extractor": [4, 25, 34, 36, 37, 38, 51, 74, 96, 99, 105, 106, 109, 110], "extrem": [137, 138, 139, 140, 141, 143, 144, 146, 147, 148], "f": [14, 170], "f1": [8, 76, 83], "f1_score": [76, 83], "facilit": [1, 4, 7, 11, 13, 14, 17, 31, 35, 50, 119, 120, 140, 142, 145, 153, 157], "fact": 31, "factor": [78, 79, 180], "factori": 89, "fail": [1, 130, 134, 157, 164], "failur": [137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "fair": [28, 38, 89, 90, 157], "fairli": [32, 97, 169], "fairness_metr": [157, 158], "fairness_metric_typ": 157, "fairnessmetr": [8, 150, 157, 158], "fairnessmetrictyp": [8, 150, 157, 158], "fall": [10, 12, 118], "fals": [1, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 63, 73, 79, 80, 84, 88, 89, 90, 93, 96, 97, 98, 99, 102, 103, 104, 108, 110, 123, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 156, 158, 161, 167, 171, 172, 180, 185], "false_neg": [76, 79, 80, 84], "false_posit": [76, 79, 80, 84], "far": [21, 23, 86, 87, 108, 118, 172], "feasibl": 182, "featur": [1, 4, 21, 22, 23, 25, 27, 28, 29, 34, 36, 37, 38, 41, 44, 45, 47, 48, 49, 51, 63, 66, 67, 69, 70, 71, 72, 73, 74, 88, 89, 90, 96, 98, 99, 104, 105, 106, 109, 110, 169], "feature_align": 8, "feature_dimens": 69, "feature_extraction_lay": [44, 45], "feature_extraction_layers_with_s": 27, "feature_extractor_buff": [8, 92], "feature_l2_norm_weight": [44, 45], "feature_nam": 66, "feature_s": 96, "feature_typ": 66, "featureextractorbuff": [8, 92, 96], "features_org": 71, "fed": [22, 23, 25, 27, 28, 29, 38, 41, 44, 45, 47, 49, 51, 69, 171], "fed_pca_cli": [8, 20], "fed_prox_cli": [8, 20], "fedadagrad": 4, "fedadam": 4, "fedavg": [4, 7, 34, 36, 37, 51, 97, 140, 146, 152, 153, 154, 155, 156, 157, 159, 160, 164], "fedavg_dynamic_lay": [8, 150], "fedavg_sparse_coo_tensor": [8, 150], "fedavg_with_adaptive_constraint": [8, 150], "fedavgdynamiclay": [8, 150, 154, 155, 160], "fedavgm": 153, "fedavgsparsecootensor": [8, 150, 155], "fedavgwithadaptiveconstraint": [8, 21, 86, 87, 137, 138, 139, 150, 156, 158], "fedbn": [4, 33], "fedbn_client": [8, 20], "fedbnclient": [8, 20, 33], "feddg": [4, 17, 157, 158], "feddg_ga": [8, 150], "feddg_ga_with_adaptive_constraint": [8, 150], "feddgga": [8, 150, 157, 158], "feddggaadaptiveconstraint": [8, 150, 158], "feder": [4, 7, 11, 13, 14, 21, 23, 24, 28, 29, 30, 31, 32, 35, 37, 38, 39, 42, 46, 47, 48, 50, 52, 86, 87, 89, 90, 95, 98, 129, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 173], "federated_evalu": [135, 142], "federated_learning_with_differential_privaci": 129, "fedopt": 4, "fedpca": [8, 31, 150], "fedpcacli": [8, 20, 31], "fedper": [4, 34, 36], "fedper_cli": [8, 20], "fedpercli": [8, 20, 34], "fedpm": [4, 8, 35, 101, 102, 103, 104, 112, 118, 143, 150], "fedpm_client": [8, 20], "fedpm_exchang": [8, 111], "fedpm_serv": [8, 135], "fedpmclient": [8, 20, 35], "fedpmexchang": [8, 35, 111, 112], "fedpmserv": [8, 135, 143], "fedprox": [4, 21, 23, 28, 32, 48, 89, 90, 138, 156, 158, 169], "fedprox_serv": [135, 136], "fedproxcli": [8, 20, 32], "fedproxserv": [135, 136, 138], "fedrep": [4, 36, 97], "fedrep_bas": [8, 92], "fedrep_cli": [8, 20], "fedrepcli": [8, 20, 36], "fedrepmodel": [8, 92, 97], "fedreptrainmod": [8, 20, 36], "fedsimclr": [23, 69], "fedsimclr_bas": [8, 92], "fedsimclrmodel": [8, 92, 98], "fedtorch": 93, "fedyogi": 4, "fenda": [4, 23, 25, 27, 32, 37, 38, 44, 45, 48, 49, 51, 72, 97, 99], "fenda_bas": [8, 92], "fenda_cli": [8, 20], "fenda_ditto_cli": [8, 20], "fenda_loss_config": [8, 68], "fendacli": [8, 20, 25, 37], "fendaditto": 38, "fendadittocli": [8, 20, 38], "fendamodel": [8, 38, 92, 99], "fendamodelwithfeaturest": [8, 92, 99], "fengliu90": 71, "fetch": [141, 144, 145], "few": 4, "fhook": 96, "field": 49, "file": [1, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 59, 60, 126, 130, 131, 132, 134, 146, 180], "filereport": [8, 130, 132], "fill": [1, 66], "fill_valu": 66, "filter": [16, 17, 18, 57, 96, 101, 114, 118], "filter_and_save_data": [54, 55, 57], "filtrat": 16, "final": [11, 31, 47, 49, 74, 79, 80, 93, 98, 101, 103, 104, 106, 120, 155, 180, 185], "find": [1, 10], "find_last_common_prefix": [92, 96], "fine": [11, 98], "finetun": 98, "first": [4, 7, 11, 17, 21, 23, 24, 25, 27, 28, 30, 36, 38, 41, 44, 45, 47, 48, 49, 50, 51, 52, 63, 70, 71, 72, 73, 74, 78, 79, 80, 86, 87, 89, 90, 94, 96, 97, 106, 110, 118, 120, 140, 141, 142, 143, 144, 145, 148, 152, 153, 155, 164, 167, 169, 170, 173, 180, 181], "first_featur": 72, "first_feature_extractor": 106, "first_tensor": 106, "fit": [1, 7, 13, 20, 21, 23, 24, 28, 30, 31, 36, 38, 46, 48, 50, 52, 61, 63, 81, 86, 87, 88, 89, 90, 135, 140, 141, 142, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 171], "fit_config": 7, "fit_config_fn": 7, "fit_metrics_aggregation_fn": [7, 8, 76, 81, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "fit_round": [135, 140, 143], "fit_with_per_round_checkpoint": [135, 140], "fitin": [152, 153, 157, 162, 164], "fitr": [152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 173], "fitresultsandfailur": [140, 143], "fitting_round": [21, 23, 24, 28, 30, 38, 48, 50, 52, 86, 87, 88, 89, 90], "fix": [1, 4, 12, 16, 17, 18, 19, 34, 42, 56, 93, 94, 97, 109, 118, 123, 128, 129, 148, 153, 169, 171, 180, 184], "fixed_sampling_client_manag": [8, 15], "fixed_without_replacement_manag": [8, 15], "fixedlayerexchang": [8, 51, 110, 111, 114, 119], "fixedsamplingbyfractionclientmanag": [8, 15, 18], "fixedsamplingclientmanag": [8, 15, 17, 157], "fixedsamplingwithoutreplac": [8, 127, 129], "fl": [4, 11, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 41, 44, 45, 46, 48, 49, 52, 86, 87, 89, 90, 99, 114, 117, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 159, 164, 165, 168, 180], "fl4health": [0, 1, 7], "fl_account": [8, 127], "fl_config": [137, 138, 139, 140, 141, 143, 144, 146, 148], "flag": [96, 185], "flake8": 1, "flash": [4, 8, 39, 150], "flash_client": [8, 20], "flashclient": [8, 20, 39], "flat": 24, "flatten": [44, 45, 84, 92, 94, 96, 98, 99, 105, 108, 109, 110], "flatten_featur": [97, 99, 110], "flatten_feature_extraction_lay": 96, "flattened_output": 94, "flclientlevelaccountantfixedsamplingnoreplac": [8, 127, 128], "flclientlevelaccountantpoissonsampl": [8, 127, 128], "flexibl": [4, 8, 10, 12, 20, 38, 152], "flexiblecli": [20, 40, 41, 86, 87, 89, 90, 91], "flexibleclientprotocol": [8, 86, 87, 88], "flexibleclientprotocolpresetup": [8, 86, 87, 88, 89, 90], "flinstancelevelaccount": [8, 127, 128], "float": [10, 11, 12, 13, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 36, 39, 44, 45, 46, 47, 48, 49, 51, 52, 56, 59, 66, 69, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 93, 104, 108, 117, 118, 120, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 173, 174, 176, 180, 182, 186, 187], "float32": [79, 80], "flow": [1, 13, 30, 33, 38, 39, 42, 50, 56, 94, 140, 143, 152, 153, 164], "flow_util": 93, "flower": [4, 16, 18, 19, 137, 138, 139, 140, 141, 143, 144, 148, 152, 173, 180, 181, 183], "flserver": [7, 8, 13, 14, 135, 137, 138, 139, 140, 141, 143, 144, 146, 148], "flush": [166, 180], "flwr": [7, 137, 138, 139, 140, 141, 143, 144, 146, 148, 180], "fn": [79, 80, 84, 146, 180], "focu": 4, "focus": 88, "fold": 49, "fold_loss_dict_into_metr": [8, 166, 167], "folder": [1, 132, 174], "follow": [1, 23, 24, 28, 30, 31, 36, 38, 39, 49, 60, 78, 89, 90, 93, 108, 117, 120, 129, 152, 153, 155, 159, 160, 162, 164, 173, 180], "footprint": 80, "forc": [35, 152, 157, 164, 185], "foreground_intensity_properties_per_channel": 49, "form": [14, 28, 38, 48, 73, 79, 80, 89, 90, 98, 113, 129, 164, 170], "form_and_solve_qp": [68, 73], "form_h_u_delta_w_i": [68, 73], "form_kernel_samples_minus_expect": [68, 73], "format": [1, 13, 66, 95, 117, 120, 155, 171], "former": [79, 80, 94, 137, 138, 139, 140, 141, 143, 144, 146, 148, 180], "formula": [164, 173], "forward": [23, 27, 28, 38, 41, 44, 45, 68, 69, 70, 71, 73, 74, 75, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 122, 124, 166, 173, 180], "forward_hook": [92, 96], "found": [73, 185], "foundat": 4, "four": [101, 155], "fp": [79, 80, 84], "frac": [24, 52, 164, 169], "fraction": [18, 19, 56, 142, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164], "fraction_evalu": [142, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164], "fraction_fit": [152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164], "framework": [27, 44, 45, 144], "free": 47, "freez": [38, 167], "freeze_base_modul": [92, 97], "freeze_global_feature_extractor": 38, "freeze_head_modul": [92, 97], "frequenc": [56, 57, 143, 172], "frequent": [131, 132], "from": [1, 4, 7, 10, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 63, 66, 71, 72, 73, 74, 78, 79, 80, 82, 86, 87, 89, 90, 93, 94, 96, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 114, 117, 118, 119, 125, 126, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 168, 169, 170, 171, 172, 173, 181, 182, 183, 186], "from_json": [61, 66], "from_pretrain": [100, 101, 103, 104], "frozen": [4, 36, 38, 75, 117, 167], "full": [1, 13, 21, 22, 23, 24, 25, 30, 34, 36, 37, 38, 46, 50, 52, 56, 86, 87, 93, 96, 108, 128, 140, 141, 144, 148, 186], "full_exchang": [8, 111], "full_svd": 108, "fullparameterexchang": [8, 21, 23, 24, 28, 30, 38, 46, 50, 52, 86, 87, 89, 90, 111, 113, 115], "fullparameterexchangerwithpack": [8, 13, 87, 90, 111, 115], "func": [91, 168], "function": [1, 4, 7, 8, 10, 11, 12, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 60, 66, 67, 69, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 93, 94, 96, 98, 101, 103, 104, 105, 106, 110, 114, 117, 118, 120, 124, 126, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 181, 183, 184, 185], "functiontorchcheckpoint": 12, "functiontorchmodulecheckpoint": [8, 9, 10, 12], "functool": [7, 118], "further": [1, 11, 37, 80, 118, 128], "furthermor": 1, "futur": 118, "g": [49, 63, 130, 131, 132, 134, 153, 162, 170, 173], "ga": [4, 17, 157, 158], "gamma": [39, 51, 73], "gather": 72, "gaussian": [71, 129, 144, 148, 163], "gaussian_degre": 71, "gaussian_noisy_aggregate_clipping_bit": [8, 150, 163], "gaussian_noisy_unweighted_aggreg": [8, 150, 163], "gaussian_noisy_weighted_aggreg": [8, 150, 163], "gener": [1, 4, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 76, 78, 83, 85, 94, 96, 108, 115, 117, 119, 120, 124, 130, 133, 134, 140, 143, 146, 154, 155, 156, 157, 158, 166, 169, 170, 176, 180, 182, 185, 186, 187], "generate_client_tensor": [166, 169], "generate_hash": [8, 20, 31, 166, 185], "generate_parameter_scor": [111, 120], "generatedocstringonent": 1, "get": [1, 4, 14, 46, 78, 79, 96, 126, 130, 134, 147, 169, 180], "get_all_model_paramet": [7, 8, 166, 181], "get_all_peft_parameters_from_model": [8, 166, 183], "get_attribut": [9, 14], "get_best_vertex_for_objective_funct": [68, 73], "get_cifar10_data_and_target_tensor": [8, 166, 174], "get_client_specific_log": [20, 23, 49], "get_client_specific_report": [20, 23, 49], "get_condition_vector_s": [166, 171], "get_criterion": [7, 20, 23, 41, 49, 86, 88], "get_current_weight_step_s": [150, 157], "get_data_load": [7, 20, 23, 30, 31, 41, 49, 86, 88], "get_data_tensor": [20, 31], "get_dataset_n_voxel": [8, 166, 180], "get_default_fill_valu": [61, 67], "get_delta": [127, 128, 129], "get_dp_ev": [127, 129], "get_epsilon": [127, 128, 129], "get_extracted_featur": [92, 96], "get_feature_nam": [61, 66], "get_feature_typ": [61, 66], "get_fill_valu": [61, 66], "get_global_model": [20, 28, 38, 86, 89, 90], "get_hierarchical_attr": [92, 96], "get_input_output_tensor": [166, 169], "get_layers_to_transf": [111, 114], "get_local_model": [20, 30], "get_lr": [166, 180], "get_lr_schedul": [20, 23, 49], "get_matching_compon": [121, 126], "get_metadata": [61, 66], "get_metadata_dimens": [61, 66], "get_mnist_data_and_target_tensor": [8, 166, 174], "get_model": [7, 20, 23, 28, 31, 38, 41, 46, 49, 86, 88, 89, 90], "get_msd_dataset_enum": [8, 166, 174, 179], "get_optim": [7, 20, 22, 23, 28, 29, 36, 41, 49, 86, 88, 89, 90], "get_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 46, 50, 52, 86, 87, 88, 89, 90], "get_parameter_exchang": [8, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 46, 50, 51, 52, 86, 87], "get_properti": [20, 23, 49, 146], "get_segs_from_prob": [8, 166, 180], "get_test_data_load": [20, 23, 46], "get_train_and_val_cifar10_dataset": [8, 166, 174], "get_train_and_val_mnist_dataset": [8, 166, 174], "get_unpacking_funct": [166, 171], "getpropertiesin": [147, 152, 165], "getpropertiesr": 147, "git": [1, 60], "github": [1, 4, 28, 49, 60, 69, 71, 89, 90, 93, 129, 169, 180], "give": 182, "given": [10, 14, 21, 22, 23, 24, 25, 27, 28, 29, 36, 38, 41, 44, 45, 47, 48, 49, 51, 57, 59, 63, 69, 76, 78, 79, 80, 82, 83, 84, 85, 89, 90, 94, 95, 96, 98, 102, 106, 128, 129, 140, 153, 157, 163, 164, 168, 170, 171, 173, 176, 180, 182], "global": [4, 11, 13, 22, 23, 25, 27, 28, 30, 32, 34, 36, 37, 38, 44, 45, 47, 48, 49, 51, 72, 74, 89, 90, 93, 97, 99, 106, 109, 137, 140, 142, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "global_deep_supervis": 146, "global_featur": [72, 74, 99, 109], "global_feature_contrastive_loss": 51, "global_feature_contrastive_loss_weight": [51, 72], "global_feature_loss_temperatur": [51, 72, 74], "global_forward": [92, 93], "global_logit": 93, "global_loss": [22, 27, 28, 38, 44, 45], "global_metr": 30, "global_model": [47, 86, 89, 90, 93, 126], "global_modul": [99, 109], "global_tensor": 106, "go": [13, 130, 134, 180, 184], "good": [4, 35, 108], "googl": 1, "grab": [152, 153, 164], "gracefulli": [49, 133, 180], "grad": 173, "grad_output": 173, "grad_sample_mod": 184, "gradient": [4, 23, 28, 38, 41, 49, 52, 89, 90, 101, 103, 104, 144, 148, 153, 173], "gradsamplemodul": [152, 164, 184], "gradsamplingmodul": 164, "greater": 120, "ground": [21, 22, 23, 25, 27, 28, 29, 38, 44, 45, 47, 48, 49, 51, 76, 77, 78, 82, 83, 89, 90], "group": [101, 130, 134, 180], "groupnorm": 184, "guarante": [18, 99, 108, 182], "guess": 153, "guesstyp": 1, "guid": [1, 4, 63], "h1_mean_var_gram": [68, 71], "ha": [4, 7, 11, 13, 21, 23, 25, 29, 30, 33, 35, 36, 38, 46, 47, 49, 63, 69, 82, 85, 86, 87, 89, 90, 94, 99, 101, 103, 104, 106, 108, 112, 114, 130, 134, 145, 152, 153, 155, 157, 158, 159, 162, 164, 167, 168, 169, 171, 173, 180, 186], "ham10000": 60, "ham_image_path_func": [54, 58, 60], "ham_label_map_func": [54, 58, 60], "handl": [10, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 80, 86, 87, 96, 106, 112, 117, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 154, 155, 160, 164, 171, 173, 180], "handler": 180, "happen": [21, 46, 86, 87, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 173], "hard": 84, "hardcod": 132, "has_contrastive_loss": [68, 72], "has_cosine_similarity_loss": [68, 72], "has_perfcl_loss": [68, 72], "has_region": 180, "hash": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 69, 174, 185], "hash_kei": [174, 186], "hat": [74, 153, 169], "hat_d_per_kernel": 73, "hat_q_k": 73, "have": [1, 4, 7, 13, 21, 23, 24, 25, 28, 29, 30, 31, 35, 36, 38, 46, 48, 49, 51, 52, 63, 69, 73, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 94, 96, 99, 101, 103, 104, 109, 117, 118, 123, 129, 130, 134, 140, 142, 146, 153, 154, 155, 160, 163, 164, 167, 169, 170, 173, 182], "he": 158, "head": [20, 36, 37, 38, 98, 99, 105, 106, 109, 110, 142], "head_epoch": 36, "head_forward": [92, 106], "head_modul": [97, 105, 110], "head_step": 36, "header": [23, 49], "health": 4, "healthcar": 4, "heavili": [78, 140], "held": [13, 46, 80, 140, 154, 155, 160], "help": [1, 13, 17, 18, 21, 23, 24, 28, 30, 38, 50, 86, 87, 89, 90, 147, 180], "helper": [41, 164, 173], "henc": [31, 159], "here": [1, 4, 28, 31, 36, 47, 48, 79, 89, 90, 125, 130, 134, 159, 160, 169, 170, 182, 185], "heterogen": [4, 32, 39, 169, 182, 186], "heterogeneous_partition": 182, "heurist": [28, 48], "hidden": [71, 169], "hidden_dim": [71, 169], "hidden_s": 71, "hierarch": 96, "hierarchi": 180, "high": [131, 132, 182], "higher": [169, 180], "highest": [79, 80, 84], "hinder": 73, "hint": 1, "histori": [140, 141, 142, 144, 145, 148, 187], "historysnapshott": [8, 166, 187], "hold": [11, 13, 56, 72, 85, 129, 140, 143, 147, 157], "hood": [49, 184], "hook": [1, 23, 27, 32, 41, 44, 45, 48, 49, 52, 94, 96, 140, 146, 180, 184], "hope": 10, "hot": [49, 79, 80, 85, 169, 171, 180], "hous": [1, 169], "how": [10, 11, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 76, 79, 80, 81, 83, 84, 94, 106, 130, 134, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 160, 169, 171, 180, 184], "howev": [1, 4, 21, 28, 30, 36, 41, 46, 48, 49, 79, 86, 87, 89, 90, 101, 103, 137, 139], "html": [69, 76, 83, 101, 108, 117, 120, 155, 185], "http": [22, 28, 33, 34, 35, 36, 37, 39, 49, 51, 52, 56, 60, 69, 71, 74, 76, 83, 89, 90, 93, 97, 98, 101, 108, 117, 120, 129, 130, 134, 143, 148, 152, 153, 155, 156, 160, 161, 163, 164, 169, 173, 180, 185], "huge": 108, "hydrat": [13, 30, 145], "hyperparamet": [130, 134], "hypothesi": [4, 35], "i": [1, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 63, 66, 67, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 123, 125, 126, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 182, 184, 185, 186], "id": [1, 31, 49, 130, 132, 134, 140, 142, 157, 170, 185], "idea": [4, 28, 32, 38, 47, 48, 89, 90], "idempot": [28, 89, 90], "ident": [11, 23, 28, 34, 38, 48, 89, 90, 98], "identifi": [21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 82, 132, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 159, 162, 164], "ie": [22, 23, 82, 131, 132, 180], "ieee": 74, "ieeexplor": 74, "ignor": [31, 49, 63, 94, 108, 132, 142, 180, 182], "ignore_background": [79, 80], "ignore_label": 49, "ii": 73, "iid": [47, 169, 186], "imag": [23, 56, 57, 59, 60, 76, 79, 80, 83, 101, 180], "image_path_func": 60, "imbalanc": [76, 83], "immedi": [23, 32, 45, 47, 48, 49], "implement": [1, 10, 12, 13, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 44, 45, 47, 48, 50, 52, 69, 71, 74, 80, 86, 87, 89, 90, 93, 97, 99, 101, 103, 104, 106, 108, 114, 118, 129, 140, 152, 153, 156, 159, 160, 161, 163, 164, 165, 169, 173, 176, 180, 187], "impli": [79, 80, 84, 129, 169], "implicit": [79, 80], "implicitli": 80, "import": [1, 7, 78, 119, 129, 162, 180], "importantli": 46, "imput": 67, "in_channel": 101, "in_featur": 103, "includ": [1, 4, 14, 21, 23, 25, 27, 28, 30, 38, 41, 44, 45, 47, 48, 49, 51, 86, 87, 89, 90, 93, 128, 137, 138, 139, 140, 141, 143, 144, 146, 148, 164, 169, 171, 181], "include_loss_in_metr": 30, "include_losses_in_metr": [23, 27, 28, 30, 48, 88, 89, 90], "includeextendedsummari": 1, "includenam": 1, "incompat": 184, "incorpor": [1, 4], "increas": 78, "increment": 159, "indefinit": [140, 142, 143, 145, 146, 182], "independ": [80, 154, 155, 169], "index": [21, 22, 23, 25, 27, 28, 29, 38, 41, 44, 45, 47, 48, 49, 51, 79, 80, 84, 85, 89, 90, 95, 173, 180, 185], "indic": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 79, 80, 85, 86, 87, 89, 90, 96, 108, 117, 118, 120, 123, 130, 131, 132, 134, 140, 143, 146, 152, 153, 154, 155, 156, 159, 160, 162, 164, 167, 170, 182, 184], "individu": [27, 29, 44, 45, 47, 79, 80, 95, 130, 134, 140, 143], "infer": [85, 96, 130, 134, 146], "infer_label_dim": [8, 76, 85], "infimum": 129, "infinit": 180, "info": [1, 49, 166, 188], "inform": [4, 13, 21, 23, 24, 28, 30, 35, 38, 46, 48, 49, 52, 57, 66, 76, 83, 86, 87, 89, 90, 94, 101, 112, 115, 117, 119, 120, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 153, 155, 157, 158, 185], "infti": [182, 186], "inherit": [23, 49, 80, 86, 87, 89, 90, 140, 170, 180], "ini": 1, "init": [130, 134, 164], "initi": [8, 13, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 74, 80, 82, 86, 87, 88, 89, 90, 93, 104, 120, 126, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 176, 180], "initial_clipping_bound": 153, "initial_control_vari": 164, "initial_global_featur": [72, 74], "initial_global_model": [27, 44, 45], "initial_loss_weight": [156, 158], "initial_lr": 180, "initial_model": [113, 114, 116, 118, 119, 120], "initial_paramet": [7, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164], "initialize_all_model_weight": [20, 23, 28, 86, 88, 89, 90], "initialize_control_vari": [150, 164], "initialize_global_model": [20, 30], "initialize_paramet": [150, 152, 162, 164], "initialize_server_model": [135, 146], "inject": [13, 23, 25, 28, 38, 41, 47, 51, 84, 89, 90, 94, 102, 105, 113, 153], "inner": [27, 28, 38, 44, 45, 48, 75], "inner_product": 73, "inner_product_all_sampl": 73, "inner_product_quadrupl": 73, "input": [22, 23, 25, 27, 28, 29, 36, 38, 41, 44, 45, 47, 49, 51, 57, 69, 71, 72, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 114, 117, 120, 124, 126, 130, 134, 146, 157, 159, 167, 169, 170, 171, 173, 174, 180, 182], "input_dim": 169, "input_dir": 57, "input_s": 71, "input_tensor": 106, "input_typ": 14, "ins": 147, "insert": [103, 145, 154, 155], "insid": [63, 120, 173], "inspir": 71, "instal": 1, "instanc": [4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 29, 31, 38, 42, 44, 45, 47, 48, 51, 52, 89, 90, 91, 94, 101, 103, 104, 128, 129, 144, 148, 157, 176, 180], "instance_level_dp_cli": [8, 20], "instance_level_dp_serv": [8, 135], "instanceleveldpcli": [8, 20, 42, 52, 152, 164], "instanceleveldpserv": [8, 135, 144, 148], "instanti": [30, 50, 146, 157], "instead": [10, 12, 23, 39, 41, 48, 63, 94, 96, 101, 103, 104, 173, 180], "instruct": [1, 142, 147, 152], "int": [1, 7, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 38, 39, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 59, 66, 70, 71, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 101, 103, 108, 117, 124, 125, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 180, 182, 185, 186, 187], "integ": [22, 23, 27, 44, 45, 79, 80, 84, 104, 157, 173, 180], "integr": [1, 173], "intend": [146, 173], "interact": 12, "interest": 1, "interestingli": [4, 35], "interfac": [33, 76, 83], "intermedi": [23, 25, 27, 28, 38, 41, 44, 45, 47, 51, 96], "intern": [10, 11, 12, 130, 134], "interrupt": [11, 13, 14, 137, 138, 139, 140, 141, 143, 144, 146, 148, 180], "interv": [27, 44, 45, 79, 80, 131, 132, 172], "interval_step": 172, "introduc": [1, 49, 74], "invalidconfigerror": [8, 166, 168], "invok": 1, "involv": [23, 49], "ipynb": 129, "is_glob": 30, "is_masked_modul": [92, 100, 102], "is_smooth": 71, "is_start_of_local_train": [20, 22], "is_unbias": 71, "is_var_comput": 71, "isic": 60, "isn": [1, 72, 137, 139, 182], "isort": 1, "issu": [1, 4, 10, 12, 14, 152, 153, 154, 155, 156, 159, 162, 180], "istinct": 141, "item": [23, 49, 59, 82, 146, 155], "iter": [1, 25, 31, 51, 125, 167, 181, 182], "its": [4, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 69, 76, 77, 78, 79, 80, 83, 102, 108, 117, 130, 134, 157, 159, 160, 167, 168, 171, 180, 182, 184], "itself": [1, 23, 99, 106, 117, 173, 174], "j": [85, 169], "jit": 49, "job": [49, 130, 134], "job_typ": [130, 134], "join": 106, "json": [1, 49, 60, 66, 126, 130, 132], "json_report": [8, 130], "json_str": 66, "jsonreport": [8, 130, 132], "just": [11, 12, 13, 21, 38, 49, 79, 80, 86, 87, 88, 119, 140, 146, 148, 153, 167, 170, 173, 180], "justif": 159, "jvp": 173, "k": [52, 85, 108, 160], "k_x": 71, "k_xy": 71, "k_y": 71, "keep": [17, 49, 131], "kei": [10, 14, 22, 23, 25, 27, 28, 29, 36, 41, 44, 45, 47, 48, 49, 76, 77, 78, 80, 82, 83, 89, 90, 93, 96, 99, 106, 109, 113, 126, 130, 134, 157, 168, 174, 176, 180], "kept": 160, "kernel": [27, 71, 73, 101], "kernel_s": 101, "keyword": [23, 27, 41, 44, 45, 130, 131, 132, 134, 180], "kind": [25, 80, 102, 129, 170, 182], "kl": 124, "know": [13, 117], "known": [13, 73], "kwarg": [49, 86, 87, 88, 89, 90, 91, 107, 130, 131, 132, 133, 134, 173, 180, 184], "l": [104, 108, 129, 186], "l2": [4, 24, 27, 28, 38, 44, 45, 48, 118, 156], "l240": 93, "l_2": 75, "label": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 60, 79, 80, 82, 84, 85, 167, 169, 170, 171, 174, 182, 186], "label_dim": [79, 80, 85], "label_frequ": [54, 55, 56], "label_index_tensor": 85, "label_indic": 182, "label_map_func": 60, "labelbasedsampl": [8, 59, 166, 174, 186], "lambda": [28, 48, 129], "lambda_m": 73, "languag": 170, "laplacian": 129, "larg": [73, 108, 147, 159, 182], "larger": [27, 44, 45, 49, 118, 130, 134, 152, 162, 169, 182, 186], "largest_final_magnitude_scor": [8, 111, 118], "largest_increase_in_magnitude_scor": [8, 111, 118], "largest_magnitude_change_scor": [8, 111, 118], "last": [1, 24, 42, 96, 97, 104, 130, 134, 153, 180], "latent": [27, 37, 44, 45, 51, 94, 98, 99, 109, 124, 159, 169], "latent_dim": 124, "latent_vector": 94, "later": [13, 14, 31, 80, 94, 108, 110, 146, 185], "latestopacuscheckpoint": [8, 9, 12], "latesttorchcheckpoint": 145, "latesttorchmodulecheckpoint": [8, 9, 10], "latter": [79, 80, 94, 137, 138, 139, 140, 141, 143, 144, 146, 148, 167, 180], "law": 169, "layer": [4, 12, 13, 27, 33, 34, 44, 45, 51, 73, 93, 94, 96, 97, 101, 102, 103, 104, 109, 110, 114, 117, 118, 119, 120, 153, 154, 155, 159, 160, 163, 169, 184, 185], "layer1": 126, "layer_exchang": [8, 111], "layer_hierarchi": 96, "layer_nam": [73, 96, 114], "layer_norm_modul": 104, "layer_selection_funct": 114, "layerexchangerwithexclus": [8, 33, 111, 114], "layernamesservercheckpointandstatemodul": [8, 9, 13, 143], "layernorm": 104, "layers_nam": 96, "layers_to_exchang": [92, 93, 99, 107, 109, 110], "layers_to_transf": 114, "layerselectionfunct": 114, "layerselectionfunctionconstructor": [8, 111, 114, 118], "lazi": 125, "lead": [173, 180], "learn": [4, 7, 21, 23, 24, 28, 30, 35, 38, 39, 47, 48, 50, 52, 71, 76, 83, 86, 87, 89, 90, 93, 97, 103, 104, 108, 129, 140, 142, 153, 161, 164, 170, 171, 180, 187], "learnabl": [101, 104], "learning_r": [52, 164], "least": [1, 16, 49, 79, 80, 118, 164], "leav": [33, 73, 79, 80, 130, 134], "left": [24, 49, 78, 79, 80, 85, 94, 106, 132, 159], "len": 182, "len_": 71, "len_old_models_buff": 47, "length": [23, 31, 46, 49, 71, 73, 85, 104, 164, 167, 180, 182, 185], "leq": 108, "less": [4, 118, 120], "level": [1, 4, 24, 42, 49, 52, 120, 128, 129, 131, 132, 141, 144, 148, 153, 180, 186], "leverag": [33, 118, 120, 125], "librari": [1, 4, 140, 170, 173], "light": [4, 171], "like": [1, 13, 23, 49, 79, 80, 89, 90, 101, 103, 117, 130, 134, 140, 141, 144, 148, 158, 160, 167, 171, 180, 185], "limit": [173, 182], "line": [4, 164], "linear": [73, 103, 169], "linear_modul": 103, "linearli": [152, 153, 154, 155, 156, 159, 160, 161, 162, 164], "link": [1, 169], "list": [1, 14, 16, 17, 18, 19, 21, 23, 24, 44, 45, 47, 49, 50, 52, 56, 57, 59, 60, 66, 73, 75, 76, 77, 78, 81, 82, 83, 86, 87, 88, 89, 90, 93, 95, 96, 99, 101, 104, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 128, 129, 130, 134, 140, 141, 142, 144, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 172, 173, 176, 180, 182, 186], "litian96": [28, 89, 90, 169], "ll": [153, 182], "load": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 56, 57, 59, 98, 126, 130, 134, 140, 142, 162, 168, 170, 171, 172, 174, 180, 187], "load_attribut": [166, 187], "load_autoencod": [122, 123], "load_best_checkpoint_into_model": [9, 12], "load_checkpoint": [9, 10, 12, 14], "load_cifar10_data": [7, 8, 166, 174], "load_cifar10_test_data": [8, 166, 174], "load_config": [8, 166, 168], "load_data": [7, 8, 54, 55, 58, 166], "load_from_pretrain": [121, 126], "load_imag": [54, 55, 57, 58, 59], "load_mnist_data": [8, 166, 174], "load_mnist_test_data": [8, 166, 174], "load_model_checkpoint_to_paramet": [135, 142], "load_msd_dataset": [8, 166, 174], "load_pca_modul": [121, 125], "load_pretrained_model": [92, 98], "load_rxrx1_data": [54, 55, 56], "load_rxrx1_test_data": [54, 55, 56], "load_skin_cancer_data": [54, 58, 59], "load_snapshot": [166, 172], "load_stat": [9, 14], "loader": [23, 31, 46, 49, 56, 174], "local": [1, 4, 7, 11, 21, 22, 23, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 72, 74, 86, 87, 89, 90, 93, 99, 106, 109, 142, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 172, 174, 180], "local_epoch": [7, 23, 30, 36, 39, 144, 148, 168], "local_featur": [72, 74, 99, 109], "local_feature_contrastive_loss": 51, "local_feature_contrastive_loss_weight": [51, 72], "local_feature_loss_temperatur": [51, 72, 74], "local_forward": [92, 93], "local_logit": 93, "local_loss": [22, 28], "local_metr": 30, "local_model": [27, 44, 45], "local_modul": [99, 109], "local_prediction_head": 97, "local_step": [21, 23, 25, 30, 36, 39, 47, 51, 52, 86, 87, 88, 144, 148, 168], "local_tensor": 106, "locat": [130, 134, 174], "lock": 1, "log": [7, 8, 10, 13, 23, 41, 49, 94, 124, 130, 134, 140, 143, 166, 180, 182], "logger": 180, "logging_mod": [23, 49, 167], "loggingmod": [8, 23, 49, 166, 175], "logic": [23, 41], "logit": [69, 76, 83], "logits_threshold": [76, 83], "loglevel": [1, 8, 23, 49, 166, 180, 188], "logvar": [94, 124], "long": [49, 140, 147, 173], "longer": [14, 173, 180], "look": [1, 41, 85, 130, 134], "loop": [14, 27, 28, 36, 44, 89, 90, 171], "loss": [4, 7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 86, 87, 88, 89, 90, 98, 105, 108, 110, 121, 122, 130, 134, 140, 141, 142, 143, 144, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 172, 180], "loss_contain": 25, "loss_dict": [21, 23, 25, 47, 51, 52, 86, 87, 88, 167], "loss_for_adapt": [21, 86, 87, 89, 90], "loss_list": 176, "loss_met": [30, 176], "loss_meter_typ": [21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 176], "loss_weight_delta": [156, 158], "loss_weight_pati": [156, 158], "losses_list": 176, "losses_typ": 176, "lossestyp": 176, "lossmet": [8, 166, 176, 187], "lossmetertyp": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 166, 176], "lotteri": [4, 35], "low": [108, 182], "low_rank": 108, "lower": [49, 108], "lr": [7, 23, 49, 52, 71, 180], "lrschedul": [23, 187], "lrschedulersnapshott": [8, 166, 187], "m": [7, 108, 160], "m_": 78, "m_t": [78, 153], "machineri": 140, "made": [4, 22, 132], "magnitud": [141, 157, 158], "mai": [1, 13, 21, 23, 25, 30, 38, 46, 50, 80, 86, 87, 94, 105, 108, 110, 129, 137, 138, 139, 140, 141, 143, 144, 146, 148, 154, 155, 160, 170, 173, 184, 185], "main": [1, 7, 54, 55, 57, 69, 129], "mainli": [31, 85], "maintain": [4, 35, 79, 80, 101, 103, 104, 113, 160, 170], "major": 11, "make": [41, 42, 49, 76, 80, 83, 94, 95, 130, 134, 180, 182, 184], "make_dict_with_epochs_or_step": [8, 166, 168], "make_it_person": [8, 86, 89], "manag": [1, 10, 16, 17, 18, 19, 23, 49, 82, 133, 142, 147, 152, 153, 157, 162, 164], "mandatori": 157, "manger": 152, "mani": [1, 21, 81, 169, 173], "manipul": [49, 51, 105], "manner": [29, 95, 98, 108, 160], "manual": 1, "map": [1, 13, 49, 56, 60, 76, 79, 80, 83, 84, 85, 94, 98, 99, 101, 103, 104, 106, 109, 120, 126, 154, 155, 160, 169], "map_label_index_tensor_to_one_hot": [8, 76, 85], "map_model_to_opacus_model": [8, 166, 184], "mark": 1, "mask": [35, 49, 101, 102, 103, 104, 118, 160, 170], "mask_data": [20, 49], "masked_conv": [92, 100], "masked_lay": [8, 92], "masked_layers_util": [92, 100], "masked_linear": [92, 100], "masked_normalization_lay": [92, 100], "maskedbatchnorm1d": [92, 100, 104], "maskedbatchnorm2d": [92, 100, 104], "maskedbatchnorm3d": [92, 100, 104], "maskedconv1d": [92, 100, 101], "maskedconv2d": [92, 100, 101], "maskedconv3d": [92, 100, 101], "maskedconvtranspose1d": [92, 100, 101], "maskedconvtranspose2d": [92, 100, 101], "maskedconvtranspose3d": [92, 100, 101], "maskedlayernorm": [92, 100, 104], "maskedlinear": [92, 100, 103], "master": [49, 169], "match": [13, 23, 27, 41, 44, 45, 49, 96, 114, 126, 146, 181, 182], "mathbf": [32, 94], "mathcal": [94, 169], "matric": [108, 159], "matrix": [24, 71, 73, 108, 159, 169], "matter": [1, 113], "max": 49, "max_grad_norm": 49, "max_retri": 182, "max_step": 180, "max_work": 147, "maxim": [10, 12, 73], "maximum": [49, 71, 73, 147, 153, 163, 180, 185], "mayb": [13, 131, 132], "maybe_checkpoint": [9, 10, 11, 12, 13], "maybe_extract_fingerprint": [20, 49], "maybe_load_client_st": [9, 14], "maybe_load_server_st": [9, 14], "maybe_load_st": [9, 11, 13], "maybe_preprocess": [20, 49], "maybe_progress_bar": [8, 166, 167], "maybe_reshap": [92, 108], "maybe_set_default_checkpoint_nam": [9, 14], "md": 49, "mean": [1, 21, 48, 70, 71, 73, 79, 86, 87, 94, 108, 124, 169, 180], "meant": [4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 56, 106, 118, 119, 142], "measur": [24, 27, 44, 45, 73, 79, 128], "mechan": [11, 12, 28, 36, 42, 63, 89, 90, 106, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 172, 184], "median": 180, "median_image_size_in_voxel": 49, "medic": 174, "medical_feder": 60, "member": [1, 153, 163], "memori": 80, "mention": 1, "merg": [1, 4, 31, 46, 71, 106, 145, 159, 162], "merge_metr": [20, 30], "merge_subspaces_qr": [150, 159], "merge_subspaces_svd": [150, 159], "merge_two_subspaces_qr": [150, 159], "messag": [23, 49, 181], "met": [164, 182], "meta": 63, "metadata": [56, 57, 63, 66], "metadata_rout": 63, "meter": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 176], "method": [1, 4, 10, 11, 13, 21, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 49, 50, 51, 63, 74, 76, 77, 78, 79, 80, 83, 85, 88, 89, 90, 91, 96, 106, 108, 117, 120, 130, 131, 132, 134, 138, 140, 146, 155, 159, 161, 164, 169, 176, 180, 185, 186, 187], "metric": [7, 8, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 89, 90, 130, 132, 134, 140, 141, 142, 143, 144, 145, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167], "metric_aggreg": [7, 8, 76], "metric_manag": [8, 23, 49, 76], "metric_manager_nam": 82, "metric_met": 30, "metric_nam": 157, "metric_typ": 157, "metric_valu": [23, 30, 31], "metricmanag": [8, 23, 49, 76, 82, 187], "metricoutcom": [8, 76, 80], "metricprefix": [8, 76, 77], "metrics_util": [8, 76], "metricsaggregationfn": [142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "mic": [49, 180], "middl": 94, "might": [1, 10, 11, 21, 49, 50, 79, 80, 85, 118, 131, 132, 142, 156], "mimic": 184, "min": [24, 108], "min_available_cli": [7, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "min_evaluate_cli": [7, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162], "min_fit_cli": [7, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162], "min_label_exampl": 182, "min_num_cli": [16, 17, 18, 19], "mini": 104, "minim": [10, 12, 71, 73, 88, 137, 138, 139, 140, 141, 143, 144, 146, 148], "minimize_type_two_error": 73, "minimum": [16, 17, 18, 19, 23, 30, 46, 142, 145, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 182], "minor": 186, "minority_label": 186, "minoritylabelbasedsampl": [8, 166, 186], "misalign": 85, "mismatch": [85, 184], "miss": 66, "mix": [49, 87, 89, 90, 93], "mixin": [8, 41], "mixtur": 93, "mk": [23, 27, 44, 45, 73], "mkmmd_client": [8, 20], "mkmmd_loss": [8, 68], "mkmmd_loss_weight": [44, 45], "mkmmdloss": [8, 68, 73], "mloptpsu": 93, "mlr": [39, 161], "mmd": [23, 27, 44, 45, 71, 73], "mmd_kernel_train_interv": 27, "mmdu": [68, 71], "mnist": [171, 174], "mode": [11, 22, 23, 29, 36, 38, 41, 48, 49, 89, 95, 101, 106, 173], "model": [4, 7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 102, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 176, 180, 181, 183, 184], "model_bas": 8, "model_checkpoint": 13, "model_checkpoint_path": [30, 142], "model_head": [99, 106, 109], "model_merge_cli": [8, 20], "model_merge_serv": [8, 135], "model_merge_strategi": [8, 150], "model_paramet": 117, "model_path": [46, 98], "model_save_dir": 31, "model_weight": [115, 117, 119], "modelcheckpoint": [11, 13], "modellatentf": [8, 68, 71], "modelmergecli": [8, 20, 46], "modelmergeserv": [8, 135, 145], "modelmergestrategi": [8, 145, 150, 162], "modern": 1, "modif": [4, 118, 156, 158, 184], "modifi": [4, 14, 23, 49, 52, 85, 130, 134, 144, 153, 156, 158, 167, 180, 184, 186], "modify_grad": [20, 52], "modify_noise_multipli": [150, 153], "modul": [4, 7, 8, 9, 15, 20, 26, 40, 43, 54, 55, 58, 61, 68, 76, 86, 89, 92, 100, 111, 121, 122, 127, 130, 135, 136, 150, 166], "modular": 4, "module2losswrapp": [8, 166, 180], "module_exclus": 114, "modulelist": 96, "modulu": 73, "moment": [128, 129, 161], "moment_ord": [128, 129], "moments_account": [8, 127], "momentsaccount": [8, 127, 129], "momentum": [7, 104, 153, 161], "monitor": 172, "monolith": 31, "moon": [4, 23, 27, 32, 41, 44, 45, 47, 48, 49, 69, 72, 74, 97, 105, 110], "moon_bas": [8, 92], "moon_client": [8, 20], "moonclient": [8, 20, 47], "mooncontrastiveloss": [8, 68, 69], "mooncontrastivelosscontain": [8, 68, 72], "moonmodel": [8, 92, 105], "more": [4, 13, 22, 23, 29, 30, 32, 36, 39, 46, 49, 76, 78, 82, 83, 85, 101, 108, 114, 117, 119, 120, 131, 152, 155, 158, 159, 160, 169, 173, 180, 182, 184, 185, 186], "moreov": [79, 80], "most": [22, 23, 27, 44, 45, 79, 80, 118, 120, 137, 138, 139, 140, 141, 143, 144, 146, 148, 151, 168], "mostli": 50, "move": [1, 71, 73, 78, 147, 148, 164, 167], "move_data_to_devic": [8, 166, 167], "mp": 49, "mr": [4, 11, 45, 48, 137, 139], "mr_mtl_client": [8, 20], "mr_mtl_mkmmd_client": [20, 43], "mrmtl_server": [135, 136], "mrmtlclient": [8, 20, 45, 48], "mrmtlmkmmdclient": [20, 43, 45], "mrmtlserver": [135, 136, 139], "msd": 174, "msd_dataset_nam": 174, "msd_dataset_sourc": [8, 166], "msddataset": [8, 166, 174, 179], "mtl": [4, 11, 45, 48, 137, 139], "mu": [21, 32, 47, 51, 94, 123, 124, 156, 158, 169], "much": [13, 159], "multi": [73, 79, 80], "multiclassdic": [8, 76, 79], "multiclassificationmetr": [8, 76, 79, 80], "multidimension": 169, "multinomi": [182, 186], "multipl": [13, 23, 29, 49, 63, 69, 79, 80, 96, 126, 151, 159, 180], "multipli": [128, 153, 163], "multiprocess": 49, "multithread": 180, "multithreadedaugment": 180, "multivari": 169, "must": [1, 10, 13, 22, 23, 49, 50, 76, 78, 79, 80, 83, 85, 106, 120, 129, 130, 134, 137, 139, 143, 144, 145, 146, 148, 152, 154, 155, 156, 157, 158, 164, 170, 173, 180, 182], "mutual": [70, 126, 182], "mypi": 1, "n": [23, 27, 44, 45, 52, 69, 94, 104, 108, 129, 159, 164, 169], "n_1": 159, "n_2": 159, "n_case": 180, "n_client": 163, "n_clients_sampl": 128, "n_dataload_process": 49, "n_featur": [69, 70, 73, 74], "n_i": 159, "n_k": 129, "n_n": 159, "n_pair": 69, "n_sampl": [73, 169], "n_server_round": 157, "n_total_cli": 128, "name": [7, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 63, 66, 73, 76, 77, 78, 79, 80, 82, 83, 89, 90, 93, 96, 110, 114, 117, 118, 120, 126, 130, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 154, 155, 157, 160, 168, 171, 174, 180], "named_modul": 96, "nan": 79, "narrow": 168, "narrow_dict_typ": [8, 166, 168], "narrow_dict_type_and_set_attribut": [8, 166, 168], "narrow_type_to": 168, "navig": 1, "ndarrai": [21, 23, 24, 28, 30, 31, 36, 38, 46, 48, 50, 52, 86, 87, 88, 89, 90, 113, 114, 115, 116, 117, 118, 119, 120, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 173, 182], "nearli": [4, 34], "necessari": [13, 31, 39, 47, 50, 66, 85, 110, 146, 180, 184], "necessarili": [13, 85], "need": [1, 4, 7, 10, 12, 13, 14, 23, 28, 30, 31, 34, 36, 38, 41, 46, 49, 76, 80, 83, 85, 89, 90, 94, 106, 108, 112, 114, 126, 140, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 169, 173, 180, 184, 185], "needs_input_grad": 173, "neg": [69, 72, 74, 79, 80, 84, 153], "negative_pair": [69, 72], "neighbor": 129, "neighbor_rel": 129, "neighborrel": 129, "neither": 164, "net": 7, "network": [32, 38, 71, 96, 159, 180], "neural": 96, "neuron": 173, "never": [11, 48, 130, 134, 172], "new": [1, 14, 17, 24, 56, 60, 78, 80, 85, 98, 102, 103, 104, 125, 130, 134, 146, 157, 159, 171, 176, 182, 184, 186], "new_dimens": 125, "new_tag": [130, 134], "newli": 164, "next": [7, 25, 36, 51, 80, 85, 120, 142, 157, 158, 180, 182], "nice": 173, "nip": 69, "nn": [7, 10, 11, 12, 13, 14, 23, 27, 28, 33, 41, 44, 45, 46, 49, 75, 89, 90, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 113, 114, 118, 120, 126, 145, 164, 167, 180, 181, 183, 184, 187], "nnunet": [13, 14, 49, 140, 146, 180], "nnunet_augment": 180, "nnunet_cli": [8, 20], "nnunet_config": [49, 180], "nnunet_plan": [49, 146], "nnunet_serv": [8, 135], "nnunet_trainer_class": [49, 146], "nnunet_trainer_class_kwarg": 49, "nnunet_util": [8, 166], "nnunetcli": [8, 20, 49, 146, 180], "nnunetconfig": [8, 166, 180], "nnunetdataloaderwrapp": [8, 166, 180], "nnunetserv": [8, 13, 49, 135, 140, 146], "nnunetservercheckpointandstatemodul": [8, 9, 13, 146], "nnunetserverstatecheckpoint": [8, 9, 13, 14], "nnunettrain": [49, 146], "nnunetv2": [49, 146, 180], "node": 7, "nois": [24, 128, 129, 141, 144, 148, 153, 163], "noise_ev": 129, "noise_multipli": [42, 128, 129, 144, 148, 163], "noise_std_dev": 163, "noisi": 163, "noisy_aggreg": [8, 150], "non": [1, 4, 21, 46, 47, 71, 76, 83, 85, 129, 140, 143, 167, 168, 169, 170, 171, 173, 176, 180, 186], "nondetmultithreadedaugment": 180, "none": [1, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 63, 66, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 108, 112, 113, 114, 116, 118, 119, 120, 123, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 185, 186, 187], "nonneg": 118, "nonzero": [117, 155], "nor": [93, 164], "norm": [4, 24, 32, 44, 45, 49, 73, 114, 118], "norm_threshold": 118, "normal": [4, 33, 68, 69, 73, 81, 94, 104, 117, 118, 124, 163, 169, 176], "normalize_featur": 73, "normalize_metr": [8, 76, 81], "normalized_shap": 104, "notabl": 69, "notat": 169, "note": [1, 4, 7, 11, 13, 23, 28, 32, 38, 41, 45, 46, 48, 49, 50, 63, 73, 78, 79, 80, 85, 86, 87, 91, 94, 98, 101, 103, 104, 108, 113, 114, 117, 118, 125, 128, 129, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 173, 182, 184, 185, 186], "notebook": 129, "noth": [7, 85, 93], "notimplementederror": [10, 23, 29, 31, 38, 46, 49, 76, 77, 78, 80, 83, 106, 176], "notset": [166, 188], "now": [1, 7, 85, 108, 131, 167], "np": [173, 182, 186], "nt": 69, "ntxentloss": [8, 68, 69], "num": [49, 187], "num_accumulating_batch": [27, 44, 45], "num_client": [16, 17, 169], "num_featur": 104, "num_input_channel": 146, "num_label": [79, 80], "num_round": [7, 140, 141, 142, 144, 145, 146, 148], "num_sampl": [79, 80, 180], "num_segmentation_head": 146, "num_server_round": [141, 144, 148], "num_spatial_dim": 180, "num_validation_step": [23, 30], "num_work": [56, 59], "number": [1, 4, 16, 17, 18, 19, 21, 23, 25, 27, 28, 30, 31, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 59, 71, 73, 80, 81, 85, 86, 87, 89, 90, 101, 104, 108, 117, 118, 125, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 172, 173, 180, 182, 185, 186, 187], "number_of_partit": 182, "numer": [61, 67, 104, 173], "numpi": [21, 86, 87, 113, 117, 145, 151, 163, 164, 173, 181, 183, 185], "numpy_st": 185, "numpycli": [23, 31, 46, 88], "numpyclientminimalprotocol": [8, 86, 88], "numpyclippingcli": [8, 20, 24], "nunetserv": 146, "nutshel": 159, "nvidia": 185, "object": [11, 13, 14, 16, 18, 19, 21, 22, 23, 25, 29, 30, 36, 39, 41, 46, 49, 50, 63, 66, 72, 80, 82, 86, 87, 89, 90, 96, 98, 114, 118, 123, 125, 126, 128, 129, 130, 131, 133, 134, 140, 141, 142, 144, 145, 147, 148, 154, 155, 157, 159, 160, 168, 172, 173, 174, 176, 180, 181, 183, 186, 187], "observ": 159, "obtain": [11, 13, 24, 31, 151, 159], "obviou": 1, "occur": [4, 23, 27, 28, 38, 41, 44, 45, 46, 89, 90, 140, 162, 169], "off": [46, 73, 140, 142, 153, 156, 158], "offer": [152, 185], "offici": [60, 108], "official_column": 60, "often": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 151, 167], "old": [24, 25, 47, 51, 74], "old_global_featur": [72, 74], "old_local_featur": [72, 74], "old_model": 47, "omit": 1, "on_evaluate_config_fn": [7, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "on_fit_config_fn": [7, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "on_init_parameters_config_fn": [137, 138, 139, 140, 141, 143, 144, 146, 148], "onc": [7, 46, 131, 132, 180], "one": [1, 11, 13, 23, 28, 29, 30, 31, 33, 35, 36, 39, 49, 74, 79, 80, 82, 85, 89, 90, 94, 96, 99, 101, 102, 103, 104, 105, 106, 126, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 153, 157, 160, 162, 164, 167, 168, 169, 171, 174, 176, 180, 185], "one_layer_map_inputs_to_output": [166, 169], "ones": [84, 104, 130, 134, 160, 164], "onli": [1, 4, 10, 11, 12, 13, 23, 27, 28, 30, 31, 34, 36, 38, 39, 41, 44, 45, 46, 50, 51, 52, 63, 79, 82, 91, 93, 99, 104, 106, 108, 110, 114, 123, 130, 134, 140, 142, 145, 146, 152, 153, 155, 156, 158, 159, 162, 163, 164, 170, 180], "onlin": 1, "onto": [71, 73, 74, 108, 125], "op": [140, 185], "opacu": [12, 13, 42, 144, 152, 164, 184], "opacus_checkpoint": [8, 9], "opacusbasicfedavg": [8, 144, 150, 152], "opacuscheckpoint": [8, 9, 12], "opacusscaffold": [8, 150, 164], "opacusservercheckpointandstatemodul": [8, 9, 13, 144], "open": 4, "oper": [38, 76, 83, 120, 140, 168, 173, 184], "oppos": 173, "optim": [4, 7, 22, 23, 24, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 44, 45, 47, 48, 49, 52, 71, 72, 73, 86, 88, 89, 90, 93, 164, 176, 180, 184, 187], "optimization_step": 71, "optimize_beta": [68, 73], "optimizer_kei": [23, 49, 86, 89, 90], "optimizersnapshott": [8, 166, 187], "option": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 63, 66, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 93, 94, 98, 99, 101, 103, 104, 105, 108, 110, 113, 118, 123, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 174, 176, 180, 182, 184, 185, 186], "orchestr": [50, 94, 133], "order": [1, 14, 36, 47, 78, 86, 87, 89, 90, 96, 113, 114, 117, 120, 128, 129, 142, 146, 148, 151, 153, 157, 158, 173, 180], "ordin": [61, 67], "ordinari": 35, "org": [22, 33, 34, 35, 36, 37, 52, 60, 69, 74, 76, 83, 97, 98, 101, 108, 117, 120, 143, 148, 152, 153, 155, 156, 160, 163, 164, 169, 173, 185], "organ": [130, 134], "origin": [4, 28, 47, 48, 49, 51, 56, 60, 63, 71, 74, 89, 90, 93, 102, 108, 110, 146, 160, 167, 169, 171, 182], "original_column": 60, "original_dataset": 182, "original_label_map": 56, "original_median_shape_after_transp": 49, "original_median_spacing_after_transp": 49, "original_model": 102, "original_param": 164, "orthonorm": 159, "other": [1, 4, 21, 22, 23, 24, 27, 28, 29, 30, 33, 38, 41, 44, 45, 48, 49, 50, 52, 63, 78, 79, 85, 86, 87, 89, 90, 99, 101, 105, 109, 110, 112, 120, 129, 137, 138, 139, 140, 141, 143, 144, 146, 148, 159, 163, 171, 173, 180, 184], "otherwis": [7, 11, 13, 14, 23, 30, 38, 39, 50, 63, 79, 80, 102, 126, 130, 132, 134, 172, 182], "our": [1, 4, 7, 34, 41, 76, 83, 170], "out": [1, 33, 118, 141, 153, 159], "out_channel": 101, "out_featur": 103, "outcom": [79, 80], "output": [23, 28, 36, 49, 57, 71, 76, 83, 89, 90, 93, 94, 96, 98, 99, 101, 103, 104, 106, 109, 110, 124, 146, 169, 173, 180], "output_dim": 169, "output_dir": 57, "output_fold": [130, 132], "output_pad": 101, "output_path": 57, "output_s": [71, 101], "outsid": [4, 130, 131, 132, 134, 185], "over": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 70, 71, 76, 77, 78, 79, 83, 86, 87, 104, 129, 130, 134, 137, 139, 152, 153, 164, 171, 180, 186], "overal": 1, "overestim": 108, "overfit": 172, "overflow": [79, 80], "overhead": 49, "overrid": [12, 16, 18, 19, 22, 23, 24, 25, 34, 36, 37, 41, 49, 50, 52, 80, 105, 142, 148, 157, 173, 180], "overridden": [21, 23, 30, 33, 41, 46, 49, 86, 87, 94, 140, 145, 157, 164, 173, 180], "overwrit": [10, 12, 96, 130, 134], "own": [4, 49, 180, 184], "p": [1, 79, 80, 153], "pack": [1, 21, 27, 28, 38, 44, 45, 52, 86, 87, 94, 115, 117, 119, 120, 142, 153, 154, 155, 156, 158, 159, 160, 171], "pack_losses_with_val_metr": [23, 39, 157], "pack_paramet": [111, 115, 117, 119], "packag": [0, 1, 7, 21, 120, 152, 153, 162, 164, 180], "packed_data": 171, "packed_paramet": [115, 117, 119], "packer": [13, 115, 117, 119, 153], "packing_exchang": [8, 111], "packingservercheckpointandandstatemodul": [8, 9, 13], "pad": [60, 101], "pad_image_path_func": [54, 58, 60], "pad_label_map_func": [54, 58, 60], "padding_mod": 101, "page": [1, 117, 120, 155], "pair": [69, 71, 72, 74, 76, 77, 78, 79, 83, 130, 134, 169], "pairwise_distance_squar": [68, 71], "panchal23a": [39, 161], "panda": 63, "paper": [28, 36, 47, 48, 51, 52, 60, 69, 71, 74, 129, 152, 153, 156, 159, 164, 169, 173], "paper_fil": 69, "paradigm": 160, "parallel": [37, 51, 59, 97, 99, 106], "parallel_output_join": [92, 106], "parallel_split_model": [8, 92], "parallelfeaturejoinmod": [8, 92, 106], "parallelsplitheadmodul": [8, 92, 99, 106, 109], "parallelsplitmodel": [8, 92, 99, 106, 109], "param": [52, 117, 164], "paramet": [4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 181, 182, 183, 184, 185, 186, 187], "parameter_exchang": [8, 13, 50, 86, 87, 89, 90, 145], "parameter_exchanger_bas": [8, 111], "parameter_extract": [7, 8, 166], "parameter_pack": [8, 111, 115, 119], "parameter_selection_criteria": [8, 111], "parameter_upd": 164, "parameterexchang": [8, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 50, 51, 52, 86, 87, 111, 113, 114, 116, 119], "parameterpack": [8, 111, 115, 117, 119], "parameterpackeradaptiveconstraint": [8, 111, 117], "parameterpackerwithclippingbit": [8, 111, 117], "parameterpackerwithcontrolvari": [8, 111, 117], "parameterpackerwithlayernam": [8, 111, 117], "parametr": 71, "params1": 181, "params2": 181, "params_1": [52, 164], "params_2": [52, 164], "parent": [13, 29, 38, 49, 79, 105, 162], "part": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 52, 78, 106, 129, 137, 138, 139, 140, 141, 143, 144, 146, 148, 155, 180, 186], "parti": 47, "partial": [7, 30, 50, 78, 97, 118, 119, 126, 157, 164], "partial_layer_exchange_model": [8, 92], "partial_parameter_exchang": [8, 111], "partial_weight_exchange_cli": [8, 20], "partiallayerexchangemodel": [8, 92, 93, 99, 107, 109, 110], "partialparameterexchang": [8, 50, 111, 114, 119, 120], "partialweightexchangecli": [8, 20, 50], "particip": [137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 154, 155, 157, 164], "particular": [11, 79, 160, 182, 186], "partit": 182, "partition": [8, 166], "partition_dataset": [166, 182], "partition_label_indic": [166, 182], "partitioned_dataset": 182, "pass": [1, 10, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 71, 76, 77, 78, 79, 80, 83, 86, 87, 89, 90, 91, 94, 96, 98, 101, 103, 104, 105, 106, 108, 110, 130, 131, 132, 134, 142, 146, 147, 148, 156, 158, 168, 171, 173, 180, 182, 186], "past": [10, 12, 30, 75], "patch": 180, "path": [7, 10, 11, 12, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 56, 57, 59, 60, 98, 123, 125, 126, 132, 142, 172, 174], "path_to_checkpoint": [10, 12], "pathlib": 7, "patienc": 172, "pc": 159, "pca": [8, 31, 92, 159], "pca_lowrank": 108, "pca_preprocessor": [8, 121], "pcamodul": [8, 31, 92, 108, 125, 159], "pcapreprocessor": [8, 121, 125], "pd": [57, 60, 63], "pdf": [35, 36, 37, 39, 52, 69, 97, 98, 143, 153, 160, 161, 163, 164, 173], "peft": 183, "peft_parameter_extract": [8, 166], "penal": [21, 27, 44, 45], "penalti": [4, 21, 27, 28, 32, 38, 44, 45, 48, 86, 87, 89, 90, 156, 158], "penalty_loss_funct": [86, 87, 89, 90], "per": [49, 69, 79, 80, 81, 104, 108, 128, 129, 144, 148, 153, 163, 169, 180, 182], "per_client_example_cap": [153, 163], "per_round_checkpoint": [23, 30], "percentag": [56, 59, 114, 118, 186], "perfcl": [4, 25, 37, 51, 72, 74, 109], "perfcl_bas": [8, 92], "perfcl_client": [8, 20], "perfcl_loss": [8, 25, 68], "perfcl_loss_config": 72, "perfclclient": [8, 20, 51], "perfclloss": [8, 68, 74], "perfcllosscontain": [8, 68, 72], "perfclmodel": [8, 51, 92, 109], "perform": [4, 11, 16, 21, 23, 24, 25, 29, 30, 31, 32, 35, 36, 37, 39, 41, 42, 45, 46, 47, 48, 49, 51, 52, 76, 83, 86, 87, 94, 108, 120, 125, 128, 129, 140, 144, 145, 146, 148, 152, 153, 154, 155, 159, 160, 162, 164, 168, 170, 171, 176, 180, 182, 184], "perform_linear_approxim": 73, "perhap": [13, 23, 31, 49, 94], "persist": 10, "person": [4, 8, 22, 28, 38, 41, 48, 86, 93, 139], "personalizedmod": [8, 86, 89], "perspect": [79, 164], "phase": [4, 13, 36, 98, 154, 155, 164], "pickl": [49, 57], "piec": [51, 66, 72, 94], "pii": [51, 74], "pinnabl": 173, "pip": [1, 7], "pipelin": [63, 94], "pixel": 80, "place": [13, 47, 63, 80, 154, 155, 180, 182], "placehold": 12, "plan": [49, 140, 146, 180], "plans_identifi": 49, "plans_nam": 49, "plansnam": 49, "plate": 57, "pleas": [1, 63, 101, 114, 117, 120, 155, 173], "plu": [47, 176], "plugin": 172, "poetri": 1, "point": [1, 46, 56, 108, 128, 129, 142, 159, 182, 186], "poisson": [19, 128, 129], "poisson_sampling_manag": [8, 15], "poissonsampl": [8, 127, 129], "poissonsamplingclientmanag": [8, 15, 19], "poll": [8, 46, 135, 140, 141, 144, 146, 152, 165], "poll_client": [8, 135, 147], "poll_clients_for_sample_count": [135, 140], "pollresultsandfailur": 147, "polylrschedulerwrapp": [8, 166, 180], "polynomi": 180, "pool": [140, 147], "popul": [129, 130, 134], "population_s": 129, "pos_label": [79, 80], "posit": [69, 72, 74, 79, 80, 84, 85], "positive_pair": [69, 72], "posixpath": [130, 132], "possibl": [1, 35, 72, 79, 80, 180, 184], "possibli": [39, 48, 184], "post": [11, 13, 80, 140, 143], "post_aggreg": [9, 11], "posterior": 160, "potenti": [4, 10, 11, 12, 13, 14, 23, 27, 28, 29, 30, 42, 48, 89, 90, 94, 115, 137, 138, 139, 140, 141, 143, 144, 146, 148, 156, 171, 182, 184], "power": [73, 169], "pr": 1, "pre": [1, 11, 13, 98, 114, 123, 125, 171], "pre_aggreg": [9, 11], "preced": [106, 164], "precis": [49, 108, 155, 159, 160], "pred": [21, 22, 23, 25, 27, 28, 29, 38, 44, 45, 47, 48, 49, 51, 78, 79, 80, 82, 85, 88, 89, 90, 124, 180], "pred_1": 78, "pred_2": 78, "pred_transform": 78, "predict": [4, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76, 77, 78, 79, 80, 82, 83, 84, 85, 89, 90, 93, 95, 98, 99, 105, 106, 109, 110, 124, 157, 180], "predict_with_model": [40, 41, 86, 88], "prediction_head": 98, "preds_1": 78, "preds_2": 78, "preds_list": 95, "preemption": 140, "prefix": [10, 49, 96, 126], "prepar": 108, "prepare_data_forward": [92, 108], "prepare_loss_arg": [8, 166, 180], "prepend": 10, "preprocess": [8, 49, 54, 55, 60, 80], "preprocess_derm7pt": [54, 58, 60], "preprocess_ham10000": [54, 58, 60], "preprocess_isic_2019": [54, 58, 60], "preprocess_pad_ufes_20": [54, 58, 60], "preprocess_skin": [54, 58], "prescrib": 1, "present": [4, 11, 23, 30, 36, 79, 80, 85, 98, 157, 168, 182], "preserv": [11, 13, 47, 110, 137, 138, 139, 140, 141, 143, 144, 146, 148, 167], "press": [39, 161], "pretrain": [98, 126], "pretrained_model": 126, "pretrained_model_path": 126, "prevent": [79, 80, 96], "previou": [4, 10, 47, 74, 75, 78, 130, 134, 153], "previous": [78, 185], "primari": 108, "princip": [4, 31, 108, 125, 159], "principal_compon": 108, "print": [49, 56, 167], "prior": [23, 25, 46, 51, 52, 78, 79, 80, 96, 108, 140, 143, 144, 146, 163, 168, 180, 182], "prior_distribut": 182, "priorit": [4, 168], "prioriti": [130, 134], "privaci": [8, 12, 24, 42, 48, 141, 144, 148, 153, 184], "privacy_util": [8, 166], "privacy_validate_and_fix_modul": [8, 166, 184], "privat": [4, 34, 36, 42, 52, 148, 153], "probabilist": 160, "probabl": [19, 101, 103, 104, 128, 129, 160, 169, 173, 180, 182, 186], "problem": [79, 85], "proce": [137, 138, 139, 140, 141, 143, 144, 146, 148], "procedur": [4, 27, 28, 44, 89, 90, 106, 129, 159], "proceed": [13, 27, 28, 39, 44, 89, 90, 148, 161], "process": [11, 13, 19, 23, 30, 36, 37, 39, 42, 49, 56, 57, 59, 60, 80, 101, 118, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 171, 172, 173, 180, 185], "process_and_check_validation_step": [8, 166, 167], "process_client_data": [54, 58, 60], "process_config": [20, 23, 39], "process_data": [54, 55, 57], "process_fed_rep_config": [20, 36], "processor": 123, "produc": [1, 10, 17, 18, 22, 23, 29, 36, 41, 47, 49, 74, 79, 93, 94, 95, 99, 101, 103, 104, 105, 106, 109, 120, 137, 138, 139, 140, 141, 143, 144, 146, 148, 152, 153, 159, 164, 169, 170, 176], "product": [27, 28, 38, 44, 45, 48, 75], "progress": [1, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 167], "progress_bar": [21, 22, 23, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 167], "project": [4, 98, 105, 108, 125, 130, 134], "project_back": [92, 108], "project_lower_dim": [92, 108], "projection_head": 98, "projection_modul": 105, "propag": [101, 103, 104, 173], "proper": [10, 11, 12, 13, 28, 36, 89, 90, 98, 114, 129, 144, 154, 155, 180], "properli": [1, 11, 13, 33, 35, 50, 119], "properti": [23, 49, 50, 89, 90, 114, 146, 147, 152], "proport": [164, 174], "propos": [69, 71], "protocol": [87, 88, 89, 90], "provid": [4, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 66, 67, 69, 70, 72, 73, 79, 80, 81, 85, 93, 94, 98, 102, 103, 104, 113, 114, 126, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 167, 170, 173, 180, 182, 184], "proxi": [147, 173], "proxim": [156, 158], "prune": 160, "pseudo": 173, "pseudo_sort_scoring_funct": [8, 166, 173], "pt": 14, "pull": [21, 23, 24, 28, 30, 38, 50, 86, 87, 89, 90], "pull_paramet": [111, 112, 113, 114, 116, 120], "purpos": [10, 49, 63, 108, 137, 139], "push": 1, "push_paramet": [111, 113, 114, 116, 120], "put": 56, "py": [1, 60, 93], "pylint": 1, "pypi": [1, 4], "pyproject": 1, "pytest": 1, "pytestarg": 1, "pytesten": 1, "python": [1, 4, 7, 130, 134, 180, 185], "python3": 1, "pytorch": [10, 12, 23, 28, 30, 31, 42, 46, 49, 80, 89, 90, 101, 108, 114, 117, 120, 125, 155, 170, 180, 181, 183, 184, 185], "q": [108, 129], "q_1": 129, "q_2": 129, "qinbinli": 69, "qr": 159, "quadrupl": 73, "quantil": 153, "quantiti": 164, "queri": 148, "quickli": 180, "quickstart": 4, "quintessenti": 156, "quotat": 1, "quotestyl": 1, "r": 173, "rais": [10, 11, 13, 14, 23, 28, 29, 30, 31, 36, 38, 39, 41, 44, 45, 46, 49, 63, 67, 76, 77, 78, 80, 83, 85, 86, 87, 89, 90, 91, 101, 106, 142, 153, 157, 164, 167, 168, 170, 176, 180, 182], "rand": 182, "randint": 182, "random": [8, 49, 56, 59, 73, 108, 130, 134, 146, 166, 180, 182, 186], "random_st": 185, "randomli": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52], "rang": [4, 78, 182, 186], "rank": 108, "rank_estim": 108, "rapid": 180, "rate": [4, 23, 52, 71, 93, 129, 153, 161, 164, 180, 187], "rather": [1, 13, 19, 38, 86, 87, 97, 153, 170, 180, 182], "ratio": [128, 129, 180], "raw": [142, 153, 164], "rbf": 73, "rdp": 128, "re": [1, 10, 21, 23, 28, 36, 38, 52, 73, 86, 87, 89, 90, 98, 130, 134, 140, 152, 153, 154, 155, 156, 159, 162, 164, 171, 176], "read": 180, "readi": [140, 180], "real": [13, 118, 125], "realiti": 125, "reason": [10, 12, 108, 146, 164], "recal": [13, 80], "receiv": [17, 21, 23, 25, 32, 45, 48, 49, 51, 76, 83, 101, 103, 104, 147, 154, 155, 156, 164, 169], "recent": [4, 22, 23, 27, 35, 44, 45, 140], "recip": [94, 180], "recogn": 11, "recommend": [1, 7, 49, 156, 164], "reconstitut": 113, "reconstruct": [66, 94, 108, 124], "record": [42, 140], "recov": 108, "redirect": 180, "redistribut": [145, 162], "reduc": [49, 69, 71, 74, 80, 108, 125, 156, 158], "reduce_dimens": [121, 125], "reduct": [31, 80, 108, 125], "ref": [130, 134], "ref_image_shap": 180, "refer": [4, 23, 47, 51, 75, 85, 160, 169], "reflect": [101, 164], "reformat": 49, "regardless": [10, 79, 80, 152, 171], "regist": [94, 96, 180], "regular": [48, 101, 103, 155], "regularized_q_k": 73, "reiniti": 184, "rel": [69, 79, 80, 108, 186], "relat": [4, 37, 51, 85, 129, 153, 160], "releas": [1, 180], "relev": [21, 23, 24, 28, 30, 38, 46, 48, 51, 52, 63, 86, 87, 89, 90, 104, 151], "reli": [13, 34, 113, 114, 171], "reload": [31, 180], "reload_modul": [8, 166, 180], "remain": [11, 14, 69, 80, 99, 109, 153, 156, 158], "remaind": [56, 79, 105], "rememb": [1, 7], "remot": 1, "remov": [4, 14, 79, 80, 96], "removablehandl": 96, "remove_hook": [92, 96], "rep_epoch": 36, "rep_step": 36, "repack": 164, "reparameter": 94, "repeat": 182, "repeatedli": 173, "replac": [16, 18, 19, 48, 84, 128, 129, 180, 184], "replic": 101, "report": [8, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 79, 80, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148], "report_centralized_ev": [135, 140], "reports_manag": [8, 130], "reportsmanag": [8, 130, 133, 187], "repositori": [1, 60], "repres": [13, 14, 16, 18, 19, 22, 23, 25, 27, 30, 31, 36, 39, 44, 45, 46, 51, 66, 76, 77, 78, 80, 83, 84, 94, 95, 97, 108, 110, 117, 120, 124, 147, 151, 155, 163, 164, 169, 170, 173, 176, 180], "represent": [4, 20, 36, 47, 71, 94, 98, 108, 169, 176], "reproduc": [174, 185], "request": [21, 63, 86, 87, 101, 137, 138, 139, 140, 141, 143, 144, 146, 148, 151, 152, 167, 182], "requir": [11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 28, 29, 34, 35, 36, 37, 47, 49, 50, 51, 52, 71, 79, 80, 86, 87, 89, 90, 99, 108, 110, 117, 120, 129, 138, 146, 147, 152, 153, 154, 155, 157, 159, 162, 170, 173, 182, 184], "requires_grad": 97, "resampl": [17, 182], "research": [1, 4], "resembl": 97, "reserv": 56, "reset": [17, 23, 27, 44, 45, 76, 77, 78, 80, 82, 83, 143, 160, 166, 176, 180], "reset_beta_prior": [150, 160], "reset_frequ": 143, "reset_sampl": [15, 17], "reshap": 108, "resili": 140, "resolut": 180, "respect": [7, 22, 25, 27, 28, 36, 38, 76, 77, 78, 79, 80, 83, 85, 89, 90, 99, 101, 103, 104, 109, 128, 174], "respond": [142, 145], "respons": [13, 23, 41, 106, 114, 117, 120, 140, 142, 143, 147, 159], "rest": 69, "restart": [11, 13, 14, 137, 138, 139, 140, 141, 143, 144, 146, 148], "restor": [94, 172, 185], "restore_random_st": [8, 166, 185], "restrict": [14, 153, 164], "result": [31, 78, 79, 80, 108, 117, 130, 134, 140, 141, 142, 143, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 173, 184, 185, 186], "resum": [130, 134], "retain": [63, 120, 155], "retri": 182, "retriev": [13, 141, 144, 147, 173], "return": [7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187], "return_mu_onli": 123, "reus": [28, 36, 89, 90, 94, 130, 134], "right": [4, 13, 24, 36, 94, 108, 138, 159], "robust": [28, 38, 89, 90], "roc_auc": [76, 83], "rocauc": [8, 76, 83], "root": [56, 57], "round": [7, 8, 13, 14, 21, 23, 24, 25, 27, 28, 30, 31, 32, 36, 38, 39, 44, 45, 47, 48, 49, 50, 51, 52, 74, 80, 86, 87, 89, 90, 93, 114, 119, 128, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 180], "rout": [13, 28, 38, 48, 63, 89, 90, 98], "row": [57, 60, 108, 159], "rpc": 146, "rtype": [94, 173, 180], "rule": 1, "run": [1, 13, 17, 28, 31, 36, 49, 89, 90, 93, 94, 105, 110, 129, 130, 132, 134, 140, 141, 142, 144, 147, 148, 157, 164, 173, 180, 184, 185], "run_id": [130, 132], "runtim": 49, "runtimeerror": [86, 87, 89, 90], "rxrx": 56, "rxrx1": [8, 54], "s0031320323002078": [51, 74], "s_1": 159, "s_2": 159, "s_i": 159, "s_n": 159, "safe_global_model": [86, 89, 90], "said": 1, "same": [7, 17, 28, 35, 38, 39, 42, 49, 71, 73, 79, 80, 82, 85, 89, 90, 94, 101, 102, 103, 104, 105, 114, 126, 129, 130, 134, 140, 143, 146, 155, 156, 160, 163, 167, 169, 170, 173, 180, 182], "sampl": [15, 16, 17, 18, 19, 23, 30, 31, 36, 46, 49, 56, 71, 79, 80, 81, 92, 94, 95, 98, 101, 103, 104, 118, 123, 128, 129, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 160, 162, 163, 164, 169, 171, 173, 174, 180, 182, 186], "sample_al": [15, 16], "sample_count": [141, 144], "sample_fract": [15, 16, 18, 19, 153], "sample_percentag": 186, "sample_s": 129, "sampler": [8, 59, 166, 174], "samples_per_cli": 169, "sampling_ratio": 129, "sampling_strategi": 129, "samplingstrategi": [8, 127, 129], "satisfi": [86, 87, 89, 90, 182], "save": [10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 60, 74, 80, 89, 90, 98, 123, 125, 130, 132, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 171, 172, 173, 185, 187], "save_attribut": [166, 187], "save_checkpoint": [9, 14], "save_client_st": [9, 14], "save_for_backward": 173, "save_for_forward": 173, "save_model": [20, 31], "save_random_st": [8, 166, 185], "save_server_st": [9, 14], "save_st": [9, 11, 13, 14], "save_to_json": [54, 58, 60], "save_to_pkl": [54, 55, 57], "scaffold": [4, 8, 13, 23, 52, 117, 148, 150], "scaffold_cli": [8, 20], "scaffold_serv": [8, 135], "scaffoldcli": [8, 20, 52], "scaffoldserv": [8, 135, 148], "scaffoldservercheckpointandstatemodul": [8, 9, 13, 148], "scalar": [10, 11, 12, 13, 23, 27, 28, 30, 31, 36, 39, 46, 48, 49, 66, 67, 76, 77, 78, 80, 83, 89, 90, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "scale": [49, 69, 73, 75, 163, 164, 180], "scaling_coeffici": 164, "scenario": [23, 38, 96], "schedul": [23, 49, 180, 187], "scheme": [154, 155, 159, 160, 171], "scienc": [51, 74], "sciencedirect": [51, 74], "scikit": [76, 83], "scope": [130, 131, 132, 134, 180], "score": [10, 12, 13, 76, 78, 79, 80, 83, 84, 101, 103, 104, 118, 120, 160, 173], "score_gen_funct": 120, "scoregenfunct": 120, "script": [7, 56, 60], "second": [11, 23, 25, 27, 28, 35, 38, 41, 44, 45, 47, 49, 51, 52, 70, 72, 73, 74, 79, 106, 110, 140, 141, 142, 143, 144, 145, 148, 152, 153, 160, 161, 169, 181], "second_featur": 72, "second_feature_extractor": [106, 109], "second_tensor": 106, "section": [1, 169, 173], "secur": 4, "see": [1, 49, 63, 72, 76, 79, 80, 83, 101, 108, 114, 117, 120, 129, 130, 134, 140, 145, 155, 156, 158, 159, 169, 173, 180, 185], "seed": [56, 59, 173, 185, 186], "seem": [10, 14, 49], "seen": [10, 78, 156, 158, 172], "segment": [49, 80, 174, 180], "select": [16, 17, 18, 19, 50, 56, 114, 117, 118, 119, 120, 129, 140, 141, 142, 144, 147, 170, 173, 186], "select_by_indic": [8, 166, 170], "select_by_percentag": [111, 118], "select_by_threshold": [111, 118], "select_drift_mor": 118, "select_layers_by_percentag": [8, 111, 118], "select_layers_by_threshold": [8, 111, 118], "select_paramet": [111, 114, 119, 120], "select_scores_and_sample_mask": [8, 111, 118], "select_zeroeth_el": [8, 166, 173], "selected_indic": 170, "self": [7, 10, 12, 14, 17, 21, 22, 23, 24, 27, 29, 33, 38, 41, 42, 44, 45, 46, 49, 50, 63, 79, 80, 106, 108, 110, 118, 130, 134, 157, 164, 167, 168, 169, 170, 171, 182], "semant": 159, "send": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 89, 90, 113, 115, 118, 123, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 154, 155, 159, 167, 172], "sens": [31, 80], "sensibl": 14, "sent": [21, 23, 24, 28, 29, 30, 31, 38, 42, 46, 48, 49, 50, 52, 72, 86, 87, 89, 90, 101, 103, 104, 113, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 156, 157, 158, 160, 162, 164], "sentri": 1, "seongjun": 60, "separ": [4, 7, 23, 27, 41, 44, 45, 48, 74, 79, 80, 117, 131, 154, 173, 180], "sequenc": [1, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 78, 82, 104, 128, 129, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 180], "sequenti": [38, 96, 105, 110], "sequential_forward": [92, 105, 110], "sequential_split_model": [8, 92], "sequentiallysplitexchangebasemodel": [8, 34, 92, 97, 110], "sequentiallysplitmodel": [8, 38, 92, 105, 110], "seri": 60, "serial": [49, 66], "serializ": 187, "serializableobjectsnapshott": [8, 166, 187], "serv": [21, 28, 33, 89, 90], "server": [4, 8, 11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 74, 86, 87, 89, 90, 93, 97, 99, 109, 110, 112, 114, 115, 118, 128, 129, 130, 131, 132, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 172, 173], "server_": 14, "server_address": 7, "server_control_vari": 164, "server_learning_r": 153, "server_model": 145, "server_model_weight": 164, "server_modul": [8, 9], "server_nam": [14, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148], "server_noise_multipli": 141, "server_paramet": 13, "server_round": [140, 143, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165], "server_upd": [128, 129], "serverconfig": 7, "serverstatecheckpoint": [8, 9, 13, 14], "set": [1, 4, 7, 10, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 69, 70, 72, 73, 75, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90, 93, 96, 97, 98, 103, 104, 106, 108, 109, 112, 113, 114, 115, 117, 119, 120, 125, 129, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 168, 169, 170, 173, 174, 180, 182, 185, 186], "set_all_random_se": [8, 166, 185], "set_attribut": [9, 14], "set_checkpoint_path": [9, 14], "set_config": 63, "set_data_mean": [92, 108], "set_fit_request": [61, 63], "set_initial_global_tensor": [20, 28, 38, 86, 89, 90], "set_len": 180, "set_nnunet_env": [8, 166, 180], "set_optim": [20, 22, 23, 28, 29, 36, 86, 89, 90], "set_pack_losses_with_val_metr": [8, 166, 167], "set_paramet": [8, 20, 21, 23, 24, 28, 30, 31, 38, 46, 48, 50, 52, 86, 87, 88, 89, 90], "set_principal_compon": [92, 108], "set_transform_request": [61, 63], "setup": [1, 7, 28, 31, 35, 36, 42, 48, 50, 89, 90, 137, 138, 139, 140, 141, 143, 144, 146, 148, 169], "setup_cli": [20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 52, 86, 88, 89, 90], "setup_context": [166, 173], "setup_opacus_object": [20, 42, 184], "setup_privacy_account": [135, 141, 144], "sever": [4, 80], "sgd": [7, 129, 144, 148, 184], "shape": [49, 69, 70, 73, 74, 76, 79, 80, 83, 85, 94, 96, 99, 101, 104, 105, 109, 110, 117, 120, 155, 160, 169, 171, 180, 181], "share": [4, 22, 32, 34, 36, 126, 137, 159, 169], "shift": 4, "short": [118, 130, 134], "should": [1, 7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 63, 70, 71, 73, 74, 75, 79, 80, 85, 86, 87, 89, 90, 91, 94, 96, 99, 101, 103, 104, 108, 110, 114, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 157, 158, 163, 165, 169, 170, 171, 172, 173, 176, 180, 182, 187], "should_layer_be_exclud": [111, 114], "should_module_be_exclud": [111, 114], "should_stop": [166, 172], "shouldn": [130, 134], "show": 1, "shown": [4, 35], "shuffl": 59, "shut": [23, 49, 133], "shutdown": [7, 8, 20, 23, 49, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 146, 148, 166, 180], "shutdown_dataload": [20, 49], "side": [1, 4, 11, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 74, 86, 87, 89, 90, 93, 101, 115, 129, 138, 140, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 159, 160, 161, 162, 164], "sigint": 180, "sigma": [129, 163, 169], "sigma_phi": 71, "sigma_q": 71, "sigmoid": [101, 103, 104, 160], "sigmoid_invers": [8, 166, 173], "signal": [17, 157, 180], "signal_for_typ": [150, 157], "signalfortypeerror": [8, 150, 157], "signalfortypeexcept": 157, "signatur": 173, "signific": 4, "significantli": [4, 49], "sigterm": 180, "silent": [94, 180], "silo": 48, "sim": [70, 94, 169], "simclr": [69, 98], "similar": [4, 25, 36, 41, 47, 49, 69, 70, 72, 74, 94, 98, 159, 182], "similarli": 159, "simpl": [4, 16, 18, 19, 21, 131, 145, 152, 164, 169], "simpleclientmanag": [7, 16, 17], "simplemetr": [8, 76, 83], "simplest": [22, 23], "simpli": [7, 11, 13, 25, 27, 28, 29, 33, 36, 38, 39, 44, 46, 47, 51, 84, 89, 90, 94, 99, 109, 113, 140, 143, 153, 156, 158, 160, 164, 170, 173], "simultan": [28, 38, 89, 90], "sinc": [29, 31, 46, 50, 94, 126, 142, 154, 159, 160, 172, 180], "singl": [13, 21, 22, 23, 29, 31, 41, 49, 52, 63, 79, 80, 86, 87, 104, 106, 128, 147, 163, 176, 180, 187], "singlethreadedaugment": 180, "singleton": [104, 187], "singletonsnapshott": [8, 166, 187], "singular": [108, 159], "singular_valu": 108, "sirna_id": 57, "sit": [140, 143], "site": 57, "six": 101, "size": [27, 56, 59, 70, 71, 73, 79, 80, 85, 101, 103, 104, 117, 128, 129, 144, 148, 153, 157, 158, 159, 163, 167, 169, 171, 174, 180, 182, 186], "size_of_model_param": 117, "skew": [169, 182, 186], "skin": 59, "skin_canc": [8, 54], "skin_cancer_feder": 60, "sklearn": [63, 76, 83], "slice": 170, "slight": 108, "slightli": 36, "small": [76, 83, 108, 182], "smaller": [78, 159, 182, 186], "smallest_final_magnitude_scor": [8, 111, 118], "smallest_increase_in_magnitude_scor": [8, 111, 118], "smallest_magnitude_change_scor": [8, 111, 118], "smoke": 1, "smoke_test": 1, "smooth": [71, 78], "smoothing_factor": 78, "snapshot": [14, 172, 187], "snapshot_attr": [11, 13, 14], "snapshott": [8, 14, 166], "so": [1, 10, 12, 13, 14, 17, 21, 23, 28, 31, 33, 38, 39, 46, 49, 50, 86, 87, 89, 90, 108, 114, 125, 130, 134, 140, 146, 153, 154, 155, 160, 167, 168, 172, 173, 180, 182, 186], "soft": [76, 80, 83, 84, 85], "softmax": 169, "solver": 48, "some": [1, 11, 19, 29, 31, 42, 49, 63, 85, 94, 106, 120, 129, 130, 134, 140, 146, 153, 154, 155, 159, 163, 164, 180, 182], "someth": [1, 23, 28, 38, 41, 44, 45, 101, 185], "sometim": [131, 132], "soon": 4, "sophist": 160, "sort": [96, 173], "sourc": [1, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "source_plan": 180, "source_plans_nam": 49, "space": [37, 51, 94, 99, 101, 108, 124], "spars": [4, 13, 33, 35, 108, 117, 120, 155], "sparse_coo_parameter_exchang": [8, 111], "sparse_coo_tensor": [117, 120, 155], "sparsecooparameterexchang": [8, 111, 120], "sparsecooparameterpack": [8, 111, 117], "sparsecooservercheckpointandstatemodul": [8, 9, 13], "sparsiti": 120, "sparsity_level": 120, "spatial": [76, 83, 180], "spatial_dimens": [76, 83], "spawn": [49, 180], "special": [13, 41, 112, 154, 155], "specif": [1, 4, 10, 12, 13, 14, 22, 23, 25, 33, 47, 49, 51, 60, 80, 96, 104, 105, 110, 112, 113, 114, 120, 123, 129, 159, 162, 164, 170, 171, 180], "specifi": [7, 10, 12, 14, 23, 30, 35, 36, 49, 52, 56, 57, 67, 79, 80, 84, 93, 94, 96, 105, 106, 108, 110, 114, 129, 130, 134, 143, 146, 148, 157, 158, 167, 172, 174, 180, 186], "spite": 153, "split": [37, 51, 56, 59, 99, 105, 106, 110, 117, 126, 153, 174], "split_data_and_target": [8, 166, 174], "split_model_weights_and_clipping_bit": [150, 153], "split_perc": 59, "sqrt": 153, "squar": 24, "ssltensordataset": [8, 166, 170], "stabil": 104, "stabl": [76, 83, 101, 108, 117, 120, 155, 185], "stack": [31, 38], "stage": [30, 98, 110, 169], "stai": [4, 28, 38, 89, 90, 105], "standalon": 91, "standard": [1, 4, 46, 49, 51, 94, 110, 124, 129, 146, 152, 153, 163, 164, 169, 184], "standard_normal_kl_divergence_loss": [122, 124], "start": [1, 4, 25, 47, 49, 50, 51, 74, 96, 118, 130, 134, 140, 159, 169, 172, 180], "start_client": 7, "start_run": [8, 130, 134], "start_serv": 7, "startonnewlin": 1, "state": [1, 4, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76, 77, 78, 82, 83, 86, 87, 89, 90, 93, 109, 117, 126, 129, 137, 138, 139, 140, 141, 143, 144, 146, 148, 151, 167, 172, 181, 183, 185, 187], "state_checkpoint": [8, 9, 11, 13, 172], "state_dict": [12, 113, 114, 118], "statecheckpoint": [8, 9, 14], "static": [1, 30, 66, 67, 98, 114, 117, 171, 173, 176], "staticmethod": 173, "statist": [13, 39, 73, 129], "std": [71, 128, 163], "stdout": [49, 180], "step": [7, 8, 13, 21, 22, 23, 25, 27, 28, 29, 36, 39, 41, 42, 44, 45, 47, 49, 51, 52, 71, 78, 86, 87, 89, 90, 130, 131, 132, 133, 134, 144, 148, 155, 157, 158, 164, 168, 171, 172, 180], "steps_per_lr": 180, "steptyp": [130, 134], "still": [137, 139, 152, 160, 162, 172], "stochast": 173, "stop": [14, 39, 172], "stopiter": 180, "stopper": 172, "storag": [50, 99], "store": [13, 14, 21, 23, 24, 27, 28, 29, 32, 38, 44, 45, 47, 50, 78, 79, 80, 86, 87, 89, 90, 93, 96, 99, 105, 106, 108, 109, 110, 129, 173, 176], "store_initial_model": 50, "str": [1, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 63, 66, 67, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 95, 96, 99, 101, 106, 107, 109, 110, 114, 117, 118, 120, 126, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 187], "straight": 173, "straightforward": [32, 97], "strap": [38, 39, 42, 140], "strategi": [4, 7, 8, 12, 21, 28, 33, 48, 50, 52, 86, 87, 129, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148], "strategy_with_pol": [8, 150], "strategywithpol": [8, 140, 150, 152, 165], "stream": 180, "streamtologg": [8, 166, 180], "strict": 1, "strictli": [1, 4, 22, 169, 170], "stride": 101, "string": [1, 14, 22, 23, 28, 36, 49, 61, 63, 66, 67, 76, 77, 78, 80, 82, 83, 89, 90, 130, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 168, 180, 182, 187], "string_columns_transform": [8, 61], "stringio": 180, "stringsnapshott": [8, 166, 187], "strongli": 1, "structur": [14, 79, 94, 97], "stuff": 180, "style": [1, 169], "sub": 63, "subclass": [22, 23, 24, 25, 34, 36, 37, 41, 49, 50, 52, 80, 86, 87, 94, 169, 173, 176, 180], "subfold": 174, "subject": 186, "submit": [1, 4], "submodul": [8, 38, 54], "subpackag": 180, "subprocess": 180, "subsampl": [166, 170, 174, 182, 186], "subsequ": [17, 31, 46, 47, 78, 146, 180], "subset": [1, 13, 23, 30, 50, 51, 56, 114, 118, 119, 120, 129, 154, 155, 170], "subspac": [108, 159], "subspace1": 159, "subspace2": 159, "subtract": [52, 108, 164], "success": [140, 142, 143, 164], "successfulli": 14, "suffici": [108, 129], "suggest": [28, 48, 159], "suit": 1, "sum": [24, 74, 80, 92, 106, 157, 158, 160, 163, 173], "summari": [130, 131, 132, 134], "summat": 106, "super": [131, 157], "supervis": [23, 49, 146, 170, 171, 180], "support": [4, 46, 63, 95, 102, 118, 162, 169, 170, 171, 182], "suppos": 160, "sure": [130, 134, 182], "surfac": [10, 14], "svd": [108, 159], "svd_lowrank": 108, "svd_merg": 159, "swallow": [10, 14], "switch": 36, "sync": [38, 48], "synthet": [169, 170], "synthetic_1_1": 169, "syntheticdataset": [8, 166, 170, 182], "syntheticfedproxdataset": [8, 166, 169], "syntheticiidfedproxdataset": [8, 166, 169], "syntheticnoniidfedproxdataset": [8, 166, 169], "system": [4, 7, 142, 152, 156, 157, 158, 161, 162, 164], "t": [1, 11, 14, 28, 31, 32, 38, 39, 78, 79, 80, 85, 89, 90, 108, 115, 117, 119, 130, 134, 137, 139, 159, 167, 168, 169, 170, 173, 180, 182, 186, 187], "t_1": 129, "t_2": 129, "tab_features_info_encod": [8, 61], "tab_features_preprocessor": [8, 61], "tabl": 1, "tabular": [66, 67], "tabular_data_cli": [8, 20], "tabular_featur": [8, 61], "tabular_feature_alignment_serv": [8, 135], "tabular_typ": [8, 61], "tabularfeatur": [8, 61, 66], "tabulartyp": [8, 61, 66, 67], "tag": [130, 134, 153], "tailor": 112, "take": [10, 94, 96, 99, 106, 108, 109, 113, 114, 117, 120, 130, 134, 154, 155, 159, 162, 164, 169, 180], "taken": [52, 129], "tandem": [28, 89, 90], "target": [1, 11, 12, 14, 21, 22, 23, 25, 27, 28, 29, 36, 38, 41, 44, 45, 47, 48, 49, 51, 59, 71, 73, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 101, 103, 104, 124, 126, 137, 139, 147, 167, 170, 174, 180, 181, 183], "target_is_grad_sample_modul": 12, "target_model": [12, 75], "target_shap": 85, "target_transform": [78, 170, 174], "targets_1": 78, "targets_2": 78, "task": [4, 31, 76, 83, 162, 171, 173], "task01_braintumour": [166, 179], "task02_heart": [166, 179], "task03_liv": [166, 179], "task04_hippocampu": [166, 179], "task05_prost": [166, 179], "task06_lung": [166, 179], "task07_pancrea": [166, 179], "task08_hepaticvessel": [166, 179], "task09_spleen": [166, 179], "task10_colon": [166, 179], "tau": 161, "team": [1, 130, 134], "temperatur": [47, 51, 69, 72, 74, 169], "templat": 1, "tensor": [21, 22, 23, 24, 25, 27, 28, 29, 31, 36, 38, 41, 44, 45, 47, 48, 49, 51, 57, 59, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 117, 118, 120, 123, 124, 155, 160, 167, 169, 170, 171, 173, 174, 176, 180, 181, 182, 185], "tensor1": 85, "tensor2": 85, "tensor_dict": 180, "tensor_list": 180, "tensordataset": [8, 56, 59, 166, 169, 170, 171, 174, 186], "tensorflow": 129, "term": [4, 28, 38, 48, 89, 90, 172], "termin": [7, 49, 140, 180], "test": [23, 30, 31, 46, 49, 56, 57, 59, 71, 77, 82, 108, 145, 162, 166, 170, 174, 175, 180, 182], "test_": 1, "test_best_checkpoint": 1, "test_load": [46, 86, 88, 89, 90], "test_prefix": [76, 77], "test_transform": 59, "text": [24, 52, 63, 78, 93, 94, 164, 169], "textcolumntransform": [8, 61, 63], "textfeaturetransform": 63, "textmulticolumntransform": [8, 61, 63], "than": [1, 10, 13, 19, 23, 27, 28, 29, 30, 38, 41, 44, 45, 46, 82, 86, 87, 97, 101, 119, 120, 146, 152, 153, 159, 162, 170, 180, 182], "thank": 1, "thei": [1, 4, 11, 13, 21, 22, 23, 24, 28, 29, 30, 31, 41, 46, 49, 52, 79, 80, 86, 87, 89, 90, 94, 105, 110, 117, 120, 128, 129, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 155, 156, 158, 164, 167, 169, 170, 171, 173, 176, 180], "them": [4, 14, 16, 22, 27, 28, 38, 42, 44, 45, 51, 89, 90, 94, 96, 106, 113, 117, 120, 153, 155, 157, 158, 160, 171, 173, 180, 187], "themselv": [160, 170, 173, 180], "theorem": 129, "theoret": 159, "thereaft": [24, 164], "therebi": [152, 164], "therefor": [1, 49, 130, 132, 134, 164, 173, 180], "therein": 79, "thereof": [23, 30], "theta": 160, "theta_cli": 153, "theta_serv": 153, "thi": [1, 4, 7, 10, 11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 98, 99, 101, 103, 104, 106, 108, 110, 112, 114, 117, 118, 119, 120, 124, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 182, 184, 185, 186, 187], "thin": [76, 78, 83], "thing": [1, 23, 49, 117, 140, 141, 144, 146, 148], "third": [140, 142, 143], "thorough": 4, "those": [1, 4, 16, 28, 38, 48, 76, 83, 85, 89, 90, 101, 103, 104, 106, 110, 114, 117, 118, 152, 164, 169, 180], "though": [1, 173], "thought": 164, "thread": 56, "three": [11, 155, 171], "threshold": [39, 76, 79, 80, 83, 84, 114, 118, 120, 153, 164, 180, 182], "threshold_tensor": [8, 76, 84], "through": [1, 4, 10, 24, 28, 31, 32, 33, 34, 36, 38, 39, 41, 47, 89, 90, 93, 94, 98, 99, 101, 106, 109, 119, 125, 130, 134, 146, 153, 164, 173, 182, 186], "throughout": [23, 30, 31, 36, 128], "throw": [10, 11, 13, 14, 39, 101, 130, 134, 137, 138, 139, 140, 141, 143, 144, 146, 148, 170, 182], "thrown": [11, 14, 49, 67, 101, 108, 157, 168], "thu": [46, 157, 159], "ticket": [4, 35], "time": [1, 14, 17, 23, 28, 49, 50, 52, 78, 89, 90, 125, 129, 140, 141, 142, 143, 144, 145, 148, 167, 170, 180, 182, 185], "timeout": [140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 159, 162, 164], "tmetric": [76, 83], "tn": [79, 80], "to_client": 7, "to_json": [61, 66], "togeth": [21, 28, 31, 50, 52, 80, 86, 87, 89, 90, 94, 106, 151, 164], "token": 170, "toml": 1, "ton": 173, "tonumpi": [8, 166, 174], "too": [29, 108], "tool": 1, "top": [57, 80, 108], "top_sirna_id": 57, "torch": [7, 10, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 59, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 114, 117, 120, 123, 124, 126, 155, 167, 169, 170, 171, 173, 176, 180, 181, 182, 185], "torch_stat": 185, "torchcheckpoint": 10, "torchfeaturetyp": [21, 23, 27, 28, 38, 41, 44, 45, 48, 89, 90], "torchinputtyp": [22, 23, 25, 27, 28, 29, 36, 38, 41, 44, 45, 47, 49, 51, 89, 90, 167], "torchmetr": [8, 76, 83], "torchmodul": 114, "torchmodulecheckpoint": [8, 9, 10], "torchmodulesnapshott": [8, 166, 187], "torchpredtyp": [21, 22, 23, 27, 28, 38, 41, 44, 45, 48, 49, 82, 89, 90], "torchshap": 104, "torchtargettyp": [21, 22, 23, 27, 28, 41, 44, 45, 48, 49, 82, 89, 90, 167], "torchtransformfunct": 78, "total": [25, 47, 48, 49, 51, 81, 124, 128, 129, 130, 131, 132, 134, 141, 142, 144, 152, 156, 157, 158, 161, 162, 163, 164, 180, 182, 186], "total_client_count_by_metr": 81, "total_client_weight": 163, "total_exampl": 81, "total_loss": [25, 47, 51], "total_sampl": [141, 144, 148], "total_step": 23, "toward": 1, "tp": [79, 80, 84], "tqdm": [21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 52], "track": [21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 159], "track_running_stat": 104, "tradit": 11, "train": [4, 7, 11, 12, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 71, 74, 79, 80, 82, 86, 87, 89, 90, 93, 94, 95, 98, 99, 101, 103, 104, 108, 109, 114, 118, 123, 124, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 180, 182, 185], "train_by_epoch": [20, 23, 39], "train_by_step": [20, 23], "train_data_tensor": 31, "train_fedrep_by_epoch": [20, 36], "train_fedrep_by_step": [20, 36], "train_fract": 56, "train_kernel": [68, 71], "train_load": [7, 86, 88, 89, 90], "train_loop_checkpoint_dir": 172, "train_step": [8, 20, 22, 23, 28, 29, 36, 40, 41, 49, 86, 87, 89, 90], "train_transform": 59, "train_val_split": 56, "trainer": 49, "trainingloss": [8, 21, 22, 23, 27, 28, 29, 36, 38, 41, 44, 45, 47, 48, 49, 52, 86, 87, 88, 89, 90, 166, 176], "trajectori": [21, 156], "transfer": [23, 28, 30, 31, 38, 46, 50, 74, 89, 90, 114, 128], "transform": [23, 41, 49, 52, 56, 59, 61, 63, 69, 78, 85, 98, 101, 103, 104, 123, 125, 169, 170, 174], "transform_gradi": [20, 23, 40, 41, 49, 52, 86, 88], "transform_target": [20, 23, 86, 88], "transformed_featur": 69, "transformermixin": 63, "transformsmetr": [8, 76, 78], "transpar": 182, "transpos": [101, 159], "travers": 96, "treat": [79, 104, 128, 131, 132, 180], "treatment": [13, 144, 154, 155], "tree": [169, 180], "trick": 94, "tripl": 1, "trivial": [1, 170], "true": [1, 10, 11, 14, 23, 24, 27, 28, 29, 33, 38, 44, 45, 46, 48, 49, 52, 63, 71, 73, 79, 80, 84, 89, 90, 93, 96, 97, 98, 101, 102, 103, 104, 108, 118, 123, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 172, 173, 180, 185], "true_neg": [76, 79, 80], "true_posit": [76, 79, 80, 84], "truth": [21, 22, 23, 25, 27, 28, 29, 38, 44, 45, 47, 48, 49, 51, 76, 77, 78, 82, 83, 89, 90, 137, 138, 139, 140, 141, 143, 144, 146, 148], "try": [1, 10, 14, 39, 73, 129, 130, 134, 153], "tst": 71, "tune": [11, 98], "tupl": [1, 7, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 51, 56, 59, 71, 72, 74, 76, 80, 81, 83, 85, 86, 87, 88, 89, 90, 94, 99, 101, 105, 106, 108, 109, 110, 114, 115, 117, 118, 119, 120, 124, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 171, 173, 174, 182, 184, 185], "turn": [153, 156, 158, 159, 164], "tutori": 129, "twin": [4, 22, 93], "two": [4, 7, 11, 23, 28, 35, 36, 38, 42, 49, 52, 70, 71, 74, 79, 80, 85, 89, 90, 99, 101, 103, 104, 106, 110, 114, 117, 120, 130, 134, 142, 146, 152, 155, 159, 164, 168, 169, 173, 181], "two_layer_map_inputs_to_output": [166, 169], "type": [1, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187], "type_data": 57, "typeerror": [23, 41, 44, 45, 91, 167, 170], "typevar": [115, 117, 119, 186], "typic": [23, 49, 96], "typing1": 1, "typing2": 1, "typing_stuff": 1, "u": [108, 159], "u_1": 159, "u_2": 159, "u_i": 159, "u_k": 169, "u_n": 159, "uf": 60, "ui": [130, 134], "un": 94, "unaffect": 185, "unbias": 71, "uncategor": [130, 134], "unchang": [63, 79, 80], "undefin": [79, 84], "under": [14, 27, 28, 38, 44, 45, 49, 76, 83, 93, 99, 104, 106, 108, 109, 130, 134, 184], "underli": [14, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 76, 78, 83, 93, 173], "underpin": 174, "undo": 185, "unfreeze_base_modul": [92, 97], "unfreeze_head_modul": [92, 97], "unfrozen": 97, "unifi": 171, "uniform": [151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 180, 182], "uniform_evaluate_metrics_aggregation_fn": [8, 76, 81], "uniform_metric_aggreg": [8, 76, 81], "uniform_normalize_metr": [8, 76, 81], "uniformli": [81, 163, 164], "unintend": 1, "unintention": 1, "union": [1, 25, 28, 29, 30, 36, 47, 51, 66, 88, 89, 90, 158, 161], "uniqu": [4, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 130, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 180, 185], "unique_label": [182, 186], "unit": [1, 73], "unitari": 159, "unittestarg": 1, "unittesten": 1, "unknown": 67, "unless": [30, 49, 145], "unlik": [4, 12, 13, 38, 41, 48, 182], "unpack": [13, 21, 24, 28, 52, 86, 87, 89, 90, 94, 115, 117, 124, 171], "unpack_input_condit": [94, 166, 171], "unpack_model_output": [122, 124], "unpack_paramet": [111, 115, 117, 119], "unrespons": 148, "unseen": 4, "unset_all_random_se": [8, 166, 185], "unspecifi": [130, 134], "unstructur": 13, "unsuccess": [140, 143], "until": [1, 17, 52, 182], "unus": [49, 79, 162], "unweight": [4, 47, 151, 152, 153, 154, 155, 156, 158, 160, 162, 163, 164], "unweighted_aggreg": [150, 154, 155], "unwound": 50, "up": [1, 4, 11, 21, 27, 28, 36, 39, 42, 44, 46, 50, 80, 86, 87, 89, 90, 95, 131, 140, 141, 144, 153, 159, 169, 173, 182, 186], "updat": [1, 4, 8, 14, 21, 22, 23, 24, 27, 28, 29, 38, 41, 44, 45, 48, 49, 52, 63, 76, 77, 78, 79, 80, 82, 83, 89, 90, 93, 101, 103, 104, 128, 129, 130, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 153, 156, 157, 158, 160, 163, 164, 166, 167, 176], "update_after_step": [20, 22, 23, 26, 27, 43, 44, 45], "update_after_train": [8, 20, 21, 23, 25, 47, 51, 52, 86, 87, 88], "update_alpha": [92, 93], "update_before_epoch": [20, 23], "update_before_fit": [135, 140, 146], "update_before_step": [20, 23], "update_before_train": [20, 23, 25, 26, 27, 28, 32, 38, 43, 44, 45, 47, 48, 49, 51, 86, 88, 89, 90], "update_buff": [26, 27, 43, 44, 45], "update_clipping_bound": [150, 153], "update_control_vari": [20, 52], "update_current_weight": [150, 153], "update_lr_schedul": [20, 23], "update_metric_manag": [20, 23, 49], "update_target_transform": [166, 170], "update_transform": [166, 170], "update_weights_by_ga": [150, 157], "updated_param": 164, "upgrad": 1, "upload": [130, 134, 145], "upon": [13, 113], "us": [1, 4, 7, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 63, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 96, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 123, 124, 126, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 170, 171, 173, 174, 176, 180, 182, 184, 185, 186, 187], "usag": [49, 173, 182], "use_default_signal_handl": [8, 166, 180], "use_deterministic_algorithm": 185, "use_deterministic_torch_algo": 185, "user": [10, 12, 22, 23, 28, 29, 30, 31, 33, 36, 38, 39, 41, 46, 49, 50, 51, 63, 76, 80, 83, 89, 90, 94, 96, 99, 106, 108, 124, 125, 126, 152, 157, 170, 171, 182], "usernam": [130, 134], "usual": [10, 48, 129, 180], "util": [7, 8, 10, 23, 49, 63, 76, 86, 89, 93, 108], "uuid": [132, 173], "v": [1, 36, 80, 152, 159, 169], "v2": 180, "v202": [39, 161], "v_i": 73, "v_i_quadrupl": 73, "v_k": 169, "vae": [94, 123, 124], "vaeloss": [121, 122, 124], "vaeprocessor": [121, 122, 123], "val": [10, 23, 41, 59, 77, 82, 157], "val_load": [7, 86, 88, 89, 90, 167], "val_prefix": [76, 77], "val_step": [20, 23, 40, 41, 86, 89, 90], "val_transform": 59, "valid": [11, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 86, 88, 89, 90, 108, 140, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 172, 174, 175, 180, 184], "validate_on_model": [20, 30], "validation_proport": 174, "valu": [10, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 32, 36, 44, 45, 47, 49, 51, 57, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 101, 103, 104, 106, 108, 117, 118, 120, 124, 128, 129, 130, 134, 140, 141, 142, 144, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 173, 174, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188], "valueerror": [11, 13, 23, 28, 30, 36, 38, 39, 41, 44, 45, 49, 67, 89, 90, 101, 153, 164, 167, 168, 182], "vanilla": [12, 27, 28, 38, 44, 45, 48, 89, 90], "vari": [1, 79], "variabl": [42, 49, 79, 123, 168, 171, 180, 185], "varianc": [71, 94, 108, 124, 169], "variat": [4, 23, 52, 94, 117, 148, 164], "variationala": [8, 92, 94], "varieti": 23, "variou": [4, 11, 25, 50, 51, 80], "vector": [70, 79, 80, 85, 94, 98, 108, 159, 171], "venv": 1, "verbos": [49, 180], "veri": [1, 4, 21, 23, 24, 28, 30, 38, 50, 78, 86, 87, 89, 90, 137, 139, 173, 182], "verifi": [167, 168, 169], "version": [4, 23, 28, 48, 49, 63, 71, 75, 89, 90, 93, 153, 180], "vert": [24, 153, 164], "vert_2": 24, "vertic": 97, "via": [7, 10, 13, 21, 33, 86, 87, 95, 101, 103, 104, 108, 120, 128, 182, 184], "view": [159, 160], "violat": 182, "virtual": 1, "virtualenv": 1, "vjp": 173, "vote": [92, 95], "voxel": 180, "vram": 49, "vscode": 1, "w": [23, 32, 49, 129, 153, 169, 173], "w_1": 169, "w_2": 169, "w_i": 169, "wa": [10, 22, 23, 24, 27, 44, 45, 89, 90, 94, 98, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 153, 154, 155, 160, 180], "wai": [1, 7, 31, 46, 75, 80, 85, 104, 106, 152, 169, 173, 180, 186, 187], "wait": [7, 16, 140, 141, 142, 143, 144, 145, 147, 148, 164, 172], "wait_and_filt": [15, 16], "wandb": [130, 134], "wandb_init_kwarg": [130, 134], "wandb_report": [8, 23, 49, 130], "wandb_step": [130, 134], "wandb_step_typ": [130, 134], "wandbreport": [8, 130, 134], "wandbsteptyp": [8, 130, 134], "want": [11, 21, 23, 28, 33, 38, 48, 49, 56, 79, 85, 86, 87, 89, 90, 96, 130, 134, 137, 139, 140, 156, 157, 164, 165, 167, 180, 182], "warm": [4, 148], "warm_start": 148, "warmed_up_modul": [8, 121], "warmedupmodul": [8, 121, 126], "warn": [166, 188], "we": [1, 4, 7, 10, 11, 12, 13, 14, 21, 23, 24, 27, 28, 29, 30, 31, 35, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71, 73, 78, 79, 85, 86, 87, 89, 90, 91, 94, 96, 98, 105, 110, 114, 118, 129, 130, 131, 134, 140, 142, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 167, 169, 170, 173, 180, 182, 186], "weigh": [157, 158], "weight": [4, 13, 21, 23, 24, 25, 27, 28, 30, 32, 38, 41, 44, 45, 47, 48, 50, 51, 52, 72, 74, 75, 76, 78, 81, 83, 86, 87, 89, 90, 97, 98, 101, 103, 104, 113, 115, 120, 126, 128, 129, 130, 134, 141, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 173], "weight_and_aggregate_result": [150, 157], "weight_drift_loss": [8, 68], "weight_noise_multipli": 153, "weight_scor": 118, "weightdriftloss": [8, 68, 75, 87, 90], "weighted_aggreg": [150, 152, 153, 154, 155, 156, 159, 160, 161, 162], "weighted_eval_loss": [152, 153, 154, 155, 156, 159, 160, 161, 164], "weighted_train_loss": [156, 158], "weights_mapping_path": 126, "weights_nam": 117, "weights_upd": 153, "well": [1, 4, 7, 12, 57, 95, 108, 115, 145, 153, 157, 160, 169, 173], "were": [52, 78, 80, 94, 129, 154, 155, 164, 173], "what": [1, 23, 36, 49, 79, 130, 131, 134, 164], "whatev": [1, 10, 12, 33], "when": [1, 10, 12, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 66, 79, 85, 86, 87, 93, 99, 104, 106, 108, 110, 115, 117, 118, 119, 128, 130, 131, 134, 140, 146, 152, 153, 157, 158, 164, 165, 170, 171, 173, 180, 184], "whenev": 10, "where": [11, 13, 14, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 70, 71, 76, 79, 80, 83, 85, 94, 95, 96, 99, 104, 105, 108, 110, 119, 123, 128, 130, 134, 140, 143, 151, 152, 153, 154, 155, 159, 160, 164, 167, 169, 170, 176, 180, 186], "wherein": 4, "whether": [7, 10, 11, 12, 13, 21, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 71, 73, 76, 83, 86, 87, 89, 90, 93, 96, 98, 99, 102, 108, 110, 118, 129, 130, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 173, 180, 184, 185], "which": [1, 4, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 63, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 101, 103, 104, 108, 109, 112, 117, 118, 120, 125, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 180, 182, 184, 185, 186, 187], "while": [4, 35, 69, 74, 85, 93, 94, 99, 108, 109, 120, 180], "who": 154, "whole": [27, 44, 45, 95], "whose": [37, 101, 103, 104, 108, 114, 118, 120, 125, 159, 164, 181, 183], "wide": 4, "window": 180, "wise": [13, 39, 52, 163, 164], "wish": 108, "within": [12, 13, 76, 80, 83, 91, 94, 114, 117, 120, 130, 131, 132, 134, 155, 167, 170, 180], "without": [1, 16, 18, 19, 21, 69, 78, 85, 129, 130, 134, 148, 153, 167, 173], "wns823": 60, "word": [130, 134, 180], "work": [1, 31, 39, 49, 63, 114, 123, 131, 132, 140, 157, 160, 173], "worker": [56, 59, 147], "workflow": [1, 12], "would": [1, 23, 66, 79, 84, 108, 173, 185], "woven": 50, "wrap": [12, 91, 146, 167, 180, 184], "wrap_model": 184, "wrapper": [76, 78, 83, 91, 95, 137, 138, 139], "write": [166, 180], "written": 180, "wrong": [23, 36, 168], "www": [51, 56, 74], "wx": 169, "x": [49, 52, 63, 69, 71, 73, 99, 108, 117, 169, 173, 180], "x1": 70, "x2": 70, "x_": [71, 73, 169], "x_in_dim": 71, "x_lower_dim": 108, "x_out_dim": 71, "x_t": [71, 73], "xent": 69, "xxyxz": 180, "y": [49, 63, 71, 73, 169, 180], "y_": 73, "y_i": 52, "yaml": [1, 130, 134], "yang": 60, "yet": [89, 90], "yield": [4, 184], "you": [1, 10, 12, 56, 63, 79, 80, 96, 130, 134, 140, 173, 182, 185], "your": [1, 4, 7, 49, 80, 130, 134, 140, 184], "z": [49, 74, 129, 180], "z_": 74, "z_1": 129, "z_2": 129, "z_g": 74, "z_p": 74, "zero": [79, 84, 101, 104, 118, 120, 155, 164, 167], "zero_divis": [79, 84], "zeroeth": 173, "zhang": [157, 158]}, "titles": ["API Reference", "Contributing", "Basic Example", "Examples", "Welcome to FL4Health \u2728", "Checkpointing", "Module Guides", "Quickstart", "fl4health package", "fl4health.checkpointing package", "fl4health.checkpointing.checkpointer module", "fl4health.checkpointing.client_module module", "fl4health.checkpointing.opacus_checkpointer module", "fl4health.checkpointing.server_module module", "fl4health.checkpointing.state_checkpointer module", "fl4health.client_managers package", "fl4health.client_managers.base_sampling_manager module", "fl4health.client_managers.fixed_sampling_client_manager module", "fl4health.client_managers.fixed_without_replacement_manager module", "fl4health.client_managers.poisson_sampling_manager module", "fl4health.clients package", "fl4health.clients.adaptive_drift_constraint_client module", "fl4health.clients.apfl_client module", "fl4health.clients.basic_client module", "fl4health.clients.clipping_client module", "fl4health.clients.constrained_fenda_client module", "fl4health.clients.deep_mmd_clients package", "fl4health.clients.deep_mmd_clients.ditto_deep_mmd_client module", "fl4health.clients.ditto_client module", "fl4health.clients.ensemble_client module", "fl4health.clients.evaluate_client module", "fl4health.clients.fed_pca_client module", "fl4health.clients.fed_prox_client module", "fl4health.clients.fedbn_client module", "fl4health.clients.fedper_client module", "fl4health.clients.fedpm_client module", "fl4health.clients.fedrep_client module", "fl4health.clients.fenda_client module", "fl4health.clients.fenda_ditto_client module", "fl4health.clients.flash_client module", "fl4health.clients.flexible package", "fl4health.clients.flexible.base module", "fl4health.clients.instance_level_dp_client module", "fl4health.clients.mkmmd_clients package", "fl4health.clients.mkmmd_clients.ditto_mkmmd_client module", "fl4health.clients.mkmmd_clients.mr_mtl_mkmmd_client module", "fl4health.clients.model_merge_client module", "fl4health.clients.moon_client module", "fl4health.clients.mr_mtl_client module", "fl4health.clients.nnunet_client module", "fl4health.clients.partial_weight_exchange_client module", "fl4health.clients.perfcl_client module", "fl4health.clients.scaffold_client module", "fl4health.clients.tabular_data_client module", "fl4health.datasets package", "fl4health.datasets.rxrx1 package", "fl4health.datasets.rxrx1.load_data module", "fl4health.datasets.rxrx1.preprocess module", "fl4health.datasets.skin_cancer package", "fl4health.datasets.skin_cancer.load_data module", "fl4health.datasets.skin_cancer.preprocess_skin module", "fl4health.feature_alignment package", "fl4health.feature_alignment.constants module", "fl4health.feature_alignment.string_columns_transformer module", "fl4health.feature_alignment.tab_features_info_encoder module", "fl4health.feature_alignment.tab_features_preprocessor module", "fl4health.feature_alignment.tabular_feature module", "fl4health.feature_alignment.tabular_type module", "fl4health.losses package", "fl4health.losses.contrastive_loss module", "fl4health.losses.cosine_similarity_loss module", "fl4health.losses.deep_mmd_loss module", "fl4health.losses.fenda_loss_config module", "fl4health.losses.mkmmd_loss module", "fl4health.losses.perfcl_loss module", "fl4health.losses.weight_drift_loss module", "fl4health.metrics package", "fl4health.metrics.base_metrics module", "fl4health.metrics.compound_metrics module", "fl4health.metrics.efficient_metrics module", "fl4health.metrics.efficient_metrics_base module", "fl4health.metrics.metric_aggregation module", "fl4health.metrics.metric_managers module", "fl4health.metrics.metrics module", "fl4health.metrics.metrics_utils module", "fl4health.metrics.utils module", "fl4health.mixins package", "fl4health.mixins.adaptive_drift_constrained module", "fl4health.mixins.core_protocols module", "fl4health.mixins.personalized package", "fl4health.mixins.personalized.ditto module", "fl4health.mixins.personalized.utils module", "fl4health.model_bases package", "fl4health.model_bases.apfl_base module", "fl4health.model_bases.autoencoders_base module", "fl4health.model_bases.ensemble_base module", "fl4health.model_bases.feature_extractor_buffer module", "fl4health.model_bases.fedrep_base module", "fl4health.model_bases.fedsimclr_base module", "fl4health.model_bases.fenda_base module", "fl4health.model_bases.masked_layers package", "fl4health.model_bases.masked_layers.masked_conv module", "fl4health.model_bases.masked_layers.masked_layers_utils module", "fl4health.model_bases.masked_layers.masked_linear module", "fl4health.model_bases.masked_layers.masked_normalization_layers module", "fl4health.model_bases.moon_base module", "fl4health.model_bases.parallel_split_models module", "fl4health.model_bases.partial_layer_exchange_model module", "fl4health.model_bases.pca module", "fl4health.model_bases.perfcl_base module", "fl4health.model_bases.sequential_split_models module", "fl4health.parameter_exchange package", "fl4health.parameter_exchange.fedpm_exchanger module", "fl4health.parameter_exchange.full_exchanger module", "fl4health.parameter_exchange.layer_exchanger module", "fl4health.parameter_exchange.packing_exchanger module", "fl4health.parameter_exchange.parameter_exchanger_base module", "fl4health.parameter_exchange.parameter_packer module", "fl4health.parameter_exchange.parameter_selection_criteria module", "fl4health.parameter_exchange.partial_parameter_exchanger module", "fl4health.parameter_exchange.sparse_coo_parameter_exchanger module", "fl4health.preprocessing package", "fl4health.preprocessing.autoencoders package", "fl4health.preprocessing.autoencoders.dim_reduction module", "fl4health.preprocessing.autoencoders.loss module", "fl4health.preprocessing.pca_preprocessor module", "fl4health.preprocessing.warmed_up_module module", "fl4health.privacy package", "fl4health.privacy.fl_accountants module", "fl4health.privacy.moments_accountant module", "fl4health.reporting package", "fl4health.reporting.base_reporter module", "fl4health.reporting.json_reporter module", "fl4health.reporting.reports_manager module", "fl4health.reporting.wandb_reporter module", "fl4health.servers package", "fl4health.servers.adaptive_constraint_servers package", "fl4health.servers.adaptive_constraint_servers.ditto_server module", "fl4health.servers.adaptive_constraint_servers.fedprox_server module", "fl4health.servers.adaptive_constraint_servers.mrmtl_server module", "fl4health.servers.base_server module", "fl4health.servers.client_level_dp_fed_avg_server module", "fl4health.servers.evaluate_server module", "fl4health.servers.fedpm_server module", "fl4health.servers.instance_level_dp_server module", "fl4health.servers.model_merge_server module", "fl4health.servers.nnunet_server module", "fl4health.servers.polling module", "fl4health.servers.scaffold_server module", "fl4health.servers.tabular_feature_alignment_server module", "fl4health.strategies package", "fl4health.strategies.aggregate_utils module", "fl4health.strategies.basic_fedavg module", "fl4health.strategies.client_dp_fedavgm module", "fl4health.strategies.fedavg_dynamic_layer module", "fl4health.strategies.fedavg_sparse_coo_tensor module", "fl4health.strategies.fedavg_with_adaptive_constraint module", "fl4health.strategies.feddg_ga module", "fl4health.strategies.feddg_ga_with_adaptive_constraint module", "fl4health.strategies.fedpca module", "fl4health.strategies.fedpm module", "fl4health.strategies.flash module", "fl4health.strategies.model_merge_strategy module", "fl4health.strategies.noisy_aggregate module", "fl4health.strategies.scaffold module", "fl4health.strategies.strategy_with_poll module", "fl4health.utils package", "fl4health.utils.client module", "fl4health.utils.config module", "fl4health.utils.data_generation module", "fl4health.utils.dataset module", "fl4health.utils.dataset_converter module", "fl4health.utils.early_stopper module", "fl4health.utils.functions module", "fl4health.utils.load_data module", "fl4health.utils.logging module", "fl4health.utils.losses module", "fl4health.utils.metric_aggregation module", "fl4health.utils.metrics module", "fl4health.utils.msd_dataset_sources module", "fl4health.utils.nnunet_utils module", "fl4health.utils.parameter_extraction module", "fl4health.utils.partitioners module", "fl4health.utils.peft_parameter_extraction module", "fl4health.utils.privacy_utilities module", "fl4health.utils.random module", "fl4health.utils.sampler module", "fl4health.utils.snapshotter module", "fl4health.utils.typing module"], "titleterms": {"": 4, "A": 7, "adaptive_constraint_serv": [136, 137, 138, 139], "adaptive_drift_constrain": 87, "adaptive_drift_constraint_cli": 21, "aggregate_util": 151, "apfl_bas": 93, "apfl_client": 22, "api": 0, "approach": 4, "autoencod": [122, 123, 124], "autoencoders_bas": 94, "base": 41, "base_metr": 77, "base_report": 131, "base_sampling_manag": 16, "base_serv": 140, "basic": 2, "basic_cli": 23, "basic_fedavg": 152, "capabl": 4, "check": 1, "checkpoint": [5, 9, 10, 11, 12, 13, 14], "client": [7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 167], "client_dp_fedavgm": 153, "client_level_dp_fed_avg_serv": 141, "client_manag": [15, 16, 17, 18, 19], "client_modul": 11, "clipping_cli": 24, "code": 1, "commun": 4, "compound_metr": 78, "config": 168, "constant": 62, "constrained_fenda_cli": 25, "contrastive_loss": 69, "contribut": 1, "core_protocol": 88, "cosine_similarity_loss": 70, "coverag": 1, "current": 4, "data_gener": 169, "dataset": [54, 55, 56, 57, 58, 59, 60, 170], "dataset_convert": 171, "deep_mmd_client": [26, 27], "deep_mmd_loss": 71, "develop": 1, "dim_reduct": 123, "ditto": 90, "ditto_cli": 28, "ditto_deep_mmd_cli": 27, "ditto_mkmmd_cli": 44, "ditto_serv": 137, "document": 1, "early_stopp": 172, "efficient_metr": 79, "efficient_metrics_bas": 80, "ensemble_bas": 95, "ensemble_cli": 29, "evaluate_cli": 30, "evaluate_serv": 142, "exampl": [2, 3], "feature_align": [61, 62, 63, 64, 65, 66, 67], "feature_extractor_buff": 96, "fed_pca_cli": 31, "fed_prox_cli": 32, "fedavg_dynamic_lay": 154, "fedavg_sparse_coo_tensor": 155, "fedavg_with_adaptive_constraint": 156, "fedbn_client": 33, "feddg_ga": 157, "feddg_ga_with_adaptive_constraint": 158, "fedpca": 159, "fedper_cli": 34, "fedpm": 160, "fedpm_client": 35, "fedpm_exchang": 112, "fedpm_serv": 143, "fedprox_serv": 138, "fedrep_bas": 97, "fedrep_cli": 36, "fedsimclr_bas": 98, "fenda_bas": 99, "fenda_cli": 37, "fenda_ditto_cli": 38, "fenda_loss_config": 72, "fixed_sampling_client_manag": 17, "fixed_without_replacement_manag": 18, "fl": 7, "fl4health": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "fl_account": 128, "flash": 161, "flash_client": 39, "flexibl": [40, 41], "formatt": 1, "full_exchang": 113, "function": 173, "guid": 6, "guidelin": 1, "implement": 4, "instal": 7, "instance_level_dp_cli": 42, "instance_level_dp_serv": 144, "introduct": 4, "json_report": 132, "layer_exchang": 114, "load_data": [56, 59, 174], "log": 175, "loss": [68, 69, 70, 71, 72, 73, 74, 75, 124, 176], "masked_conv": 101, "masked_lay": [100, 101, 102, 103, 104], "masked_layers_util": 102, "masked_linear": 103, "masked_normalization_lay": 104, "metric": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 178], "metric_aggreg": [81, 177], "metric_manag": 82, "metrics_util": 84, "mixin": [86, 87, 88, 89, 90, 91], "mkmmd_client": [43, 44, 45], "mkmmd_loss": 73, "model_bas": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "model_merge_cli": 46, "model_merge_serv": 145, "model_merge_strategi": 162, "modul": [6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "moments_account": 129, "moon_bas": 105, "moon_client": 47, "mr_mtl_client": 48, "mr_mtl_mkmmd_client": 45, "mrmtl_server": 139, "msd_dataset_sourc": 179, "next": 4, "nnunet_cli": 49, "nnunet_serv": 146, "nnunet_util": 180, "noisy_aggreg": 163, "opacus_checkpoint": 12, "packag": [8, 9, 15, 20, 26, 40, 43, 54, 55, 58, 61, 68, 76, 86, 89, 92, 100, 111, 121, 122, 127, 130, 135, 136, 150, 166], "packing_exchang": 115, "parallel_split_model": 106, "parameter_exchang": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "parameter_exchanger_bas": 116, "parameter_extract": 181, "parameter_pack": 117, "parameter_selection_criteria": 118, "partial_layer_exchange_model": 107, "partial_parameter_exchang": 119, "partial_weight_exchange_cli": 50, "partition": 182, "pca": 108, "pca_preprocessor": 125, "peft_parameter_extract": 183, "perfcl_bas": 109, "perfcl_client": 51, "perfcl_loss": 74, "person": [89, 90, 91], "poisson_sampling_manag": 19, "poll": 147, "practic": 1, "preprocess": [57, 121, 122, 123, 124, 125, 126], "preprocess_skin": 60, "privaci": [4, 127, 128, 129], "privacy_util": 184, "py": 7, "quickstart": 7, "random": 185, "refer": 0, "report": [130, 131, 132, 133, 134], "reports_manag": 133, "requir": 1, "run": 7, "rxrx1": [55, 56, 57], "sampler": 186, "scaffold": 164, "scaffold_cli": 52, "scaffold_serv": 148, "sequential_split_model": 110, "server": [7, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "server_modul": 13, "simpl": 7, "skin_canc": [58, 59, 60], "snapshott": 187, "sparse_coo_parameter_exchang": 120, "start": 7, "state_checkpoint": 14, "strategi": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "strategy_with_pol": 165, "string_columns_transform": 63, "submodul": [9, 15, 20, 26, 40, 43, 55, 58, 61, 68, 76, 86, 89, 92, 100, 111, 121, 122, 127, 130, 135, 136, 150, 166], "subpackag": [8, 20, 54, 86, 92, 121, 135], "summari": 4, "tab_features_info_encod": 64, "tab_features_preprocessor": 65, "tabular_data_cli": 53, "tabular_featur": 66, "tabular_feature_alignment_serv": 149, "tabular_typ": 67, "task": 7, "test": 1, "type": 188, "util": [85, 91, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "wandb_report": 134, "warmed_up_modul": 126, "weight_drift_loss": 75, "welcom": 4, "what": 4}})